/*! For license information please see main.82d834da.js.LICENSE.txt */
!(function () {
  var e = {
      110: function (e, t, n) {
        "use strict";
        var r = n(309),
          a = {
            childContextTypes: !0,
            contextType: !0,
            contextTypes: !0,
            defaultProps: !0,
            displayName: !0,
            getDefaultProps: !0,
            getDerivedStateFromError: !0,
            getDerivedStateFromProps: !0,
            mixins: !0,
            propTypes: !0,
            type: !0,
          },
          i = {
            name: !0,
            length: !0,
            prototype: !0,
            caller: !0,
            callee: !0,
            arguments: !0,
            arity: !0,
          },
          o = {
            $$typeof: !0,
            compare: !0,
            defaultProps: !0,
            displayName: !0,
            propTypes: !0,
            type: !0,
          },
          s = {};
        function l(e) {
          return r.isMemo(e) ? o : s[e.$$typeof] || a;
        }
        (s[r.ForwardRef] = {
          $$typeof: !0,
          render: !0,
          defaultProps: !0,
          displayName: !0,
          propTypes: !0,
        }),
          (s[r.Memo] = o);
        var u = Object.defineProperty,
          c = Object.getOwnPropertyNames,
          f = Object.getOwnPropertySymbols,
          d = Object.getOwnPropertyDescriptor,
          h = Object.getPrototypeOf,
          p = Object.prototype;
        e.exports = function e(t, n, r) {
          if ("string" !== typeof n) {
            if (p) {
              var a = h(n);
              a && a !== p && e(t, a, r);
            }
            var o = c(n);
            f && (o = o.concat(f(n)));
            for (var s = l(t), v = l(n), m = 0; m < o.length; ++m) {
              var g = o[m];
              if (!i[g] && (!r || !r[g]) && (!v || !v[g]) && (!s || !s[g])) {
                var y = d(n, g);
                try {
                  u(t, g, y);
                } catch (_) {}
              }
            }
          }
          return t;
        };
      },
      746: function (e, t) {
        "use strict";
        var n = "function" === typeof Symbol && Symbol.for,
          r = n ? Symbol.for("react.element") : 60103,
          a = n ? Symbol.for("react.portal") : 60106,
          i = n ? Symbol.for("react.fragment") : 60107,
          o = n ? Symbol.for("react.strict_mode") : 60108,
          s = n ? Symbol.for("react.profiler") : 60114,
          l = n ? Symbol.for("react.provider") : 60109,
          u = n ? Symbol.for("react.context") : 60110,
          c = n ? Symbol.for("react.async_mode") : 60111,
          f = n ? Symbol.for("react.concurrent_mode") : 60111,
          d = n ? Symbol.for("react.forward_ref") : 60112,
          h = n ? Symbol.for("react.suspense") : 60113,
          p = n ? Symbol.for("react.suspense_list") : 60120,
          v = n ? Symbol.for("react.memo") : 60115,
          m = n ? Symbol.for("react.lazy") : 60116,
          g = n ? Symbol.for("react.block") : 60121,
          y = n ? Symbol.for("react.fundamental") : 60117,
          _ = n ? Symbol.for("react.responder") : 60118,
          b = n ? Symbol.for("react.scope") : 60119;
        function x(e) {
          if ("object" === typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
              case r:
                switch ((e = e.type)) {
                  case c:
                  case f:
                  case i:
                  case s:
                  case o:
                  case h:
                    return e;
                  default:
                    switch ((e = e && e.$$typeof)) {
                      case u:
                      case d:
                      case m:
                      case v:
                      case l:
                        return e;
                      default:
                        return t;
                    }
                }
              case a:
                return t;
            }
          }
        }
        function S(e) {
          return x(e) === f;
        }
        (t.AsyncMode = c),
          (t.ConcurrentMode = f),
          (t.ContextConsumer = u),
          (t.ContextProvider = l),
          (t.Element = r),
          (t.ForwardRef = d),
          (t.Fragment = i),
          (t.Lazy = m),
          (t.Memo = v),
          (t.Portal = a),
          (t.Profiler = s),
          (t.StrictMode = o),
          (t.Suspense = h),
          (t.isAsyncMode = function (e) {
            return S(e) || x(e) === c;
          }),
          (t.isConcurrentMode = S),
          (t.isContextConsumer = function (e) {
            return x(e) === u;
          }),
          (t.isContextProvider = function (e) {
            return x(e) === l;
          }),
          (t.isElement = function (e) {
            return "object" === typeof e && null !== e && e.$$typeof === r;
          }),
          (t.isForwardRef = function (e) {
            return x(e) === d;
          }),
          (t.isFragment = function (e) {
            return x(e) === i;
          }),
          (t.isLazy = function (e) {
            return x(e) === m;
          }),
          (t.isMemo = function (e) {
            return x(e) === v;
          }),
          (t.isPortal = function (e) {
            return x(e) === a;
          }),
          (t.isProfiler = function (e) {
            return x(e) === s;
          }),
          (t.isStrictMode = function (e) {
            return x(e) === o;
          }),
          (t.isSuspense = function (e) {
            return x(e) === h;
          }),
          (t.isValidElementType = function (e) {
            return (
              "string" === typeof e ||
              "function" === typeof e ||
              e === i ||
              e === f ||
              e === s ||
              e === o ||
              e === h ||
              e === p ||
              ("object" === typeof e &&
                null !== e &&
                (e.$$typeof === m ||
                  e.$$typeof === v ||
                  e.$$typeof === l ||
                  e.$$typeof === u ||
                  e.$$typeof === d ||
                  e.$$typeof === y ||
                  e.$$typeof === _ ||
                  e.$$typeof === b ||
                  e.$$typeof === g))
            );
          }),
          (t.typeOf = x);
      },
      309: function (e, t, n) {
        "use strict";
        e.exports = n(746);
      },
      725: function (e) {
        "use strict";
        var t = Object.getOwnPropertySymbols,
          n = Object.prototype.hasOwnProperty,
          r = Object.prototype.propertyIsEnumerable;
        e.exports = (function () {
          try {
            if (!Object.assign) return !1;
            var e = new String("abc");
            if (((e[5] = "de"), "5" === Object.getOwnPropertyNames(e)[0]))
              return !1;
            for (var t = {}, n = 0; n < 10; n++)
              t["_" + String.fromCharCode(n)] = n;
            if (
              "0123456789" !==
              Object.getOwnPropertyNames(t)
                .map(function (e) {
                  return t[e];
                })
                .join("")
            )
              return !1;
            var r = {};
            return (
              "abcdefghijklmnopqrst".split("").forEach(function (e) {
                r[e] = e;
              }),
              "abcdefghijklmnopqrst" ===
                Object.keys(Object.assign({}, r)).join("")
            );
          } catch (a) {
            return !1;
          }
        })()
          ? Object.assign
          : function (e, a) {
              for (
                var i,
                  o,
                  s = (function (e) {
                    if (null === e || void 0 === e)
                      throw new TypeError(
                        "Object.assign cannot be called with null or undefined"
                      );
                    return Object(e);
                  })(e),
                  l = 1;
                l < arguments.length;
                l++
              ) {
                for (var u in (i = Object(arguments[l])))
                  n.call(i, u) && (s[u] = i[u]);
                if (t) {
                  o = t(i);
                  for (var c = 0; c < o.length; c++)
                    r.call(i, o[c]) && (s[o[c]] = i[o[c]]);
                }
              }
              return s;
            };
      },
      888: function (e, t, n) {
        "use strict";
        var r = n(47);
        function a() {}
        function i() {}
        (i.resetWarningCache = a),
          (e.exports = function () {
            function e(e, t, n, a, i, o) {
              if (o !== r) {
                var s = new Error(
                  "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
                );
                throw ((s.name = "Invariant Violation"), s);
              }
            }
            function t() {
              return e;
            }
            e.isRequired = e;
            var n = {
              array: e,
              bigint: e,
              bool: e,
              func: e,
              number: e,
              object: e,
              string: e,
              symbol: e,
              any: e,
              arrayOf: t,
              element: e,
              elementType: e,
              instanceOf: t,
              node: e,
              objectOf: t,
              oneOf: t,
              oneOfType: t,
              shape: t,
              exact: t,
              checkPropTypes: i,
              resetWarningCache: a,
            };
            return (n.PropTypes = n), n;
          });
      },
      7: function (e, t, n) {
        e.exports = n(888)();
      },
      47: function (e) {
        "use strict";
        e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
      },
      463: function (e, t, n) {
        "use strict";
        var r = n(791),
          a = n(296);
        function i(e) {
          for (
            var t =
                "https://reactjs.org/docs/error-decoder.html?invariant=" + e,
              n = 1;
            n < arguments.length;
            n++
          )
            t += "&args[]=" + encodeURIComponent(arguments[n]);
          return (
            "Minified React error #" +
            e +
            "; visit " +
            t +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
          );
        }
        var o = new Set(),
          s = {};
        function l(e, t) {
          u(e, t), u(e + "Capture", t);
        }
        function u(e, t) {
          for (s[e] = t, e = 0; e < t.length; e++) o.add(t[e]);
        }
        var c = !(
            "undefined" === typeof window ||
            "undefined" === typeof window.document ||
            "undefined" === typeof window.document.createElement
          ),
          f = Object.prototype.hasOwnProperty,
          d =
            /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
          h = {},
          p = {};
        function v(e, t, n, r, a, i, o) {
          (this.acceptsBooleans = 2 === t || 3 === t || 4 === t),
            (this.attributeName = r),
            (this.attributeNamespace = a),
            (this.mustUseProperty = n),
            (this.propertyName = e),
            (this.type = t),
            (this.sanitizeURL = i),
            (this.removeEmptyString = o);
        }
        var m = {};
        "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
          .split(" ")
          .forEach(function (e) {
            m[e] = new v(e, 0, !1, e, null, !1, !1);
          }),
          [
            ["acceptCharset", "accept-charset"],
            ["className", "class"],
            ["htmlFor", "for"],
            ["httpEquiv", "http-equiv"],
          ].forEach(function (e) {
            var t = e[0];
            m[t] = new v(t, 1, !1, e[1], null, !1, !1);
          }),
          ["contentEditable", "draggable", "spellCheck", "value"].forEach(
            function (e) {
              m[e] = new v(e, 2, !1, e.toLowerCase(), null, !1, !1);
            }
          ),
          [
            "autoReverse",
            "externalResourcesRequired",
            "focusable",
            "preserveAlpha",
          ].forEach(function (e) {
            m[e] = new v(e, 2, !1, e, null, !1, !1);
          }),
          "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
            .split(" ")
            .forEach(function (e) {
              m[e] = new v(e, 3, !1, e.toLowerCase(), null, !1, !1);
            }),
          ["checked", "multiple", "muted", "selected"].forEach(function (e) {
            m[e] = new v(e, 3, !0, e, null, !1, !1);
          }),
          ["capture", "download"].forEach(function (e) {
            m[e] = new v(e, 4, !1, e, null, !1, !1);
          }),
          ["cols", "rows", "size", "span"].forEach(function (e) {
            m[e] = new v(e, 6, !1, e, null, !1, !1);
          }),
          ["rowSpan", "start"].forEach(function (e) {
            m[e] = new v(e, 5, !1, e.toLowerCase(), null, !1, !1);
          });
        var g = /[\-:]([a-z])/g;
        function y(e) {
          return e[1].toUpperCase();
        }
        function _(e, t, n, r) {
          var a = m.hasOwnProperty(t) ? m[t] : null;
          (null !== a
            ? 0 !== a.type
            : r ||
              !(2 < t.length) ||
              ("o" !== t[0] && "O" !== t[0]) ||
              ("n" !== t[1] && "N" !== t[1])) &&
            ((function (e, t, n, r) {
              if (
                null === t ||
                "undefined" === typeof t ||
                (function (e, t, n, r) {
                  if (null !== n && 0 === n.type) return !1;
                  switch (typeof t) {
                    case "function":
                    case "symbol":
                      return !0;
                    case "boolean":
                      return (
                        !r &&
                        (null !== n
                          ? !n.acceptsBooleans
                          : "data-" !== (e = e.toLowerCase().slice(0, 5)) &&
                            "aria-" !== e)
                      );
                    default:
                      return !1;
                  }
                })(e, t, n, r)
              )
                return !0;
              if (r) return !1;
              if (null !== n)
                switch (n.type) {
                  case 3:
                    return !t;
                  case 4:
                    return !1 === t;
                  case 5:
                    return isNaN(t);
                  case 6:
                    return isNaN(t) || 1 > t;
                }
              return !1;
            })(t, n, a, r) && (n = null),
            r || null === a
              ? (function (e) {
                  return (
                    !!f.call(p, e) ||
                    (!f.call(h, e) &&
                      (d.test(e) ? (p[e] = !0) : ((h[e] = !0), !1)))
                  );
                })(t) &&
                (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n))
              : a.mustUseProperty
              ? (e[a.propertyName] = null === n ? 3 !== a.type && "" : n)
              : ((t = a.attributeName),
                (r = a.attributeNamespace),
                null === n
                  ? e.removeAttribute(t)
                  : ((n =
                      3 === (a = a.type) || (4 === a && !0 === n)
                        ? ""
                        : "" + n),
                    r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))));
        }
        "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
          .split(" ")
          .forEach(function (e) {
            var t = e.replace(g, y);
            m[t] = new v(t, 1, !1, e, null, !1, !1);
          }),
          "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
            .split(" ")
            .forEach(function (e) {
              var t = e.replace(g, y);
              m[t] = new v(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1);
            }),
          ["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
            var t = e.replace(g, y);
            m[t] = new v(
              t,
              1,
              !1,
              e,
              "http://www.w3.org/XML/1998/namespace",
              !1,
              !1
            );
          }),
          ["tabIndex", "crossOrigin"].forEach(function (e) {
            m[e] = new v(e, 1, !1, e.toLowerCase(), null, !1, !1);
          }),
          (m.xlinkHref = new v(
            "xlinkHref",
            1,
            !1,
            "xlink:href",
            "http://www.w3.org/1999/xlink",
            !0,
            !1
          )),
          ["src", "href", "action", "formAction"].forEach(function (e) {
            m[e] = new v(e, 1, !1, e.toLowerCase(), null, !0, !0);
          });
        var b = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
          x = Symbol.for("react.element"),
          S = Symbol.for("react.portal"),
          E = Symbol.for("react.fragment"),
          w = Symbol.for("react.strict_mode"),
          T = Symbol.for("react.profiler"),
          M = Symbol.for("react.provider"),
          A = Symbol.for("react.context"),
          C = Symbol.for("react.forward_ref"),
          k = Symbol.for("react.suspense"),
          R = Symbol.for("react.suspense_list"),
          P = Symbol.for("react.memo"),
          U = Symbol.for("react.lazy");
        Symbol.for("react.scope"), Symbol.for("react.debug_trace_mode");
        var L = Symbol.for("react.offscreen");
        Symbol.for("react.legacy_hidden"),
          Symbol.for("react.cache"),
          Symbol.for("react.tracing_marker");
        var D = Symbol.iterator;
        function I(e) {
          return null === e || "object" !== typeof e
            ? null
            : "function" === typeof (e = (D && e[D]) || e["@@iterator"])
            ? e
            : null;
        }
        var O,
          N = Object.assign;
        function F(e) {
          if (void 0 === O)
            try {
              throw Error();
            } catch (n) {
              var t = n.stack.trim().match(/\n( *(at )?)/);
              O = (t && t[1]) || "";
            }
          return "\n" + O + e;
        }
        var z = !1;
        function B(e, t) {
          if (!e || z) return "";
          z = !0;
          var n = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          try {
            if (t)
              if (
                ((t = function () {
                  throw Error();
                }),
                Object.defineProperty(t.prototype, "props", {
                  set: function () {
                    throw Error();
                  },
                }),
                "object" === typeof Reflect && Reflect.construct)
              ) {
                try {
                  Reflect.construct(t, []);
                } catch (u) {
                  var r = u;
                }
                Reflect.construct(e, [], t);
              } else {
                try {
                  t.call();
                } catch (u) {
                  r = u;
                }
                e.call(t.prototype);
              }
            else {
              try {
                throw Error();
              } catch (u) {
                r = u;
              }
              e();
            }
          } catch (u) {
            if (u && r && "string" === typeof u.stack) {
              for (
                var a = u.stack.split("\n"),
                  i = r.stack.split("\n"),
                  o = a.length - 1,
                  s = i.length - 1;
                1 <= o && 0 <= s && a[o] !== i[s];

              )
                s--;
              for (; 1 <= o && 0 <= s; o--, s--)
                if (a[o] !== i[s]) {
                  if (1 !== o || 1 !== s)
                    do {
                      if ((o--, 0 > --s || a[o] !== i[s])) {
                        var l = "\n" + a[o].replace(" at new ", " at ");
                        return (
                          e.displayName &&
                            l.includes("<anonymous>") &&
                            (l = l.replace("<anonymous>", e.displayName)),
                          l
                        );
                      }
                    } while (1 <= o && 0 <= s);
                  break;
                }
            }
          } finally {
            (z = !1), (Error.prepareStackTrace = n);
          }
          return (e = e ? e.displayName || e.name : "") ? F(e) : "";
        }
        function H(e) {
          switch (e.tag) {
            case 5:
              return F(e.type);
            case 16:
              return F("Lazy");
            case 13:
              return F("Suspense");
            case 19:
              return F("SuspenseList");
            case 0:
            case 2:
            case 15:
              return (e = B(e.type, !1));
            case 11:
              return (e = B(e.type.render, !1));
            case 1:
              return (e = B(e.type, !0));
            default:
              return "";
          }
        }
        function G(e) {
          if (null == e) return null;
          if ("function" === typeof e) return e.displayName || e.name || null;
          if ("string" === typeof e) return e;
          switch (e) {
            case E:
              return "Fragment";
            case S:
              return "Portal";
            case T:
              return "Profiler";
            case w:
              return "StrictMode";
            case k:
              return "Suspense";
            case R:
              return "SuspenseList";
          }
          if ("object" === typeof e)
            switch (e.$$typeof) {
              case A:
                return (e.displayName || "Context") + ".Consumer";
              case M:
                return (e._context.displayName || "Context") + ".Provider";
              case C:
                var t = e.render;
                return (
                  (e = e.displayName) ||
                    (e =
                      "" !== (e = t.displayName || t.name || "")
                        ? "ForwardRef(" + e + ")"
                        : "ForwardRef"),
                  e
                );
              case P:
                return null !== (t = e.displayName || null)
                  ? t
                  : G(e.type) || "Memo";
              case U:
                (t = e._payload), (e = e._init);
                try {
                  return G(e(t));
                } catch (n) {}
            }
          return null;
        }
        function V(e) {
          var t = e.type;
          switch (e.tag) {
            case 24:
              return "Cache";
            case 9:
              return (t.displayName || "Context") + ".Consumer";
            case 10:
              return (t._context.displayName || "Context") + ".Provider";
            case 18:
              return "DehydratedFragment";
            case 11:
              return (
                (e = (e = t.render).displayName || e.name || ""),
                t.displayName ||
                  ("" !== e ? "ForwardRef(" + e + ")" : "ForwardRef")
              );
            case 7:
              return "Fragment";
            case 5:
              return t;
            case 4:
              return "Portal";
            case 3:
              return "Root";
            case 6:
              return "Text";
            case 16:
              return G(t);
            case 8:
              return t === w ? "StrictMode" : "Mode";
            case 22:
              return "Offscreen";
            case 12:
              return "Profiler";
            case 21:
              return "Scope";
            case 13:
              return "Suspense";
            case 19:
              return "SuspenseList";
            case 25:
              return "TracingMarker";
            case 1:
            case 0:
            case 17:
            case 2:
            case 14:
            case 15:
              if ("function" === typeof t)
                return t.displayName || t.name || null;
              if ("string" === typeof t) return t;
          }
          return null;
        }
        function W(e) {
          switch (typeof e) {
            case "boolean":
            case "number":
            case "string":
            case "undefined":
            case "object":
              return e;
            default:
              return "";
          }
        }
        function j(e) {
          var t = e.type;
          return (
            (e = e.nodeName) &&
            "input" === e.toLowerCase() &&
            ("checkbox" === t || "radio" === t)
          );
        }
        function X(e) {
          e._valueTracker ||
            (e._valueTracker = (function (e) {
              var t = j(e) ? "checked" : "value",
                n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                r = "" + e[t];
              if (
                !e.hasOwnProperty(t) &&
                "undefined" !== typeof n &&
                "function" === typeof n.get &&
                "function" === typeof n.set
              ) {
                var a = n.get,
                  i = n.set;
                return (
                  Object.defineProperty(e, t, {
                    configurable: !0,
                    get: function () {
                      return a.call(this);
                    },
                    set: function (e) {
                      (r = "" + e), i.call(this, e);
                    },
                  }),
                  Object.defineProperty(e, t, { enumerable: n.enumerable }),
                  {
                    getValue: function () {
                      return r;
                    },
                    setValue: function (e) {
                      r = "" + e;
                    },
                    stopTracking: function () {
                      (e._valueTracker = null), delete e[t];
                    },
                  }
                );
              }
            })(e));
        }
        function q(e) {
          if (!e) return !1;
          var t = e._valueTracker;
          if (!t) return !0;
          var n = t.getValue(),
            r = "";
          return (
            e && (r = j(e) ? (e.checked ? "true" : "false") : e.value),
            (e = r) !== n && (t.setValue(e), !0)
          );
        }
        function Y(e) {
          if (
            "undefined" ===
            typeof (e =
              e || ("undefined" !== typeof document ? document : void 0))
          )
            return null;
          try {
            return e.activeElement || e.body;
          } catch (t) {
            return e.body;
          }
        }
        function K(e, t) {
          var n = t.checked;
          return N({}, t, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: null != n ? n : e._wrapperState.initialChecked,
          });
        }
        function $(e, t) {
          var n = null == t.defaultValue ? "" : t.defaultValue,
            r = null != t.checked ? t.checked : t.defaultChecked;
          (n = W(null != t.value ? t.value : n)),
            (e._wrapperState = {
              initialChecked: r,
              initialValue: n,
              controlled:
                "checkbox" === t.type || "radio" === t.type
                  ? null != t.checked
                  : null != t.value,
            });
        }
        function Z(e, t) {
          null != (t = t.checked) && _(e, "checked", t, !1);
        }
        function J(e, t) {
          Z(e, t);
          var n = W(t.value),
            r = t.type;
          if (null != n)
            "number" === r
              ? ((0 === n && "" === e.value) || e.value != n) &&
                (e.value = "" + n)
              : e.value !== "" + n && (e.value = "" + n);
          else if ("submit" === r || "reset" === r)
            return void e.removeAttribute("value");
          t.hasOwnProperty("value")
            ? ee(e, t.type, n)
            : t.hasOwnProperty("defaultValue") &&
              ee(e, t.type, W(t.defaultValue)),
            null == t.checked &&
              null != t.defaultChecked &&
              (e.defaultChecked = !!t.defaultChecked);
        }
        function Q(e, t, n) {
          if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
            var r = t.type;
            if (
              !(
                ("submit" !== r && "reset" !== r) ||
                (void 0 !== t.value && null !== t.value)
              )
            )
              return;
            (t = "" + e._wrapperState.initialValue),
              n || t === e.value || (e.value = t),
              (e.defaultValue = t);
          }
          "" !== (n = e.name) && (e.name = ""),
            (e.defaultChecked = !!e._wrapperState.initialChecked),
            "" !== n && (e.name = n);
        }
        function ee(e, t, n) {
          ("number" === t && Y(e.ownerDocument) === e) ||
            (null == n
              ? (e.defaultValue = "" + e._wrapperState.initialValue)
              : e.defaultValue !== "" + n && (e.defaultValue = "" + n));
        }
        var te = Array.isArray;
        function ne(e, t, n, r) {
          if (((e = e.options), t)) {
            t = {};
            for (var a = 0; a < n.length; a++) t["$" + n[a]] = !0;
            for (n = 0; n < e.length; n++)
              (a = t.hasOwnProperty("$" + e[n].value)),
                e[n].selected !== a && (e[n].selected = a),
                a && r && (e[n].defaultSelected = !0);
          } else {
            for (n = "" + W(n), t = null, a = 0; a < e.length; a++) {
              if (e[a].value === n)
                return (
                  (e[a].selected = !0), void (r && (e[a].defaultSelected = !0))
                );
              null !== t || e[a].disabled || (t = e[a]);
            }
            null !== t && (t.selected = !0);
          }
        }
        function re(e, t) {
          if (null != t.dangerouslySetInnerHTML) throw Error(i(91));
          return N({}, t, {
            value: void 0,
            defaultValue: void 0,
            children: "" + e._wrapperState.initialValue,
          });
        }
        function ae(e, t) {
          var n = t.value;
          if (null == n) {
            if (((n = t.children), (t = t.defaultValue), null != n)) {
              if (null != t) throw Error(i(92));
              if (te(n)) {
                if (1 < n.length) throw Error(i(93));
                n = n[0];
              }
              t = n;
            }
            null == t && (t = ""), (n = t);
          }
          e._wrapperState = { initialValue: W(n) };
        }
        function ie(e, t) {
          var n = W(t.value),
            r = W(t.defaultValue);
          null != n &&
            ((n = "" + n) !== e.value && (e.value = n),
            null == t.defaultValue &&
              e.defaultValue !== n &&
              (e.defaultValue = n)),
            null != r && (e.defaultValue = "" + r);
        }
        function oe(e) {
          var t = e.textContent;
          t === e._wrapperState.initialValue &&
            "" !== t &&
            null !== t &&
            (e.value = t);
        }
        function se(e) {
          switch (e) {
            case "svg":
              return "http://www.w3.org/2000/svg";
            case "math":
              return "http://www.w3.org/1998/Math/MathML";
            default:
              return "http://www.w3.org/1999/xhtml";
          }
        }
        function le(e, t) {
          return null == e || "http://www.w3.org/1999/xhtml" === e
            ? se(t)
            : "http://www.w3.org/2000/svg" === e && "foreignObject" === t
            ? "http://www.w3.org/1999/xhtml"
            : e;
        }
        var ue,
          ce,
          fe =
            ((ce = function (e, t) {
              if (
                "http://www.w3.org/2000/svg" !== e.namespaceURI ||
                "innerHTML" in e
              )
                e.innerHTML = t;
              else {
                for (
                  (ue = ue || document.createElement("div")).innerHTML =
                    "<svg>" + t.valueOf().toString() + "</svg>",
                    t = ue.firstChild;
                  e.firstChild;

                )
                  e.removeChild(e.firstChild);
                for (; t.firstChild; ) e.appendChild(t.firstChild);
              }
            }),
            "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction
              ? function (e, t, n, r) {
                  MSApp.execUnsafeLocalFunction(function () {
                    return ce(e, t);
                  });
                }
              : ce);
        function de(e, t) {
          if (t) {
            var n = e.firstChild;
            if (n && n === e.lastChild && 3 === n.nodeType)
              return void (n.nodeValue = t);
          }
          e.textContent = t;
        }
        var he = {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0,
          },
          pe = ["Webkit", "ms", "Moz", "O"];
        function ve(e, t, n) {
          return null == t || "boolean" === typeof t || "" === t
            ? ""
            : n ||
              "number" !== typeof t ||
              0 === t ||
              (he.hasOwnProperty(e) && he[e])
            ? ("" + t).trim()
            : t + "px";
        }
        function me(e, t) {
          for (var n in ((e = e.style), t))
            if (t.hasOwnProperty(n)) {
              var r = 0 === n.indexOf("--"),
                a = ve(n, t[n], r);
              "float" === n && (n = "cssFloat"),
                r ? e.setProperty(n, a) : (e[n] = a);
            }
        }
        Object.keys(he).forEach(function (e) {
          pe.forEach(function (t) {
            (t = t + e.charAt(0).toUpperCase() + e.substring(1)),
              (he[t] = he[e]);
          });
        });
        var ge = N(
          { menuitem: !0 },
          {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0,
          }
        );
        function ye(e, t) {
          if (t) {
            if (
              ge[e] &&
              (null != t.children || null != t.dangerouslySetInnerHTML)
            )
              throw Error(i(137, e));
            if (null != t.dangerouslySetInnerHTML) {
              if (null != t.children) throw Error(i(60));
              if (
                "object" !== typeof t.dangerouslySetInnerHTML ||
                !("__html" in t.dangerouslySetInnerHTML)
              )
                throw Error(i(61));
            }
            if (null != t.style && "object" !== typeof t.style)
              throw Error(i(62));
          }
        }
        function _e(e, t) {
          if (-1 === e.indexOf("-")) return "string" === typeof t.is;
          switch (e) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return !1;
            default:
              return !0;
          }
        }
        var be = null;
        function xe(e) {
          return (
            (e = e.target || e.srcElement || window).correspondingUseElement &&
              (e = e.correspondingUseElement),
            3 === e.nodeType ? e.parentNode : e
          );
        }
        var Se = null,
          Ee = null,
          we = null;
        function Te(e) {
          if ((e = _a(e))) {
            if ("function" !== typeof Se) throw Error(i(280));
            var t = e.stateNode;
            t && ((t = xa(t)), Se(e.stateNode, e.type, t));
          }
        }
        function Me(e) {
          Ee ? (we ? we.push(e) : (we = [e])) : (Ee = e);
        }
        function Ae() {
          if (Ee) {
            var e = Ee,
              t = we;
            if (((we = Ee = null), Te(e), t))
              for (e = 0; e < t.length; e++) Te(t[e]);
          }
        }
        function Ce(e, t) {
          return e(t);
        }
        function ke() {}
        var Re = !1;
        function Pe(e, t, n) {
          if (Re) return e(t, n);
          Re = !0;
          try {
            return Ce(e, t, n);
          } finally {
            (Re = !1), (null !== Ee || null !== we) && (ke(), Ae());
          }
        }
        function Ue(e, t) {
          var n = e.stateNode;
          if (null === n) return null;
          var r = xa(n);
          if (null === r) return null;
          n = r[t];
          e: switch (t) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
              (r = !r.disabled) ||
                (r = !(
                  "button" === (e = e.type) ||
                  "input" === e ||
                  "select" === e ||
                  "textarea" === e
                )),
                (e = !r);
              break e;
            default:
              e = !1;
          }
          if (e) return null;
          if (n && "function" !== typeof n) throw Error(i(231, t, typeof n));
          return n;
        }
        var Le = !1;
        if (c)
          try {
            var De = {};
            Object.defineProperty(De, "passive", {
              get: function () {
                Le = !0;
              },
            }),
              window.addEventListener("test", De, De),
              window.removeEventListener("test", De, De);
          } catch (ce) {
            Le = !1;
          }
        function Ie(e, t, n, r, a, i, o, s, l) {
          var u = Array.prototype.slice.call(arguments, 3);
          try {
            t.apply(n, u);
          } catch (c) {
            this.onError(c);
          }
        }
        var Oe = !1,
          Ne = null,
          Fe = !1,
          ze = null,
          Be = {
            onError: function (e) {
              (Oe = !0), (Ne = e);
            },
          };
        function He(e, t, n, r, a, i, o, s, l) {
          (Oe = !1), (Ne = null), Ie.apply(Be, arguments);
        }
        function Ge(e) {
          var t = e,
            n = e;
          if (e.alternate) for (; t.return; ) t = t.return;
          else {
            e = t;
            do {
              0 !== (4098 & (t = e).flags) && (n = t.return), (e = t.return);
            } while (e);
          }
          return 3 === t.tag ? n : null;
        }
        function Ve(e) {
          if (13 === e.tag) {
            var t = e.memoizedState;
            if (
              (null === t &&
                null !== (e = e.alternate) &&
                (t = e.memoizedState),
              null !== t)
            )
              return t.dehydrated;
          }
          return null;
        }
        function We(e) {
          if (Ge(e) !== e) throw Error(i(188));
        }
        function je(e) {
          return null !==
            (e = (function (e) {
              var t = e.alternate;
              if (!t) {
                if (null === (t = Ge(e))) throw Error(i(188));
                return t !== e ? null : e;
              }
              for (var n = e, r = t; ; ) {
                var a = n.return;
                if (null === a) break;
                var o = a.alternate;
                if (null === o) {
                  if (null !== (r = a.return)) {
                    n = r;
                    continue;
                  }
                  break;
                }
                if (a.child === o.child) {
                  for (o = a.child; o; ) {
                    if (o === n) return We(a), e;
                    if (o === r) return We(a), t;
                    o = o.sibling;
                  }
                  throw Error(i(188));
                }
                if (n.return !== r.return) (n = a), (r = o);
                else {
                  for (var s = !1, l = a.child; l; ) {
                    if (l === n) {
                      (s = !0), (n = a), (r = o);
                      break;
                    }
                    if (l === r) {
                      (s = !0), (r = a), (n = o);
                      break;
                    }
                    l = l.sibling;
                  }
                  if (!s) {
                    for (l = o.child; l; ) {
                      if (l === n) {
                        (s = !0), (n = o), (r = a);
                        break;
                      }
                      if (l === r) {
                        (s = !0), (r = o), (n = a);
                        break;
                      }
                      l = l.sibling;
                    }
                    if (!s) throw Error(i(189));
                  }
                }
                if (n.alternate !== r) throw Error(i(190));
              }
              if (3 !== n.tag) throw Error(i(188));
              return n.stateNode.current === n ? e : t;
            })(e))
            ? Xe(e)
            : null;
        }
        function Xe(e) {
          if (5 === e.tag || 6 === e.tag) return e;
          for (e = e.child; null !== e; ) {
            var t = Xe(e);
            if (null !== t) return t;
            e = e.sibling;
          }
          return null;
        }
        var qe = a.unstable_scheduleCallback,
          Ye = a.unstable_cancelCallback,
          Ke = a.unstable_shouldYield,
          $e = a.unstable_requestPaint,
          Ze = a.unstable_now,
          Je = a.unstable_getCurrentPriorityLevel,
          Qe = a.unstable_ImmediatePriority,
          et = a.unstable_UserBlockingPriority,
          tt = a.unstable_NormalPriority,
          nt = a.unstable_LowPriority,
          rt = a.unstable_IdlePriority,
          at = null,
          it = null;
        var ot = Math.clz32
            ? Math.clz32
            : function (e) {
                return (e >>>= 0), 0 === e ? 32 : (31 - ((st(e) / lt) | 0)) | 0;
              },
          st = Math.log,
          lt = Math.LN2;
        var ut = 64,
          ct = 4194304;
        function ft(e) {
          switch (e & -e) {
            case 1:
              return 1;
            case 2:
              return 2;
            case 4:
              return 4;
            case 8:
              return 8;
            case 16:
              return 16;
            case 32:
              return 32;
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
              return 4194240 & e;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
              return 130023424 & e;
            case 134217728:
              return 134217728;
            case 268435456:
              return 268435456;
            case 536870912:
              return 536870912;
            case 1073741824:
              return 1073741824;
            default:
              return e;
          }
        }
        function dt(e, t) {
          var n = e.pendingLanes;
          if (0 === n) return 0;
          var r = 0,
            a = e.suspendedLanes,
            i = e.pingedLanes,
            o = 268435455 & n;
          if (0 !== o) {
            var s = o & ~a;
            0 !== s ? (r = ft(s)) : 0 !== (i &= o) && (r = ft(i));
          } else 0 !== (o = n & ~a) ? (r = ft(o)) : 0 !== i && (r = ft(i));
          if (0 === r) return 0;
          if (
            0 !== t &&
            t !== r &&
            0 === (t & a) &&
            ((a = r & -r) >= (i = t & -t) || (16 === a && 0 !== (4194240 & i)))
          )
            return t;
          if ((0 !== (4 & r) && (r |= 16 & n), 0 !== (t = e.entangledLanes)))
            for (e = e.entanglements, t &= r; 0 < t; )
              (a = 1 << (n = 31 - ot(t))), (r |= e[n]), (t &= ~a);
          return r;
        }
        function ht(e, t) {
          switch (e) {
            case 1:
            case 2:
            case 4:
              return t + 250;
            case 8:
            case 16:
            case 32:
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
              return t + 5e3;
            default:
              return -1;
          }
        }
        function pt(e) {
          return 0 !== (e = -1073741825 & e.pendingLanes)
            ? e
            : 1073741824 & e
            ? 1073741824
            : 0;
        }
        function vt() {
          var e = ut;
          return 0 === (4194240 & (ut <<= 1)) && (ut = 64), e;
        }
        function mt(e) {
          for (var t = [], n = 0; 31 > n; n++) t.push(e);
          return t;
        }
        function gt(e, t, n) {
          (e.pendingLanes |= t),
            536870912 !== t && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
            ((e = e.eventTimes)[(t = 31 - ot(t))] = n);
        }
        function yt(e, t) {
          var n = (e.entangledLanes |= t);
          for (e = e.entanglements; n; ) {
            var r = 31 - ot(n),
              a = 1 << r;
            (a & t) | (e[r] & t) && (e[r] |= t), (n &= ~a);
          }
        }
        var _t = 0;
        function bt(e) {
          return 1 < (e &= -e)
            ? 4 < e
              ? 0 !== (268435455 & e)
                ? 16
                : 536870912
              : 4
            : 1;
        }
        var xt,
          St,
          Et,
          wt,
          Tt,
          Mt = !1,
          At = [],
          Ct = null,
          kt = null,
          Rt = null,
          Pt = new Map(),
          Ut = new Map(),
          Lt = [],
          Dt =
            "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
              " "
            );
        function It(e, t) {
          switch (e) {
            case "focusin":
            case "focusout":
              Ct = null;
              break;
            case "dragenter":
            case "dragleave":
              kt = null;
              break;
            case "mouseover":
            case "mouseout":
              Rt = null;
              break;
            case "pointerover":
            case "pointerout":
              Pt.delete(t.pointerId);
              break;
            case "gotpointercapture":
            case "lostpointercapture":
              Ut.delete(t.pointerId);
          }
        }
        function Ot(e, t, n, r, a, i) {
          return null === e || e.nativeEvent !== i
            ? ((e = {
                blockedOn: t,
                domEventName: n,
                eventSystemFlags: r,
                nativeEvent: i,
                targetContainers: [a],
              }),
              null !== t && null !== (t = _a(t)) && St(t),
              e)
            : ((e.eventSystemFlags |= r),
              (t = e.targetContainers),
              null !== a && -1 === t.indexOf(a) && t.push(a),
              e);
        }
        function Nt(e) {
          var t = ya(e.target);
          if (null !== t) {
            var n = Ge(t);
            if (null !== n)
              if (13 === (t = n.tag)) {
                if (null !== (t = Ve(n)))
                  return (
                    (e.blockedOn = t),
                    void Tt(e.priority, function () {
                      Et(n);
                    })
                  );
              } else if (
                3 === t &&
                n.stateNode.current.memoizedState.isDehydrated
              )
                return void (e.blockedOn =
                  3 === n.tag ? n.stateNode.containerInfo : null);
          }
          e.blockedOn = null;
        }
        function Ft(e) {
          if (null !== e.blockedOn) return !1;
          for (var t = e.targetContainers; 0 < t.length; ) {
            var n = Kt(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
            if (null !== n)
              return null !== (t = _a(n)) && St(t), (e.blockedOn = n), !1;
            var r = new (n = e.nativeEvent).constructor(n.type, n);
            (be = r), n.target.dispatchEvent(r), (be = null), t.shift();
          }
          return !0;
        }
        function zt(e, t, n) {
          Ft(e) && n.delete(t);
        }
        function Bt() {
          (Mt = !1),
            null !== Ct && Ft(Ct) && (Ct = null),
            null !== kt && Ft(kt) && (kt = null),
            null !== Rt && Ft(Rt) && (Rt = null),
            Pt.forEach(zt),
            Ut.forEach(zt);
        }
        function Ht(e, t) {
          e.blockedOn === t &&
            ((e.blockedOn = null),
            Mt ||
              ((Mt = !0),
              a.unstable_scheduleCallback(a.unstable_NormalPriority, Bt)));
        }
        function Gt(e) {
          function t(t) {
            return Ht(t, e);
          }
          if (0 < At.length) {
            Ht(At[0], e);
            for (var n = 1; n < At.length; n++) {
              var r = At[n];
              r.blockedOn === e && (r.blockedOn = null);
            }
          }
          for (
            null !== Ct && Ht(Ct, e),
              null !== kt && Ht(kt, e),
              null !== Rt && Ht(Rt, e),
              Pt.forEach(t),
              Ut.forEach(t),
              n = 0;
            n < Lt.length;
            n++
          )
            (r = Lt[n]).blockedOn === e && (r.blockedOn = null);
          for (; 0 < Lt.length && null === (n = Lt[0]).blockedOn; )
            Nt(n), null === n.blockedOn && Lt.shift();
        }
        var Vt = b.ReactCurrentBatchConfig,
          Wt = !0;
        function jt(e, t, n, r) {
          var a = _t,
            i = Vt.transition;
          Vt.transition = null;
          try {
            (_t = 1), qt(e, t, n, r);
          } finally {
            (_t = a), (Vt.transition = i);
          }
        }
        function Xt(e, t, n, r) {
          var a = _t,
            i = Vt.transition;
          Vt.transition = null;
          try {
            (_t = 4), qt(e, t, n, r);
          } finally {
            (_t = a), (Vt.transition = i);
          }
        }
        function qt(e, t, n, r) {
          if (Wt) {
            var a = Kt(e, t, n, r);
            if (null === a) Wr(e, t, r, Yt, n), It(e, r);
            else if (
              (function (e, t, n, r, a) {
                switch (t) {
                  case "focusin":
                    return (Ct = Ot(Ct, e, t, n, r, a)), !0;
                  case "dragenter":
                    return (kt = Ot(kt, e, t, n, r, a)), !0;
                  case "mouseover":
                    return (Rt = Ot(Rt, e, t, n, r, a)), !0;
                  case "pointerover":
                    var i = a.pointerId;
                    return Pt.set(i, Ot(Pt.get(i) || null, e, t, n, r, a)), !0;
                  case "gotpointercapture":
                    return (
                      (i = a.pointerId),
                      Ut.set(i, Ot(Ut.get(i) || null, e, t, n, r, a)),
                      !0
                    );
                }
                return !1;
              })(a, e, t, n, r)
            )
              r.stopPropagation();
            else if ((It(e, r), 4 & t && -1 < Dt.indexOf(e))) {
              for (; null !== a; ) {
                var i = _a(a);
                if (
                  (null !== i && xt(i),
                  null === (i = Kt(e, t, n, r)) && Wr(e, t, r, Yt, n),
                  i === a)
                )
                  break;
                a = i;
              }
              null !== a && r.stopPropagation();
            } else Wr(e, t, r, null, n);
          }
        }
        var Yt = null;
        function Kt(e, t, n, r) {
          if (((Yt = null), null !== (e = ya((e = xe(r))))))
            if (null === (t = Ge(e))) e = null;
            else if (13 === (n = t.tag)) {
              if (null !== (e = Ve(t))) return e;
              e = null;
            } else if (3 === n) {
              if (t.stateNode.current.memoizedState.isDehydrated)
                return 3 === t.tag ? t.stateNode.containerInfo : null;
              e = null;
            } else t !== e && (e = null);
          return (Yt = e), null;
        }
        function $t(e) {
          switch (e) {
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            case "beforeblur":
            case "afterblur":
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
              return 1;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "toggle":
            case "touchmove":
            case "wheel":
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
              return 4;
            case "message":
              switch (Je()) {
                case Qe:
                  return 1;
                case et:
                  return 4;
                case tt:
                case nt:
                  return 16;
                case rt:
                  return 536870912;
                default:
                  return 16;
              }
            default:
              return 16;
          }
        }
        var Zt = null,
          Jt = null,
          Qt = null;
        function en() {
          if (Qt) return Qt;
          var e,
            t,
            n = Jt,
            r = n.length,
            a = "value" in Zt ? Zt.value : Zt.textContent,
            i = a.length;
          for (e = 0; e < r && n[e] === a[e]; e++);
          var o = r - e;
          for (t = 1; t <= o && n[r - t] === a[i - t]; t++);
          return (Qt = a.slice(e, 1 < t ? 1 - t : void 0));
        }
        function tn(e) {
          var t = e.keyCode;
          return (
            "charCode" in e
              ? 0 === (e = e.charCode) && 13 === t && (e = 13)
              : (e = t),
            10 === e && (e = 13),
            32 <= e || 13 === e ? e : 0
          );
        }
        function nn() {
          return !0;
        }
        function rn() {
          return !1;
        }
        function an(e) {
          function t(t, n, r, a, i) {
            for (var o in ((this._reactName = t),
            (this._targetInst = r),
            (this.type = n),
            (this.nativeEvent = a),
            (this.target = i),
            (this.currentTarget = null),
            e))
              e.hasOwnProperty(o) && ((t = e[o]), (this[o] = t ? t(a) : a[o]));
            return (
              (this.isDefaultPrevented = (
                null != a.defaultPrevented
                  ? a.defaultPrevented
                  : !1 === a.returnValue
              )
                ? nn
                : rn),
              (this.isPropagationStopped = rn),
              this
            );
          }
          return (
            N(t.prototype, {
              preventDefault: function () {
                this.defaultPrevented = !0;
                var e = this.nativeEvent;
                e &&
                  (e.preventDefault
                    ? e.preventDefault()
                    : "unknown" !== typeof e.returnValue &&
                      (e.returnValue = !1),
                  (this.isDefaultPrevented = nn));
              },
              stopPropagation: function () {
                var e = this.nativeEvent;
                e &&
                  (e.stopPropagation
                    ? e.stopPropagation()
                    : "unknown" !== typeof e.cancelBubble &&
                      (e.cancelBubble = !0),
                  (this.isPropagationStopped = nn));
              },
              persist: function () {},
              isPersistent: nn,
            }),
            t
          );
        }
        var on,
          sn,
          ln,
          un = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function (e) {
              return e.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0,
          },
          cn = an(un),
          fn = N({}, un, { view: 0, detail: 0 }),
          dn = an(fn),
          hn = N({}, fn, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: Tn,
            button: 0,
            buttons: 0,
            relatedTarget: function (e) {
              return void 0 === e.relatedTarget
                ? e.fromElement === e.srcElement
                  ? e.toElement
                  : e.fromElement
                : e.relatedTarget;
            },
            movementX: function (e) {
              return "movementX" in e
                ? e.movementX
                : (e !== ln &&
                    (ln && "mousemove" === e.type
                      ? ((on = e.screenX - ln.screenX),
                        (sn = e.screenY - ln.screenY))
                      : (sn = on = 0),
                    (ln = e)),
                  on);
            },
            movementY: function (e) {
              return "movementY" in e ? e.movementY : sn;
            },
          }),
          pn = an(hn),
          vn = an(N({}, hn, { dataTransfer: 0 })),
          mn = an(N({}, fn, { relatedTarget: 0 })),
          gn = an(
            N({}, un, { animationName: 0, elapsedTime: 0, pseudoElement: 0 })
          ),
          yn = N({}, un, {
            clipboardData: function (e) {
              return "clipboardData" in e
                ? e.clipboardData
                : window.clipboardData;
            },
          }),
          _n = an(yn),
          bn = an(N({}, un, { data: 0 })),
          xn = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified",
          },
          Sn = {
            8: "Backspace",
            9: "Tab",
            12: "Clear",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            19: "Pause",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            45: "Insert",
            46: "Delete",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "NumLock",
            145: "ScrollLock",
            224: "Meta",
          },
          En = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey",
          };
        function wn(e) {
          var t = this.nativeEvent;
          return t.getModifierState
            ? t.getModifierState(e)
            : !!(e = En[e]) && !!t[e];
        }
        function Tn() {
          return wn;
        }
        var Mn = N({}, fn, {
            key: function (e) {
              if (e.key) {
                var t = xn[e.key] || e.key;
                if ("Unidentified" !== t) return t;
              }
              return "keypress" === e.type
                ? 13 === (e = tn(e))
                  ? "Enter"
                  : String.fromCharCode(e)
                : "keydown" === e.type || "keyup" === e.type
                ? Sn[e.keyCode] || "Unidentified"
                : "";
            },
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: Tn,
            charCode: function (e) {
              return "keypress" === e.type ? tn(e) : 0;
            },
            keyCode: function (e) {
              return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0;
            },
            which: function (e) {
              return "keypress" === e.type
                ? tn(e)
                : "keydown" === e.type || "keyup" === e.type
                ? e.keyCode
                : 0;
            },
          }),
          An = an(Mn),
          Cn = an(
            N({}, hn, {
              pointerId: 0,
              width: 0,
              height: 0,
              pressure: 0,
              tangentialPressure: 0,
              tiltX: 0,
              tiltY: 0,
              twist: 0,
              pointerType: 0,
              isPrimary: 0,
            })
          ),
          kn = an(
            N({}, fn, {
              touches: 0,
              targetTouches: 0,
              changedTouches: 0,
              altKey: 0,
              metaKey: 0,
              ctrlKey: 0,
              shiftKey: 0,
              getModifierState: Tn,
            })
          ),
          Rn = an(
            N({}, un, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 })
          ),
          Pn = N({}, hn, {
            deltaX: function (e) {
              return "deltaX" in e
                ? e.deltaX
                : "wheelDeltaX" in e
                ? -e.wheelDeltaX
                : 0;
            },
            deltaY: function (e) {
              return "deltaY" in e
                ? e.deltaY
                : "wheelDeltaY" in e
                ? -e.wheelDeltaY
                : "wheelDelta" in e
                ? -e.wheelDelta
                : 0;
            },
            deltaZ: 0,
            deltaMode: 0,
          }),
          Un = an(Pn),
          Ln = [9, 13, 27, 32],
          Dn = c && "CompositionEvent" in window,
          In = null;
        c && "documentMode" in document && (In = document.documentMode);
        var On = c && "TextEvent" in window && !In,
          Nn = c && (!Dn || (In && 8 < In && 11 >= In)),
          Fn = String.fromCharCode(32),
          zn = !1;
        function Bn(e, t) {
          switch (e) {
            case "keyup":
              return -1 !== Ln.indexOf(t.keyCode);
            case "keydown":
              return 229 !== t.keyCode;
            case "keypress":
            case "mousedown":
            case "focusout":
              return !0;
            default:
              return !1;
          }
        }
        function Hn(e) {
          return "object" === typeof (e = e.detail) && "data" in e
            ? e.data
            : null;
        }
        var Gn = !1;
        var Vn = {
          color: !0,
          date: !0,
          datetime: !0,
          "datetime-local": !0,
          email: !0,
          month: !0,
          number: !0,
          password: !0,
          range: !0,
          search: !0,
          tel: !0,
          text: !0,
          time: !0,
          url: !0,
          week: !0,
        };
        function Wn(e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return "input" === t ? !!Vn[e.type] : "textarea" === t;
        }
        function jn(e, t, n, r) {
          Me(r),
            0 < (t = Xr(t, "onChange")).length &&
              ((n = new cn("onChange", "change", null, n, r)),
              e.push({ event: n, listeners: t }));
        }
        var Xn = null,
          qn = null;
        function Yn(e) {
          Fr(e, 0);
        }
        function Kn(e) {
          if (q(ba(e))) return e;
        }
        function $n(e, t) {
          if ("change" === e) return t;
        }
        var Zn = !1;
        if (c) {
          var Jn;
          if (c) {
            var Qn = "oninput" in document;
            if (!Qn) {
              var er = document.createElement("div");
              er.setAttribute("oninput", "return;"),
                (Qn = "function" === typeof er.oninput);
            }
            Jn = Qn;
          } else Jn = !1;
          Zn = Jn && (!document.documentMode || 9 < document.documentMode);
        }
        function tr() {
          Xn && (Xn.detachEvent("onpropertychange", nr), (qn = Xn = null));
        }
        function nr(e) {
          if ("value" === e.propertyName && Kn(qn)) {
            var t = [];
            jn(t, qn, e, xe(e)), Pe(Yn, t);
          }
        }
        function rr(e, t, n) {
          "focusin" === e
            ? (tr(), (qn = n), (Xn = t).attachEvent("onpropertychange", nr))
            : "focusout" === e && tr();
        }
        function ar(e) {
          if ("selectionchange" === e || "keyup" === e || "keydown" === e)
            return Kn(qn);
        }
        function ir(e, t) {
          if ("click" === e) return Kn(t);
        }
        function or(e, t) {
          if ("input" === e || "change" === e) return Kn(t);
        }
        var sr =
          "function" === typeof Object.is
            ? Object.is
            : function (e, t) {
                return (
                  (e === t && (0 !== e || 1 / e === 1 / t)) ||
                  (e !== e && t !== t)
                );
              };
        function lr(e, t) {
          if (sr(e, t)) return !0;
          if (
            "object" !== typeof e ||
            null === e ||
            "object" !== typeof t ||
            null === t
          )
            return !1;
          var n = Object.keys(e),
            r = Object.keys(t);
          if (n.length !== r.length) return !1;
          for (r = 0; r < n.length; r++) {
            var a = n[r];
            if (!f.call(t, a) || !sr(e[a], t[a])) return !1;
          }
          return !0;
        }
        function ur(e) {
          for (; e && e.firstChild; ) e = e.firstChild;
          return e;
        }
        function cr(e, t) {
          var n,
            r = ur(e);
          for (e = 0; r; ) {
            if (3 === r.nodeType) {
              if (((n = e + r.textContent.length), e <= t && n >= t))
                return { node: r, offset: t - e };
              e = n;
            }
            e: {
              for (; r; ) {
                if (r.nextSibling) {
                  r = r.nextSibling;
                  break e;
                }
                r = r.parentNode;
              }
              r = void 0;
            }
            r = ur(r);
          }
        }
        function fr(e, t) {
          return (
            !(!e || !t) &&
            (e === t ||
              ((!e || 3 !== e.nodeType) &&
                (t && 3 === t.nodeType
                  ? fr(e, t.parentNode)
                  : "contains" in e
                  ? e.contains(t)
                  : !!e.compareDocumentPosition &&
                    !!(16 & e.compareDocumentPosition(t)))))
          );
        }
        function dr() {
          for (var e = window, t = Y(); t instanceof e.HTMLIFrameElement; ) {
            try {
              var n = "string" === typeof t.contentWindow.location.href;
            } catch (r) {
              n = !1;
            }
            if (!n) break;
            t = Y((e = t.contentWindow).document);
          }
          return t;
        }
        function hr(e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return (
            t &&
            (("input" === t &&
              ("text" === e.type ||
                "search" === e.type ||
                "tel" === e.type ||
                "url" === e.type ||
                "password" === e.type)) ||
              "textarea" === t ||
              "true" === e.contentEditable)
          );
        }
        function pr(e) {
          var t = dr(),
            n = e.focusedElem,
            r = e.selectionRange;
          if (
            t !== n &&
            n &&
            n.ownerDocument &&
            fr(n.ownerDocument.documentElement, n)
          ) {
            if (null !== r && hr(n))
              if (
                ((t = r.start),
                void 0 === (e = r.end) && (e = t),
                "selectionStart" in n)
              )
                (n.selectionStart = t),
                  (n.selectionEnd = Math.min(e, n.value.length));
              else if (
                (e =
                  ((t = n.ownerDocument || document) && t.defaultView) ||
                  window).getSelection
              ) {
                e = e.getSelection();
                var a = n.textContent.length,
                  i = Math.min(r.start, a);
                (r = void 0 === r.end ? i : Math.min(r.end, a)),
                  !e.extend && i > r && ((a = r), (r = i), (i = a)),
                  (a = cr(n, i));
                var o = cr(n, r);
                a &&
                  o &&
                  (1 !== e.rangeCount ||
                    e.anchorNode !== a.node ||
                    e.anchorOffset !== a.offset ||
                    e.focusNode !== o.node ||
                    e.focusOffset !== o.offset) &&
                  ((t = t.createRange()).setStart(a.node, a.offset),
                  e.removeAllRanges(),
                  i > r
                    ? (e.addRange(t), e.extend(o.node, o.offset))
                    : (t.setEnd(o.node, o.offset), e.addRange(t)));
              }
            for (t = [], e = n; (e = e.parentNode); )
              1 === e.nodeType &&
                t.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
            for (
              "function" === typeof n.focus && n.focus(), n = 0;
              n < t.length;
              n++
            )
              ((e = t[n]).element.scrollLeft = e.left),
                (e.element.scrollTop = e.top);
          }
        }
        var vr = c && "documentMode" in document && 11 >= document.documentMode,
          mr = null,
          gr = null,
          yr = null,
          _r = !1;
        function br(e, t, n) {
          var r =
            n.window === n
              ? n.document
              : 9 === n.nodeType
              ? n
              : n.ownerDocument;
          _r ||
            null == mr ||
            mr !== Y(r) ||
            ("selectionStart" in (r = mr) && hr(r)
              ? (r = { start: r.selectionStart, end: r.selectionEnd })
              : (r = {
                  anchorNode: (r = (
                    (r.ownerDocument && r.ownerDocument.defaultView) ||
                    window
                  ).getSelection()).anchorNode,
                  anchorOffset: r.anchorOffset,
                  focusNode: r.focusNode,
                  focusOffset: r.focusOffset,
                }),
            (yr && lr(yr, r)) ||
              ((yr = r),
              0 < (r = Xr(gr, "onSelect")).length &&
                ((t = new cn("onSelect", "select", null, t, n)),
                e.push({ event: t, listeners: r }),
                (t.target = mr))));
        }
        function xr(e, t) {
          var n = {};
          return (
            (n[e.toLowerCase()] = t.toLowerCase()),
            (n["Webkit" + e] = "webkit" + t),
            (n["Moz" + e] = "moz" + t),
            n
          );
        }
        var Sr = {
            animationend: xr("Animation", "AnimationEnd"),
            animationiteration: xr("Animation", "AnimationIteration"),
            animationstart: xr("Animation", "AnimationStart"),
            transitionend: xr("Transition", "TransitionEnd"),
          },
          Er = {},
          wr = {};
        function Tr(e) {
          if (Er[e]) return Er[e];
          if (!Sr[e]) return e;
          var t,
            n = Sr[e];
          for (t in n)
            if (n.hasOwnProperty(t) && t in wr) return (Er[e] = n[t]);
          return e;
        }
        c &&
          ((wr = document.createElement("div").style),
          "AnimationEvent" in window ||
            (delete Sr.animationend.animation,
            delete Sr.animationiteration.animation,
            delete Sr.animationstart.animation),
          "TransitionEvent" in window || delete Sr.transitionend.transition);
        var Mr = Tr("animationend"),
          Ar = Tr("animationiteration"),
          Cr = Tr("animationstart"),
          kr = Tr("transitionend"),
          Rr = new Map(),
          Pr =
            "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
              " "
            );
        function Ur(e, t) {
          Rr.set(e, t), l(t, [e]);
        }
        for (var Lr = 0; Lr < Pr.length; Lr++) {
          var Dr = Pr[Lr];
          Ur(Dr.toLowerCase(), "on" + (Dr[0].toUpperCase() + Dr.slice(1)));
        }
        Ur(Mr, "onAnimationEnd"),
          Ur(Ar, "onAnimationIteration"),
          Ur(Cr, "onAnimationStart"),
          Ur("dblclick", "onDoubleClick"),
          Ur("focusin", "onFocus"),
          Ur("focusout", "onBlur"),
          Ur(kr, "onTransitionEnd"),
          u("onMouseEnter", ["mouseout", "mouseover"]),
          u("onMouseLeave", ["mouseout", "mouseover"]),
          u("onPointerEnter", ["pointerout", "pointerover"]),
          u("onPointerLeave", ["pointerout", "pointerover"]),
          l(
            "onChange",
            "change click focusin focusout input keydown keyup selectionchange".split(
              " "
            )
          ),
          l(
            "onSelect",
            "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
              " "
            )
          ),
          l("onBeforeInput", [
            "compositionend",
            "keypress",
            "textInput",
            "paste",
          ]),
          l(
            "onCompositionEnd",
            "compositionend focusout keydown keypress keyup mousedown".split(
              " "
            )
          ),
          l(
            "onCompositionStart",
            "compositionstart focusout keydown keypress keyup mousedown".split(
              " "
            )
          ),
          l(
            "onCompositionUpdate",
            "compositionupdate focusout keydown keypress keyup mousedown".split(
              " "
            )
          );
        var Ir =
            "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
              " "
            ),
          Or = new Set(
            "cancel close invalid load scroll toggle".split(" ").concat(Ir)
          );
        function Nr(e, t, n) {
          var r = e.type || "unknown-event";
          (e.currentTarget = n),
            (function (e, t, n, r, a, o, s, l, u) {
              if ((He.apply(this, arguments), Oe)) {
                if (!Oe) throw Error(i(198));
                var c = Ne;
                (Oe = !1), (Ne = null), Fe || ((Fe = !0), (ze = c));
              }
            })(r, t, void 0, e),
            (e.currentTarget = null);
        }
        function Fr(e, t) {
          t = 0 !== (4 & t);
          for (var n = 0; n < e.length; n++) {
            var r = e[n],
              a = r.event;
            r = r.listeners;
            e: {
              var i = void 0;
              if (t)
                for (var o = r.length - 1; 0 <= o; o--) {
                  var s = r[o],
                    l = s.instance,
                    u = s.currentTarget;
                  if (((s = s.listener), l !== i && a.isPropagationStopped()))
                    break e;
                  Nr(a, s, u), (i = l);
                }
              else
                for (o = 0; o < r.length; o++) {
                  if (
                    ((l = (s = r[o]).instance),
                    (u = s.currentTarget),
                    (s = s.listener),
                    l !== i && a.isPropagationStopped())
                  )
                    break e;
                  Nr(a, s, u), (i = l);
                }
            }
          }
          if (Fe) throw ((e = ze), (Fe = !1), (ze = null), e);
        }
        function zr(e, t) {
          var n = t[va];
          void 0 === n && (n = t[va] = new Set());
          var r = e + "__bubble";
          n.has(r) || (Vr(t, e, 2, !1), n.add(r));
        }
        function Br(e, t, n) {
          var r = 0;
          t && (r |= 4), Vr(n, e, r, t);
        }
        var Hr = "_reactListening" + Math.random().toString(36).slice(2);
        function Gr(e) {
          if (!e[Hr]) {
            (e[Hr] = !0),
              o.forEach(function (t) {
                "selectionchange" !== t &&
                  (Or.has(t) || Br(t, !1, e), Br(t, !0, e));
              });
            var t = 9 === e.nodeType ? e : e.ownerDocument;
            null === t || t[Hr] || ((t[Hr] = !0), Br("selectionchange", !1, t));
          }
        }
        function Vr(e, t, n, r) {
          switch ($t(t)) {
            case 1:
              var a = jt;
              break;
            case 4:
              a = Xt;
              break;
            default:
              a = qt;
          }
          (n = a.bind(null, t, n, e)),
            (a = void 0),
            !Le ||
              ("touchstart" !== t && "touchmove" !== t && "wheel" !== t) ||
              (a = !0),
            r
              ? void 0 !== a
                ? e.addEventListener(t, n, { capture: !0, passive: a })
                : e.addEventListener(t, n, !0)
              : void 0 !== a
              ? e.addEventListener(t, n, { passive: a })
              : e.addEventListener(t, n, !1);
        }
        function Wr(e, t, n, r, a) {
          var i = r;
          if (0 === (1 & t) && 0 === (2 & t) && null !== r)
            e: for (;;) {
              if (null === r) return;
              var o = r.tag;
              if (3 === o || 4 === o) {
                var s = r.stateNode.containerInfo;
                if (s === a || (8 === s.nodeType && s.parentNode === a)) break;
                if (4 === o)
                  for (o = r.return; null !== o; ) {
                    var l = o.tag;
                    if (
                      (3 === l || 4 === l) &&
                      ((l = o.stateNode.containerInfo) === a ||
                        (8 === l.nodeType && l.parentNode === a))
                    )
                      return;
                    o = o.return;
                  }
                for (; null !== s; ) {
                  if (null === (o = ya(s))) return;
                  if (5 === (l = o.tag) || 6 === l) {
                    r = i = o;
                    continue e;
                  }
                  s = s.parentNode;
                }
              }
              r = r.return;
            }
          Pe(function () {
            var r = i,
              a = xe(n),
              o = [];
            e: {
              var s = Rr.get(e);
              if (void 0 !== s) {
                var l = cn,
                  u = e;
                switch (e) {
                  case "keypress":
                    if (0 === tn(n)) break e;
                  case "keydown":
                  case "keyup":
                    l = An;
                    break;
                  case "focusin":
                    (u = "focus"), (l = mn);
                    break;
                  case "focusout":
                    (u = "blur"), (l = mn);
                    break;
                  case "beforeblur":
                  case "afterblur":
                    l = mn;
                    break;
                  case "click":
                    if (2 === n.button) break e;
                  case "auxclick":
                  case "dblclick":
                  case "mousedown":
                  case "mousemove":
                  case "mouseup":
                  case "mouseout":
                  case "mouseover":
                  case "contextmenu":
                    l = pn;
                    break;
                  case "drag":
                  case "dragend":
                  case "dragenter":
                  case "dragexit":
                  case "dragleave":
                  case "dragover":
                  case "dragstart":
                  case "drop":
                    l = vn;
                    break;
                  case "touchcancel":
                  case "touchend":
                  case "touchmove":
                  case "touchstart":
                    l = kn;
                    break;
                  case Mr:
                  case Ar:
                  case Cr:
                    l = gn;
                    break;
                  case kr:
                    l = Rn;
                    break;
                  case "scroll":
                    l = dn;
                    break;
                  case "wheel":
                    l = Un;
                    break;
                  case "copy":
                  case "cut":
                  case "paste":
                    l = _n;
                    break;
                  case "gotpointercapture":
                  case "lostpointercapture":
                  case "pointercancel":
                  case "pointerdown":
                  case "pointermove":
                  case "pointerout":
                  case "pointerover":
                  case "pointerup":
                    l = Cn;
                }
                var c = 0 !== (4 & t),
                  f = !c && "scroll" === e,
                  d = c ? (null !== s ? s + "Capture" : null) : s;
                c = [];
                for (var h, p = r; null !== p; ) {
                  var v = (h = p).stateNode;
                  if (
                    (5 === h.tag &&
                      null !== v &&
                      ((h = v),
                      null !== d &&
                        null != (v = Ue(p, d)) &&
                        c.push(jr(p, v, h))),
                    f)
                  )
                    break;
                  p = p.return;
                }
                0 < c.length &&
                  ((s = new l(s, u, null, n, a)),
                  o.push({ event: s, listeners: c }));
              }
            }
            if (0 === (7 & t)) {
              if (
                ((l = "mouseout" === e || "pointerout" === e),
                (!(s = "mouseover" === e || "pointerover" === e) ||
                  n === be ||
                  !(u = n.relatedTarget || n.fromElement) ||
                  (!ya(u) && !u[pa])) &&
                  (l || s) &&
                  ((s =
                    a.window === a
                      ? a
                      : (s = a.ownerDocument)
                      ? s.defaultView || s.parentWindow
                      : window),
                  l
                    ? ((l = r),
                      null !==
                        (u = (u = n.relatedTarget || n.toElement)
                          ? ya(u)
                          : null) &&
                        (u !== (f = Ge(u)) || (5 !== u.tag && 6 !== u.tag)) &&
                        (u = null))
                    : ((l = null), (u = r)),
                  l !== u))
              ) {
                if (
                  ((c = pn),
                  (v = "onMouseLeave"),
                  (d = "onMouseEnter"),
                  (p = "mouse"),
                  ("pointerout" !== e && "pointerover" !== e) ||
                    ((c = Cn),
                    (v = "onPointerLeave"),
                    (d = "onPointerEnter"),
                    (p = "pointer")),
                  (f = null == l ? s : ba(l)),
                  (h = null == u ? s : ba(u)),
                  ((s = new c(v, p + "leave", l, n, a)).target = f),
                  (s.relatedTarget = h),
                  (v = null),
                  ya(a) === r &&
                    (((c = new c(d, p + "enter", u, n, a)).target = h),
                    (c.relatedTarget = f),
                    (v = c)),
                  (f = v),
                  l && u)
                )
                  e: {
                    for (d = u, p = 0, h = c = l; h; h = qr(h)) p++;
                    for (h = 0, v = d; v; v = qr(v)) h++;
                    for (; 0 < p - h; ) (c = qr(c)), p--;
                    for (; 0 < h - p; ) (d = qr(d)), h--;
                    for (; p--; ) {
                      if (c === d || (null !== d && c === d.alternate)) break e;
                      (c = qr(c)), (d = qr(d));
                    }
                    c = null;
                  }
                else c = null;
                null !== l && Yr(o, s, l, c, !1),
                  null !== u && null !== f && Yr(o, f, u, c, !0);
              }
              if (
                "select" ===
                  (l =
                    (s = r ? ba(r) : window).nodeName &&
                    s.nodeName.toLowerCase()) ||
                ("input" === l && "file" === s.type)
              )
                var m = $n;
              else if (Wn(s))
                if (Zn) m = or;
                else {
                  m = ar;
                  var g = rr;
                }
              else
                (l = s.nodeName) &&
                  "input" === l.toLowerCase() &&
                  ("checkbox" === s.type || "radio" === s.type) &&
                  (m = ir);
              switch (
                (m && (m = m(e, r))
                  ? jn(o, m, n, a)
                  : (g && g(e, s, r),
                    "focusout" === e &&
                      (g = s._wrapperState) &&
                      g.controlled &&
                      "number" === s.type &&
                      ee(s, "number", s.value)),
                (g = r ? ba(r) : window),
                e)
              ) {
                case "focusin":
                  (Wn(g) || "true" === g.contentEditable) &&
                    ((mr = g), (gr = r), (yr = null));
                  break;
                case "focusout":
                  yr = gr = mr = null;
                  break;
                case "mousedown":
                  _r = !0;
                  break;
                case "contextmenu":
                case "mouseup":
                case "dragend":
                  (_r = !1), br(o, n, a);
                  break;
                case "selectionchange":
                  if (vr) break;
                case "keydown":
                case "keyup":
                  br(o, n, a);
              }
              var y;
              if (Dn)
                e: {
                  switch (e) {
                    case "compositionstart":
                      var _ = "onCompositionStart";
                      break e;
                    case "compositionend":
                      _ = "onCompositionEnd";
                      break e;
                    case "compositionupdate":
                      _ = "onCompositionUpdate";
                      break e;
                  }
                  _ = void 0;
                }
              else
                Gn
                  ? Bn(e, n) && (_ = "onCompositionEnd")
                  : "keydown" === e &&
                    229 === n.keyCode &&
                    (_ = "onCompositionStart");
              _ &&
                (Nn &&
                  "ko" !== n.locale &&
                  (Gn || "onCompositionStart" !== _
                    ? "onCompositionEnd" === _ && Gn && (y = en())
                    : ((Jt = "value" in (Zt = a) ? Zt.value : Zt.textContent),
                      (Gn = !0))),
                0 < (g = Xr(r, _)).length &&
                  ((_ = new bn(_, e, null, n, a)),
                  o.push({ event: _, listeners: g }),
                  y ? (_.data = y) : null !== (y = Hn(n)) && (_.data = y))),
                (y = On
                  ? (function (e, t) {
                      switch (e) {
                        case "compositionend":
                          return Hn(t);
                        case "keypress":
                          return 32 !== t.which ? null : ((zn = !0), Fn);
                        case "textInput":
                          return (e = t.data) === Fn && zn ? null : e;
                        default:
                          return null;
                      }
                    })(e, n)
                  : (function (e, t) {
                      if (Gn)
                        return "compositionend" === e || (!Dn && Bn(e, t))
                          ? ((e = en()), (Qt = Jt = Zt = null), (Gn = !1), e)
                          : null;
                      switch (e) {
                        case "paste":
                        default:
                          return null;
                        case "keypress":
                          if (
                            !(t.ctrlKey || t.altKey || t.metaKey) ||
                            (t.ctrlKey && t.altKey)
                          ) {
                            if (t.char && 1 < t.char.length) return t.char;
                            if (t.which) return String.fromCharCode(t.which);
                          }
                          return null;
                        case "compositionend":
                          return Nn && "ko" !== t.locale ? null : t.data;
                      }
                    })(e, n)) &&
                  0 < (r = Xr(r, "onBeforeInput")).length &&
                  ((a = new bn("onBeforeInput", "beforeinput", null, n, a)),
                  o.push({ event: a, listeners: r }),
                  (a.data = y));
            }
            Fr(o, t);
          });
        }
        function jr(e, t, n) {
          return { instance: e, listener: t, currentTarget: n };
        }
        function Xr(e, t) {
          for (var n = t + "Capture", r = []; null !== e; ) {
            var a = e,
              i = a.stateNode;
            5 === a.tag &&
              null !== i &&
              ((a = i),
              null != (i = Ue(e, n)) && r.unshift(jr(e, i, a)),
              null != (i = Ue(e, t)) && r.push(jr(e, i, a))),
              (e = e.return);
          }
          return r;
        }
        function qr(e) {
          if (null === e) return null;
          do {
            e = e.return;
          } while (e && 5 !== e.tag);
          return e || null;
        }
        function Yr(e, t, n, r, a) {
          for (var i = t._reactName, o = []; null !== n && n !== r; ) {
            var s = n,
              l = s.alternate,
              u = s.stateNode;
            if (null !== l && l === r) break;
            5 === s.tag &&
              null !== u &&
              ((s = u),
              a
                ? null != (l = Ue(n, i)) && o.unshift(jr(n, l, s))
                : a || (null != (l = Ue(n, i)) && o.push(jr(n, l, s)))),
              (n = n.return);
          }
          0 !== o.length && e.push({ event: t, listeners: o });
        }
        var Kr = /\r\n?/g,
          $r = /\u0000|\uFFFD/g;
        function Zr(e) {
          return ("string" === typeof e ? e : "" + e)
            .replace(Kr, "\n")
            .replace($r, "");
        }
        function Jr(e, t, n) {
          if (((t = Zr(t)), Zr(e) !== t && n)) throw Error(i(425));
        }
        function Qr() {}
        var ea = null,
          ta = null;
        function na(e, t) {
          return (
            "textarea" === e ||
            "noscript" === e ||
            "string" === typeof t.children ||
            "number" === typeof t.children ||
            ("object" === typeof t.dangerouslySetInnerHTML &&
              null !== t.dangerouslySetInnerHTML &&
              null != t.dangerouslySetInnerHTML.__html)
          );
        }
        var ra = "function" === typeof setTimeout ? setTimeout : void 0,
          aa = "function" === typeof clearTimeout ? clearTimeout : void 0,
          ia = "function" === typeof Promise ? Promise : void 0,
          oa =
            "function" === typeof queueMicrotask
              ? queueMicrotask
              : "undefined" !== typeof ia
              ? function (e) {
                  return ia.resolve(null).then(e).catch(sa);
                }
              : ra;
        function sa(e) {
          setTimeout(function () {
            throw e;
          });
        }
        function la(e, t) {
          var n = t,
            r = 0;
          do {
            var a = n.nextSibling;
            if ((e.removeChild(n), a && 8 === a.nodeType))
              if ("/$" === (n = a.data)) {
                if (0 === r) return e.removeChild(a), void Gt(t);
                r--;
              } else ("$" !== n && "$?" !== n && "$!" !== n) || r++;
            n = a;
          } while (n);
          Gt(t);
        }
        function ua(e) {
          for (; null != e; e = e.nextSibling) {
            var t = e.nodeType;
            if (1 === t || 3 === t) break;
            if (8 === t) {
              if ("$" === (t = e.data) || "$!" === t || "$?" === t) break;
              if ("/$" === t) return null;
            }
          }
          return e;
        }
        function ca(e) {
          e = e.previousSibling;
          for (var t = 0; e; ) {
            if (8 === e.nodeType) {
              var n = e.data;
              if ("$" === n || "$!" === n || "$?" === n) {
                if (0 === t) return e;
                t--;
              } else "/$" === n && t++;
            }
            e = e.previousSibling;
          }
          return null;
        }
        var fa = Math.random().toString(36).slice(2),
          da = "__reactFiber$" + fa,
          ha = "__reactProps$" + fa,
          pa = "__reactContainer$" + fa,
          va = "__reactEvents$" + fa,
          ma = "__reactListeners$" + fa,
          ga = "__reactHandles$" + fa;
        function ya(e) {
          var t = e[da];
          if (t) return t;
          for (var n = e.parentNode; n; ) {
            if ((t = n[pa] || n[da])) {
              if (
                ((n = t.alternate),
                null !== t.child || (null !== n && null !== n.child))
              )
                for (e = ca(e); null !== e; ) {
                  if ((n = e[da])) return n;
                  e = ca(e);
                }
              return t;
            }
            n = (e = n).parentNode;
          }
          return null;
        }
        function _a(e) {
          return !(e = e[da] || e[pa]) ||
            (5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag)
            ? null
            : e;
        }
        function ba(e) {
          if (5 === e.tag || 6 === e.tag) return e.stateNode;
          throw Error(i(33));
        }
        function xa(e) {
          return e[ha] || null;
        }
        var Sa = [],
          Ea = -1;
        function wa(e) {
          return { current: e };
        }
        function Ta(e) {
          0 > Ea || ((e.current = Sa[Ea]), (Sa[Ea] = null), Ea--);
        }
        function Ma(e, t) {
          Ea++, (Sa[Ea] = e.current), (e.current = t);
        }
        var Aa = {},
          Ca = wa(Aa),
          ka = wa(!1),
          Ra = Aa;
        function Pa(e, t) {
          var n = e.type.contextTypes;
          if (!n) return Aa;
          var r = e.stateNode;
          if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
            return r.__reactInternalMemoizedMaskedChildContext;
          var a,
            i = {};
          for (a in n) i[a] = t[a];
          return (
            r &&
              (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext =
                t),
              (e.__reactInternalMemoizedMaskedChildContext = i)),
            i
          );
        }
        function Ua(e) {
          return null !== (e = e.childContextTypes) && void 0 !== e;
        }
        function La() {
          Ta(ka), Ta(Ca);
        }
        function Da(e, t, n) {
          if (Ca.current !== Aa) throw Error(i(168));
          Ma(Ca, t), Ma(ka, n);
        }
        function Ia(e, t, n) {
          var r = e.stateNode;
          if (
            ((t = t.childContextTypes), "function" !== typeof r.getChildContext)
          )
            return n;
          for (var a in (r = r.getChildContext()))
            if (!(a in t)) throw Error(i(108, V(e) || "Unknown", a));
          return N({}, n, r);
        }
        function Oa(e) {
          return (
            (e =
              ((e = e.stateNode) &&
                e.__reactInternalMemoizedMergedChildContext) ||
              Aa),
            (Ra = Ca.current),
            Ma(Ca, e),
            Ma(ka, ka.current),
            !0
          );
        }
        function Na(e, t, n) {
          var r = e.stateNode;
          if (!r) throw Error(i(169));
          n
            ? ((e = Ia(e, t, Ra)),
              (r.__reactInternalMemoizedMergedChildContext = e),
              Ta(ka),
              Ta(Ca),
              Ma(Ca, e))
            : Ta(ka),
            Ma(ka, n);
        }
        var Fa = null,
          za = !1,
          Ba = !1;
        function Ha(e) {
          null === Fa ? (Fa = [e]) : Fa.push(e);
        }
        function Ga() {
          if (!Ba && null !== Fa) {
            Ba = !0;
            var e = 0,
              t = _t;
            try {
              var n = Fa;
              for (_t = 1; e < n.length; e++) {
                var r = n[e];
                do {
                  r = r(!0);
                } while (null !== r);
              }
              (Fa = null), (za = !1);
            } catch (a) {
              throw (null !== Fa && (Fa = Fa.slice(e + 1)), qe(Qe, Ga), a);
            } finally {
              (_t = t), (Ba = !1);
            }
          }
          return null;
        }
        var Va = [],
          Wa = 0,
          ja = null,
          Xa = 0,
          qa = [],
          Ya = 0,
          Ka = null,
          $a = 1,
          Za = "";
        function Ja(e, t) {
          (Va[Wa++] = Xa), (Va[Wa++] = ja), (ja = e), (Xa = t);
        }
        function Qa(e, t, n) {
          (qa[Ya++] = $a), (qa[Ya++] = Za), (qa[Ya++] = Ka), (Ka = e);
          var r = $a;
          e = Za;
          var a = 32 - ot(r) - 1;
          (r &= ~(1 << a)), (n += 1);
          var i = 32 - ot(t) + a;
          if (30 < i) {
            var o = a - (a % 5);
            (i = (r & ((1 << o) - 1)).toString(32)),
              (r >>= o),
              (a -= o),
              ($a = (1 << (32 - ot(t) + a)) | (n << a) | r),
              (Za = i + e);
          } else ($a = (1 << i) | (n << a) | r), (Za = e);
        }
        function ei(e) {
          null !== e.return && (Ja(e, 1), Qa(e, 1, 0));
        }
        function ti(e) {
          for (; e === ja; )
            (ja = Va[--Wa]), (Va[Wa] = null), (Xa = Va[--Wa]), (Va[Wa] = null);
          for (; e === Ka; )
            (Ka = qa[--Ya]),
              (qa[Ya] = null),
              (Za = qa[--Ya]),
              (qa[Ya] = null),
              ($a = qa[--Ya]),
              (qa[Ya] = null);
        }
        var ni = null,
          ri = null,
          ai = !1,
          ii = null;
        function oi(e, t) {
          var n = Uu(5, null, null, 0);
          (n.elementType = "DELETED"),
            (n.stateNode = t),
            (n.return = e),
            null === (t = e.deletions)
              ? ((e.deletions = [n]), (e.flags |= 16))
              : t.push(n);
        }
        function si(e, t) {
          switch (e.tag) {
            case 5:
              var n = e.type;
              return (
                null !==
                  (t =
                    1 !== t.nodeType ||
                    n.toLowerCase() !== t.nodeName.toLowerCase()
                      ? null
                      : t) &&
                ((e.stateNode = t), (ni = e), (ri = ua(t.firstChild)), !0)
              );
            case 6:
              return (
                null !==
                  (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) &&
                ((e.stateNode = t), (ni = e), (ri = null), !0)
              );
            case 13:
              return (
                null !== (t = 8 !== t.nodeType ? null : t) &&
                ((n = null !== Ka ? { id: $a, overflow: Za } : null),
                (e.memoizedState = {
                  dehydrated: t,
                  treeContext: n,
                  retryLane: 1073741824,
                }),
                ((n = Uu(18, null, null, 0)).stateNode = t),
                (n.return = e),
                (e.child = n),
                (ni = e),
                (ri = null),
                !0)
              );
            default:
              return !1;
          }
        }
        function li(e) {
          return 0 !== (1 & e.mode) && 0 === (128 & e.flags);
        }
        function ui(e) {
          if (ai) {
            var t = ri;
            if (t) {
              var n = t;
              if (!si(e, t)) {
                if (li(e)) throw Error(i(418));
                t = ua(n.nextSibling);
                var r = ni;
                t && si(e, t)
                  ? oi(r, n)
                  : ((e.flags = (-4097 & e.flags) | 2), (ai = !1), (ni = e));
              }
            } else {
              if (li(e)) throw Error(i(418));
              (e.flags = (-4097 & e.flags) | 2), (ai = !1), (ni = e);
            }
          }
        }
        function ci(e) {
          for (
            e = e.return;
            null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag;

          )
            e = e.return;
          ni = e;
        }
        function fi(e) {
          if (e !== ni) return !1;
          if (!ai) return ci(e), (ai = !0), !1;
          var t;
          if (
            ((t = 3 !== e.tag) &&
              !(t = 5 !== e.tag) &&
              (t =
                "head" !== (t = e.type) &&
                "body" !== t &&
                !na(e.type, e.memoizedProps)),
            t && (t = ri))
          ) {
            if (li(e)) throw (di(), Error(i(418)));
            for (; t; ) oi(e, t), (t = ua(t.nextSibling));
          }
          if ((ci(e), 13 === e.tag)) {
            if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
              throw Error(i(317));
            e: {
              for (e = e.nextSibling, t = 0; e; ) {
                if (8 === e.nodeType) {
                  var n = e.data;
                  if ("/$" === n) {
                    if (0 === t) {
                      ri = ua(e.nextSibling);
                      break e;
                    }
                    t--;
                  } else ("$" !== n && "$!" !== n && "$?" !== n) || t++;
                }
                e = e.nextSibling;
              }
              ri = null;
            }
          } else ri = ni ? ua(e.stateNode.nextSibling) : null;
          return !0;
        }
        function di() {
          for (var e = ri; e; ) e = ua(e.nextSibling);
        }
        function hi() {
          (ri = ni = null), (ai = !1);
        }
        function pi(e) {
          null === ii ? (ii = [e]) : ii.push(e);
        }
        var vi = b.ReactCurrentBatchConfig;
        function mi(e, t) {
          if (e && e.defaultProps) {
            for (var n in ((t = N({}, t)), (e = e.defaultProps)))
              void 0 === t[n] && (t[n] = e[n]);
            return t;
          }
          return t;
        }
        var gi = wa(null),
          yi = null,
          _i = null,
          bi = null;
        function xi() {
          bi = _i = yi = null;
        }
        function Si(e) {
          var t = gi.current;
          Ta(gi), (e._currentValue = t);
        }
        function Ei(e, t, n) {
          for (; null !== e; ) {
            var r = e.alternate;
            if (
              ((e.childLanes & t) !== t
                ? ((e.childLanes |= t), null !== r && (r.childLanes |= t))
                : null !== r && (r.childLanes & t) !== t && (r.childLanes |= t),
              e === n)
            )
              break;
            e = e.return;
          }
        }
        function wi(e, t) {
          (yi = e),
            (bi = _i = null),
            null !== (e = e.dependencies) &&
              null !== e.firstContext &&
              (0 !== (e.lanes & t) && (bs = !0), (e.firstContext = null));
        }
        function Ti(e) {
          var t = e._currentValue;
          if (bi !== e)
            if (
              ((e = { context: e, memoizedValue: t, next: null }), null === _i)
            ) {
              if (null === yi) throw Error(i(308));
              (_i = e), (yi.dependencies = { lanes: 0, firstContext: e });
            } else _i = _i.next = e;
          return t;
        }
        var Mi = null;
        function Ai(e) {
          null === Mi ? (Mi = [e]) : Mi.push(e);
        }
        function Ci(e, t, n, r) {
          var a = t.interleaved;
          return (
            null === a
              ? ((n.next = n), Ai(t))
              : ((n.next = a.next), (a.next = n)),
            (t.interleaved = n),
            ki(e, r)
          );
        }
        function ki(e, t) {
          e.lanes |= t;
          var n = e.alternate;
          for (null !== n && (n.lanes |= t), n = e, e = e.return; null !== e; )
            (e.childLanes |= t),
              null !== (n = e.alternate) && (n.childLanes |= t),
              (n = e),
              (e = e.return);
          return 3 === n.tag ? n.stateNode : null;
        }
        var Ri = !1;
        function Pi(e) {
          e.updateQueue = {
            baseState: e.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: { pending: null, interleaved: null, lanes: 0 },
            effects: null,
          };
        }
        function Ui(e, t) {
          (e = e.updateQueue),
            t.updateQueue === e &&
              (t.updateQueue = {
                baseState: e.baseState,
                firstBaseUpdate: e.firstBaseUpdate,
                lastBaseUpdate: e.lastBaseUpdate,
                shared: e.shared,
                effects: e.effects,
              });
        }
        function Li(e, t) {
          return {
            eventTime: e,
            lane: t,
            tag: 0,
            payload: null,
            callback: null,
            next: null,
          };
        }
        function Di(e, t, n) {
          var r = e.updateQueue;
          if (null === r) return null;
          if (((r = r.shared), 0 !== (2 & kl))) {
            var a = r.pending;
            return (
              null === a ? (t.next = t) : ((t.next = a.next), (a.next = t)),
              (r.pending = t),
              ki(e, n)
            );
          }
          return (
            null === (a = r.interleaved)
              ? ((t.next = t), Ai(r))
              : ((t.next = a.next), (a.next = t)),
            (r.interleaved = t),
            ki(e, n)
          );
        }
        function Ii(e, t, n) {
          if (
            null !== (t = t.updateQueue) &&
            ((t = t.shared), 0 !== (4194240 & n))
          ) {
            var r = t.lanes;
            (n |= r &= e.pendingLanes), (t.lanes = n), yt(e, n);
          }
        }
        function Oi(e, t) {
          var n = e.updateQueue,
            r = e.alternate;
          if (null !== r && n === (r = r.updateQueue)) {
            var a = null,
              i = null;
            if (null !== (n = n.firstBaseUpdate)) {
              do {
                var o = {
                  eventTime: n.eventTime,
                  lane: n.lane,
                  tag: n.tag,
                  payload: n.payload,
                  callback: n.callback,
                  next: null,
                };
                null === i ? (a = i = o) : (i = i.next = o), (n = n.next);
              } while (null !== n);
              null === i ? (a = i = t) : (i = i.next = t);
            } else a = i = t;
            return (
              (n = {
                baseState: r.baseState,
                firstBaseUpdate: a,
                lastBaseUpdate: i,
                shared: r.shared,
                effects: r.effects,
              }),
              void (e.updateQueue = n)
            );
          }
          null === (e = n.lastBaseUpdate)
            ? (n.firstBaseUpdate = t)
            : (e.next = t),
            (n.lastBaseUpdate = t);
        }
        function Ni(e, t, n, r) {
          var a = e.updateQueue;
          Ri = !1;
          var i = a.firstBaseUpdate,
            o = a.lastBaseUpdate,
            s = a.shared.pending;
          if (null !== s) {
            a.shared.pending = null;
            var l = s,
              u = l.next;
            (l.next = null), null === o ? (i = u) : (o.next = u), (o = l);
            var c = e.alternate;
            null !== c &&
              (s = (c = c.updateQueue).lastBaseUpdate) !== o &&
              (null === s ? (c.firstBaseUpdate = u) : (s.next = u),
              (c.lastBaseUpdate = l));
          }
          if (null !== i) {
            var f = a.baseState;
            for (o = 0, c = u = l = null, s = i; ; ) {
              var d = s.lane,
                h = s.eventTime;
              if ((r & d) === d) {
                null !== c &&
                  (c = c.next =
                    {
                      eventTime: h,
                      lane: 0,
                      tag: s.tag,
                      payload: s.payload,
                      callback: s.callback,
                      next: null,
                    });
                e: {
                  var p = e,
                    v = s;
                  switch (((d = t), (h = n), v.tag)) {
                    case 1:
                      if ("function" === typeof (p = v.payload)) {
                        f = p.call(h, f, d);
                        break e;
                      }
                      f = p;
                      break e;
                    case 3:
                      p.flags = (-65537 & p.flags) | 128;
                    case 0:
                      if (
                        null ===
                          (d =
                            "function" === typeof (p = v.payload)
                              ? p.call(h, f, d)
                              : p) ||
                        void 0 === d
                      )
                        break e;
                      f = N({}, f, d);
                      break e;
                    case 2:
                      Ri = !0;
                  }
                }
                null !== s.callback &&
                  0 !== s.lane &&
                  ((e.flags |= 64),
                  null === (d = a.effects) ? (a.effects = [s]) : d.push(s));
              } else
                (h = {
                  eventTime: h,
                  lane: d,
                  tag: s.tag,
                  payload: s.payload,
                  callback: s.callback,
                  next: null,
                }),
                  null === c ? ((u = c = h), (l = f)) : (c = c.next = h),
                  (o |= d);
              if (null === (s = s.next)) {
                if (null === (s = a.shared.pending)) break;
                (s = (d = s).next),
                  (d.next = null),
                  (a.lastBaseUpdate = d),
                  (a.shared.pending = null);
              }
            }
            if (
              (null === c && (l = f),
              (a.baseState = l),
              (a.firstBaseUpdate = u),
              (a.lastBaseUpdate = c),
              null !== (t = a.shared.interleaved))
            ) {
              a = t;
              do {
                (o |= a.lane), (a = a.next);
              } while (a !== t);
            } else null === i && (a.shared.lanes = 0);
            (Nl |= o), (e.lanes = o), (e.memoizedState = f);
          }
        }
        function Fi(e, t, n) {
          if (((e = t.effects), (t.effects = null), null !== e))
            for (t = 0; t < e.length; t++) {
              var r = e[t],
                a = r.callback;
              if (null !== a) {
                if (((r.callback = null), (r = n), "function" !== typeof a))
                  throw Error(i(191, a));
                a.call(r);
              }
            }
        }
        var zi = new r.Component().refs;
        function Bi(e, t, n, r) {
          (n =
            null === (n = n(r, (t = e.memoizedState))) || void 0 === n
              ? t
              : N({}, t, n)),
            (e.memoizedState = n),
            0 === e.lanes && (e.updateQueue.baseState = n);
        }
        var Hi = {
          isMounted: function (e) {
            return !!(e = e._reactInternals) && Ge(e) === e;
          },
          enqueueSetState: function (e, t, n) {
            e = e._reactInternals;
            var r = tu(),
              a = nu(e),
              i = Li(r, a);
            (i.payload = t),
              void 0 !== n && null !== n && (i.callback = n),
              null !== (t = Di(e, i, a)) && (ru(t, e, a, r), Ii(t, e, a));
          },
          enqueueReplaceState: function (e, t, n) {
            e = e._reactInternals;
            var r = tu(),
              a = nu(e),
              i = Li(r, a);
            (i.tag = 1),
              (i.payload = t),
              void 0 !== n && null !== n && (i.callback = n),
              null !== (t = Di(e, i, a)) && (ru(t, e, a, r), Ii(t, e, a));
          },
          enqueueForceUpdate: function (e, t) {
            e = e._reactInternals;
            var n = tu(),
              r = nu(e),
              a = Li(n, r);
            (a.tag = 2),
              void 0 !== t && null !== t && (a.callback = t),
              null !== (t = Di(e, a, r)) && (ru(t, e, r, n), Ii(t, e, r));
          },
        };
        function Gi(e, t, n, r, a, i, o) {
          return "function" === typeof (e = e.stateNode).shouldComponentUpdate
            ? e.shouldComponentUpdate(r, i, o)
            : !t.prototype ||
                !t.prototype.isPureReactComponent ||
                !lr(n, r) ||
                !lr(a, i);
        }
        function Vi(e, t, n) {
          var r = !1,
            a = Aa,
            i = t.contextType;
          return (
            "object" === typeof i && null !== i
              ? (i = Ti(i))
              : ((a = Ua(t) ? Ra : Ca.current),
                (i = (r = null !== (r = t.contextTypes) && void 0 !== r)
                  ? Pa(e, a)
                  : Aa)),
            (t = new t(n, i)),
            (e.memoizedState =
              null !== t.state && void 0 !== t.state ? t.state : null),
            (t.updater = Hi),
            (e.stateNode = t),
            (t._reactInternals = e),
            r &&
              (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext =
                a),
              (e.__reactInternalMemoizedMaskedChildContext = i)),
            t
          );
        }
        function Wi(e, t, n, r) {
          (e = t.state),
            "function" === typeof t.componentWillReceiveProps &&
              t.componentWillReceiveProps(n, r),
            "function" === typeof t.UNSAFE_componentWillReceiveProps &&
              t.UNSAFE_componentWillReceiveProps(n, r),
            t.state !== e && Hi.enqueueReplaceState(t, t.state, null);
        }
        function ji(e, t, n, r) {
          var a = e.stateNode;
          (a.props = n), (a.state = e.memoizedState), (a.refs = zi), Pi(e);
          var i = t.contextType;
          "object" === typeof i && null !== i
            ? (a.context = Ti(i))
            : ((i = Ua(t) ? Ra : Ca.current), (a.context = Pa(e, i))),
            (a.state = e.memoizedState),
            "function" === typeof (i = t.getDerivedStateFromProps) &&
              (Bi(e, t, i, n), (a.state = e.memoizedState)),
            "function" === typeof t.getDerivedStateFromProps ||
              "function" === typeof a.getSnapshotBeforeUpdate ||
              ("function" !== typeof a.UNSAFE_componentWillMount &&
                "function" !== typeof a.componentWillMount) ||
              ((t = a.state),
              "function" === typeof a.componentWillMount &&
                a.componentWillMount(),
              "function" === typeof a.UNSAFE_componentWillMount &&
                a.UNSAFE_componentWillMount(),
              t !== a.state && Hi.enqueueReplaceState(a, a.state, null),
              Ni(e, n, a, r),
              (a.state = e.memoizedState)),
            "function" === typeof a.componentDidMount && (e.flags |= 4194308);
        }
        function Xi(e, t, n) {
          if (
            null !== (e = n.ref) &&
            "function" !== typeof e &&
            "object" !== typeof e
          ) {
            if (n._owner) {
              if ((n = n._owner)) {
                if (1 !== n.tag) throw Error(i(309));
                var r = n.stateNode;
              }
              if (!r) throw Error(i(147, e));
              var a = r,
                o = "" + e;
              return null !== t &&
                null !== t.ref &&
                "function" === typeof t.ref &&
                t.ref._stringRef === o
                ? t.ref
                : ((t = function (e) {
                    var t = a.refs;
                    t === zi && (t = a.refs = {}),
                      null === e ? delete t[o] : (t[o] = e);
                  }),
                  (t._stringRef = o),
                  t);
            }
            if ("string" !== typeof e) throw Error(i(284));
            if (!n._owner) throw Error(i(290, e));
          }
          return e;
        }
        function qi(e, t) {
          throw (
            ((e = Object.prototype.toString.call(t)),
            Error(
              i(
                31,
                "[object Object]" === e
                  ? "object with keys {" + Object.keys(t).join(", ") + "}"
                  : e
              )
            ))
          );
        }
        function Yi(e) {
          return (0, e._init)(e._payload);
        }
        function Ki(e) {
          function t(t, n) {
            if (e) {
              var r = t.deletions;
              null === r ? ((t.deletions = [n]), (t.flags |= 16)) : r.push(n);
            }
          }
          function n(n, r) {
            if (!e) return null;
            for (; null !== r; ) t(n, r), (r = r.sibling);
            return null;
          }
          function r(e, t) {
            for (e = new Map(); null !== t; )
              null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                (t = t.sibling);
            return e;
          }
          function a(e, t) {
            return ((e = Du(e, t)).index = 0), (e.sibling = null), e;
          }
          function o(t, n, r) {
            return (
              (t.index = r),
              e
                ? null !== (r = t.alternate)
                  ? (r = r.index) < n
                    ? ((t.flags |= 2), n)
                    : r
                  : ((t.flags |= 2), n)
                : ((t.flags |= 1048576), n)
            );
          }
          function s(t) {
            return e && null === t.alternate && (t.flags |= 2), t;
          }
          function l(e, t, n, r) {
            return null === t || 6 !== t.tag
              ? (((t = Fu(n, e.mode, r)).return = e), t)
              : (((t = a(t, n)).return = e), t);
          }
          function u(e, t, n, r) {
            var i = n.type;
            return i === E
              ? f(e, t, n.props.children, r, n.key)
              : null !== t &&
                (t.elementType === i ||
                  ("object" === typeof i &&
                    null !== i &&
                    i.$$typeof === U &&
                    Yi(i) === t.type))
              ? (((r = a(t, n.props)).ref = Xi(e, t, n)), (r.return = e), r)
              : (((r = Iu(n.type, n.key, n.props, null, e.mode, r)).ref = Xi(
                  e,
                  t,
                  n
                )),
                (r.return = e),
                r);
          }
          function c(e, t, n, r) {
            return null === t ||
              4 !== t.tag ||
              t.stateNode.containerInfo !== n.containerInfo ||
              t.stateNode.implementation !== n.implementation
              ? (((t = zu(n, e.mode, r)).return = e), t)
              : (((t = a(t, n.children || [])).return = e), t);
          }
          function f(e, t, n, r, i) {
            return null === t || 7 !== t.tag
              ? (((t = Ou(n, e.mode, r, i)).return = e), t)
              : (((t = a(t, n)).return = e), t);
          }
          function d(e, t, n) {
            if (("string" === typeof t && "" !== t) || "number" === typeof t)
              return ((t = Fu("" + t, e.mode, n)).return = e), t;
            if ("object" === typeof t && null !== t) {
              switch (t.$$typeof) {
                case x:
                  return (
                    ((n = Iu(t.type, t.key, t.props, null, e.mode, n)).ref = Xi(
                      e,
                      null,
                      t
                    )),
                    (n.return = e),
                    n
                  );
                case S:
                  return ((t = zu(t, e.mode, n)).return = e), t;
                case U:
                  return d(e, (0, t._init)(t._payload), n);
              }
              if (te(t) || I(t))
                return ((t = Ou(t, e.mode, n, null)).return = e), t;
              qi(e, t);
            }
            return null;
          }
          function h(e, t, n, r) {
            var a = null !== t ? t.key : null;
            if (("string" === typeof n && "" !== n) || "number" === typeof n)
              return null !== a ? null : l(e, t, "" + n, r);
            if ("object" === typeof n && null !== n) {
              switch (n.$$typeof) {
                case x:
                  return n.key === a ? u(e, t, n, r) : null;
                case S:
                  return n.key === a ? c(e, t, n, r) : null;
                case U:
                  return h(e, t, (a = n._init)(n._payload), r);
              }
              if (te(n) || I(n)) return null !== a ? null : f(e, t, n, r, null);
              qi(e, n);
            }
            return null;
          }
          function p(e, t, n, r, a) {
            if (("string" === typeof r && "" !== r) || "number" === typeof r)
              return l(t, (e = e.get(n) || null), "" + r, a);
            if ("object" === typeof r && null !== r) {
              switch (r.$$typeof) {
                case x:
                  return u(
                    t,
                    (e = e.get(null === r.key ? n : r.key) || null),
                    r,
                    a
                  );
                case S:
                  return c(
                    t,
                    (e = e.get(null === r.key ? n : r.key) || null),
                    r,
                    a
                  );
                case U:
                  return p(e, t, n, (0, r._init)(r._payload), a);
              }
              if (te(r) || I(r))
                return f(t, (e = e.get(n) || null), r, a, null);
              qi(t, r);
            }
            return null;
          }
          function v(a, i, s, l) {
            for (
              var u = null, c = null, f = i, v = (i = 0), m = null;
              null !== f && v < s.length;
              v++
            ) {
              f.index > v ? ((m = f), (f = null)) : (m = f.sibling);
              var g = h(a, f, s[v], l);
              if (null === g) {
                null === f && (f = m);
                break;
              }
              e && f && null === g.alternate && t(a, f),
                (i = o(g, i, v)),
                null === c ? (u = g) : (c.sibling = g),
                (c = g),
                (f = m);
            }
            if (v === s.length) return n(a, f), ai && Ja(a, v), u;
            if (null === f) {
              for (; v < s.length; v++)
                null !== (f = d(a, s[v], l)) &&
                  ((i = o(f, i, v)),
                  null === c ? (u = f) : (c.sibling = f),
                  (c = f));
              return ai && Ja(a, v), u;
            }
            for (f = r(a, f); v < s.length; v++)
              null !== (m = p(f, a, v, s[v], l)) &&
                (e &&
                  null !== m.alternate &&
                  f.delete(null === m.key ? v : m.key),
                (i = o(m, i, v)),
                null === c ? (u = m) : (c.sibling = m),
                (c = m));
            return (
              e &&
                f.forEach(function (e) {
                  return t(a, e);
                }),
              ai && Ja(a, v),
              u
            );
          }
          function m(a, s, l, u) {
            var c = I(l);
            if ("function" !== typeof c) throw Error(i(150));
            if (null == (l = c.call(l))) throw Error(i(151));
            for (
              var f = (c = null), v = s, m = (s = 0), g = null, y = l.next();
              null !== v && !y.done;
              m++, y = l.next()
            ) {
              v.index > m ? ((g = v), (v = null)) : (g = v.sibling);
              var _ = h(a, v, y.value, u);
              if (null === _) {
                null === v && (v = g);
                break;
              }
              e && v && null === _.alternate && t(a, v),
                (s = o(_, s, m)),
                null === f ? (c = _) : (f.sibling = _),
                (f = _),
                (v = g);
            }
            if (y.done) return n(a, v), ai && Ja(a, m), c;
            if (null === v) {
              for (; !y.done; m++, y = l.next())
                null !== (y = d(a, y.value, u)) &&
                  ((s = o(y, s, m)),
                  null === f ? (c = y) : (f.sibling = y),
                  (f = y));
              return ai && Ja(a, m), c;
            }
            for (v = r(a, v); !y.done; m++, y = l.next())
              null !== (y = p(v, a, m, y.value, u)) &&
                (e &&
                  null !== y.alternate &&
                  v.delete(null === y.key ? m : y.key),
                (s = o(y, s, m)),
                null === f ? (c = y) : (f.sibling = y),
                (f = y));
            return (
              e &&
                v.forEach(function (e) {
                  return t(a, e);
                }),
              ai && Ja(a, m),
              c
            );
          }
          return function e(r, i, o, l) {
            if (
              ("object" === typeof o &&
                null !== o &&
                o.type === E &&
                null === o.key &&
                (o = o.props.children),
              "object" === typeof o && null !== o)
            ) {
              switch (o.$$typeof) {
                case x:
                  e: {
                    for (var u = o.key, c = i; null !== c; ) {
                      if (c.key === u) {
                        if ((u = o.type) === E) {
                          if (7 === c.tag) {
                            n(r, c.sibling),
                              ((i = a(c, o.props.children)).return = r),
                              (r = i);
                            break e;
                          }
                        } else if (
                          c.elementType === u ||
                          ("object" === typeof u &&
                            null !== u &&
                            u.$$typeof === U &&
                            Yi(u) === c.type)
                        ) {
                          n(r, c.sibling),
                            ((i = a(c, o.props)).ref = Xi(r, c, o)),
                            (i.return = r),
                            (r = i);
                          break e;
                        }
                        n(r, c);
                        break;
                      }
                      t(r, c), (c = c.sibling);
                    }
                    o.type === E
                      ? (((i = Ou(o.props.children, r.mode, l, o.key)).return =
                          r),
                        (r = i))
                      : (((l = Iu(
                          o.type,
                          o.key,
                          o.props,
                          null,
                          r.mode,
                          l
                        )).ref = Xi(r, i, o)),
                        (l.return = r),
                        (r = l));
                  }
                  return s(r);
                case S:
                  e: {
                    for (c = o.key; null !== i; ) {
                      if (i.key === c) {
                        if (
                          4 === i.tag &&
                          i.stateNode.containerInfo === o.containerInfo &&
                          i.stateNode.implementation === o.implementation
                        ) {
                          n(r, i.sibling),
                            ((i = a(i, o.children || [])).return = r),
                            (r = i);
                          break e;
                        }
                        n(r, i);
                        break;
                      }
                      t(r, i), (i = i.sibling);
                    }
                    ((i = zu(o, r.mode, l)).return = r), (r = i);
                  }
                  return s(r);
                case U:
                  return e(r, i, (c = o._init)(o._payload), l);
              }
              if (te(o)) return v(r, i, o, l);
              if (I(o)) return m(r, i, o, l);
              qi(r, o);
            }
            return ("string" === typeof o && "" !== o) || "number" === typeof o
              ? ((o = "" + o),
                null !== i && 6 === i.tag
                  ? (n(r, i.sibling), ((i = a(i, o)).return = r), (r = i))
                  : (n(r, i), ((i = Fu(o, r.mode, l)).return = r), (r = i)),
                s(r))
              : n(r, i);
          };
        }
        var $i = Ki(!0),
          Zi = Ki(!1),
          Ji = {},
          Qi = wa(Ji),
          eo = wa(Ji),
          to = wa(Ji);
        function no(e) {
          if (e === Ji) throw Error(i(174));
          return e;
        }
        function ro(e, t) {
          switch ((Ma(to, t), Ma(eo, e), Ma(Qi, Ji), (e = t.nodeType))) {
            case 9:
            case 11:
              t = (t = t.documentElement) ? t.namespaceURI : le(null, "");
              break;
            default:
              t = le(
                (t = (e = 8 === e ? t.parentNode : t).namespaceURI || null),
                (e = e.tagName)
              );
          }
          Ta(Qi), Ma(Qi, t);
        }
        function ao() {
          Ta(Qi), Ta(eo), Ta(to);
        }
        function io(e) {
          no(to.current);
          var t = no(Qi.current),
            n = le(t, e.type);
          t !== n && (Ma(eo, e), Ma(Qi, n));
        }
        function oo(e) {
          eo.current === e && (Ta(Qi), Ta(eo));
        }
        var so = wa(0);
        function lo(e) {
          for (var t = e; null !== t; ) {
            if (13 === t.tag) {
              var n = t.memoizedState;
              if (
                null !== n &&
                (null === (n = n.dehydrated) ||
                  "$?" === n.data ||
                  "$!" === n.data)
              )
                return t;
            } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
              if (0 !== (128 & t.flags)) return t;
            } else if (null !== t.child) {
              (t.child.return = t), (t = t.child);
              continue;
            }
            if (t === e) break;
            for (; null === t.sibling; ) {
              if (null === t.return || t.return === e) return null;
              t = t.return;
            }
            (t.sibling.return = t.return), (t = t.sibling);
          }
          return null;
        }
        var uo = [];
        function co() {
          for (var e = 0; e < uo.length; e++)
            uo[e]._workInProgressVersionPrimary = null;
          uo.length = 0;
        }
        var fo = b.ReactCurrentDispatcher,
          ho = b.ReactCurrentBatchConfig,
          po = 0,
          vo = null,
          mo = null,
          go = null,
          yo = !1,
          _o = !1,
          bo = 0,
          xo = 0;
        function So() {
          throw Error(i(321));
        }
        function Eo(e, t) {
          if (null === t) return !1;
          for (var n = 0; n < t.length && n < e.length; n++)
            if (!sr(e[n], t[n])) return !1;
          return !0;
        }
        function wo(e, t, n, r, a, o) {
          if (
            ((po = o),
            (vo = t),
            (t.memoizedState = null),
            (t.updateQueue = null),
            (t.lanes = 0),
            (fo.current = null === e || null === e.memoizedState ? ss : ls),
            (e = n(r, a)),
            _o)
          ) {
            o = 0;
            do {
              if (((_o = !1), (bo = 0), 25 <= o)) throw Error(i(301));
              (o += 1),
                (go = mo = null),
                (t.updateQueue = null),
                (fo.current = us),
                (e = n(r, a));
            } while (_o);
          }
          if (
            ((fo.current = os),
            (t = null !== mo && null !== mo.next),
            (po = 0),
            (go = mo = vo = null),
            (yo = !1),
            t)
          )
            throw Error(i(300));
          return e;
        }
        function To() {
          var e = 0 !== bo;
          return (bo = 0), e;
        }
        function Mo() {
          var e = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null,
          };
          return (
            null === go ? (vo.memoizedState = go = e) : (go = go.next = e), go
          );
        }
        function Ao() {
          if (null === mo) {
            var e = vo.alternate;
            e = null !== e ? e.memoizedState : null;
          } else e = mo.next;
          var t = null === go ? vo.memoizedState : go.next;
          if (null !== t) (go = t), (mo = e);
          else {
            if (null === e) throw Error(i(310));
            (e = {
              memoizedState: (mo = e).memoizedState,
              baseState: mo.baseState,
              baseQueue: mo.baseQueue,
              queue: mo.queue,
              next: null,
            }),
              null === go ? (vo.memoizedState = go = e) : (go = go.next = e);
          }
          return go;
        }
        function Co(e, t) {
          return "function" === typeof t ? t(e) : t;
        }
        function ko(e) {
          var t = Ao(),
            n = t.queue;
          if (null === n) throw Error(i(311));
          n.lastRenderedReducer = e;
          var r = mo,
            a = r.baseQueue,
            o = n.pending;
          if (null !== o) {
            if (null !== a) {
              var s = a.next;
              (a.next = o.next), (o.next = s);
            }
            (r.baseQueue = a = o), (n.pending = null);
          }
          if (null !== a) {
            (o = a.next), (r = r.baseState);
            var l = (s = null),
              u = null,
              c = o;
            do {
              var f = c.lane;
              if ((po & f) === f)
                null !== u &&
                  (u = u.next =
                    {
                      lane: 0,
                      action: c.action,
                      hasEagerState: c.hasEagerState,
                      eagerState: c.eagerState,
                      next: null,
                    }),
                  (r = c.hasEagerState ? c.eagerState : e(r, c.action));
              else {
                var d = {
                  lane: f,
                  action: c.action,
                  hasEagerState: c.hasEagerState,
                  eagerState: c.eagerState,
                  next: null,
                };
                null === u ? ((l = u = d), (s = r)) : (u = u.next = d),
                  (vo.lanes |= f),
                  (Nl |= f);
              }
              c = c.next;
            } while (null !== c && c !== o);
            null === u ? (s = r) : (u.next = l),
              sr(r, t.memoizedState) || (bs = !0),
              (t.memoizedState = r),
              (t.baseState = s),
              (t.baseQueue = u),
              (n.lastRenderedState = r);
          }
          if (null !== (e = n.interleaved)) {
            a = e;
            do {
              (o = a.lane), (vo.lanes |= o), (Nl |= o), (a = a.next);
            } while (a !== e);
          } else null === a && (n.lanes = 0);
          return [t.memoizedState, n.dispatch];
        }
        function Ro(e) {
          var t = Ao(),
            n = t.queue;
          if (null === n) throw Error(i(311));
          n.lastRenderedReducer = e;
          var r = n.dispatch,
            a = n.pending,
            o = t.memoizedState;
          if (null !== a) {
            n.pending = null;
            var s = (a = a.next);
            do {
              (o = e(o, s.action)), (s = s.next);
            } while (s !== a);
            sr(o, t.memoizedState) || (bs = !0),
              (t.memoizedState = o),
              null === t.baseQueue && (t.baseState = o),
              (n.lastRenderedState = o);
          }
          return [o, r];
        }
        function Po() {}
        function Uo(e, t) {
          var n = vo,
            r = Ao(),
            a = t(),
            o = !sr(r.memoizedState, a);
          if (
            (o && ((r.memoizedState = a), (bs = !0)),
            (r = r.queue),
            Wo(Io.bind(null, n, r, e), [e]),
            r.getSnapshot !== t ||
              o ||
              (null !== go && 1 & go.memoizedState.tag))
          ) {
            if (
              ((n.flags |= 2048),
              zo(9, Do.bind(null, n, r, a, t), void 0, null),
              null === Rl)
            )
              throw Error(i(349));
            0 !== (30 & po) || Lo(n, t, a);
          }
          return a;
        }
        function Lo(e, t, n) {
          (e.flags |= 16384),
            (e = { getSnapshot: t, value: n }),
            null === (t = vo.updateQueue)
              ? ((t = { lastEffect: null, stores: null }),
                (vo.updateQueue = t),
                (t.stores = [e]))
              : null === (n = t.stores)
              ? (t.stores = [e])
              : n.push(e);
        }
        function Do(e, t, n, r) {
          (t.value = n), (t.getSnapshot = r), Oo(t) && No(e);
        }
        function Io(e, t, n) {
          return n(function () {
            Oo(t) && No(e);
          });
        }
        function Oo(e) {
          var t = e.getSnapshot;
          e = e.value;
          try {
            var n = t();
            return !sr(e, n);
          } catch (r) {
            return !0;
          }
        }
        function No(e) {
          var t = ki(e, 1);
          null !== t && ru(t, e, 1, -1);
        }
        function Fo(e) {
          var t = Mo();
          return (
            "function" === typeof e && (e = e()),
            (t.memoizedState = t.baseState = e),
            (e = {
              pending: null,
              interleaved: null,
              lanes: 0,
              dispatch: null,
              lastRenderedReducer: Co,
              lastRenderedState: e,
            }),
            (t.queue = e),
            (e = e.dispatch = ns.bind(null, vo, e)),
            [t.memoizedState, e]
          );
        }
        function zo(e, t, n, r) {
          return (
            (e = { tag: e, create: t, destroy: n, deps: r, next: null }),
            null === (t = vo.updateQueue)
              ? ((t = { lastEffect: null, stores: null }),
                (vo.updateQueue = t),
                (t.lastEffect = e.next = e))
              : null === (n = t.lastEffect)
              ? (t.lastEffect = e.next = e)
              : ((r = n.next), (n.next = e), (e.next = r), (t.lastEffect = e)),
            e
          );
        }
        function Bo() {
          return Ao().memoizedState;
        }
        function Ho(e, t, n, r) {
          var a = Mo();
          (vo.flags |= e),
            (a.memoizedState = zo(1 | t, n, void 0, void 0 === r ? null : r));
        }
        function Go(e, t, n, r) {
          var a = Ao();
          r = void 0 === r ? null : r;
          var i = void 0;
          if (null !== mo) {
            var o = mo.memoizedState;
            if (((i = o.destroy), null !== r && Eo(r, o.deps)))
              return void (a.memoizedState = zo(t, n, i, r));
          }
          (vo.flags |= e), (a.memoizedState = zo(1 | t, n, i, r));
        }
        function Vo(e, t) {
          return Ho(8390656, 8, e, t);
        }
        function Wo(e, t) {
          return Go(2048, 8, e, t);
        }
        function jo(e, t) {
          return Go(4, 2, e, t);
        }
        function Xo(e, t) {
          return Go(4, 4, e, t);
        }
        function qo(e, t) {
          return "function" === typeof t
            ? ((e = e()),
              t(e),
              function () {
                t(null);
              })
            : null !== t && void 0 !== t
            ? ((e = e()),
              (t.current = e),
              function () {
                t.current = null;
              })
            : void 0;
        }
        function Yo(e, t, n) {
          return (
            (n = null !== n && void 0 !== n ? n.concat([e]) : null),
            Go(4, 4, qo.bind(null, t, e), n)
          );
        }
        function Ko() {}
        function $o(e, t) {
          var n = Ao();
          t = void 0 === t ? null : t;
          var r = n.memoizedState;
          return null !== r && null !== t && Eo(t, r[1])
            ? r[0]
            : ((n.memoizedState = [e, t]), e);
        }
        function Zo(e, t) {
          var n = Ao();
          t = void 0 === t ? null : t;
          var r = n.memoizedState;
          return null !== r && null !== t && Eo(t, r[1])
            ? r[0]
            : ((e = e()), (n.memoizedState = [e, t]), e);
        }
        function Jo(e, t, n) {
          return 0 === (21 & po)
            ? (e.baseState && ((e.baseState = !1), (bs = !0)),
              (e.memoizedState = n))
            : (sr(n, t) ||
                ((n = vt()), (vo.lanes |= n), (Nl |= n), (e.baseState = !0)),
              t);
        }
        function Qo(e, t) {
          var n = _t;
          (_t = 0 !== n && 4 > n ? n : 4), e(!0);
          var r = ho.transition;
          ho.transition = {};
          try {
            e(!1), t();
          } finally {
            (_t = n), (ho.transition = r);
          }
        }
        function es() {
          return Ao().memoizedState;
        }
        function ts(e, t, n) {
          var r = nu(e);
          if (
            ((n = {
              lane: r,
              action: n,
              hasEagerState: !1,
              eagerState: null,
              next: null,
            }),
            rs(e))
          )
            as(t, n);
          else if (null !== (n = Ci(e, t, n, r))) {
            ru(n, e, r, tu()), is(n, t, r);
          }
        }
        function ns(e, t, n) {
          var r = nu(e),
            a = {
              lane: r,
              action: n,
              hasEagerState: !1,
              eagerState: null,
              next: null,
            };
          if (rs(e)) as(t, a);
          else {
            var i = e.alternate;
            if (
              0 === e.lanes &&
              (null === i || 0 === i.lanes) &&
              null !== (i = t.lastRenderedReducer)
            )
              try {
                var o = t.lastRenderedState,
                  s = i(o, n);
                if (((a.hasEagerState = !0), (a.eagerState = s), sr(s, o))) {
                  var l = t.interleaved;
                  return (
                    null === l
                      ? ((a.next = a), Ai(t))
                      : ((a.next = l.next), (l.next = a)),
                    void (t.interleaved = a)
                  );
                }
              } catch (u) {}
            null !== (n = Ci(e, t, a, r)) &&
              (ru(n, e, r, (a = tu())), is(n, t, r));
          }
        }
        function rs(e) {
          var t = e.alternate;
          return e === vo || (null !== t && t === vo);
        }
        function as(e, t) {
          _o = yo = !0;
          var n = e.pending;
          null === n ? (t.next = t) : ((t.next = n.next), (n.next = t)),
            (e.pending = t);
        }
        function is(e, t, n) {
          if (0 !== (4194240 & n)) {
            var r = t.lanes;
            (n |= r &= e.pendingLanes), (t.lanes = n), yt(e, n);
          }
        }
        var os = {
            readContext: Ti,
            useCallback: So,
            useContext: So,
            useEffect: So,
            useImperativeHandle: So,
            useInsertionEffect: So,
            useLayoutEffect: So,
            useMemo: So,
            useReducer: So,
            useRef: So,
            useState: So,
            useDebugValue: So,
            useDeferredValue: So,
            useTransition: So,
            useMutableSource: So,
            useSyncExternalStore: So,
            useId: So,
            unstable_isNewReconciler: !1,
          },
          ss = {
            readContext: Ti,
            useCallback: function (e, t) {
              return (Mo().memoizedState = [e, void 0 === t ? null : t]), e;
            },
            useContext: Ti,
            useEffect: Vo,
            useImperativeHandle: function (e, t, n) {
              return (
                (n = null !== n && void 0 !== n ? n.concat([e]) : null),
                Ho(4194308, 4, qo.bind(null, t, e), n)
              );
            },
            useLayoutEffect: function (e, t) {
              return Ho(4194308, 4, e, t);
            },
            useInsertionEffect: function (e, t) {
              return Ho(4, 2, e, t);
            },
            useMemo: function (e, t) {
              var n = Mo();
              return (
                (t = void 0 === t ? null : t),
                (e = e()),
                (n.memoizedState = [e, t]),
                e
              );
            },
            useReducer: function (e, t, n) {
              var r = Mo();
              return (
                (t = void 0 !== n ? n(t) : t),
                (r.memoizedState = r.baseState = t),
                (e = {
                  pending: null,
                  interleaved: null,
                  lanes: 0,
                  dispatch: null,
                  lastRenderedReducer: e,
                  lastRenderedState: t,
                }),
                (r.queue = e),
                (e = e.dispatch = ts.bind(null, vo, e)),
                [r.memoizedState, e]
              );
            },
            useRef: function (e) {
              return (e = { current: e }), (Mo().memoizedState = e);
            },
            useState: Fo,
            useDebugValue: Ko,
            useDeferredValue: function (e) {
              return (Mo().memoizedState = e);
            },
            useTransition: function () {
              var e = Fo(!1),
                t = e[0];
              return (
                (e = Qo.bind(null, e[1])), (Mo().memoizedState = e), [t, e]
              );
            },
            useMutableSource: function () {},
            useSyncExternalStore: function (e, t, n) {
              var r = vo,
                a = Mo();
              if (ai) {
                if (void 0 === n) throw Error(i(407));
                n = n();
              } else {
                if (((n = t()), null === Rl)) throw Error(i(349));
                0 !== (30 & po) || Lo(r, t, n);
              }
              a.memoizedState = n;
              var o = { value: n, getSnapshot: t };
              return (
                (a.queue = o),
                Vo(Io.bind(null, r, o, e), [e]),
                (r.flags |= 2048),
                zo(9, Do.bind(null, r, o, n, t), void 0, null),
                n
              );
            },
            useId: function () {
              var e = Mo(),
                t = Rl.identifierPrefix;
              if (ai) {
                var n = Za;
                (t =
                  ":" +
                  t +
                  "R" +
                  (n = ($a & ~(1 << (32 - ot($a) - 1))).toString(32) + n)),
                  0 < (n = bo++) && (t += "H" + n.toString(32)),
                  (t += ":");
              } else t = ":" + t + "r" + (n = xo++).toString(32) + ":";
              return (e.memoizedState = t);
            },
            unstable_isNewReconciler: !1,
          },
          ls = {
            readContext: Ti,
            useCallback: $o,
            useContext: Ti,
            useEffect: Wo,
            useImperativeHandle: Yo,
            useInsertionEffect: jo,
            useLayoutEffect: Xo,
            useMemo: Zo,
            useReducer: ko,
            useRef: Bo,
            useState: function () {
              return ko(Co);
            },
            useDebugValue: Ko,
            useDeferredValue: function (e) {
              return Jo(Ao(), mo.memoizedState, e);
            },
            useTransition: function () {
              return [ko(Co)[0], Ao().memoizedState];
            },
            useMutableSource: Po,
            useSyncExternalStore: Uo,
            useId: es,
            unstable_isNewReconciler: !1,
          },
          us = {
            readContext: Ti,
            useCallback: $o,
            useContext: Ti,
            useEffect: Wo,
            useImperativeHandle: Yo,
            useInsertionEffect: jo,
            useLayoutEffect: Xo,
            useMemo: Zo,
            useReducer: Ro,
            useRef: Bo,
            useState: function () {
              return Ro(Co);
            },
            useDebugValue: Ko,
            useDeferredValue: function (e) {
              var t = Ao();
              return null === mo
                ? (t.memoizedState = e)
                : Jo(t, mo.memoizedState, e);
            },
            useTransition: function () {
              return [Ro(Co)[0], Ao().memoizedState];
            },
            useMutableSource: Po,
            useSyncExternalStore: Uo,
            useId: es,
            unstable_isNewReconciler: !1,
          };
        function cs(e, t) {
          try {
            var n = "",
              r = t;
            do {
              (n += H(r)), (r = r.return);
            } while (r);
            var a = n;
          } catch (i) {
            a = "\nError generating stack: " + i.message + "\n" + i.stack;
          }
          return { value: e, source: t, stack: a, digest: null };
        }
        function fs(e, t, n) {
          return {
            value: e,
            source: null,
            stack: null != n ? n : null,
            digest: null != t ? t : null,
          };
        }
        function ds(e, t) {
          try {
            console.error(t.value);
          } catch (n) {
            setTimeout(function () {
              throw n;
            });
          }
        }
        var hs = "function" === typeof WeakMap ? WeakMap : Map;
        function ps(e, t, n) {
          ((n = Li(-1, n)).tag = 3), (n.payload = { element: null });
          var r = t.value;
          return (
            (n.callback = function () {
              jl || ((jl = !0), (Xl = r)), ds(0, t);
            }),
            n
          );
        }
        function vs(e, t, n) {
          (n = Li(-1, n)).tag = 3;
          var r = e.type.getDerivedStateFromError;
          if ("function" === typeof r) {
            var a = t.value;
            (n.payload = function () {
              return r(a);
            }),
              (n.callback = function () {
                ds(0, t);
              });
          }
          var i = e.stateNode;
          return (
            null !== i &&
              "function" === typeof i.componentDidCatch &&
              (n.callback = function () {
                ds(0, t),
                  "function" !== typeof r &&
                    (null === ql ? (ql = new Set([this])) : ql.add(this));
                var e = t.stack;
                this.componentDidCatch(t.value, {
                  componentStack: null !== e ? e : "",
                });
              }),
            n
          );
        }
        function ms(e, t, n) {
          var r = e.pingCache;
          if (null === r) {
            r = e.pingCache = new hs();
            var a = new Set();
            r.set(t, a);
          } else void 0 === (a = r.get(t)) && ((a = new Set()), r.set(t, a));
          a.has(n) || (a.add(n), (e = Mu.bind(null, e, t, n)), t.then(e, e));
        }
        function gs(e) {
          do {
            var t;
            if (
              ((t = 13 === e.tag) &&
                (t = null === (t = e.memoizedState) || null !== t.dehydrated),
              t)
            )
              return e;
            e = e.return;
          } while (null !== e);
          return null;
        }
        function ys(e, t, n, r, a) {
          return 0 === (1 & e.mode)
            ? (e === t
                ? (e.flags |= 65536)
                : ((e.flags |= 128),
                  (n.flags |= 131072),
                  (n.flags &= -52805),
                  1 === n.tag &&
                    (null === n.alternate
                      ? (n.tag = 17)
                      : (((t = Li(-1, 1)).tag = 2), Di(n, t, 1))),
                  (n.lanes |= 1)),
              e)
            : ((e.flags |= 65536), (e.lanes = a), e);
        }
        var _s = b.ReactCurrentOwner,
          bs = !1;
        function xs(e, t, n, r) {
          t.child = null === e ? Zi(t, null, n, r) : $i(t, e.child, n, r);
        }
        function Ss(e, t, n, r, a) {
          n = n.render;
          var i = t.ref;
          return (
            wi(t, a),
            (r = wo(e, t, n, r, i, a)),
            (n = To()),
            null === e || bs
              ? (ai && n && ei(t), (t.flags |= 1), xs(e, t, r, a), t.child)
              : ((t.updateQueue = e.updateQueue),
                (t.flags &= -2053),
                (e.lanes &= ~a),
                js(e, t, a))
          );
        }
        function Es(e, t, n, r, a) {
          if (null === e) {
            var i = n.type;
            return "function" !== typeof i ||
              Lu(i) ||
              void 0 !== i.defaultProps ||
              null !== n.compare ||
              void 0 !== n.defaultProps
              ? (((e = Iu(n.type, null, r, t, t.mode, a)).ref = t.ref),
                (e.return = t),
                (t.child = e))
              : ((t.tag = 15), (t.type = i), ws(e, t, i, r, a));
          }
          if (((i = e.child), 0 === (e.lanes & a))) {
            var o = i.memoizedProps;
            if (
              (n = null !== (n = n.compare) ? n : lr)(o, r) &&
              e.ref === t.ref
            )
              return js(e, t, a);
          }
          return (
            (t.flags |= 1),
            ((e = Du(i, r)).ref = t.ref),
            (e.return = t),
            (t.child = e)
          );
        }
        function ws(e, t, n, r, a) {
          if (null !== e) {
            var i = e.memoizedProps;
            if (lr(i, r) && e.ref === t.ref) {
              if (((bs = !1), (t.pendingProps = r = i), 0 === (e.lanes & a)))
                return (t.lanes = e.lanes), js(e, t, a);
              0 !== (131072 & e.flags) && (bs = !0);
            }
          }
          return As(e, t, n, r, a);
        }
        function Ts(e, t, n) {
          var r = t.pendingProps,
            a = r.children,
            i = null !== e ? e.memoizedState : null;
          if ("hidden" === r.mode)
            if (0 === (1 & t.mode))
              (t.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null,
              }),
                Ma(Dl, Ll),
                (Ll |= n);
            else {
              if (0 === (1073741824 & n))
                return (
                  (e = null !== i ? i.baseLanes | n : n),
                  (t.lanes = t.childLanes = 1073741824),
                  (t.memoizedState = {
                    baseLanes: e,
                    cachePool: null,
                    transitions: null,
                  }),
                  (t.updateQueue = null),
                  Ma(Dl, Ll),
                  (Ll |= e),
                  null
                );
              (t.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null,
              }),
                (r = null !== i ? i.baseLanes : n),
                Ma(Dl, Ll),
                (Ll |= r);
            }
          else
            null !== i
              ? ((r = i.baseLanes | n), (t.memoizedState = null))
              : (r = n),
              Ma(Dl, Ll),
              (Ll |= r);
          return xs(e, t, a, n), t.child;
        }
        function Ms(e, t) {
          var n = t.ref;
          ((null === e && null !== n) || (null !== e && e.ref !== n)) &&
            ((t.flags |= 512), (t.flags |= 2097152));
        }
        function As(e, t, n, r, a) {
          var i = Ua(n) ? Ra : Ca.current;
          return (
            (i = Pa(t, i)),
            wi(t, a),
            (n = wo(e, t, n, r, i, a)),
            (r = To()),
            null === e || bs
              ? (ai && r && ei(t), (t.flags |= 1), xs(e, t, n, a), t.child)
              : ((t.updateQueue = e.updateQueue),
                (t.flags &= -2053),
                (e.lanes &= ~a),
                js(e, t, a))
          );
        }
        function Cs(e, t, n, r, a) {
          if (Ua(n)) {
            var i = !0;
            Oa(t);
          } else i = !1;
          if ((wi(t, a), null === t.stateNode))
            Ws(e, t), Vi(t, n, r), ji(t, n, r, a), (r = !0);
          else if (null === e) {
            var o = t.stateNode,
              s = t.memoizedProps;
            o.props = s;
            var l = o.context,
              u = n.contextType;
            "object" === typeof u && null !== u
              ? (u = Ti(u))
              : (u = Pa(t, (u = Ua(n) ? Ra : Ca.current)));
            var c = n.getDerivedStateFromProps,
              f =
                "function" === typeof c ||
                "function" === typeof o.getSnapshotBeforeUpdate;
            f ||
              ("function" !== typeof o.UNSAFE_componentWillReceiveProps &&
                "function" !== typeof o.componentWillReceiveProps) ||
              ((s !== r || l !== u) && Wi(t, o, r, u)),
              (Ri = !1);
            var d = t.memoizedState;
            (o.state = d),
              Ni(t, r, o, a),
              (l = t.memoizedState),
              s !== r || d !== l || ka.current || Ri
                ? ("function" === typeof c &&
                    (Bi(t, n, c, r), (l = t.memoizedState)),
                  (s = Ri || Gi(t, n, s, r, d, l, u))
                    ? (f ||
                        ("function" !== typeof o.UNSAFE_componentWillMount &&
                          "function" !== typeof o.componentWillMount) ||
                        ("function" === typeof o.componentWillMount &&
                          o.componentWillMount(),
                        "function" === typeof o.UNSAFE_componentWillMount &&
                          o.UNSAFE_componentWillMount()),
                      "function" === typeof o.componentDidMount &&
                        (t.flags |= 4194308))
                    : ("function" === typeof o.componentDidMount &&
                        (t.flags |= 4194308),
                      (t.memoizedProps = r),
                      (t.memoizedState = l)),
                  (o.props = r),
                  (o.state = l),
                  (o.context = u),
                  (r = s))
                : ("function" === typeof o.componentDidMount &&
                    (t.flags |= 4194308),
                  (r = !1));
          } else {
            (o = t.stateNode),
              Ui(e, t),
              (s = t.memoizedProps),
              (u = t.type === t.elementType ? s : mi(t.type, s)),
              (o.props = u),
              (f = t.pendingProps),
              (d = o.context),
              "object" === typeof (l = n.contextType) && null !== l
                ? (l = Ti(l))
                : (l = Pa(t, (l = Ua(n) ? Ra : Ca.current)));
            var h = n.getDerivedStateFromProps;
            (c =
              "function" === typeof h ||
              "function" === typeof o.getSnapshotBeforeUpdate) ||
              ("function" !== typeof o.UNSAFE_componentWillReceiveProps &&
                "function" !== typeof o.componentWillReceiveProps) ||
              ((s !== f || d !== l) && Wi(t, o, r, l)),
              (Ri = !1),
              (d = t.memoizedState),
              (o.state = d),
              Ni(t, r, o, a);
            var p = t.memoizedState;
            s !== f || d !== p || ka.current || Ri
              ? ("function" === typeof h &&
                  (Bi(t, n, h, r), (p = t.memoizedState)),
                (u = Ri || Gi(t, n, u, r, d, p, l) || !1)
                  ? (c ||
                      ("function" !== typeof o.UNSAFE_componentWillUpdate &&
                        "function" !== typeof o.componentWillUpdate) ||
                      ("function" === typeof o.componentWillUpdate &&
                        o.componentWillUpdate(r, p, l),
                      "function" === typeof o.UNSAFE_componentWillUpdate &&
                        o.UNSAFE_componentWillUpdate(r, p, l)),
                    "function" === typeof o.componentDidUpdate &&
                      (t.flags |= 4),
                    "function" === typeof o.getSnapshotBeforeUpdate &&
                      (t.flags |= 1024))
                  : ("function" !== typeof o.componentDidUpdate ||
                      (s === e.memoizedProps && d === e.memoizedState) ||
                      (t.flags |= 4),
                    "function" !== typeof o.getSnapshotBeforeUpdate ||
                      (s === e.memoizedProps && d === e.memoizedState) ||
                      (t.flags |= 1024),
                    (t.memoizedProps = r),
                    (t.memoizedState = p)),
                (o.props = r),
                (o.state = p),
                (o.context = l),
                (r = u))
              : ("function" !== typeof o.componentDidUpdate ||
                  (s === e.memoizedProps && d === e.memoizedState) ||
                  (t.flags |= 4),
                "function" !== typeof o.getSnapshotBeforeUpdate ||
                  (s === e.memoizedProps && d === e.memoizedState) ||
                  (t.flags |= 1024),
                (r = !1));
          }
          return ks(e, t, n, r, i, a);
        }
        function ks(e, t, n, r, a, i) {
          Ms(e, t);
          var o = 0 !== (128 & t.flags);
          if (!r && !o) return a && Na(t, n, !1), js(e, t, i);
          (r = t.stateNode), (_s.current = t);
          var s =
            o && "function" !== typeof n.getDerivedStateFromError
              ? null
              : r.render();
          return (
            (t.flags |= 1),
            null !== e && o
              ? ((t.child = $i(t, e.child, null, i)),
                (t.child = $i(t, null, s, i)))
              : xs(e, t, s, i),
            (t.memoizedState = r.state),
            a && Na(t, n, !0),
            t.child
          );
        }
        function Rs(e) {
          var t = e.stateNode;
          t.pendingContext
            ? Da(0, t.pendingContext, t.pendingContext !== t.context)
            : t.context && Da(0, t.context, !1),
            ro(e, t.containerInfo);
        }
        function Ps(e, t, n, r, a) {
          return hi(), pi(a), (t.flags |= 256), xs(e, t, n, r), t.child;
        }
        var Us,
          Ls,
          Ds,
          Is,
          Os = { dehydrated: null, treeContext: null, retryLane: 0 };
        function Ns(e) {
          return { baseLanes: e, cachePool: null, transitions: null };
        }
        function Fs(e, t, n) {
          var r,
            a = t.pendingProps,
            o = so.current,
            s = !1,
            l = 0 !== (128 & t.flags);
          if (
            ((r = l) ||
              (r = (null === e || null !== e.memoizedState) && 0 !== (2 & o)),
            r
              ? ((s = !0), (t.flags &= -129))
              : (null !== e && null === e.memoizedState) || (o |= 1),
            Ma(so, 1 & o),
            null === e)
          )
            return (
              ui(t),
              null !== (e = t.memoizedState) && null !== (e = e.dehydrated)
                ? (0 === (1 & t.mode)
                    ? (t.lanes = 1)
                    : "$!" === e.data
                    ? (t.lanes = 8)
                    : (t.lanes = 1073741824),
                  null)
                : ((l = a.children),
                  (e = a.fallback),
                  s
                    ? ((a = t.mode),
                      (s = t.child),
                      (l = { mode: "hidden", children: l }),
                      0 === (1 & a) && null !== s
                        ? ((s.childLanes = 0), (s.pendingProps = l))
                        : (s = Nu(l, a, 0, null)),
                      (e = Ou(e, a, n, null)),
                      (s.return = t),
                      (e.return = t),
                      (s.sibling = e),
                      (t.child = s),
                      (t.child.memoizedState = Ns(n)),
                      (t.memoizedState = Os),
                      e)
                    : zs(t, l))
            );
          if (null !== (o = e.memoizedState) && null !== (r = o.dehydrated))
            return (function (e, t, n, r, a, o, s) {
              if (n)
                return 256 & t.flags
                  ? ((t.flags &= -257), Bs(e, t, s, (r = fs(Error(i(422))))))
                  : null !== t.memoizedState
                  ? ((t.child = e.child), (t.flags |= 128), null)
                  : ((o = r.fallback),
                    (a = t.mode),
                    (r = Nu(
                      { mode: "visible", children: r.children },
                      a,
                      0,
                      null
                    )),
                    ((o = Ou(o, a, s, null)).flags |= 2),
                    (r.return = t),
                    (o.return = t),
                    (r.sibling = o),
                    (t.child = r),
                    0 !== (1 & t.mode) && $i(t, e.child, null, s),
                    (t.child.memoizedState = Ns(s)),
                    (t.memoizedState = Os),
                    o);
              if (0 === (1 & t.mode)) return Bs(e, t, s, null);
              if ("$!" === a.data) {
                if ((r = a.nextSibling && a.nextSibling.dataset))
                  var l = r.dgst;
                return (
                  (r = l), Bs(e, t, s, (r = fs((o = Error(i(419))), r, void 0)))
                );
              }
              if (((l = 0 !== (s & e.childLanes)), bs || l)) {
                if (null !== (r = Rl)) {
                  switch (s & -s) {
                    case 4:
                      a = 2;
                      break;
                    case 16:
                      a = 8;
                      break;
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                      a = 32;
                      break;
                    case 536870912:
                      a = 268435456;
                      break;
                    default:
                      a = 0;
                  }
                  0 !== (a = 0 !== (a & (r.suspendedLanes | s)) ? 0 : a) &&
                    a !== o.retryLane &&
                    ((o.retryLane = a), ki(e, a), ru(r, e, a, -1));
                }
                return mu(), Bs(e, t, s, (r = fs(Error(i(421)))));
              }
              return "$?" === a.data
                ? ((t.flags |= 128),
                  (t.child = e.child),
                  (t = Cu.bind(null, e)),
                  (a._reactRetry = t),
                  null)
                : ((e = o.treeContext),
                  (ri = ua(a.nextSibling)),
                  (ni = t),
                  (ai = !0),
                  (ii = null),
                  null !== e &&
                    ((qa[Ya++] = $a),
                    (qa[Ya++] = Za),
                    (qa[Ya++] = Ka),
                    ($a = e.id),
                    (Za = e.overflow),
                    (Ka = t)),
                  (t = zs(t, r.children)),
                  (t.flags |= 4096),
                  t);
            })(e, t, l, a, r, o, n);
          if (s) {
            (s = a.fallback), (l = t.mode), (r = (o = e.child).sibling);
            var u = { mode: "hidden", children: a.children };
            return (
              0 === (1 & l) && t.child !== o
                ? (((a = t.child).childLanes = 0),
                  (a.pendingProps = u),
                  (t.deletions = null))
                : ((a = Du(o, u)).subtreeFlags = 14680064 & o.subtreeFlags),
              null !== r
                ? (s = Du(r, s))
                : ((s = Ou(s, l, n, null)).flags |= 2),
              (s.return = t),
              (a.return = t),
              (a.sibling = s),
              (t.child = a),
              (a = s),
              (s = t.child),
              (l =
                null === (l = e.child.memoizedState)
                  ? Ns(n)
                  : {
                      baseLanes: l.baseLanes | n,
                      cachePool: null,
                      transitions: l.transitions,
                    }),
              (s.memoizedState = l),
              (s.childLanes = e.childLanes & ~n),
              (t.memoizedState = Os),
              a
            );
          }
          return (
            (e = (s = e.child).sibling),
            (a = Du(s, { mode: "visible", children: a.children })),
            0 === (1 & t.mode) && (a.lanes = n),
            (a.return = t),
            (a.sibling = null),
            null !== e &&
              (null === (n = t.deletions)
                ? ((t.deletions = [e]), (t.flags |= 16))
                : n.push(e)),
            (t.child = a),
            (t.memoizedState = null),
            a
          );
        }
        function zs(e, t) {
          return (
            ((t = Nu(
              { mode: "visible", children: t },
              e.mode,
              0,
              null
            )).return = e),
            (e.child = t)
          );
        }
        function Bs(e, t, n, r) {
          return (
            null !== r && pi(r),
            $i(t, e.child, null, n),
            ((e = zs(t, t.pendingProps.children)).flags |= 2),
            (t.memoizedState = null),
            e
          );
        }
        function Hs(e, t, n) {
          e.lanes |= t;
          var r = e.alternate;
          null !== r && (r.lanes |= t), Ei(e.return, t, n);
        }
        function Gs(e, t, n, r, a) {
          var i = e.memoizedState;
          null === i
            ? (e.memoizedState = {
                isBackwards: t,
                rendering: null,
                renderingStartTime: 0,
                last: r,
                tail: n,
                tailMode: a,
              })
            : ((i.isBackwards = t),
              (i.rendering = null),
              (i.renderingStartTime = 0),
              (i.last = r),
              (i.tail = n),
              (i.tailMode = a));
        }
        function Vs(e, t, n) {
          var r = t.pendingProps,
            a = r.revealOrder,
            i = r.tail;
          if ((xs(e, t, r.children, n), 0 !== (2 & (r = so.current))))
            (r = (1 & r) | 2), (t.flags |= 128);
          else {
            if (null !== e && 0 !== (128 & e.flags))
              e: for (e = t.child; null !== e; ) {
                if (13 === e.tag) null !== e.memoizedState && Hs(e, n, t);
                else if (19 === e.tag) Hs(e, n, t);
                else if (null !== e.child) {
                  (e.child.return = e), (e = e.child);
                  continue;
                }
                if (e === t) break e;
                for (; null === e.sibling; ) {
                  if (null === e.return || e.return === t) break e;
                  e = e.return;
                }
                (e.sibling.return = e.return), (e = e.sibling);
              }
            r &= 1;
          }
          if ((Ma(so, r), 0 === (1 & t.mode))) t.memoizedState = null;
          else
            switch (a) {
              case "forwards":
                for (n = t.child, a = null; null !== n; )
                  null !== (e = n.alternate) && null === lo(e) && (a = n),
                    (n = n.sibling);
                null === (n = a)
                  ? ((a = t.child), (t.child = null))
                  : ((a = n.sibling), (n.sibling = null)),
                  Gs(t, !1, a, n, i);
                break;
              case "backwards":
                for (n = null, a = t.child, t.child = null; null !== a; ) {
                  if (null !== (e = a.alternate) && null === lo(e)) {
                    t.child = a;
                    break;
                  }
                  (e = a.sibling), (a.sibling = n), (n = a), (a = e);
                }
                Gs(t, !0, n, null, i);
                break;
              case "together":
                Gs(t, !1, null, null, void 0);
                break;
              default:
                t.memoizedState = null;
            }
          return t.child;
        }
        function Ws(e, t) {
          0 === (1 & t.mode) &&
            null !== e &&
            ((e.alternate = null), (t.alternate = null), (t.flags |= 2));
        }
        function js(e, t, n) {
          if (
            (null !== e && (t.dependencies = e.dependencies),
            (Nl |= t.lanes),
            0 === (n & t.childLanes))
          )
            return null;
          if (null !== e && t.child !== e.child) throw Error(i(153));
          if (null !== t.child) {
            for (
              n = Du((e = t.child), e.pendingProps), t.child = n, n.return = t;
              null !== e.sibling;

            )
              (e = e.sibling),
                ((n = n.sibling = Du(e, e.pendingProps)).return = t);
            n.sibling = null;
          }
          return t.child;
        }
        function Xs(e, t) {
          if (!ai)
            switch (e.tailMode) {
              case "hidden":
                t = e.tail;
                for (var n = null; null !== t; )
                  null !== t.alternate && (n = t), (t = t.sibling);
                null === n ? (e.tail = null) : (n.sibling = null);
                break;
              case "collapsed":
                n = e.tail;
                for (var r = null; null !== n; )
                  null !== n.alternate && (r = n), (n = n.sibling);
                null === r
                  ? t || null === e.tail
                    ? (e.tail = null)
                    : (e.tail.sibling = null)
                  : (r.sibling = null);
            }
        }
        function qs(e) {
          var t = null !== e.alternate && e.alternate.child === e.child,
            n = 0,
            r = 0;
          if (t)
            for (var a = e.child; null !== a; )
              (n |= a.lanes | a.childLanes),
                (r |= 14680064 & a.subtreeFlags),
                (r |= 14680064 & a.flags),
                (a.return = e),
                (a = a.sibling);
          else
            for (a = e.child; null !== a; )
              (n |= a.lanes | a.childLanes),
                (r |= a.subtreeFlags),
                (r |= a.flags),
                (a.return = e),
                (a = a.sibling);
          return (e.subtreeFlags |= r), (e.childLanes = n), t;
        }
        function Ys(e, t, n) {
          var r = t.pendingProps;
          switch ((ti(t), t.tag)) {
            case 2:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
              return qs(t), null;
            case 1:
            case 17:
              return Ua(t.type) && La(), qs(t), null;
            case 3:
              return (
                (r = t.stateNode),
                ao(),
                Ta(ka),
                Ta(Ca),
                co(),
                r.pendingContext &&
                  ((r.context = r.pendingContext), (r.pendingContext = null)),
                (null !== e && null !== e.child) ||
                  (fi(t)
                    ? (t.flags |= 4)
                    : null === e ||
                      (e.memoizedState.isDehydrated && 0 === (256 & t.flags)) ||
                      ((t.flags |= 1024),
                      null !== ii && (su(ii), (ii = null)))),
                Ls(e, t),
                qs(t),
                null
              );
            case 5:
              oo(t);
              var a = no(to.current);
              if (((n = t.type), null !== e && null != t.stateNode))
                Ds(e, t, n, r, a),
                  e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
              else {
                if (!r) {
                  if (null === t.stateNode) throw Error(i(166));
                  return qs(t), null;
                }
                if (((e = no(Qi.current)), fi(t))) {
                  (r = t.stateNode), (n = t.type);
                  var o = t.memoizedProps;
                  switch (
                    ((r[da] = t), (r[ha] = o), (e = 0 !== (1 & t.mode)), n)
                  ) {
                    case "dialog":
                      zr("cancel", r), zr("close", r);
                      break;
                    case "iframe":
                    case "object":
                    case "embed":
                      zr("load", r);
                      break;
                    case "video":
                    case "audio":
                      for (a = 0; a < Ir.length; a++) zr(Ir[a], r);
                      break;
                    case "source":
                      zr("error", r);
                      break;
                    case "img":
                    case "image":
                    case "link":
                      zr("error", r), zr("load", r);
                      break;
                    case "details":
                      zr("toggle", r);
                      break;
                    case "input":
                      $(r, o), zr("invalid", r);
                      break;
                    case "select":
                      (r._wrapperState = { wasMultiple: !!o.multiple }),
                        zr("invalid", r);
                      break;
                    case "textarea":
                      ae(r, o), zr("invalid", r);
                  }
                  for (var l in (ye(n, o), (a = null), o))
                    if (o.hasOwnProperty(l)) {
                      var u = o[l];
                      "children" === l
                        ? "string" === typeof u
                          ? r.textContent !== u &&
                            (!0 !== o.suppressHydrationWarning &&
                              Jr(r.textContent, u, e),
                            (a = ["children", u]))
                          : "number" === typeof u &&
                            r.textContent !== "" + u &&
                            (!0 !== o.suppressHydrationWarning &&
                              Jr(r.textContent, u, e),
                            (a = ["children", "" + u]))
                        : s.hasOwnProperty(l) &&
                          null != u &&
                          "onScroll" === l &&
                          zr("scroll", r);
                    }
                  switch (n) {
                    case "input":
                      X(r), Q(r, o, !0);
                      break;
                    case "textarea":
                      X(r), oe(r);
                      break;
                    case "select":
                    case "option":
                      break;
                    default:
                      "function" === typeof o.onClick && (r.onclick = Qr);
                  }
                  (r = a), (t.updateQueue = r), null !== r && (t.flags |= 4);
                } else {
                  (l = 9 === a.nodeType ? a : a.ownerDocument),
                    "http://www.w3.org/1999/xhtml" === e && (e = se(n)),
                    "http://www.w3.org/1999/xhtml" === e
                      ? "script" === n
                        ? (((e = l.createElement("div")).innerHTML =
                            "<script></script>"),
                          (e = e.removeChild(e.firstChild)))
                        : "string" === typeof r.is
                        ? (e = l.createElement(n, { is: r.is }))
                        : ((e = l.createElement(n)),
                          "select" === n &&
                            ((l = e),
                            r.multiple
                              ? (l.multiple = !0)
                              : r.size && (l.size = r.size)))
                      : (e = l.createElementNS(e, n)),
                    (e[da] = t),
                    (e[ha] = r),
                    Us(e, t, !1, !1),
                    (t.stateNode = e);
                  e: {
                    switch (((l = _e(n, r)), n)) {
                      case "dialog":
                        zr("cancel", e), zr("close", e), (a = r);
                        break;
                      case "iframe":
                      case "object":
                      case "embed":
                        zr("load", e), (a = r);
                        break;
                      case "video":
                      case "audio":
                        for (a = 0; a < Ir.length; a++) zr(Ir[a], e);
                        a = r;
                        break;
                      case "source":
                        zr("error", e), (a = r);
                        break;
                      case "img":
                      case "image":
                      case "link":
                        zr("error", e), zr("load", e), (a = r);
                        break;
                      case "details":
                        zr("toggle", e), (a = r);
                        break;
                      case "input":
                        $(e, r), (a = K(e, r)), zr("invalid", e);
                        break;
                      case "option":
                      default:
                        a = r;
                        break;
                      case "select":
                        (e._wrapperState = { wasMultiple: !!r.multiple }),
                          (a = N({}, r, { value: void 0 })),
                          zr("invalid", e);
                        break;
                      case "textarea":
                        ae(e, r), (a = re(e, r)), zr("invalid", e);
                    }
                    for (o in (ye(n, a), (u = a)))
                      if (u.hasOwnProperty(o)) {
                        var c = u[o];
                        "style" === o
                          ? me(e, c)
                          : "dangerouslySetInnerHTML" === o
                          ? null != (c = c ? c.__html : void 0) && fe(e, c)
                          : "children" === o
                          ? "string" === typeof c
                            ? ("textarea" !== n || "" !== c) && de(e, c)
                            : "number" === typeof c && de(e, "" + c)
                          : "suppressContentEditableWarning" !== o &&
                            "suppressHydrationWarning" !== o &&
                            "autoFocus" !== o &&
                            (s.hasOwnProperty(o)
                              ? null != c && "onScroll" === o && zr("scroll", e)
                              : null != c && _(e, o, c, l));
                      }
                    switch (n) {
                      case "input":
                        X(e), Q(e, r, !1);
                        break;
                      case "textarea":
                        X(e), oe(e);
                        break;
                      case "option":
                        null != r.value &&
                          e.setAttribute("value", "" + W(r.value));
                        break;
                      case "select":
                        (e.multiple = !!r.multiple),
                          null != (o = r.value)
                            ? ne(e, !!r.multiple, o, !1)
                            : null != r.defaultValue &&
                              ne(e, !!r.multiple, r.defaultValue, !0);
                        break;
                      default:
                        "function" === typeof a.onClick && (e.onclick = Qr);
                    }
                    switch (n) {
                      case "button":
                      case "input":
                      case "select":
                      case "textarea":
                        r = !!r.autoFocus;
                        break e;
                      case "img":
                        r = !0;
                        break e;
                      default:
                        r = !1;
                    }
                  }
                  r && (t.flags |= 4);
                }
                null !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
              }
              return qs(t), null;
            case 6:
              if (e && null != t.stateNode) Is(e, t, e.memoizedProps, r);
              else {
                if ("string" !== typeof r && null === t.stateNode)
                  throw Error(i(166));
                if (((n = no(to.current)), no(Qi.current), fi(t))) {
                  if (
                    ((r = t.stateNode),
                    (n = t.memoizedProps),
                    (r[da] = t),
                    (o = r.nodeValue !== n) && null !== (e = ni))
                  )
                    switch (e.tag) {
                      case 3:
                        Jr(r.nodeValue, n, 0 !== (1 & e.mode));
                        break;
                      case 5:
                        !0 !== e.memoizedProps.suppressHydrationWarning &&
                          Jr(r.nodeValue, n, 0 !== (1 & e.mode));
                    }
                  o && (t.flags |= 4);
                } else
                  ((r = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(
                    r
                  ))[da] = t),
                    (t.stateNode = r);
              }
              return qs(t), null;
            case 13:
              if (
                (Ta(so),
                (r = t.memoizedState),
                null === e ||
                  (null !== e.memoizedState &&
                    null !== e.memoizedState.dehydrated))
              ) {
                if (
                  ai &&
                  null !== ri &&
                  0 !== (1 & t.mode) &&
                  0 === (128 & t.flags)
                )
                  di(), hi(), (t.flags |= 98560), (o = !1);
                else if (((o = fi(t)), null !== r && null !== r.dehydrated)) {
                  if (null === e) {
                    if (!o) throw Error(i(318));
                    if (
                      !(o =
                        null !== (o = t.memoizedState) ? o.dehydrated : null)
                    )
                      throw Error(i(317));
                    o[da] = t;
                  } else
                    hi(),
                      0 === (128 & t.flags) && (t.memoizedState = null),
                      (t.flags |= 4);
                  qs(t), (o = !1);
                } else null !== ii && (su(ii), (ii = null)), (o = !0);
                if (!o) return 65536 & t.flags ? t : null;
              }
              return 0 !== (128 & t.flags)
                ? ((t.lanes = n), t)
                : ((r = null !== r) !==
                    (null !== e && null !== e.memoizedState) &&
                    r &&
                    ((t.child.flags |= 8192),
                    0 !== (1 & t.mode) &&
                      (null === e || 0 !== (1 & so.current)
                        ? 0 === Il && (Il = 3)
                        : mu())),
                  null !== t.updateQueue && (t.flags |= 4),
                  qs(t),
                  null);
            case 4:
              return (
                ao(),
                Ls(e, t),
                null === e && Gr(t.stateNode.containerInfo),
                qs(t),
                null
              );
            case 10:
              return Si(t.type._context), qs(t), null;
            case 19:
              if ((Ta(so), null === (o = t.memoizedState))) return qs(t), null;
              if (((r = 0 !== (128 & t.flags)), null === (l = o.rendering)))
                if (r) Xs(o, !1);
                else {
                  if (0 !== Il || (null !== e && 0 !== (128 & e.flags)))
                    for (e = t.child; null !== e; ) {
                      if (null !== (l = lo(e))) {
                        for (
                          t.flags |= 128,
                            Xs(o, !1),
                            null !== (r = l.updateQueue) &&
                              ((t.updateQueue = r), (t.flags |= 4)),
                            t.subtreeFlags = 0,
                            r = n,
                            n = t.child;
                          null !== n;

                        )
                          (e = r),
                            ((o = n).flags &= 14680066),
                            null === (l = o.alternate)
                              ? ((o.childLanes = 0),
                                (o.lanes = e),
                                (o.child = null),
                                (o.subtreeFlags = 0),
                                (o.memoizedProps = null),
                                (o.memoizedState = null),
                                (o.updateQueue = null),
                                (o.dependencies = null),
                                (o.stateNode = null))
                              : ((o.childLanes = l.childLanes),
                                (o.lanes = l.lanes),
                                (o.child = l.child),
                                (o.subtreeFlags = 0),
                                (o.deletions = null),
                                (o.memoizedProps = l.memoizedProps),
                                (o.memoizedState = l.memoizedState),
                                (o.updateQueue = l.updateQueue),
                                (o.type = l.type),
                                (e = l.dependencies),
                                (o.dependencies =
                                  null === e
                                    ? null
                                    : {
                                        lanes: e.lanes,
                                        firstContext: e.firstContext,
                                      })),
                            (n = n.sibling);
                        return Ma(so, (1 & so.current) | 2), t.child;
                      }
                      e = e.sibling;
                    }
                  null !== o.tail &&
                    Ze() > Vl &&
                    ((t.flags |= 128),
                    (r = !0),
                    Xs(o, !1),
                    (t.lanes = 4194304));
                }
              else {
                if (!r)
                  if (null !== (e = lo(l))) {
                    if (
                      ((t.flags |= 128),
                      (r = !0),
                      null !== (n = e.updateQueue) &&
                        ((t.updateQueue = n), (t.flags |= 4)),
                      Xs(o, !0),
                      null === o.tail &&
                        "hidden" === o.tailMode &&
                        !l.alternate &&
                        !ai)
                    )
                      return qs(t), null;
                  } else
                    2 * Ze() - o.renderingStartTime > Vl &&
                      1073741824 !== n &&
                      ((t.flags |= 128),
                      (r = !0),
                      Xs(o, !1),
                      (t.lanes = 4194304));
                o.isBackwards
                  ? ((l.sibling = t.child), (t.child = l))
                  : (null !== (n = o.last) ? (n.sibling = l) : (t.child = l),
                    (o.last = l));
              }
              return null !== o.tail
                ? ((t = o.tail),
                  (o.rendering = t),
                  (o.tail = t.sibling),
                  (o.renderingStartTime = Ze()),
                  (t.sibling = null),
                  (n = so.current),
                  Ma(so, r ? (1 & n) | 2 : 1 & n),
                  t)
                : (qs(t), null);
            case 22:
            case 23:
              return (
                du(),
                (r = null !== t.memoizedState),
                null !== e &&
                  (null !== e.memoizedState) !== r &&
                  (t.flags |= 8192),
                r && 0 !== (1 & t.mode)
                  ? 0 !== (1073741824 & Ll) &&
                    (qs(t), 6 & t.subtreeFlags && (t.flags |= 8192))
                  : qs(t),
                null
              );
            case 24:
            case 25:
              return null;
          }
          throw Error(i(156, t.tag));
        }
        function Ks(e, t) {
          switch ((ti(t), t.tag)) {
            case 1:
              return (
                Ua(t.type) && La(),
                65536 & (e = t.flags)
                  ? ((t.flags = (-65537 & e) | 128), t)
                  : null
              );
            case 3:
              return (
                ao(),
                Ta(ka),
                Ta(Ca),
                co(),
                0 !== (65536 & (e = t.flags)) && 0 === (128 & e)
                  ? ((t.flags = (-65537 & e) | 128), t)
                  : null
              );
            case 5:
              return oo(t), null;
            case 13:
              if (
                (Ta(so),
                null !== (e = t.memoizedState) && null !== e.dehydrated)
              ) {
                if (null === t.alternate) throw Error(i(340));
                hi();
              }
              return 65536 & (e = t.flags)
                ? ((t.flags = (-65537 & e) | 128), t)
                : null;
            case 19:
              return Ta(so), null;
            case 4:
              return ao(), null;
            case 10:
              return Si(t.type._context), null;
            case 22:
            case 23:
              return du(), null;
            default:
              return null;
          }
        }
        (Us = function (e, t) {
          for (var n = t.child; null !== n; ) {
            if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
            else if (4 !== n.tag && null !== n.child) {
              (n.child.return = n), (n = n.child);
              continue;
            }
            if (n === t) break;
            for (; null === n.sibling; ) {
              if (null === n.return || n.return === t) return;
              n = n.return;
            }
            (n.sibling.return = n.return), (n = n.sibling);
          }
        }),
          (Ls = function () {}),
          (Ds = function (e, t, n, r) {
            var a = e.memoizedProps;
            if (a !== r) {
              (e = t.stateNode), no(Qi.current);
              var i,
                o = null;
              switch (n) {
                case "input":
                  (a = K(e, a)), (r = K(e, r)), (o = []);
                  break;
                case "select":
                  (a = N({}, a, { value: void 0 })),
                    (r = N({}, r, { value: void 0 })),
                    (o = []);
                  break;
                case "textarea":
                  (a = re(e, a)), (r = re(e, r)), (o = []);
                  break;
                default:
                  "function" !== typeof a.onClick &&
                    "function" === typeof r.onClick &&
                    (e.onclick = Qr);
              }
              for (c in (ye(n, r), (n = null), a))
                if (!r.hasOwnProperty(c) && a.hasOwnProperty(c) && null != a[c])
                  if ("style" === c) {
                    var l = a[c];
                    for (i in l)
                      l.hasOwnProperty(i) && (n || (n = {}), (n[i] = ""));
                  } else
                    "dangerouslySetInnerHTML" !== c &&
                      "children" !== c &&
                      "suppressContentEditableWarning" !== c &&
                      "suppressHydrationWarning" !== c &&
                      "autoFocus" !== c &&
                      (s.hasOwnProperty(c)
                        ? o || (o = [])
                        : (o = o || []).push(c, null));
              for (c in r) {
                var u = r[c];
                if (
                  ((l = null != a ? a[c] : void 0),
                  r.hasOwnProperty(c) && u !== l && (null != u || null != l))
                )
                  if ("style" === c)
                    if (l) {
                      for (i in l)
                        !l.hasOwnProperty(i) ||
                          (u && u.hasOwnProperty(i)) ||
                          (n || (n = {}), (n[i] = ""));
                      for (i in u)
                        u.hasOwnProperty(i) &&
                          l[i] !== u[i] &&
                          (n || (n = {}), (n[i] = u[i]));
                    } else n || (o || (o = []), o.push(c, n)), (n = u);
                  else
                    "dangerouslySetInnerHTML" === c
                      ? ((u = u ? u.__html : void 0),
                        (l = l ? l.__html : void 0),
                        null != u && l !== u && (o = o || []).push(c, u))
                      : "children" === c
                      ? ("string" !== typeof u && "number" !== typeof u) ||
                        (o = o || []).push(c, "" + u)
                      : "suppressContentEditableWarning" !== c &&
                        "suppressHydrationWarning" !== c &&
                        (s.hasOwnProperty(c)
                          ? (null != u && "onScroll" === c && zr("scroll", e),
                            o || l === u || (o = []))
                          : (o = o || []).push(c, u));
              }
              n && (o = o || []).push("style", n);
              var c = o;
              (t.updateQueue = c) && (t.flags |= 4);
            }
          }),
          (Is = function (e, t, n, r) {
            n !== r && (t.flags |= 4);
          });
        var $s = !1,
          Zs = !1,
          Js = "function" === typeof WeakSet ? WeakSet : Set,
          Qs = null;
        function el(e, t) {
          var n = e.ref;
          if (null !== n)
            if ("function" === typeof n)
              try {
                n(null);
              } catch (r) {
                Tu(e, t, r);
              }
            else n.current = null;
        }
        function tl(e, t, n) {
          try {
            n();
          } catch (r) {
            Tu(e, t, r);
          }
        }
        var nl = !1;
        function rl(e, t, n) {
          var r = t.updateQueue;
          if (null !== (r = null !== r ? r.lastEffect : null)) {
            var a = (r = r.next);
            do {
              if ((a.tag & e) === e) {
                var i = a.destroy;
                (a.destroy = void 0), void 0 !== i && tl(t, n, i);
              }
              a = a.next;
            } while (a !== r);
          }
        }
        function al(e, t) {
          if (
            null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)
          ) {
            var n = (t = t.next);
            do {
              if ((n.tag & e) === e) {
                var r = n.create;
                n.destroy = r();
              }
              n = n.next;
            } while (n !== t);
          }
        }
        function il(e) {
          var t = e.ref;
          if (null !== t) {
            var n = e.stateNode;
            e.tag, (e = n), "function" === typeof t ? t(e) : (t.current = e);
          }
        }
        function ol(e) {
          var t = e.alternate;
          null !== t && ((e.alternate = null), ol(t)),
            (e.child = null),
            (e.deletions = null),
            (e.sibling = null),
            5 === e.tag &&
              null !== (t = e.stateNode) &&
              (delete t[da],
              delete t[ha],
              delete t[va],
              delete t[ma],
              delete t[ga]),
            (e.stateNode = null),
            (e.return = null),
            (e.dependencies = null),
            (e.memoizedProps = null),
            (e.memoizedState = null),
            (e.pendingProps = null),
            (e.stateNode = null),
            (e.updateQueue = null);
        }
        function sl(e) {
          return 5 === e.tag || 3 === e.tag || 4 === e.tag;
        }
        function ll(e) {
          e: for (;;) {
            for (; null === e.sibling; ) {
              if (null === e.return || sl(e.return)) return null;
              e = e.return;
            }
            for (
              e.sibling.return = e.return, e = e.sibling;
              5 !== e.tag && 6 !== e.tag && 18 !== e.tag;

            ) {
              if (2 & e.flags) continue e;
              if (null === e.child || 4 === e.tag) continue e;
              (e.child.return = e), (e = e.child);
            }
            if (!(2 & e.flags)) return e.stateNode;
          }
        }
        function ul(e, t, n) {
          var r = e.tag;
          if (5 === r || 6 === r)
            (e = e.stateNode),
              t
                ? 8 === n.nodeType
                  ? n.parentNode.insertBefore(e, t)
                  : n.insertBefore(e, t)
                : (8 === n.nodeType
                    ? (t = n.parentNode).insertBefore(e, n)
                    : (t = n).appendChild(e),
                  (null !== (n = n._reactRootContainer) && void 0 !== n) ||
                    null !== t.onclick ||
                    (t.onclick = Qr));
          else if (4 !== r && null !== (e = e.child))
            for (ul(e, t, n), e = e.sibling; null !== e; )
              ul(e, t, n), (e = e.sibling);
        }
        function cl(e, t, n) {
          var r = e.tag;
          if (5 === r || 6 === r)
            (e = e.stateNode), t ? n.insertBefore(e, t) : n.appendChild(e);
          else if (4 !== r && null !== (e = e.child))
            for (cl(e, t, n), e = e.sibling; null !== e; )
              cl(e, t, n), (e = e.sibling);
        }
        var fl = null,
          dl = !1;
        function hl(e, t, n) {
          for (n = n.child; null !== n; ) pl(e, t, n), (n = n.sibling);
        }
        function pl(e, t, n) {
          if (it && "function" === typeof it.onCommitFiberUnmount)
            try {
              it.onCommitFiberUnmount(at, n);
            } catch (s) {}
          switch (n.tag) {
            case 5:
              Zs || el(n, t);
            case 6:
              var r = fl,
                a = dl;
              (fl = null),
                hl(e, t, n),
                (dl = a),
                null !== (fl = r) &&
                  (dl
                    ? ((e = fl),
                      (n = n.stateNode),
                      8 === e.nodeType
                        ? e.parentNode.removeChild(n)
                        : e.removeChild(n))
                    : fl.removeChild(n.stateNode));
              break;
            case 18:
              null !== fl &&
                (dl
                  ? ((e = fl),
                    (n = n.stateNode),
                    8 === e.nodeType
                      ? la(e.parentNode, n)
                      : 1 === e.nodeType && la(e, n),
                    Gt(e))
                  : la(fl, n.stateNode));
              break;
            case 4:
              (r = fl),
                (a = dl),
                (fl = n.stateNode.containerInfo),
                (dl = !0),
                hl(e, t, n),
                (fl = r),
                (dl = a);
              break;
            case 0:
            case 11:
            case 14:
            case 15:
              if (
                !Zs &&
                null !== (r = n.updateQueue) &&
                null !== (r = r.lastEffect)
              ) {
                a = r = r.next;
                do {
                  var i = a,
                    o = i.destroy;
                  (i = i.tag),
                    void 0 !== o &&
                      (0 !== (2 & i) || 0 !== (4 & i)) &&
                      tl(n, t, o),
                    (a = a.next);
                } while (a !== r);
              }
              hl(e, t, n);
              break;
            case 1:
              if (
                !Zs &&
                (el(n, t),
                "function" === typeof (r = n.stateNode).componentWillUnmount)
              )
                try {
                  (r.props = n.memoizedProps),
                    (r.state = n.memoizedState),
                    r.componentWillUnmount();
                } catch (s) {
                  Tu(n, t, s);
                }
              hl(e, t, n);
              break;
            case 21:
              hl(e, t, n);
              break;
            case 22:
              1 & n.mode
                ? ((Zs = (r = Zs) || null !== n.memoizedState),
                  hl(e, t, n),
                  (Zs = r))
                : hl(e, t, n);
              break;
            default:
              hl(e, t, n);
          }
        }
        function vl(e) {
          var t = e.updateQueue;
          if (null !== t) {
            e.updateQueue = null;
            var n = e.stateNode;
            null === n && (n = e.stateNode = new Js()),
              t.forEach(function (t) {
                var r = ku.bind(null, e, t);
                n.has(t) || (n.add(t), t.then(r, r));
              });
          }
        }
        function ml(e, t) {
          var n = t.deletions;
          if (null !== n)
            for (var r = 0; r < n.length; r++) {
              var a = n[r];
              try {
                var o = e,
                  s = t,
                  l = s;
                e: for (; null !== l; ) {
                  switch (l.tag) {
                    case 5:
                      (fl = l.stateNode), (dl = !1);
                      break e;
                    case 3:
                    case 4:
                      (fl = l.stateNode.containerInfo), (dl = !0);
                      break e;
                  }
                  l = l.return;
                }
                if (null === fl) throw Error(i(160));
                pl(o, s, a), (fl = null), (dl = !1);
                var u = a.alternate;
                null !== u && (u.return = null), (a.return = null);
              } catch (c) {
                Tu(a, t, c);
              }
            }
          if (12854 & t.subtreeFlags)
            for (t = t.child; null !== t; ) gl(t, e), (t = t.sibling);
        }
        function gl(e, t) {
          var n = e.alternate,
            r = e.flags;
          switch (e.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
              if ((ml(t, e), yl(e), 4 & r)) {
                try {
                  rl(3, e, e.return), al(3, e);
                } catch (m) {
                  Tu(e, e.return, m);
                }
                try {
                  rl(5, e, e.return);
                } catch (m) {
                  Tu(e, e.return, m);
                }
              }
              break;
            case 1:
              ml(t, e), yl(e), 512 & r && null !== n && el(n, n.return);
              break;
            case 5:
              if (
                (ml(t, e),
                yl(e),
                512 & r && null !== n && el(n, n.return),
                32 & e.flags)
              ) {
                var a = e.stateNode;
                try {
                  de(a, "");
                } catch (m) {
                  Tu(e, e.return, m);
                }
              }
              if (4 & r && null != (a = e.stateNode)) {
                var o = e.memoizedProps,
                  s = null !== n ? n.memoizedProps : o,
                  l = e.type,
                  u = e.updateQueue;
                if (((e.updateQueue = null), null !== u))
                  try {
                    "input" === l &&
                      "radio" === o.type &&
                      null != o.name &&
                      Z(a, o),
                      _e(l, s);
                    var c = _e(l, o);
                    for (s = 0; s < u.length; s += 2) {
                      var f = u[s],
                        d = u[s + 1];
                      "style" === f
                        ? me(a, d)
                        : "dangerouslySetInnerHTML" === f
                        ? fe(a, d)
                        : "children" === f
                        ? de(a, d)
                        : _(a, f, d, c);
                    }
                    switch (l) {
                      case "input":
                        J(a, o);
                        break;
                      case "textarea":
                        ie(a, o);
                        break;
                      case "select":
                        var h = a._wrapperState.wasMultiple;
                        a._wrapperState.wasMultiple = !!o.multiple;
                        var p = o.value;
                        null != p
                          ? ne(a, !!o.multiple, p, !1)
                          : h !== !!o.multiple &&
                            (null != o.defaultValue
                              ? ne(a, !!o.multiple, o.defaultValue, !0)
                              : ne(a, !!o.multiple, o.multiple ? [] : "", !1));
                    }
                    a[ha] = o;
                  } catch (m) {
                    Tu(e, e.return, m);
                  }
              }
              break;
            case 6:
              if ((ml(t, e), yl(e), 4 & r)) {
                if (null === e.stateNode) throw Error(i(162));
                (a = e.stateNode), (o = e.memoizedProps);
                try {
                  a.nodeValue = o;
                } catch (m) {
                  Tu(e, e.return, m);
                }
              }
              break;
            case 3:
              if (
                (ml(t, e),
                yl(e),
                4 & r && null !== n && n.memoizedState.isDehydrated)
              )
                try {
                  Gt(t.containerInfo);
                } catch (m) {
                  Tu(e, e.return, m);
                }
              break;
            case 4:
            default:
              ml(t, e), yl(e);
              break;
            case 13:
              ml(t, e),
                yl(e),
                8192 & (a = e.child).flags &&
                  ((o = null !== a.memoizedState),
                  (a.stateNode.isHidden = o),
                  !o ||
                    (null !== a.alternate &&
                      null !== a.alternate.memoizedState) ||
                    (Gl = Ze())),
                4 & r && vl(e);
              break;
            case 22:
              if (
                ((f = null !== n && null !== n.memoizedState),
                1 & e.mode
                  ? ((Zs = (c = Zs) || f), ml(t, e), (Zs = c))
                  : ml(t, e),
                yl(e),
                8192 & r)
              ) {
                if (
                  ((c = null !== e.memoizedState),
                  (e.stateNode.isHidden = c) && !f && 0 !== (1 & e.mode))
                )
                  for (Qs = e, f = e.child; null !== f; ) {
                    for (d = Qs = f; null !== Qs; ) {
                      switch (((p = (h = Qs).child), h.tag)) {
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                          rl(4, h, h.return);
                          break;
                        case 1:
                          el(h, h.return);
                          var v = h.stateNode;
                          if ("function" === typeof v.componentWillUnmount) {
                            (r = h), (n = h.return);
                            try {
                              (t = r),
                                (v.props = t.memoizedProps),
                                (v.state = t.memoizedState),
                                v.componentWillUnmount();
                            } catch (m) {
                              Tu(r, n, m);
                            }
                          }
                          break;
                        case 5:
                          el(h, h.return);
                          break;
                        case 22:
                          if (null !== h.memoizedState) {
                            Sl(d);
                            continue;
                          }
                      }
                      null !== p ? ((p.return = h), (Qs = p)) : Sl(d);
                    }
                    f = f.sibling;
                  }
                e: for (f = null, d = e; ; ) {
                  if (5 === d.tag) {
                    if (null === f) {
                      f = d;
                      try {
                        (a = d.stateNode),
                          c
                            ? "function" === typeof (o = a.style).setProperty
                              ? o.setProperty("display", "none", "important")
                              : (o.display = "none")
                            : ((l = d.stateNode),
                              (s =
                                void 0 !== (u = d.memoizedProps.style) &&
                                null !== u &&
                                u.hasOwnProperty("display")
                                  ? u.display
                                  : null),
                              (l.style.display = ve("display", s)));
                      } catch (m) {
                        Tu(e, e.return, m);
                      }
                    }
                  } else if (6 === d.tag) {
                    if (null === f)
                      try {
                        d.stateNode.nodeValue = c ? "" : d.memoizedProps;
                      } catch (m) {
                        Tu(e, e.return, m);
                      }
                  } else if (
                    ((22 !== d.tag && 23 !== d.tag) ||
                      null === d.memoizedState ||
                      d === e) &&
                    null !== d.child
                  ) {
                    (d.child.return = d), (d = d.child);
                    continue;
                  }
                  if (d === e) break e;
                  for (; null === d.sibling; ) {
                    if (null === d.return || d.return === e) break e;
                    f === d && (f = null), (d = d.return);
                  }
                  f === d && (f = null),
                    (d.sibling.return = d.return),
                    (d = d.sibling);
                }
              }
              break;
            case 19:
              ml(t, e), yl(e), 4 & r && vl(e);
            case 21:
          }
        }
        function yl(e) {
          var t = e.flags;
          if (2 & t) {
            try {
              e: {
                for (var n = e.return; null !== n; ) {
                  if (sl(n)) {
                    var r = n;
                    break e;
                  }
                  n = n.return;
                }
                throw Error(i(160));
              }
              switch (r.tag) {
                case 5:
                  var a = r.stateNode;
                  32 & r.flags && (de(a, ""), (r.flags &= -33)),
                    cl(e, ll(e), a);
                  break;
                case 3:
                case 4:
                  var o = r.stateNode.containerInfo;
                  ul(e, ll(e), o);
                  break;
                default:
                  throw Error(i(161));
              }
            } catch (s) {
              Tu(e, e.return, s);
            }
            e.flags &= -3;
          }
          4096 & t && (e.flags &= -4097);
        }
        function _l(e, t, n) {
          (Qs = e), bl(e, t, n);
        }
        function bl(e, t, n) {
          for (var r = 0 !== (1 & e.mode); null !== Qs; ) {
            var a = Qs,
              i = a.child;
            if (22 === a.tag && r) {
              var o = null !== a.memoizedState || $s;
              if (!o) {
                var s = a.alternate,
                  l = (null !== s && null !== s.memoizedState) || Zs;
                s = $s;
                var u = Zs;
                if ((($s = o), (Zs = l) && !u))
                  for (Qs = a; null !== Qs; )
                    (l = (o = Qs).child),
                      22 === o.tag && null !== o.memoizedState
                        ? El(a)
                        : null !== l
                        ? ((l.return = o), (Qs = l))
                        : El(a);
                for (; null !== i; ) (Qs = i), bl(i, t, n), (i = i.sibling);
                (Qs = a), ($s = s), (Zs = u);
              }
              xl(e);
            } else
              0 !== (8772 & a.subtreeFlags) && null !== i
                ? ((i.return = a), (Qs = i))
                : xl(e);
          }
        }
        function xl(e) {
          for (; null !== Qs; ) {
            var t = Qs;
            if (0 !== (8772 & t.flags)) {
              var n = t.alternate;
              try {
                if (0 !== (8772 & t.flags))
                  switch (t.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Zs || al(5, t);
                      break;
                    case 1:
                      var r = t.stateNode;
                      if (4 & t.flags && !Zs)
                        if (null === n) r.componentDidMount();
                        else {
                          var a =
                            t.elementType === t.type
                              ? n.memoizedProps
                              : mi(t.type, n.memoizedProps);
                          r.componentDidUpdate(
                            a,
                            n.memoizedState,
                            r.__reactInternalSnapshotBeforeUpdate
                          );
                        }
                      var o = t.updateQueue;
                      null !== o && Fi(t, o, r);
                      break;
                    case 3:
                      var s = t.updateQueue;
                      if (null !== s) {
                        if (((n = null), null !== t.child))
                          switch (t.child.tag) {
                            case 5:
                            case 1:
                              n = t.child.stateNode;
                          }
                        Fi(t, s, n);
                      }
                      break;
                    case 5:
                      var l = t.stateNode;
                      if (null === n && 4 & t.flags) {
                        n = l;
                        var u = t.memoizedProps;
                        switch (t.type) {
                          case "button":
                          case "input":
                          case "select":
                          case "textarea":
                            u.autoFocus && n.focus();
                            break;
                          case "img":
                            u.src && (n.src = u.src);
                        }
                      }
                      break;
                    case 6:
                    case 4:
                    case 12:
                    case 19:
                    case 17:
                    case 21:
                    case 22:
                    case 23:
                    case 25:
                      break;
                    case 13:
                      if (null === t.memoizedState) {
                        var c = t.alternate;
                        if (null !== c) {
                          var f = c.memoizedState;
                          if (null !== f) {
                            var d = f.dehydrated;
                            null !== d && Gt(d);
                          }
                        }
                      }
                      break;
                    default:
                      throw Error(i(163));
                  }
                Zs || (512 & t.flags && il(t));
              } catch (h) {
                Tu(t, t.return, h);
              }
            }
            if (t === e) {
              Qs = null;
              break;
            }
            if (null !== (n = t.sibling)) {
              (n.return = t.return), (Qs = n);
              break;
            }
            Qs = t.return;
          }
        }
        function Sl(e) {
          for (; null !== Qs; ) {
            var t = Qs;
            if (t === e) {
              Qs = null;
              break;
            }
            var n = t.sibling;
            if (null !== n) {
              (n.return = t.return), (Qs = n);
              break;
            }
            Qs = t.return;
          }
        }
        function El(e) {
          for (; null !== Qs; ) {
            var t = Qs;
            try {
              switch (t.tag) {
                case 0:
                case 11:
                case 15:
                  var n = t.return;
                  try {
                    al(4, t);
                  } catch (l) {
                    Tu(t, n, l);
                  }
                  break;
                case 1:
                  var r = t.stateNode;
                  if ("function" === typeof r.componentDidMount) {
                    var a = t.return;
                    try {
                      r.componentDidMount();
                    } catch (l) {
                      Tu(t, a, l);
                    }
                  }
                  var i = t.return;
                  try {
                    il(t);
                  } catch (l) {
                    Tu(t, i, l);
                  }
                  break;
                case 5:
                  var o = t.return;
                  try {
                    il(t);
                  } catch (l) {
                    Tu(t, o, l);
                  }
              }
            } catch (l) {
              Tu(t, t.return, l);
            }
            if (t === e) {
              Qs = null;
              break;
            }
            var s = t.sibling;
            if (null !== s) {
              (s.return = t.return), (Qs = s);
              break;
            }
            Qs = t.return;
          }
        }
        var wl,
          Tl = Math.ceil,
          Ml = b.ReactCurrentDispatcher,
          Al = b.ReactCurrentOwner,
          Cl = b.ReactCurrentBatchConfig,
          kl = 0,
          Rl = null,
          Pl = null,
          Ul = 0,
          Ll = 0,
          Dl = wa(0),
          Il = 0,
          Ol = null,
          Nl = 0,
          Fl = 0,
          zl = 0,
          Bl = null,
          Hl = null,
          Gl = 0,
          Vl = 1 / 0,
          Wl = null,
          jl = !1,
          Xl = null,
          ql = null,
          Yl = !1,
          Kl = null,
          $l = 0,
          Zl = 0,
          Jl = null,
          Ql = -1,
          eu = 0;
        function tu() {
          return 0 !== (6 & kl) ? Ze() : -1 !== Ql ? Ql : (Ql = Ze());
        }
        function nu(e) {
          return 0 === (1 & e.mode)
            ? 1
            : 0 !== (2 & kl) && 0 !== Ul
            ? Ul & -Ul
            : null !== vi.transition
            ? (0 === eu && (eu = vt()), eu)
            : 0 !== (e = _t)
            ? e
            : (e = void 0 === (e = window.event) ? 16 : $t(e.type));
        }
        function ru(e, t, n, r) {
          if (50 < Zl) throw ((Zl = 0), (Jl = null), Error(i(185)));
          gt(e, n, r),
            (0 !== (2 & kl) && e === Rl) ||
              (e === Rl && (0 === (2 & kl) && (Fl |= n), 4 === Il && lu(e, Ul)),
              au(e, r),
              1 === n &&
                0 === kl &&
                0 === (1 & t.mode) &&
                ((Vl = Ze() + 500), za && Ga()));
        }
        function au(e, t) {
          var n = e.callbackNode;
          !(function (e, t) {
            for (
              var n = e.suspendedLanes,
                r = e.pingedLanes,
                a = e.expirationTimes,
                i = e.pendingLanes;
              0 < i;

            ) {
              var o = 31 - ot(i),
                s = 1 << o,
                l = a[o];
              -1 === l
                ? (0 !== (s & n) && 0 === (s & r)) || (a[o] = ht(s, t))
                : l <= t && (e.expiredLanes |= s),
                (i &= ~s);
            }
          })(e, t);
          var r = dt(e, e === Rl ? Ul : 0);
          if (0 === r)
            null !== n && Ye(n),
              (e.callbackNode = null),
              (e.callbackPriority = 0);
          else if (((t = r & -r), e.callbackPriority !== t)) {
            if ((null != n && Ye(n), 1 === t))
              0 === e.tag
                ? (function (e) {
                    (za = !0), Ha(e);
                  })(uu.bind(null, e))
                : Ha(uu.bind(null, e)),
                oa(function () {
                  0 === (6 & kl) && Ga();
                }),
                (n = null);
            else {
              switch (bt(r)) {
                case 1:
                  n = Qe;
                  break;
                case 4:
                  n = et;
                  break;
                case 16:
                default:
                  n = tt;
                  break;
                case 536870912:
                  n = rt;
              }
              n = Ru(n, iu.bind(null, e));
            }
            (e.callbackPriority = t), (e.callbackNode = n);
          }
        }
        function iu(e, t) {
          if (((Ql = -1), (eu = 0), 0 !== (6 & kl))) throw Error(i(327));
          var n = e.callbackNode;
          if (Eu() && e.callbackNode !== n) return null;
          var r = dt(e, e === Rl ? Ul : 0);
          if (0 === r) return null;
          if (0 !== (30 & r) || 0 !== (r & e.expiredLanes) || t) t = gu(e, r);
          else {
            t = r;
            var a = kl;
            kl |= 2;
            var o = vu();
            for (
              (Rl === e && Ul === t) ||
              ((Wl = null), (Vl = Ze() + 500), hu(e, t));
              ;

            )
              try {
                _u();
                break;
              } catch (l) {
                pu(e, l);
              }
            xi(),
              (Ml.current = o),
              (kl = a),
              null !== Pl ? (t = 0) : ((Rl = null), (Ul = 0), (t = Il));
          }
          if (0 !== t) {
            if (
              (2 === t && 0 !== (a = pt(e)) && ((r = a), (t = ou(e, a))),
              1 === t)
            )
              throw ((n = Ol), hu(e, 0), lu(e, r), au(e, Ze()), n);
            if (6 === t) lu(e, r);
            else {
              if (
                ((a = e.current.alternate),
                0 === (30 & r) &&
                  !(function (e) {
                    for (var t = e; ; ) {
                      if (16384 & t.flags) {
                        var n = t.updateQueue;
                        if (null !== n && null !== (n = n.stores))
                          for (var r = 0; r < n.length; r++) {
                            var a = n[r],
                              i = a.getSnapshot;
                            a = a.value;
                            try {
                              if (!sr(i(), a)) return !1;
                            } catch (s) {
                              return !1;
                            }
                          }
                      }
                      if (((n = t.child), 16384 & t.subtreeFlags && null !== n))
                        (n.return = t), (t = n);
                      else {
                        if (t === e) break;
                        for (; null === t.sibling; ) {
                          if (null === t.return || t.return === e) return !0;
                          t = t.return;
                        }
                        (t.sibling.return = t.return), (t = t.sibling);
                      }
                    }
                    return !0;
                  })(a) &&
                  (2 === (t = gu(e, r)) &&
                    0 !== (o = pt(e)) &&
                    ((r = o), (t = ou(e, o))),
                  1 === t))
              )
                throw ((n = Ol), hu(e, 0), lu(e, r), au(e, Ze()), n);
              switch (((e.finishedWork = a), (e.finishedLanes = r), t)) {
                case 0:
                case 1:
                  throw Error(i(345));
                case 2:
                case 5:
                  Su(e, Hl, Wl);
                  break;
                case 3:
                  if (
                    (lu(e, r),
                    (130023424 & r) === r && 10 < (t = Gl + 500 - Ze()))
                  ) {
                    if (0 !== dt(e, 0)) break;
                    if (((a = e.suspendedLanes) & r) !== r) {
                      tu(), (e.pingedLanes |= e.suspendedLanes & a);
                      break;
                    }
                    e.timeoutHandle = ra(Su.bind(null, e, Hl, Wl), t);
                    break;
                  }
                  Su(e, Hl, Wl);
                  break;
                case 4:
                  if ((lu(e, r), (4194240 & r) === r)) break;
                  for (t = e.eventTimes, a = -1; 0 < r; ) {
                    var s = 31 - ot(r);
                    (o = 1 << s), (s = t[s]) > a && (a = s), (r &= ~o);
                  }
                  if (
                    ((r = a),
                    10 <
                      (r =
                        (120 > (r = Ze() - r)
                          ? 120
                          : 480 > r
                          ? 480
                          : 1080 > r
                          ? 1080
                          : 1920 > r
                          ? 1920
                          : 3e3 > r
                          ? 3e3
                          : 4320 > r
                          ? 4320
                          : 1960 * Tl(r / 1960)) - r))
                  ) {
                    e.timeoutHandle = ra(Su.bind(null, e, Hl, Wl), r);
                    break;
                  }
                  Su(e, Hl, Wl);
                  break;
                default:
                  throw Error(i(329));
              }
            }
          }
          return au(e, Ze()), e.callbackNode === n ? iu.bind(null, e) : null;
        }
        function ou(e, t) {
          var n = Bl;
          return (
            e.current.memoizedState.isDehydrated && (hu(e, t).flags |= 256),
            2 !== (e = gu(e, t)) && ((t = Hl), (Hl = n), null !== t && su(t)),
            e
          );
        }
        function su(e) {
          null === Hl ? (Hl = e) : Hl.push.apply(Hl, e);
        }
        function lu(e, t) {
          for (
            t &= ~zl,
              t &= ~Fl,
              e.suspendedLanes |= t,
              e.pingedLanes &= ~t,
              e = e.expirationTimes;
            0 < t;

          ) {
            var n = 31 - ot(t),
              r = 1 << n;
            (e[n] = -1), (t &= ~r);
          }
        }
        function uu(e) {
          if (0 !== (6 & kl)) throw Error(i(327));
          Eu();
          var t = dt(e, 0);
          if (0 === (1 & t)) return au(e, Ze()), null;
          var n = gu(e, t);
          if (0 !== e.tag && 2 === n) {
            var r = pt(e);
            0 !== r && ((t = r), (n = ou(e, r)));
          }
          if (1 === n) throw ((n = Ol), hu(e, 0), lu(e, t), au(e, Ze()), n);
          if (6 === n) throw Error(i(345));
          return (
            (e.finishedWork = e.current.alternate),
            (e.finishedLanes = t),
            Su(e, Hl, Wl),
            au(e, Ze()),
            null
          );
        }
        function cu(e, t) {
          var n = kl;
          kl |= 1;
          try {
            return e(t);
          } finally {
            0 === (kl = n) && ((Vl = Ze() + 500), za && Ga());
          }
        }
        function fu(e) {
          null !== Kl && 0 === Kl.tag && 0 === (6 & kl) && Eu();
          var t = kl;
          kl |= 1;
          var n = Cl.transition,
            r = _t;
          try {
            if (((Cl.transition = null), (_t = 1), e)) return e();
          } finally {
            (_t = r), (Cl.transition = n), 0 === (6 & (kl = t)) && Ga();
          }
        }
        function du() {
          (Ll = Dl.current), Ta(Dl);
        }
        function hu(e, t) {
          (e.finishedWork = null), (e.finishedLanes = 0);
          var n = e.timeoutHandle;
          if ((-1 !== n && ((e.timeoutHandle = -1), aa(n)), null !== Pl))
            for (n = Pl.return; null !== n; ) {
              var r = n;
              switch ((ti(r), r.tag)) {
                case 1:
                  null !== (r = r.type.childContextTypes) &&
                    void 0 !== r &&
                    La();
                  break;
                case 3:
                  ao(), Ta(ka), Ta(Ca), co();
                  break;
                case 5:
                  oo(r);
                  break;
                case 4:
                  ao();
                  break;
                case 13:
                case 19:
                  Ta(so);
                  break;
                case 10:
                  Si(r.type._context);
                  break;
                case 22:
                case 23:
                  du();
              }
              n = n.return;
            }
          if (
            ((Rl = e),
            (Pl = e = Du(e.current, null)),
            (Ul = Ll = t),
            (Il = 0),
            (Ol = null),
            (zl = Fl = Nl = 0),
            (Hl = Bl = null),
            null !== Mi)
          ) {
            for (t = 0; t < Mi.length; t++)
              if (null !== (r = (n = Mi[t]).interleaved)) {
                n.interleaved = null;
                var a = r.next,
                  i = n.pending;
                if (null !== i) {
                  var o = i.next;
                  (i.next = a), (r.next = o);
                }
                n.pending = r;
              }
            Mi = null;
          }
          return e;
        }
        function pu(e, t) {
          for (;;) {
            var n = Pl;
            try {
              if ((xi(), (fo.current = os), yo)) {
                for (var r = vo.memoizedState; null !== r; ) {
                  var a = r.queue;
                  null !== a && (a.pending = null), (r = r.next);
                }
                yo = !1;
              }
              if (
                ((po = 0),
                (go = mo = vo = null),
                (_o = !1),
                (bo = 0),
                (Al.current = null),
                null === n || null === n.return)
              ) {
                (Il = 1), (Ol = t), (Pl = null);
                break;
              }
              e: {
                var o = e,
                  s = n.return,
                  l = n,
                  u = t;
                if (
                  ((t = Ul),
                  (l.flags |= 32768),
                  null !== u &&
                    "object" === typeof u &&
                    "function" === typeof u.then)
                ) {
                  var c = u,
                    f = l,
                    d = f.tag;
                  if (0 === (1 & f.mode) && (0 === d || 11 === d || 15 === d)) {
                    var h = f.alternate;
                    h
                      ? ((f.updateQueue = h.updateQueue),
                        (f.memoizedState = h.memoizedState),
                        (f.lanes = h.lanes))
                      : ((f.updateQueue = null), (f.memoizedState = null));
                  }
                  var p = gs(s);
                  if (null !== p) {
                    (p.flags &= -257),
                      ys(p, s, l, 0, t),
                      1 & p.mode && ms(o, c, t),
                      (u = c);
                    var v = (t = p).updateQueue;
                    if (null === v) {
                      var m = new Set();
                      m.add(u), (t.updateQueue = m);
                    } else v.add(u);
                    break e;
                  }
                  if (0 === (1 & t)) {
                    ms(o, c, t), mu();
                    break e;
                  }
                  u = Error(i(426));
                } else if (ai && 1 & l.mode) {
                  var g = gs(s);
                  if (null !== g) {
                    0 === (65536 & g.flags) && (g.flags |= 256),
                      ys(g, s, l, 0, t),
                      pi(cs(u, l));
                    break e;
                  }
                }
                (o = u = cs(u, l)),
                  4 !== Il && (Il = 2),
                  null === Bl ? (Bl = [o]) : Bl.push(o),
                  (o = s);
                do {
                  switch (o.tag) {
                    case 3:
                      (o.flags |= 65536),
                        (t &= -t),
                        (o.lanes |= t),
                        Oi(o, ps(0, u, t));
                      break e;
                    case 1:
                      l = u;
                      var y = o.type,
                        _ = o.stateNode;
                      if (
                        0 === (128 & o.flags) &&
                        ("function" === typeof y.getDerivedStateFromError ||
                          (null !== _ &&
                            "function" === typeof _.componentDidCatch &&
                            (null === ql || !ql.has(_))))
                      ) {
                        (o.flags |= 65536),
                          (t &= -t),
                          (o.lanes |= t),
                          Oi(o, vs(o, l, t));
                        break e;
                      }
                  }
                  o = o.return;
                } while (null !== o);
              }
              xu(n);
            } catch (b) {
              (t = b), Pl === n && null !== n && (Pl = n = n.return);
              continue;
            }
            break;
          }
        }
        function vu() {
          var e = Ml.current;
          return (Ml.current = os), null === e ? os : e;
        }
        function mu() {
          (0 !== Il && 3 !== Il && 2 !== Il) || (Il = 4),
            null === Rl ||
              (0 === (268435455 & Nl) && 0 === (268435455 & Fl)) ||
              lu(Rl, Ul);
        }
        function gu(e, t) {
          var n = kl;
          kl |= 2;
          var r = vu();
          for ((Rl === e && Ul === t) || ((Wl = null), hu(e, t)); ; )
            try {
              yu();
              break;
            } catch (a) {
              pu(e, a);
            }
          if ((xi(), (kl = n), (Ml.current = r), null !== Pl))
            throw Error(i(261));
          return (Rl = null), (Ul = 0), Il;
        }
        function yu() {
          for (; null !== Pl; ) bu(Pl);
        }
        function _u() {
          for (; null !== Pl && !Ke(); ) bu(Pl);
        }
        function bu(e) {
          var t = wl(e.alternate, e, Ll);
          (e.memoizedProps = e.pendingProps),
            null === t ? xu(e) : (Pl = t),
            (Al.current = null);
        }
        function xu(e) {
          var t = e;
          do {
            var n = t.alternate;
            if (((e = t.return), 0 === (32768 & t.flags))) {
              if (null !== (n = Ys(n, t, Ll))) return void (Pl = n);
            } else {
              if (null !== (n = Ks(n, t)))
                return (n.flags &= 32767), void (Pl = n);
              if (null === e) return (Il = 6), void (Pl = null);
              (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
            }
            if (null !== (t = t.sibling)) return void (Pl = t);
            Pl = t = e;
          } while (null !== t);
          0 === Il && (Il = 5);
        }
        function Su(e, t, n) {
          var r = _t,
            a = Cl.transition;
          try {
            (Cl.transition = null),
              (_t = 1),
              (function (e, t, n, r) {
                do {
                  Eu();
                } while (null !== Kl);
                if (0 !== (6 & kl)) throw Error(i(327));
                n = e.finishedWork;
                var a = e.finishedLanes;
                if (null === n) return null;
                if (
                  ((e.finishedWork = null),
                  (e.finishedLanes = 0),
                  n === e.current)
                )
                  throw Error(i(177));
                (e.callbackNode = null), (e.callbackPriority = 0);
                var o = n.lanes | n.childLanes;
                if (
                  ((function (e, t) {
                    var n = e.pendingLanes & ~t;
                    (e.pendingLanes = t),
                      (e.suspendedLanes = 0),
                      (e.pingedLanes = 0),
                      (e.expiredLanes &= t),
                      (e.mutableReadLanes &= t),
                      (e.entangledLanes &= t),
                      (t = e.entanglements);
                    var r = e.eventTimes;
                    for (e = e.expirationTimes; 0 < n; ) {
                      var a = 31 - ot(n),
                        i = 1 << a;
                      (t[a] = 0), (r[a] = -1), (e[a] = -1), (n &= ~i);
                    }
                  })(e, o),
                  e === Rl && ((Pl = Rl = null), (Ul = 0)),
                  (0 === (2064 & n.subtreeFlags) && 0 === (2064 & n.flags)) ||
                    Yl ||
                    ((Yl = !0),
                    Ru(tt, function () {
                      return Eu(), null;
                    })),
                  (o = 0 !== (15990 & n.flags)),
                  0 !== (15990 & n.subtreeFlags) || o)
                ) {
                  (o = Cl.transition), (Cl.transition = null);
                  var s = _t;
                  _t = 1;
                  var l = kl;
                  (kl |= 4),
                    (Al.current = null),
                    (function (e, t) {
                      if (((ea = Wt), hr((e = dr())))) {
                        if ("selectionStart" in e)
                          var n = {
                            start: e.selectionStart,
                            end: e.selectionEnd,
                          };
                        else
                          e: {
                            var r =
                              (n =
                                ((n = e.ownerDocument) && n.defaultView) ||
                                window).getSelection && n.getSelection();
                            if (r && 0 !== r.rangeCount) {
                              n = r.anchorNode;
                              var a = r.anchorOffset,
                                o = r.focusNode;
                              r = r.focusOffset;
                              try {
                                n.nodeType, o.nodeType;
                              } catch (x) {
                                n = null;
                                break e;
                              }
                              var s = 0,
                                l = -1,
                                u = -1,
                                c = 0,
                                f = 0,
                                d = e,
                                h = null;
                              t: for (;;) {
                                for (
                                  var p;
                                  d !== n ||
                                    (0 !== a && 3 !== d.nodeType) ||
                                    (l = s + a),
                                    d !== o ||
                                      (0 !== r && 3 !== d.nodeType) ||
                                      (u = s + r),
                                    3 === d.nodeType &&
                                      (s += d.nodeValue.length),
                                    null !== (p = d.firstChild);

                                )
                                  (h = d), (d = p);
                                for (;;) {
                                  if (d === e) break t;
                                  if (
                                    (h === n && ++c === a && (l = s),
                                    h === o && ++f === r && (u = s),
                                    null !== (p = d.nextSibling))
                                  )
                                    break;
                                  h = (d = h).parentNode;
                                }
                                d = p;
                              }
                              n =
                                -1 === l || -1 === u
                                  ? null
                                  : { start: l, end: u };
                            } else n = null;
                          }
                        n = n || { start: 0, end: 0 };
                      } else n = null;
                      for (
                        ta = { focusedElem: e, selectionRange: n },
                          Wt = !1,
                          Qs = t;
                        null !== Qs;

                      )
                        if (
                          ((e = (t = Qs).child),
                          0 !== (1028 & t.subtreeFlags) && null !== e)
                        )
                          (e.return = t), (Qs = e);
                        else
                          for (; null !== Qs; ) {
                            t = Qs;
                            try {
                              var v = t.alternate;
                              if (0 !== (1024 & t.flags))
                                switch (t.tag) {
                                  case 0:
                                  case 11:
                                  case 15:
                                  case 5:
                                  case 6:
                                  case 4:
                                  case 17:
                                    break;
                                  case 1:
                                    if (null !== v) {
                                      var m = v.memoizedProps,
                                        g = v.memoizedState,
                                        y = t.stateNode,
                                        _ = y.getSnapshotBeforeUpdate(
                                          t.elementType === t.type
                                            ? m
                                            : mi(t.type, m),
                                          g
                                        );
                                      y.__reactInternalSnapshotBeforeUpdate = _;
                                    }
                                    break;
                                  case 3:
                                    var b = t.stateNode.containerInfo;
                                    1 === b.nodeType
                                      ? (b.textContent = "")
                                      : 9 === b.nodeType &&
                                        b.documentElement &&
                                        b.removeChild(b.documentElement);
                                    break;
                                  default:
                                    throw Error(i(163));
                                }
                            } catch (x) {
                              Tu(t, t.return, x);
                            }
                            if (null !== (e = t.sibling)) {
                              (e.return = t.return), (Qs = e);
                              break;
                            }
                            Qs = t.return;
                          }
                      (v = nl), (nl = !1);
                    })(e, n),
                    gl(n, e),
                    pr(ta),
                    (Wt = !!ea),
                    (ta = ea = null),
                    (e.current = n),
                    _l(n, e, a),
                    $e(),
                    (kl = l),
                    (_t = s),
                    (Cl.transition = o);
                } else e.current = n;
                if (
                  (Yl && ((Yl = !1), (Kl = e), ($l = a)),
                  (o = e.pendingLanes),
                  0 === o && (ql = null),
                  (function (e) {
                    if (it && "function" === typeof it.onCommitFiberRoot)
                      try {
                        it.onCommitFiberRoot(
                          at,
                          e,
                          void 0,
                          128 === (128 & e.current.flags)
                        );
                      } catch (t) {}
                  })(n.stateNode),
                  au(e, Ze()),
                  null !== t)
                )
                  for (r = e.onRecoverableError, n = 0; n < t.length; n++)
                    (a = t[n]),
                      r(a.value, { componentStack: a.stack, digest: a.digest });
                if (jl) throw ((jl = !1), (e = Xl), (Xl = null), e);
                0 !== (1 & $l) && 0 !== e.tag && Eu(),
                  (o = e.pendingLanes),
                  0 !== (1 & o)
                    ? e === Jl
                      ? Zl++
                      : ((Zl = 0), (Jl = e))
                    : (Zl = 0),
                  Ga();
              })(e, t, n, r);
          } finally {
            (Cl.transition = a), (_t = r);
          }
          return null;
        }
        function Eu() {
          if (null !== Kl) {
            var e = bt($l),
              t = Cl.transition,
              n = _t;
            try {
              if (((Cl.transition = null), (_t = 16 > e ? 16 : e), null === Kl))
                var r = !1;
              else {
                if (((e = Kl), (Kl = null), ($l = 0), 0 !== (6 & kl)))
                  throw Error(i(331));
                var a = kl;
                for (kl |= 4, Qs = e.current; null !== Qs; ) {
                  var o = Qs,
                    s = o.child;
                  if (0 !== (16 & Qs.flags)) {
                    var l = o.deletions;
                    if (null !== l) {
                      for (var u = 0; u < l.length; u++) {
                        var c = l[u];
                        for (Qs = c; null !== Qs; ) {
                          var f = Qs;
                          switch (f.tag) {
                            case 0:
                            case 11:
                            case 15:
                              rl(8, f, o);
                          }
                          var d = f.child;
                          if (null !== d) (d.return = f), (Qs = d);
                          else
                            for (; null !== Qs; ) {
                              var h = (f = Qs).sibling,
                                p = f.return;
                              if ((ol(f), f === c)) {
                                Qs = null;
                                break;
                              }
                              if (null !== h) {
                                (h.return = p), (Qs = h);
                                break;
                              }
                              Qs = p;
                            }
                        }
                      }
                      var v = o.alternate;
                      if (null !== v) {
                        var m = v.child;
                        if (null !== m) {
                          v.child = null;
                          do {
                            var g = m.sibling;
                            (m.sibling = null), (m = g);
                          } while (null !== m);
                        }
                      }
                      Qs = o;
                    }
                  }
                  if (0 !== (2064 & o.subtreeFlags) && null !== s)
                    (s.return = o), (Qs = s);
                  else
                    e: for (; null !== Qs; ) {
                      if (0 !== (2048 & (o = Qs).flags))
                        switch (o.tag) {
                          case 0:
                          case 11:
                          case 15:
                            rl(9, o, o.return);
                        }
                      var y = o.sibling;
                      if (null !== y) {
                        (y.return = o.return), (Qs = y);
                        break e;
                      }
                      Qs = o.return;
                    }
                }
                var _ = e.current;
                for (Qs = _; null !== Qs; ) {
                  var b = (s = Qs).child;
                  if (0 !== (2064 & s.subtreeFlags) && null !== b)
                    (b.return = s), (Qs = b);
                  else
                    e: for (s = _; null !== Qs; ) {
                      if (0 !== (2048 & (l = Qs).flags))
                        try {
                          switch (l.tag) {
                            case 0:
                            case 11:
                            case 15:
                              al(9, l);
                          }
                        } catch (S) {
                          Tu(l, l.return, S);
                        }
                      if (l === s) {
                        Qs = null;
                        break e;
                      }
                      var x = l.sibling;
                      if (null !== x) {
                        (x.return = l.return), (Qs = x);
                        break e;
                      }
                      Qs = l.return;
                    }
                }
                if (
                  ((kl = a),
                  Ga(),
                  it && "function" === typeof it.onPostCommitFiberRoot)
                )
                  try {
                    it.onPostCommitFiberRoot(at, e);
                  } catch (S) {}
                r = !0;
              }
              return r;
            } finally {
              (_t = n), (Cl.transition = t);
            }
          }
          return !1;
        }
        function wu(e, t, n) {
          (e = Di(e, (t = ps(0, (t = cs(n, t)), 1)), 1)),
            (t = tu()),
            null !== e && (gt(e, 1, t), au(e, t));
        }
        function Tu(e, t, n) {
          if (3 === e.tag) wu(e, e, n);
          else
            for (; null !== t; ) {
              if (3 === t.tag) {
                wu(t, e, n);
                break;
              }
              if (1 === t.tag) {
                var r = t.stateNode;
                if (
                  "function" === typeof t.type.getDerivedStateFromError ||
                  ("function" === typeof r.componentDidCatch &&
                    (null === ql || !ql.has(r)))
                ) {
                  (t = Di(t, (e = vs(t, (e = cs(n, e)), 1)), 1)),
                    (e = tu()),
                    null !== t && (gt(t, 1, e), au(t, e));
                  break;
                }
              }
              t = t.return;
            }
        }
        function Mu(e, t, n) {
          var r = e.pingCache;
          null !== r && r.delete(t),
            (t = tu()),
            (e.pingedLanes |= e.suspendedLanes & n),
            Rl === e &&
              (Ul & n) === n &&
              (4 === Il ||
              (3 === Il && (130023424 & Ul) === Ul && 500 > Ze() - Gl)
                ? hu(e, 0)
                : (zl |= n)),
            au(e, t);
        }
        function Au(e, t) {
          0 === t &&
            (0 === (1 & e.mode)
              ? (t = 1)
              : ((t = ct), 0 === (130023424 & (ct <<= 1)) && (ct = 4194304)));
          var n = tu();
          null !== (e = ki(e, t)) && (gt(e, t, n), au(e, n));
        }
        function Cu(e) {
          var t = e.memoizedState,
            n = 0;
          null !== t && (n = t.retryLane), Au(e, n);
        }
        function ku(e, t) {
          var n = 0;
          switch (e.tag) {
            case 13:
              var r = e.stateNode,
                a = e.memoizedState;
              null !== a && (n = a.retryLane);
              break;
            case 19:
              r = e.stateNode;
              break;
            default:
              throw Error(i(314));
          }
          null !== r && r.delete(t), Au(e, n);
        }
        function Ru(e, t) {
          return qe(e, t);
        }
        function Pu(e, t, n, r) {
          (this.tag = e),
            (this.key = n),
            (this.sibling =
              this.child =
              this.return =
              this.stateNode =
              this.type =
              this.elementType =
                null),
            (this.index = 0),
            (this.ref = null),
            (this.pendingProps = t),
            (this.dependencies =
              this.memoizedState =
              this.updateQueue =
              this.memoizedProps =
                null),
            (this.mode = r),
            (this.subtreeFlags = this.flags = 0),
            (this.deletions = null),
            (this.childLanes = this.lanes = 0),
            (this.alternate = null);
        }
        function Uu(e, t, n, r) {
          return new Pu(e, t, n, r);
        }
        function Lu(e) {
          return !(!(e = e.prototype) || !e.isReactComponent);
        }
        function Du(e, t) {
          var n = e.alternate;
          return (
            null === n
              ? (((n = Uu(e.tag, t, e.key, e.mode)).elementType =
                  e.elementType),
                (n.type = e.type),
                (n.stateNode = e.stateNode),
                (n.alternate = e),
                (e.alternate = n))
              : ((n.pendingProps = t),
                (n.type = e.type),
                (n.flags = 0),
                (n.subtreeFlags = 0),
                (n.deletions = null)),
            (n.flags = 14680064 & e.flags),
            (n.childLanes = e.childLanes),
            (n.lanes = e.lanes),
            (n.child = e.child),
            (n.memoizedProps = e.memoizedProps),
            (n.memoizedState = e.memoizedState),
            (n.updateQueue = e.updateQueue),
            (t = e.dependencies),
            (n.dependencies =
              null === t
                ? null
                : { lanes: t.lanes, firstContext: t.firstContext }),
            (n.sibling = e.sibling),
            (n.index = e.index),
            (n.ref = e.ref),
            n
          );
        }
        function Iu(e, t, n, r, a, o) {
          var s = 2;
          if (((r = e), "function" === typeof e)) Lu(e) && (s = 1);
          else if ("string" === typeof e) s = 5;
          else
            e: switch (e) {
              case E:
                return Ou(n.children, a, o, t);
              case w:
                (s = 8), (a |= 8);
                break;
              case T:
                return (
                  ((e = Uu(12, n, t, 2 | a)).elementType = T), (e.lanes = o), e
                );
              case k:
                return (
                  ((e = Uu(13, n, t, a)).elementType = k), (e.lanes = o), e
                );
              case R:
                return (
                  ((e = Uu(19, n, t, a)).elementType = R), (e.lanes = o), e
                );
              case L:
                return Nu(n, a, o, t);
              default:
                if ("object" === typeof e && null !== e)
                  switch (e.$$typeof) {
                    case M:
                      s = 10;
                      break e;
                    case A:
                      s = 9;
                      break e;
                    case C:
                      s = 11;
                      break e;
                    case P:
                      s = 14;
                      break e;
                    case U:
                      (s = 16), (r = null);
                      break e;
                  }
                throw Error(i(130, null == e ? e : typeof e, ""));
            }
          return (
            ((t = Uu(s, n, t, a)).elementType = e),
            (t.type = r),
            (t.lanes = o),
            t
          );
        }
        function Ou(e, t, n, r) {
          return ((e = Uu(7, e, r, t)).lanes = n), e;
        }
        function Nu(e, t, n, r) {
          return (
            ((e = Uu(22, e, r, t)).elementType = L),
            (e.lanes = n),
            (e.stateNode = { isHidden: !1 }),
            e
          );
        }
        function Fu(e, t, n) {
          return ((e = Uu(6, e, null, t)).lanes = n), e;
        }
        function zu(e, t, n) {
          return (
            ((t = Uu(
              4,
              null !== e.children ? e.children : [],
              e.key,
              t
            )).lanes = n),
            (t.stateNode = {
              containerInfo: e.containerInfo,
              pendingChildren: null,
              implementation: e.implementation,
            }),
            t
          );
        }
        function Bu(e, t, n, r, a) {
          (this.tag = t),
            (this.containerInfo = e),
            (this.finishedWork =
              this.pingCache =
              this.current =
              this.pendingChildren =
                null),
            (this.timeoutHandle = -1),
            (this.callbackNode = this.pendingContext = this.context = null),
            (this.callbackPriority = 0),
            (this.eventTimes = mt(0)),
            (this.expirationTimes = mt(-1)),
            (this.entangledLanes =
              this.finishedLanes =
              this.mutableReadLanes =
              this.expiredLanes =
              this.pingedLanes =
              this.suspendedLanes =
              this.pendingLanes =
                0),
            (this.entanglements = mt(0)),
            (this.identifierPrefix = r),
            (this.onRecoverableError = a),
            (this.mutableSourceEagerHydrationData = null);
        }
        function Hu(e, t, n, r, a, i, o, s, l) {
          return (
            (e = new Bu(e, t, n, s, l)),
            1 === t ? ((t = 1), !0 === i && (t |= 8)) : (t = 0),
            (i = Uu(3, null, null, t)),
            (e.current = i),
            (i.stateNode = e),
            (i.memoizedState = {
              element: r,
              isDehydrated: n,
              cache: null,
              transitions: null,
              pendingSuspenseBoundaries: null,
            }),
            Pi(i),
            e
          );
        }
        function Gu(e) {
          if (!e) return Aa;
          e: {
            if (Ge((e = e._reactInternals)) !== e || 1 !== e.tag)
              throw Error(i(170));
            var t = e;
            do {
              switch (t.tag) {
                case 3:
                  t = t.stateNode.context;
                  break e;
                case 1:
                  if (Ua(t.type)) {
                    t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                    break e;
                  }
              }
              t = t.return;
            } while (null !== t);
            throw Error(i(171));
          }
          if (1 === e.tag) {
            var n = e.type;
            if (Ua(n)) return Ia(e, n, t);
          }
          return t;
        }
        function Vu(e, t, n, r, a, i, o, s, l) {
          return (
            ((e = Hu(n, r, !0, e, 0, i, 0, s, l)).context = Gu(null)),
            (n = e.current),
            ((i = Li((r = tu()), (a = nu(n)))).callback =
              void 0 !== t && null !== t ? t : null),
            Di(n, i, a),
            (e.current.lanes = a),
            gt(e, a, r),
            au(e, r),
            e
          );
        }
        function Wu(e, t, n, r) {
          var a = t.current,
            i = tu(),
            o = nu(a);
          return (
            (n = Gu(n)),
            null === t.context ? (t.context = n) : (t.pendingContext = n),
            ((t = Li(i, o)).payload = { element: e }),
            null !== (r = void 0 === r ? null : r) && (t.callback = r),
            null !== (e = Di(a, t, o)) && (ru(e, a, o, i), Ii(e, a, o)),
            o
          );
        }
        function ju(e) {
          return (e = e.current).child
            ? (e.child.tag, e.child.stateNode)
            : null;
        }
        function Xu(e, t) {
          if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
            var n = e.retryLane;
            e.retryLane = 0 !== n && n < t ? n : t;
          }
        }
        function qu(e, t) {
          Xu(e, t), (e = e.alternate) && Xu(e, t);
        }
        wl = function (e, t, n) {
          if (null !== e)
            if (e.memoizedProps !== t.pendingProps || ka.current) bs = !0;
            else {
              if (0 === (e.lanes & n) && 0 === (128 & t.flags))
                return (
                  (bs = !1),
                  (function (e, t, n) {
                    switch (t.tag) {
                      case 3:
                        Rs(t), hi();
                        break;
                      case 5:
                        io(t);
                        break;
                      case 1:
                        Ua(t.type) && Oa(t);
                        break;
                      case 4:
                        ro(t, t.stateNode.containerInfo);
                        break;
                      case 10:
                        var r = t.type._context,
                          a = t.memoizedProps.value;
                        Ma(gi, r._currentValue), (r._currentValue = a);
                        break;
                      case 13:
                        if (null !== (r = t.memoizedState))
                          return null !== r.dehydrated
                            ? (Ma(so, 1 & so.current), (t.flags |= 128), null)
                            : 0 !== (n & t.child.childLanes)
                            ? Fs(e, t, n)
                            : (Ma(so, 1 & so.current),
                              null !== (e = js(e, t, n)) ? e.sibling : null);
                        Ma(so, 1 & so.current);
                        break;
                      case 19:
                        if (
                          ((r = 0 !== (n & t.childLanes)),
                          0 !== (128 & e.flags))
                        ) {
                          if (r) return Vs(e, t, n);
                          t.flags |= 128;
                        }
                        if (
                          (null !== (a = t.memoizedState) &&
                            ((a.rendering = null),
                            (a.tail = null),
                            (a.lastEffect = null)),
                          Ma(so, so.current),
                          r)
                        )
                          break;
                        return null;
                      case 22:
                      case 23:
                        return (t.lanes = 0), Ts(e, t, n);
                    }
                    return js(e, t, n);
                  })(e, t, n)
                );
              bs = 0 !== (131072 & e.flags);
            }
          else (bs = !1), ai && 0 !== (1048576 & t.flags) && Qa(t, Xa, t.index);
          switch (((t.lanes = 0), t.tag)) {
            case 2:
              var r = t.type;
              Ws(e, t), (e = t.pendingProps);
              var a = Pa(t, Ca.current);
              wi(t, n), (a = wo(null, t, r, e, a, n));
              var o = To();
              return (
                (t.flags |= 1),
                "object" === typeof a &&
                null !== a &&
                "function" === typeof a.render &&
                void 0 === a.$$typeof
                  ? ((t.tag = 1),
                    (t.memoizedState = null),
                    (t.updateQueue = null),
                    Ua(r) ? ((o = !0), Oa(t)) : (o = !1),
                    (t.memoizedState =
                      null !== a.state && void 0 !== a.state ? a.state : null),
                    Pi(t),
                    (a.updater = Hi),
                    (t.stateNode = a),
                    (a._reactInternals = t),
                    ji(t, r, e, n),
                    (t = ks(null, t, r, !0, o, n)))
                  : ((t.tag = 0),
                    ai && o && ei(t),
                    xs(null, t, a, n),
                    (t = t.child)),
                t
              );
            case 16:
              r = t.elementType;
              e: {
                switch (
                  (Ws(e, t),
                  (e = t.pendingProps),
                  (r = (a = r._init)(r._payload)),
                  (t.type = r),
                  (a = t.tag =
                    (function (e) {
                      if ("function" === typeof e) return Lu(e) ? 1 : 0;
                      if (void 0 !== e && null !== e) {
                        if ((e = e.$$typeof) === C) return 11;
                        if (e === P) return 14;
                      }
                      return 2;
                    })(r)),
                  (e = mi(r, e)),
                  a)
                ) {
                  case 0:
                    t = As(null, t, r, e, n);
                    break e;
                  case 1:
                    t = Cs(null, t, r, e, n);
                    break e;
                  case 11:
                    t = Ss(null, t, r, e, n);
                    break e;
                  case 14:
                    t = Es(null, t, r, mi(r.type, e), n);
                    break e;
                }
                throw Error(i(306, r, ""));
              }
              return t;
            case 0:
              return (
                (r = t.type),
                (a = t.pendingProps),
                As(e, t, r, (a = t.elementType === r ? a : mi(r, a)), n)
              );
            case 1:
              return (
                (r = t.type),
                (a = t.pendingProps),
                Cs(e, t, r, (a = t.elementType === r ? a : mi(r, a)), n)
              );
            case 3:
              e: {
                if ((Rs(t), null === e)) throw Error(i(387));
                (r = t.pendingProps),
                  (a = (o = t.memoizedState).element),
                  Ui(e, t),
                  Ni(t, r, null, n);
                var s = t.memoizedState;
                if (((r = s.element), o.isDehydrated)) {
                  if (
                    ((o = {
                      element: r,
                      isDehydrated: !1,
                      cache: s.cache,
                      pendingSuspenseBoundaries: s.pendingSuspenseBoundaries,
                      transitions: s.transitions,
                    }),
                    (t.updateQueue.baseState = o),
                    (t.memoizedState = o),
                    256 & t.flags)
                  ) {
                    t = Ps(e, t, r, n, (a = cs(Error(i(423)), t)));
                    break e;
                  }
                  if (r !== a) {
                    t = Ps(e, t, r, n, (a = cs(Error(i(424)), t)));
                    break e;
                  }
                  for (
                    ri = ua(t.stateNode.containerInfo.firstChild),
                      ni = t,
                      ai = !0,
                      ii = null,
                      n = Zi(t, null, r, n),
                      t.child = n;
                    n;

                  )
                    (n.flags = (-3 & n.flags) | 4096), (n = n.sibling);
                } else {
                  if ((hi(), r === a)) {
                    t = js(e, t, n);
                    break e;
                  }
                  xs(e, t, r, n);
                }
                t = t.child;
              }
              return t;
            case 5:
              return (
                io(t),
                null === e && ui(t),
                (r = t.type),
                (a = t.pendingProps),
                (o = null !== e ? e.memoizedProps : null),
                (s = a.children),
                na(r, a)
                  ? (s = null)
                  : null !== o && na(r, o) && (t.flags |= 32),
                Ms(e, t),
                xs(e, t, s, n),
                t.child
              );
            case 6:
              return null === e && ui(t), null;
            case 13:
              return Fs(e, t, n);
            case 4:
              return (
                ro(t, t.stateNode.containerInfo),
                (r = t.pendingProps),
                null === e ? (t.child = $i(t, null, r, n)) : xs(e, t, r, n),
                t.child
              );
            case 11:
              return (
                (r = t.type),
                (a = t.pendingProps),
                Ss(e, t, r, (a = t.elementType === r ? a : mi(r, a)), n)
              );
            case 7:
              return xs(e, t, t.pendingProps, n), t.child;
            case 8:
            case 12:
              return xs(e, t, t.pendingProps.children, n), t.child;
            case 10:
              e: {
                if (
                  ((r = t.type._context),
                  (a = t.pendingProps),
                  (o = t.memoizedProps),
                  (s = a.value),
                  Ma(gi, r._currentValue),
                  (r._currentValue = s),
                  null !== o)
                )
                  if (sr(o.value, s)) {
                    if (o.children === a.children && !ka.current) {
                      t = js(e, t, n);
                      break e;
                    }
                  } else
                    for (
                      null !== (o = t.child) && (o.return = t);
                      null !== o;

                    ) {
                      var l = o.dependencies;
                      if (null !== l) {
                        s = o.child;
                        for (var u = l.firstContext; null !== u; ) {
                          if (u.context === r) {
                            if (1 === o.tag) {
                              (u = Li(-1, n & -n)).tag = 2;
                              var c = o.updateQueue;
                              if (null !== c) {
                                var f = (c = c.shared).pending;
                                null === f
                                  ? (u.next = u)
                                  : ((u.next = f.next), (f.next = u)),
                                  (c.pending = u);
                              }
                            }
                            (o.lanes |= n),
                              null !== (u = o.alternate) && (u.lanes |= n),
                              Ei(o.return, n, t),
                              (l.lanes |= n);
                            break;
                          }
                          u = u.next;
                        }
                      } else if (10 === o.tag)
                        s = o.type === t.type ? null : o.child;
                      else if (18 === o.tag) {
                        if (null === (s = o.return)) throw Error(i(341));
                        (s.lanes |= n),
                          null !== (l = s.alternate) && (l.lanes |= n),
                          Ei(s, n, t),
                          (s = o.sibling);
                      } else s = o.child;
                      if (null !== s) s.return = o;
                      else
                        for (s = o; null !== s; ) {
                          if (s === t) {
                            s = null;
                            break;
                          }
                          if (null !== (o = s.sibling)) {
                            (o.return = s.return), (s = o);
                            break;
                          }
                          s = s.return;
                        }
                      o = s;
                    }
                xs(e, t, a.children, n), (t = t.child);
              }
              return t;
            case 9:
              return (
                (a = t.type),
                (r = t.pendingProps.children),
                wi(t, n),
                (r = r((a = Ti(a)))),
                (t.flags |= 1),
                xs(e, t, r, n),
                t.child
              );
            case 14:
              return (
                (a = mi((r = t.type), t.pendingProps)),
                Es(e, t, r, (a = mi(r.type, a)), n)
              );
            case 15:
              return ws(e, t, t.type, t.pendingProps, n);
            case 17:
              return (
                (r = t.type),
                (a = t.pendingProps),
                (a = t.elementType === r ? a : mi(r, a)),
                Ws(e, t),
                (t.tag = 1),
                Ua(r) ? ((e = !0), Oa(t)) : (e = !1),
                wi(t, n),
                Vi(t, r, a),
                ji(t, r, a, n),
                ks(null, t, r, !0, e, n)
              );
            case 19:
              return Vs(e, t, n);
            case 22:
              return Ts(e, t, n);
          }
          throw Error(i(156, t.tag));
        };
        var Yu =
          "function" === typeof reportError
            ? reportError
            : function (e) {
                console.error(e);
              };
        function Ku(e) {
          this._internalRoot = e;
        }
        function $u(e) {
          this._internalRoot = e;
        }
        function Zu(e) {
          return !(
            !e ||
            (1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType)
          );
        }
        function Ju(e) {
          return !(
            !e ||
            (1 !== e.nodeType &&
              9 !== e.nodeType &&
              11 !== e.nodeType &&
              (8 !== e.nodeType ||
                " react-mount-point-unstable " !== e.nodeValue))
          );
        }
        function Qu() {}
        function ec(e, t, n, r, a) {
          var i = n._reactRootContainer;
          if (i) {
            var o = i;
            if ("function" === typeof a) {
              var s = a;
              a = function () {
                var e = ju(o);
                s.call(e);
              };
            }
            Wu(t, o, e, a);
          } else
            o = (function (e, t, n, r, a) {
              if (a) {
                if ("function" === typeof r) {
                  var i = r;
                  r = function () {
                    var e = ju(o);
                    i.call(e);
                  };
                }
                var o = Vu(t, r, e, 0, null, !1, 0, "", Qu);
                return (
                  (e._reactRootContainer = o),
                  (e[pa] = o.current),
                  Gr(8 === e.nodeType ? e.parentNode : e),
                  fu(),
                  o
                );
              }
              for (; (a = e.lastChild); ) e.removeChild(a);
              if ("function" === typeof r) {
                var s = r;
                r = function () {
                  var e = ju(l);
                  s.call(e);
                };
              }
              var l = Hu(e, 0, !1, null, 0, !1, 0, "", Qu);
              return (
                (e._reactRootContainer = l),
                (e[pa] = l.current),
                Gr(8 === e.nodeType ? e.parentNode : e),
                fu(function () {
                  Wu(t, l, n, r);
                }),
                l
              );
            })(n, t, e, a, r);
          return ju(o);
        }
        ($u.prototype.render = Ku.prototype.render =
          function (e) {
            var t = this._internalRoot;
            if (null === t) throw Error(i(409));
            Wu(e, t, null, null);
          }),
          ($u.prototype.unmount = Ku.prototype.unmount =
            function () {
              var e = this._internalRoot;
              if (null !== e) {
                this._internalRoot = null;
                var t = e.containerInfo;
                fu(function () {
                  Wu(null, e, null, null);
                }),
                  (t[pa] = null);
              }
            }),
          ($u.prototype.unstable_scheduleHydration = function (e) {
            if (e) {
              var t = wt();
              e = { blockedOn: null, target: e, priority: t };
              for (
                var n = 0;
                n < Lt.length && 0 !== t && t < Lt[n].priority;
                n++
              );
              Lt.splice(n, 0, e), 0 === n && Nt(e);
            }
          }),
          (xt = function (e) {
            switch (e.tag) {
              case 3:
                var t = e.stateNode;
                if (t.current.memoizedState.isDehydrated) {
                  var n = ft(t.pendingLanes);
                  0 !== n &&
                    (yt(t, 1 | n),
                    au(t, Ze()),
                    0 === (6 & kl) && ((Vl = Ze() + 500), Ga()));
                }
                break;
              case 13:
                fu(function () {
                  var t = ki(e, 1);
                  if (null !== t) {
                    var n = tu();
                    ru(t, e, 1, n);
                  }
                }),
                  qu(e, 1);
            }
          }),
          (St = function (e) {
            if (13 === e.tag) {
              var t = ki(e, 134217728);
              if (null !== t) ru(t, e, 134217728, tu());
              qu(e, 134217728);
            }
          }),
          (Et = function (e) {
            if (13 === e.tag) {
              var t = nu(e),
                n = ki(e, t);
              if (null !== n) ru(n, e, t, tu());
              qu(e, t);
            }
          }),
          (wt = function () {
            return _t;
          }),
          (Tt = function (e, t) {
            var n = _t;
            try {
              return (_t = e), t();
            } finally {
              _t = n;
            }
          }),
          (Se = function (e, t, n) {
            switch (t) {
              case "input":
                if ((J(e, n), (t = n.name), "radio" === n.type && null != t)) {
                  for (n = e; n.parentNode; ) n = n.parentNode;
                  for (
                    n = n.querySelectorAll(
                      "input[name=" + JSON.stringify("" + t) + '][type="radio"]'
                    ),
                      t = 0;
                    t < n.length;
                    t++
                  ) {
                    var r = n[t];
                    if (r !== e && r.form === e.form) {
                      var a = xa(r);
                      if (!a) throw Error(i(90));
                      q(r), J(r, a);
                    }
                  }
                }
                break;
              case "textarea":
                ie(e, n);
                break;
              case "select":
                null != (t = n.value) && ne(e, !!n.multiple, t, !1);
            }
          }),
          (Ce = cu),
          (ke = fu);
        var tc = {
            usingClientEntryPoint: !1,
            Events: [_a, ba, xa, Me, Ae, cu],
          },
          nc = {
            findFiberByHostInstance: ya,
            bundleType: 0,
            version: "18.2.0",
            rendererPackageName: "react-dom",
          },
          rc = {
            bundleType: nc.bundleType,
            version: nc.version,
            rendererPackageName: nc.rendererPackageName,
            rendererConfig: nc.rendererConfig,
            overrideHookState: null,
            overrideHookStateDeletePath: null,
            overrideHookStateRenamePath: null,
            overrideProps: null,
            overridePropsDeletePath: null,
            overridePropsRenamePath: null,
            setErrorHandler: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: b.ReactCurrentDispatcher,
            findHostInstanceByFiber: function (e) {
              return null === (e = je(e)) ? null : e.stateNode;
            },
            findFiberByHostInstance:
              nc.findFiberByHostInstance ||
              function () {
                return null;
              },
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null,
            reconcilerVersion: "18.2.0-next-9e3b772b8-20220608",
          };
        if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
          var ac = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (!ac.isDisabled && ac.supportsFiber)
            try {
              (at = ac.inject(rc)), (it = ac);
            } catch (ce) {}
        }
        (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tc),
          (t.createPortal = function (e, t) {
            var n =
              2 < arguments.length && void 0 !== arguments[2]
                ? arguments[2]
                : null;
            if (!Zu(t)) throw Error(i(200));
            return (function (e, t, n) {
              var r =
                3 < arguments.length && void 0 !== arguments[3]
                  ? arguments[3]
                  : null;
              return {
                $$typeof: S,
                key: null == r ? null : "" + r,
                children: e,
                containerInfo: t,
                implementation: n,
              };
            })(e, t, null, n);
          }),
          (t.createRoot = function (e, t) {
            if (!Zu(e)) throw Error(i(299));
            var n = !1,
              r = "",
              a = Yu;
            return (
              null !== t &&
                void 0 !== t &&
                (!0 === t.unstable_strictMode && (n = !0),
                void 0 !== t.identifierPrefix && (r = t.identifierPrefix),
                void 0 !== t.onRecoverableError && (a = t.onRecoverableError)),
              (t = Hu(e, 1, !1, null, 0, n, 0, r, a)),
              (e[pa] = t.current),
              Gr(8 === e.nodeType ? e.parentNode : e),
              new Ku(t)
            );
          }),
          (t.findDOMNode = function (e) {
            if (null == e) return null;
            if (1 === e.nodeType) return e;
            var t = e._reactInternals;
            if (void 0 === t) {
              if ("function" === typeof e.render) throw Error(i(188));
              throw ((e = Object.keys(e).join(",")), Error(i(268, e)));
            }
            return (e = null === (e = je(t)) ? null : e.stateNode);
          }),
          (t.flushSync = function (e) {
            return fu(e);
          }),
          (t.hydrate = function (e, t, n) {
            if (!Ju(t)) throw Error(i(200));
            return ec(null, e, t, !0, n);
          }),
          (t.hydrateRoot = function (e, t, n) {
            if (!Zu(e)) throw Error(i(405));
            var r = (null != n && n.hydratedSources) || null,
              a = !1,
              o = "",
              s = Yu;
            if (
              (null !== n &&
                void 0 !== n &&
                (!0 === n.unstable_strictMode && (a = !0),
                void 0 !== n.identifierPrefix && (o = n.identifierPrefix),
                void 0 !== n.onRecoverableError && (s = n.onRecoverableError)),
              (t = Vu(t, null, e, 1, null != n ? n : null, a, 0, o, s)),
              (e[pa] = t.current),
              Gr(e),
              r)
            )
              for (e = 0; e < r.length; e++)
                (a = (a = (n = r[e])._getVersion)(n._source)),
                  null == t.mutableSourceEagerHydrationData
                    ? (t.mutableSourceEagerHydrationData = [n, a])
                    : t.mutableSourceEagerHydrationData.push(n, a);
            return new $u(t);
          }),
          (t.render = function (e, t, n) {
            if (!Ju(t)) throw Error(i(200));
            return ec(null, e, t, !1, n);
          }),
          (t.unmountComponentAtNode = function (e) {
            if (!Ju(e)) throw Error(i(40));
            return (
              !!e._reactRootContainer &&
              (fu(function () {
                ec(null, null, e, !1, function () {
                  (e._reactRootContainer = null), (e[pa] = null);
                });
              }),
              !0)
            );
          }),
          (t.unstable_batchedUpdates = cu),
          (t.unstable_renderSubtreeIntoContainer = function (e, t, n, r) {
            if (!Ju(n)) throw Error(i(200));
            if (null == e || void 0 === e._reactInternals) throw Error(i(38));
            return ec(e, t, n, !1, r);
          }),
          (t.version = "18.2.0-next-9e3b772b8-20220608");
      },
      250: function (e, t, n) {
        "use strict";
        var r = n(164);
        (t.createRoot = r.createRoot), (t.hydrateRoot = r.hydrateRoot);
      },
      164: function (e, t, n) {
        "use strict";
        !(function e() {
          if (
            "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
            "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE
          )
            try {
              __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
            } catch (t) {
              console.error(t);
            }
        })(),
          (e.exports = n(463));
      },
      77: function (e) {
        var t = "undefined" !== typeof Element,
          n = "function" === typeof Map,
          r = "function" === typeof Set,
          a = "function" === typeof ArrayBuffer && !!ArrayBuffer.isView;
        function i(e, o) {
          if (e === o) return !0;
          if (e && o && "object" == typeof e && "object" == typeof o) {
            if (e.constructor !== o.constructor) return !1;
            var s, l, u, c;
            if (Array.isArray(e)) {
              if ((s = e.length) != o.length) return !1;
              for (l = s; 0 !== l--; ) if (!i(e[l], o[l])) return !1;
              return !0;
            }
            if (n && e instanceof Map && o instanceof Map) {
              if (e.size !== o.size) return !1;
              for (c = e.entries(); !(l = c.next()).done; )
                if (!o.has(l.value[0])) return !1;
              for (c = e.entries(); !(l = c.next()).done; )
                if (!i(l.value[1], o.get(l.value[0]))) return !1;
              return !0;
            }
            if (r && e instanceof Set && o instanceof Set) {
              if (e.size !== o.size) return !1;
              for (c = e.entries(); !(l = c.next()).done; )
                if (!o.has(l.value[0])) return !1;
              return !0;
            }
            if (a && ArrayBuffer.isView(e) && ArrayBuffer.isView(o)) {
              if ((s = e.length) != o.length) return !1;
              for (l = s; 0 !== l--; ) if (e[l] !== o[l]) return !1;
              return !0;
            }
            if (e.constructor === RegExp)
              return e.source === o.source && e.flags === o.flags;
            if (
              e.valueOf !== Object.prototype.valueOf &&
              "function" === typeof e.valueOf &&
              "function" === typeof o.valueOf
            )
              return e.valueOf() === o.valueOf();
            if (
              e.toString !== Object.prototype.toString &&
              "function" === typeof e.toString &&
              "function" === typeof o.toString
            )
              return e.toString() === o.toString();
            if ((s = (u = Object.keys(e)).length) !== Object.keys(o).length)
              return !1;
            for (l = s; 0 !== l--; )
              if (!Object.prototype.hasOwnProperty.call(o, u[l])) return !1;
            if (t && e instanceof Element) return !1;
            for (l = s; 0 !== l--; )
              if (
                (("_owner" !== u[l] && "__v" !== u[l] && "__o" !== u[l]) ||
                  !e.$$typeof) &&
                !i(e[u[l]], o[u[l]])
              )
                return !1;
            return !0;
          }
          return e !== e && o !== o;
        }
        e.exports = function (e, t) {
          try {
            return i(e, t);
          } catch (n) {
            if ((n.message || "").match(/stack|recursion/i))
              return (
                console.warn("react-fast-compare cannot handle circular refs"),
                !1
              );
            throw n;
          }
        };
      },
      475: function (e, t, n) {
        "use strict";
        var r,
          a = n(791),
          i =
            (r = a) && "object" === typeof r && "default" in r ? r.default : r;
        function o(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        var s = !(
          "undefined" === typeof window ||
          !window.document ||
          !window.document.createElement
        );
        e.exports = function (e, t, n) {
          if ("function" !== typeof e)
            throw new Error("Expected reducePropsToState to be a function.");
          if ("function" !== typeof t)
            throw new Error(
              "Expected handleStateChangeOnClient to be a function."
            );
          if ("undefined" !== typeof n && "function" !== typeof n)
            throw new Error(
              "Expected mapStateOnServer to either be undefined or a function."
            );
          return function (r) {
            if ("function" !== typeof r)
              throw new Error(
                "Expected WrappedComponent to be a React component."
              );
            var l,
              u = [];
            function c() {
              (l = e(
                u.map(function (e) {
                  return e.props;
                })
              )),
                f.canUseDOM ? t(l) : n && (l = n(l));
            }
            var f = (function (e) {
              var t, n;
              function a() {
                return e.apply(this, arguments) || this;
              }
              (n = e),
                ((t = a).prototype = Object.create(n.prototype)),
                (t.prototype.constructor = t),
                (t.__proto__ = n),
                (a.peek = function () {
                  return l;
                }),
                (a.rewind = function () {
                  if (a.canUseDOM)
                    throw new Error(
                      "You may only call rewind() on the server. Call peek() to read the current state."
                    );
                  var e = l;
                  return (l = void 0), (u = []), e;
                });
              var o = a.prototype;
              return (
                (o.UNSAFE_componentWillMount = function () {
                  u.push(this), c();
                }),
                (o.componentDidUpdate = function () {
                  c();
                }),
                (o.componentWillUnmount = function () {
                  var e = u.indexOf(this);
                  u.splice(e, 1), c();
                }),
                (o.render = function () {
                  return i.createElement(r, this.props);
                }),
                a
              );
            })(a.PureComponent);
            return (
              o(
                f,
                "displayName",
                "SideEffect(" +
                  (function (e) {
                    return e.displayName || e.name || "Component";
                  })(r) +
                  ")"
              ),
              o(f, "canUseDOM", s),
              f
            );
          };
        };
      },
      374: function (e, t, n) {
        "use strict";
        var r = n(791),
          a = Symbol.for("react.element"),
          i = Symbol.for("react.fragment"),
          o = Object.prototype.hasOwnProperty,
          s =
            r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
              .ReactCurrentOwner,
          l = { key: !0, ref: !0, __self: !0, __source: !0 };
        function u(e, t, n) {
          var r,
            i = {},
            u = null,
            c = null;
          for (r in (void 0 !== n && (u = "" + n),
          void 0 !== t.key && (u = "" + t.key),
          void 0 !== t.ref && (c = t.ref),
          t))
            o.call(t, r) && !l.hasOwnProperty(r) && (i[r] = t[r]);
          if (e && e.defaultProps)
            for (r in (t = e.defaultProps)) void 0 === i[r] && (i[r] = t[r]);
          return {
            $$typeof: a,
            type: e,
            key: u,
            ref: c,
            props: i,
            _owner: s.current,
          };
        }
        (t.Fragment = i), (t.jsx = u), (t.jsxs = u);
      },
      117: function (e, t) {
        "use strict";
        var n = Symbol.for("react.element"),
          r = Symbol.for("react.portal"),
          a = Symbol.for("react.fragment"),
          i = Symbol.for("react.strict_mode"),
          o = Symbol.for("react.profiler"),
          s = Symbol.for("react.provider"),
          l = Symbol.for("react.context"),
          u = Symbol.for("react.forward_ref"),
          c = Symbol.for("react.suspense"),
          f = Symbol.for("react.memo"),
          d = Symbol.for("react.lazy"),
          h = Symbol.iterator;
        var p = {
            isMounted: function () {
              return !1;
            },
            enqueueForceUpdate: function () {},
            enqueueReplaceState: function () {},
            enqueueSetState: function () {},
          },
          v = Object.assign,
          m = {};
        function g(e, t, n) {
          (this.props = e),
            (this.context = t),
            (this.refs = m),
            (this.updater = n || p);
        }
        function y() {}
        function _(e, t, n) {
          (this.props = e),
            (this.context = t),
            (this.refs = m),
            (this.updater = n || p);
        }
        (g.prototype.isReactComponent = {}),
          (g.prototype.setState = function (e, t) {
            if ("object" !== typeof e && "function" !== typeof e && null != e)
              throw Error(
                "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
              );
            this.updater.enqueueSetState(this, e, t, "setState");
          }),
          (g.prototype.forceUpdate = function (e) {
            this.updater.enqueueForceUpdate(this, e, "forceUpdate");
          }),
          (y.prototype = g.prototype);
        var b = (_.prototype = new y());
        (b.constructor = _), v(b, g.prototype), (b.isPureReactComponent = !0);
        var x = Array.isArray,
          S = Object.prototype.hasOwnProperty,
          E = { current: null },
          w = { key: !0, ref: !0, __self: !0, __source: !0 };
        function T(e, t, r) {
          var a,
            i = {},
            o = null,
            s = null;
          if (null != t)
            for (a in (void 0 !== t.ref && (s = t.ref),
            void 0 !== t.key && (o = "" + t.key),
            t))
              S.call(t, a) && !w.hasOwnProperty(a) && (i[a] = t[a]);
          var l = arguments.length - 2;
          if (1 === l) i.children = r;
          else if (1 < l) {
            for (var u = Array(l), c = 0; c < l; c++) u[c] = arguments[c + 2];
            i.children = u;
          }
          if (e && e.defaultProps)
            for (a in (l = e.defaultProps)) void 0 === i[a] && (i[a] = l[a]);
          return {
            $$typeof: n,
            type: e,
            key: o,
            ref: s,
            props: i,
            _owner: E.current,
          };
        }
        function M(e) {
          return "object" === typeof e && null !== e && e.$$typeof === n;
        }
        var A = /\/+/g;
        function C(e, t) {
          return "object" === typeof e && null !== e && null != e.key
            ? (function (e) {
                var t = { "=": "=0", ":": "=2" };
                return (
                  "$" +
                  e.replace(/[=:]/g, function (e) {
                    return t[e];
                  })
                );
              })("" + e.key)
            : t.toString(36);
        }
        function k(e, t, a, i, o) {
          var s = typeof e;
          ("undefined" !== s && "boolean" !== s) || (e = null);
          var l = !1;
          if (null === e) l = !0;
          else
            switch (s) {
              case "string":
              case "number":
                l = !0;
                break;
              case "object":
                switch (e.$$typeof) {
                  case n:
                  case r:
                    l = !0;
                }
            }
          if (l)
            return (
              (o = o((l = e))),
              (e = "" === i ? "." + C(l, 0) : i),
              x(o)
                ? ((a = ""),
                  null != e && (a = e.replace(A, "$&/") + "/"),
                  k(o, t, a, "", function (e) {
                    return e;
                  }))
                : null != o &&
                  (M(o) &&
                    (o = (function (e, t) {
                      return {
                        $$typeof: n,
                        type: e.type,
                        key: t,
                        ref: e.ref,
                        props: e.props,
                        _owner: e._owner,
                      };
                    })(
                      o,
                      a +
                        (!o.key || (l && l.key === o.key)
                          ? ""
                          : ("" + o.key).replace(A, "$&/") + "/") +
                        e
                    )),
                  t.push(o)),
              1
            );
          if (((l = 0), (i = "" === i ? "." : i + ":"), x(e)))
            for (var u = 0; u < e.length; u++) {
              var c = i + C((s = e[u]), u);
              l += k(s, t, a, c, o);
            }
          else if (
            ((c = (function (e) {
              return null === e || "object" !== typeof e
                ? null
                : "function" === typeof (e = (h && e[h]) || e["@@iterator"])
                ? e
                : null;
            })(e)),
            "function" === typeof c)
          )
            for (e = c.call(e), u = 0; !(s = e.next()).done; )
              l += k((s = s.value), t, a, (c = i + C(s, u++)), o);
          else if ("object" === s)
            throw (
              ((t = String(e)),
              Error(
                "Objects are not valid as a React child (found: " +
                  ("[object Object]" === t
                    ? "object with keys {" + Object.keys(e).join(", ") + "}"
                    : t) +
                  "). If you meant to render a collection of children, use an array instead."
              ))
            );
          return l;
        }
        function R(e, t, n) {
          if (null == e) return e;
          var r = [],
            a = 0;
          return (
            k(e, r, "", "", function (e) {
              return t.call(n, e, a++);
            }),
            r
          );
        }
        function P(e) {
          if (-1 === e._status) {
            var t = e._result;
            (t = t()).then(
              function (t) {
                (0 !== e._status && -1 !== e._status) ||
                  ((e._status = 1), (e._result = t));
              },
              function (t) {
                (0 !== e._status && -1 !== e._status) ||
                  ((e._status = 2), (e._result = t));
              }
            ),
              -1 === e._status && ((e._status = 0), (e._result = t));
          }
          if (1 === e._status) return e._result.default;
          throw e._result;
        }
        var U = { current: null },
          L = { transition: null },
          D = {
            ReactCurrentDispatcher: U,
            ReactCurrentBatchConfig: L,
            ReactCurrentOwner: E,
          };
        (t.Children = {
          map: R,
          forEach: function (e, t, n) {
            R(
              e,
              function () {
                t.apply(this, arguments);
              },
              n
            );
          },
          count: function (e) {
            var t = 0;
            return (
              R(e, function () {
                t++;
              }),
              t
            );
          },
          toArray: function (e) {
            return (
              R(e, function (e) {
                return e;
              }) || []
            );
          },
          only: function (e) {
            if (!M(e))
              throw Error(
                "React.Children.only expected to receive a single React element child."
              );
            return e;
          },
        }),
          (t.Component = g),
          (t.Fragment = a),
          (t.Profiler = o),
          (t.PureComponent = _),
          (t.StrictMode = i),
          (t.Suspense = c),
          (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = D),
          (t.cloneElement = function (e, t, r) {
            if (null === e || void 0 === e)
              throw Error(
                "React.cloneElement(...): The argument must be a React element, but you passed " +
                  e +
                  "."
              );
            var a = v({}, e.props),
              i = e.key,
              o = e.ref,
              s = e._owner;
            if (null != t) {
              if (
                (void 0 !== t.ref && ((o = t.ref), (s = E.current)),
                void 0 !== t.key && (i = "" + t.key),
                e.type && e.type.defaultProps)
              )
                var l = e.type.defaultProps;
              for (u in t)
                S.call(t, u) &&
                  !w.hasOwnProperty(u) &&
                  (a[u] = void 0 === t[u] && void 0 !== l ? l[u] : t[u]);
            }
            var u = arguments.length - 2;
            if (1 === u) a.children = r;
            else if (1 < u) {
              l = Array(u);
              for (var c = 0; c < u; c++) l[c] = arguments[c + 2];
              a.children = l;
            }
            return {
              $$typeof: n,
              type: e.type,
              key: i,
              ref: o,
              props: a,
              _owner: s,
            };
          }),
          (t.createContext = function (e) {
            return (
              ((e = {
                $$typeof: l,
                _currentValue: e,
                _currentValue2: e,
                _threadCount: 0,
                Provider: null,
                Consumer: null,
                _defaultValue: null,
                _globalName: null,
              }).Provider = { $$typeof: s, _context: e }),
              (e.Consumer = e)
            );
          }),
          (t.createElement = T),
          (t.createFactory = function (e) {
            var t = T.bind(null, e);
            return (t.type = e), t;
          }),
          (t.createRef = function () {
            return { current: null };
          }),
          (t.forwardRef = function (e) {
            return { $$typeof: u, render: e };
          }),
          (t.isValidElement = M),
          (t.lazy = function (e) {
            return {
              $$typeof: d,
              _payload: { _status: -1, _result: e },
              _init: P,
            };
          }),
          (t.memo = function (e, t) {
            return { $$typeof: f, type: e, compare: void 0 === t ? null : t };
          }),
          (t.startTransition = function (e) {
            var t = L.transition;
            L.transition = {};
            try {
              e();
            } finally {
              L.transition = t;
            }
          }),
          (t.unstable_act = function () {
            throw Error(
              "act(...) is not supported in production builds of React."
            );
          }),
          (t.useCallback = function (e, t) {
            return U.current.useCallback(e, t);
          }),
          (t.useContext = function (e) {
            return U.current.useContext(e);
          }),
          (t.useDebugValue = function () {}),
          (t.useDeferredValue = function (e) {
            return U.current.useDeferredValue(e);
          }),
          (t.useEffect = function (e, t) {
            return U.current.useEffect(e, t);
          }),
          (t.useId = function () {
            return U.current.useId();
          }),
          (t.useImperativeHandle = function (e, t, n) {
            return U.current.useImperativeHandle(e, t, n);
          }),
          (t.useInsertionEffect = function (e, t) {
            return U.current.useInsertionEffect(e, t);
          }),
          (t.useLayoutEffect = function (e, t) {
            return U.current.useLayoutEffect(e, t);
          }),
          (t.useMemo = function (e, t) {
            return U.current.useMemo(e, t);
          }),
          (t.useReducer = function (e, t, n) {
            return U.current.useReducer(e, t, n);
          }),
          (t.useRef = function (e) {
            return U.current.useRef(e);
          }),
          (t.useState = function (e) {
            return U.current.useState(e);
          }),
          (t.useSyncExternalStore = function (e, t, n) {
            return U.current.useSyncExternalStore(e, t, n);
          }),
          (t.useTransition = function () {
            return U.current.useTransition();
          }),
          (t.version = "18.2.0");
      },
      791: function (e, t, n) {
        "use strict";
        e.exports = n(117);
      },
      184: function (e, t, n) {
        "use strict";
        e.exports = n(374);
      },
      813: function (e, t) {
        "use strict";
        function n(e, t) {
          var n = e.length;
          e.push(t);
          e: for (; 0 < n; ) {
            var r = (n - 1) >>> 1,
              a = e[r];
            if (!(0 < i(a, t))) break e;
            (e[r] = t), (e[n] = a), (n = r);
          }
        }
        function r(e) {
          return 0 === e.length ? null : e[0];
        }
        function a(e) {
          if (0 === e.length) return null;
          var t = e[0],
            n = e.pop();
          if (n !== t) {
            e[0] = n;
            e: for (var r = 0, a = e.length, o = a >>> 1; r < o; ) {
              var s = 2 * (r + 1) - 1,
                l = e[s],
                u = s + 1,
                c = e[u];
              if (0 > i(l, n))
                u < a && 0 > i(c, l)
                  ? ((e[r] = c), (e[u] = n), (r = u))
                  : ((e[r] = l), (e[s] = n), (r = s));
              else {
                if (!(u < a && 0 > i(c, n))) break e;
                (e[r] = c), (e[u] = n), (r = u);
              }
            }
          }
          return t;
        }
        function i(e, t) {
          var n = e.sortIndex - t.sortIndex;
          return 0 !== n ? n : e.id - t.id;
        }
        if (
          "object" === typeof performance &&
          "function" === typeof performance.now
        ) {
          var o = performance;
          t.unstable_now = function () {
            return o.now();
          };
        } else {
          var s = Date,
            l = s.now();
          t.unstable_now = function () {
            return s.now() - l;
          };
        }
        var u = [],
          c = [],
          f = 1,
          d = null,
          h = 3,
          p = !1,
          v = !1,
          m = !1,
          g = "function" === typeof setTimeout ? setTimeout : null,
          y = "function" === typeof clearTimeout ? clearTimeout : null,
          _ = "undefined" !== typeof setImmediate ? setImmediate : null;
        function b(e) {
          for (var t = r(c); null !== t; ) {
            if (null === t.callback) a(c);
            else {
              if (!(t.startTime <= e)) break;
              a(c), (t.sortIndex = t.expirationTime), n(u, t);
            }
            t = r(c);
          }
        }
        function x(e) {
          if (((m = !1), b(e), !v))
            if (null !== r(u)) (v = !0), L(S);
            else {
              var t = r(c);
              null !== t && D(x, t.startTime - e);
            }
        }
        function S(e, n) {
          (v = !1), m && ((m = !1), y(M), (M = -1)), (p = !0);
          var i = h;
          try {
            for (
              b(n), d = r(u);
              null !== d && (!(d.expirationTime > n) || (e && !k()));

            ) {
              var o = d.callback;
              if ("function" === typeof o) {
                (d.callback = null), (h = d.priorityLevel);
                var s = o(d.expirationTime <= n);
                (n = t.unstable_now()),
                  "function" === typeof s
                    ? (d.callback = s)
                    : d === r(u) && a(u),
                  b(n);
              } else a(u);
              d = r(u);
            }
            if (null !== d) var l = !0;
            else {
              var f = r(c);
              null !== f && D(x, f.startTime - n), (l = !1);
            }
            return l;
          } finally {
            (d = null), (h = i), (p = !1);
          }
        }
        "undefined" !== typeof navigator &&
          void 0 !== navigator.scheduling &&
          void 0 !== navigator.scheduling.isInputPending &&
          navigator.scheduling.isInputPending.bind(navigator.scheduling);
        var E,
          w = !1,
          T = null,
          M = -1,
          A = 5,
          C = -1;
        function k() {
          return !(t.unstable_now() - C < A);
        }
        function R() {
          if (null !== T) {
            var e = t.unstable_now();
            C = e;
            var n = !0;
            try {
              n = T(!0, e);
            } finally {
              n ? E() : ((w = !1), (T = null));
            }
          } else w = !1;
        }
        if ("function" === typeof _)
          E = function () {
            _(R);
          };
        else if ("undefined" !== typeof MessageChannel) {
          var P = new MessageChannel(),
            U = P.port2;
          (P.port1.onmessage = R),
            (E = function () {
              U.postMessage(null);
            });
        } else
          E = function () {
            g(R, 0);
          };
        function L(e) {
          (T = e), w || ((w = !0), E());
        }
        function D(e, n) {
          M = g(function () {
            e(t.unstable_now());
          }, n);
        }
        (t.unstable_IdlePriority = 5),
          (t.unstable_ImmediatePriority = 1),
          (t.unstable_LowPriority = 4),
          (t.unstable_NormalPriority = 3),
          (t.unstable_Profiling = null),
          (t.unstable_UserBlockingPriority = 2),
          (t.unstable_cancelCallback = function (e) {
            e.callback = null;
          }),
          (t.unstable_continueExecution = function () {
            v || p || ((v = !0), L(S));
          }),
          (t.unstable_forceFrameRate = function (e) {
            0 > e || 125 < e
              ? console.error(
                  "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
                )
              : (A = 0 < e ? Math.floor(1e3 / e) : 5);
          }),
          (t.unstable_getCurrentPriorityLevel = function () {
            return h;
          }),
          (t.unstable_getFirstCallbackNode = function () {
            return r(u);
          }),
          (t.unstable_next = function (e) {
            switch (h) {
              case 1:
              case 2:
              case 3:
                var t = 3;
                break;
              default:
                t = h;
            }
            var n = h;
            h = t;
            try {
              return e();
            } finally {
              h = n;
            }
          }),
          (t.unstable_pauseExecution = function () {}),
          (t.unstable_requestPaint = function () {}),
          (t.unstable_runWithPriority = function (e, t) {
            switch (e) {
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
                break;
              default:
                e = 3;
            }
            var n = h;
            h = e;
            try {
              return t();
            } finally {
              h = n;
            }
          }),
          (t.unstable_scheduleCallback = function (e, a, i) {
            var o = t.unstable_now();
            switch (
              ("object" === typeof i && null !== i
                ? (i = "number" === typeof (i = i.delay) && 0 < i ? o + i : o)
                : (i = o),
              e)
            ) {
              case 1:
                var s = -1;
                break;
              case 2:
                s = 250;
                break;
              case 5:
                s = 1073741823;
                break;
              case 4:
                s = 1e4;
                break;
              default:
                s = 5e3;
            }
            return (
              (e = {
                id: f++,
                callback: a,
                priorityLevel: e,
                startTime: i,
                expirationTime: (s = i + s),
                sortIndex: -1,
              }),
              i > o
                ? ((e.sortIndex = i),
                  n(c, e),
                  null === r(u) &&
                    e === r(c) &&
                    (m ? (y(M), (M = -1)) : (m = !0), D(x, i - o)))
                : ((e.sortIndex = s), n(u, e), v || p || ((v = !0), L(S))),
              e
            );
          }),
          (t.unstable_shouldYield = k),
          (t.unstable_wrapCallback = function (e) {
            var t = h;
            return function () {
              var n = h;
              h = t;
              try {
                return e.apply(this, arguments);
              } finally {
                h = n;
              }
            };
          });
      },
      296: function (e, t, n) {
        "use strict";
        e.exports = n(813);
      },
    },
    t = {};
  function n(r) {
    var a = t[r];
    if (void 0 !== a) return a.exports;
    var i = (t[r] = { exports: {} });
    return e[r](i, i.exports, n), i.exports;
  }
  (n.m = e),
    (n.n = function (e) {
      var t =
        e && e.__esModule
          ? function () {
              return e.default;
            }
          : function () {
              return e;
            };
      return n.d(t, { a: t }), t;
    }),
    (function () {
      var e,
        t = Object.getPrototypeOf
          ? function (e) {
              return Object.getPrototypeOf(e);
            }
          : function (e) {
              return e.__proto__;
            };
      n.t = function (r, a) {
        if ((1 & a && (r = this(r)), 8 & a)) return r;
        if ("object" === typeof r && r) {
          if (4 & a && r.__esModule) return r;
          if (16 & a && "function" === typeof r.then) return r;
        }
        var i = Object.create(null);
        n.r(i);
        var o = {};
        e = e || [null, t({}), t([]), t(t)];
        for (
          var s = 2 & a && r;
          "object" == typeof s && !~e.indexOf(s);
          s = t(s)
        )
          Object.getOwnPropertyNames(s).forEach(function (e) {
            o[e] = function () {
              return r[e];
            };
          });
        return (
          (o.default = function () {
            return r;
          }),
          n.d(i, o),
          i
        );
      };
    })(),
    (n.d = function (e, t) {
      for (var r in t)
        n.o(t, r) &&
          !n.o(e, r) &&
          Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
    }),
    (n.f = {}),
    (n.e = function (e) {
      return Promise.all(
        Object.keys(n.f).reduce(function (t, r) {
          return n.f[r](e, t), t;
        }, [])
      );
    }),
    (n.u = function (e) {
      return "static/js/" + e + ".0c3f432a.chunk.js";
    }),
    (n.miniCssF = function (e) {}),
    (n.g = (function () {
      if ("object" === typeof globalThis) return globalThis;
      try {
        return this || new Function("return this")();
      } catch (e) {
        if ("object" === typeof window) return window;
      }
    })()),
    (n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (function () {
      var e = {},
        t = "test:";
      n.l = function (r, a, i, o) {
        if (e[r]) e[r].push(a);
        else {
          var s, l;
          if (void 0 !== i)
            for (
              var u = document.getElementsByTagName("script"), c = 0;
              c < u.length;
              c++
            ) {
              var f = u[c];
              if (
                f.getAttribute("src") == r ||
                f.getAttribute("data-webpack") == t + i
              ) {
                s = f;
                break;
              }
            }
          s ||
            ((l = !0),
            ((s = document.createElement("script")).charset = "utf-8"),
            (s.timeout = 120),
            n.nc && s.setAttribute("nonce", n.nc),
            s.setAttribute("data-webpack", t + i),
            (s.src = r)),
            (e[r] = [a]);
          var d = function (t, n) {
              (s.onerror = s.onload = null), clearTimeout(h);
              var a = e[r];
              if (
                (delete e[r],
                s.parentNode && s.parentNode.removeChild(s),
                a &&
                  a.forEach(function (e) {
                    return e(n);
                  }),
                t)
              )
                return t(n);
            },
            h = setTimeout(
              d.bind(null, void 0, { type: "timeout", target: s }),
              12e4
            );
          (s.onerror = d.bind(null, s.onerror)),
            (s.onload = d.bind(null, s.onload)),
            l && document.head.appendChild(s);
        }
      };
    })(),
    (n.r = function (e) {
      "undefined" !== typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    }),
    (n.p = "./"),
    (function () {
      var e = { 179: 0 };
      n.f.j = function (t, r) {
        var a = n.o(e, t) ? e[t] : void 0;
        if (0 !== a)
          if (a) r.push(a[2]);
          else {
            var i = new Promise(function (n, r) {
              a = e[t] = [n, r];
            });
            r.push((a[2] = i));
            var o = n.p + n.u(t),
              s = new Error();
            n.l(
              o,
              function (r) {
                if (n.o(e, t) && (0 !== (a = e[t]) && (e[t] = void 0), a)) {
                  var i = r && ("load" === r.type ? "missing" : r.type),
                    o = r && r.target && r.target.src;
                  (s.message =
                    "Loading chunk " + t + " failed.\n(" + i + ": " + o + ")"),
                    (s.name = "ChunkLoadError"),
                    (s.type = i),
                    (s.request = o),
                    a[1](s);
                }
              },
              "chunk-" + t,
              t
            );
          }
      };
      var t = function (t, r) {
          var a,
            i,
            o = r[0],
            s = r[1],
            l = r[2],
            u = 0;
          if (
            o.some(function (t) {
              return 0 !== e[t];
            })
          ) {
            for (a in s) n.o(s, a) && (n.m[a] = s[a]);
            if (l) l(n);
          }
          for (t && t(r); u < o.length; u++)
            (i = o[u]), n.o(e, i) && e[i] && e[i][0](), (e[i] = 0);
        },
        r = (self.webpackChunktest = self.webpackChunktest || []);
      r.forEach(t.bind(null, 0)), (r.push = t.bind(null, r.push.bind(r)));
    })(),
    (function () {
      "use strict";
      var e = n(791),
        t = n.t(e, 2),
        r = n(250);
      function a(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
        return r;
      }
      function i(e, t) {
        if (e) {
          if ("string" === typeof e) return a(e, t);
          var n = Object.prototype.toString.call(e).slice(8, -1);
          return (
            "Object" === n && e.constructor && (n = e.constructor.name),
            "Map" === n || "Set" === n
              ? Array.from(e)
              : "Arguments" === n ||
                /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
              ? a(e, t)
              : void 0
          );
        }
      }
      function o(e, t) {
        return (
          (function (e) {
            if (Array.isArray(e)) return e;
          })(e) ||
          (function (e, t) {
            var n =
              null == e
                ? null
                : ("undefined" != typeof Symbol && e[Symbol.iterator]) ||
                  e["@@iterator"];
            if (null != n) {
              var r,
                a,
                i,
                o,
                s = [],
                l = !0,
                u = !1;
              try {
                if (((i = (n = n.call(e)).next), 0 === t)) {
                  if (Object(n) !== n) return;
                  l = !1;
                } else
                  for (
                    ;
                    !(l = (r = i.call(n)).done) &&
                    (s.push(r.value), s.length !== t);
                    l = !0
                  );
              } catch (e) {
                (u = !0), (a = e);
              } finally {
                try {
                  if (
                    !l &&
                    null != n.return &&
                    ((o = n.return()), Object(o) !== o)
                  )
                    return;
                } finally {
                  if (u) throw a;
                }
              }
              return s;
            }
          })(e, t) ||
          i(e, t) ||
          (function () {
            throw new TypeError(
              "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
            );
          })()
        );
      }
      var s,
        l = n(184),
        u = function (t) {
          var n = t.onSubmit,
            r = o((0, e.useState)(""), 2),
            a = r[0],
            i = r[1],
            s = o((0, e.useState)(""), 2),
            u = s[0],
            c = s[1];
          return (0, l.jsx)(l.Fragment, {
            children: (0, l.jsxs)("div", {
              className: "inputbox",
              children: [
                u &&
                  (0, l.jsx)("p", {
                    className: "error-message",
                    style: { color: "white" },
                    children: u,
                  }),
                (0, l.jsxs)("div", {
                  className: "money-input-container",
                  children: [
                    (0, l.jsx)("input", {
                      type: "text",
                      placeholder: "Enter the money",
                      className: "money-input",
                      value: a,
                      onChange: function (e) {
                        var t = e.target.value;
                        t.match(/^\d*\.?\d*$/)
                          ? c("")
                          : c("Please enter a valid number"),
                          i(t);
                      },
                    }),
                    (0, l.jsx)("button", {
                      className: "submit-button",
                      onClick: function () {
                        u || "" === a || (n(parseFloat(a)), i(""));
                      },
                      children: "Send",
                    }),
                  ],
                }),
              ],
            }),
          });
        },
        c = function (e) {
          var t = e.onStartClick;
          return (0, l.jsx)("div", {
            className: "start",
            children: (0, l.jsx)("button", {
              type: "button",
              class: "btn btn-outline-info btn-start",
              onClick: t,
              children: "Start",
            }),
          });
        };
      function f(e) {
        return (
          (function (e) {
            if (Array.isArray(e)) return a(e);
          })(e) ||
          (function (e) {
            if (
              ("undefined" !== typeof Symbol && null != e[Symbol.iterator]) ||
              null != e["@@iterator"]
            )
              return Array.from(e);
          })(e) ||
          i(e) ||
          (function () {
            throw new TypeError(
              "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
            );
          })()
        );
      }
      function d(e, t, n, r, a, i, o) {
        try {
          var s = e[i](o),
            l = s.value;
        } catch (u) {
          return void n(u);
        }
        s.done ? t(l) : Promise.resolve(l).then(r, a);
      }
      function h(e, t) {
        var n =
          ("undefined" !== typeof Symbol && e[Symbol.iterator]) ||
          e["@@iterator"];
        if (!n) {
          if (
            Array.isArray(e) ||
            (n = i(e)) ||
            (t && e && "number" === typeof e.length)
          ) {
            n && (e = n);
            var r = 0,
              a = function () {};
            return {
              s: a,
              n: function () {
                return r >= e.length
                  ? { done: !0 }
                  : { done: !1, value: e[r++] };
              },
              e: function (e) {
                throw e;
              },
              f: a,
            };
          }
          throw new TypeError(
            "Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
          );
        }
        var o,
          s = !0,
          l = !1;
        return {
          s: function () {
            n = n.call(e);
          },
          n: function () {
            var e = n.next();
            return (s = e.done), e;
          },
          e: function (e) {
            (l = !0), (o = e);
          },
          f: function () {
            try {
              s || null == n.return || n.return();
            } finally {
              if (l) throw o;
            }
          },
        };
      }
      function p(e) {
        return (
          (p = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              }),
          p(e)
        );
      }
      function v() {
        return (
          (v =
            "undefined" !== typeof Reflect && Reflect.get
              ? Reflect.get.bind()
              : function (e, t, n) {
                  var r = (function (e, t) {
                    for (
                      ;
                      !Object.prototype.hasOwnProperty.call(e, t) &&
                      null !== (e = p(e));

                    );
                    return e;
                  })(e, t);
                  if (r) {
                    var a = Object.getOwnPropertyDescriptor(r, t);
                    return a.get
                      ? a.get.call(arguments.length < 3 ? e : n)
                      : a.value;
                  }
                }),
          v.apply(this, arguments)
        );
      }
      function m(e) {
        if (void 0 === e)
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return e;
      }
      function g(e, t) {
        return (
          (g = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (e, t) {
                return (e.__proto__ = t), e;
              }),
          g(e, t)
        );
      }
      function y(e, t) {
        if ("function" !== typeof t && null !== t)
          throw new TypeError(
            "Super expression must either be null or a function"
          );
        (e.prototype = Object.create(t && t.prototype, {
          constructor: { value: e, writable: !0, configurable: !0 },
        })),
          Object.defineProperty(e, "prototype", { writable: !1 }),
          t && g(e, t);
      }
      function _(e) {
        return (
          (_ =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                }),
          _(e)
        );
      }
      function b(e) {
        var t = (function () {
          if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ("function" === typeof Proxy) return !0;
          try {
            return (
              Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
              ),
              !0
            );
          } catch (e) {
            return !1;
          }
        })();
        return function () {
          var n,
            r = p(e);
          if (t) {
            var a = p(this).constructor;
            n = Reflect.construct(r, arguments, a);
          } else n = r.apply(this, arguments);
          return (function (e, t) {
            if (t && ("object" === _(t) || "function" === typeof t)) return t;
            if (void 0 !== t)
              throw new TypeError(
                "Derived constructors may only return object or undefined"
              );
            return m(e);
          })(this, n);
        };
      }
      function x(e) {
        var t = (function (e, t) {
          if ("object" !== _(e) || null === e) return e;
          var n = e[Symbol.toPrimitive];
          if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" !== _(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === t ? String : Number)(e);
        })(e, "string");
        return "symbol" === _(t) ? t : String(t);
      }
      function S(e, t, n) {
        return (
          (t = x(t)) in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      function E() {
        E = function () {
          return t;
        };
        var e,
          t = {},
          n = Object.prototype,
          r = n.hasOwnProperty,
          a =
            Object.defineProperty ||
            function (e, t, n) {
              e[t] = n.value;
            },
          i = "function" == typeof Symbol ? Symbol : {},
          o = i.iterator || "@@iterator",
          s = i.asyncIterator || "@@asyncIterator",
          l = i.toStringTag || "@@toStringTag";
        function u(e, t, n) {
          return (
            Object.defineProperty(e, t, {
              value: n,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            }),
            e[t]
          );
        }
        try {
          u({}, "");
        } catch (e) {
          u = function (e, t, n) {
            return (e[t] = n);
          };
        }
        function c(e, t, n, r) {
          var i = t && t.prototype instanceof g ? t : g,
            o = Object.create(i.prototype),
            s = new U(r || []);
          return a(o, "_invoke", { value: C(e, n, s) }), o;
        }
        function f(e, t, n) {
          try {
            return { type: "normal", arg: e.call(t, n) };
          } catch (e) {
            return { type: "throw", arg: e };
          }
        }
        t.wrap = c;
        var d = "suspendedStart",
          h = "suspendedYield",
          p = "executing",
          v = "completed",
          m = {};
        function g() {}
        function y() {}
        function b() {}
        var x = {};
        u(x, o, function () {
          return this;
        });
        var S = Object.getPrototypeOf,
          w = S && S(S(L([])));
        w && w !== n && r.call(w, o) && (x = w);
        var T = (b.prototype = g.prototype = Object.create(x));
        function M(e) {
          ["next", "throw", "return"].forEach(function (t) {
            u(e, t, function (e) {
              return this._invoke(t, e);
            });
          });
        }
        function A(e, t) {
          function n(a, i, o, s) {
            var l = f(e[a], e, i);
            if ("throw" !== l.type) {
              var u = l.arg,
                c = u.value;
              return c && "object" == _(c) && r.call(c, "__await")
                ? t.resolve(c.__await).then(
                    function (e) {
                      n("next", e, o, s);
                    },
                    function (e) {
                      n("throw", e, o, s);
                    }
                  )
                : t.resolve(c).then(
                    function (e) {
                      (u.value = e), o(u);
                    },
                    function (e) {
                      return n("throw", e, o, s);
                    }
                  );
            }
            s(l.arg);
          }
          var i;
          a(this, "_invoke", {
            value: function (e, r) {
              function a() {
                return new t(function (t, a) {
                  n(e, r, t, a);
                });
              }
              return (i = i ? i.then(a, a) : a());
            },
          });
        }
        function C(t, n, r) {
          var a = d;
          return function (i, o) {
            if (a === p) throw new Error("Generator is already running");
            if (a === v) {
              if ("throw" === i) throw o;
              return { value: e, done: !0 };
            }
            for (r.method = i, r.arg = o; ; ) {
              var s = r.delegate;
              if (s) {
                var l = k(s, r);
                if (l) {
                  if (l === m) continue;
                  return l;
                }
              }
              if ("next" === r.method) r.sent = r._sent = r.arg;
              else if ("throw" === r.method) {
                if (a === d) throw ((a = v), r.arg);
                r.dispatchException(r.arg);
              } else "return" === r.method && r.abrupt("return", r.arg);
              a = p;
              var u = f(t, n, r);
              if ("normal" === u.type) {
                if (((a = r.done ? v : h), u.arg === m)) continue;
                return { value: u.arg, done: r.done };
              }
              "throw" === u.type &&
                ((a = v), (r.method = "throw"), (r.arg = u.arg));
            }
          };
        }
        function k(t, n) {
          var r = n.method,
            a = t.iterator[r];
          if (a === e)
            return (
              (n.delegate = null),
              ("throw" === r &&
                t.iterator.return &&
                ((n.method = "return"),
                (n.arg = e),
                k(t, n),
                "throw" === n.method)) ||
                ("return" !== r &&
                  ((n.method = "throw"),
                  (n.arg = new TypeError(
                    "The iterator does not provide a '" + r + "' method"
                  )))),
              m
            );
          var i = f(a, t.iterator, n.arg);
          if ("throw" === i.type)
            return (
              (n.method = "throw"), (n.arg = i.arg), (n.delegate = null), m
            );
          var o = i.arg;
          return o
            ? o.done
              ? ((n[t.resultName] = o.value),
                (n.next = t.nextLoc),
                "return" !== n.method && ((n.method = "next"), (n.arg = e)),
                (n.delegate = null),
                m)
              : o
            : ((n.method = "throw"),
              (n.arg = new TypeError("iterator result is not an object")),
              (n.delegate = null),
              m);
        }
        function R(e) {
          var t = { tryLoc: e[0] };
          1 in e && (t.catchLoc = e[1]),
            2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])),
            this.tryEntries.push(t);
        }
        function P(e) {
          var t = e.completion || {};
          (t.type = "normal"), delete t.arg, (e.completion = t);
        }
        function U(e) {
          (this.tryEntries = [{ tryLoc: "root" }]),
            e.forEach(R, this),
            this.reset(!0);
        }
        function L(t) {
          if (t || "" === t) {
            var n = t[o];
            if (n) return n.call(t);
            if ("function" == typeof t.next) return t;
            if (!isNaN(t.length)) {
              var a = -1,
                i = function n() {
                  for (; ++a < t.length; )
                    if (r.call(t, a)) return (n.value = t[a]), (n.done = !1), n;
                  return (n.value = e), (n.done = !0), n;
                };
              return (i.next = i);
            }
          }
          throw new TypeError(_(t) + " is not iterable");
        }
        return (
          (y.prototype = b),
          a(T, "constructor", { value: b, configurable: !0 }),
          a(b, "constructor", { value: y, configurable: !0 }),
          (y.displayName = u(b, l, "GeneratorFunction")),
          (t.isGeneratorFunction = function (e) {
            var t = "function" == typeof e && e.constructor;
            return (
              !!t &&
              (t === y || "GeneratorFunction" === (t.displayName || t.name))
            );
          }),
          (t.mark = function (e) {
            return (
              Object.setPrototypeOf
                ? Object.setPrototypeOf(e, b)
                : ((e.__proto__ = b), u(e, l, "GeneratorFunction")),
              (e.prototype = Object.create(T)),
              e
            );
          }),
          (t.awrap = function (e) {
            return { __await: e };
          }),
          M(A.prototype),
          u(A.prototype, s, function () {
            return this;
          }),
          (t.AsyncIterator = A),
          (t.async = function (e, n, r, a, i) {
            void 0 === i && (i = Promise);
            var o = new A(c(e, n, r, a), i);
            return t.isGeneratorFunction(n)
              ? o
              : o.next().then(function (e) {
                  return e.done ? e.value : o.next();
                });
          }),
          M(T),
          u(T, l, "Generator"),
          u(T, o, function () {
            return this;
          }),
          u(T, "toString", function () {
            return "[object Generator]";
          }),
          (t.keys = function (e) {
            var t = Object(e),
              n = [];
            for (var r in t) n.push(r);
            return (
              n.reverse(),
              function e() {
                for (; n.length; ) {
                  var r = n.pop();
                  if (r in t) return (e.value = r), (e.done = !1), e;
                }
                return (e.done = !0), e;
              }
            );
          }),
          (t.values = L),
          (U.prototype = {
            constructor: U,
            reset: function (t) {
              if (
                ((this.prev = 0),
                (this.next = 0),
                (this.sent = this._sent = e),
                (this.done = !1),
                (this.delegate = null),
                (this.method = "next"),
                (this.arg = e),
                this.tryEntries.forEach(P),
                !t)
              )
                for (var n in this)
                  "t" === n.charAt(0) &&
                    r.call(this, n) &&
                    !isNaN(+n.slice(1)) &&
                    (this[n] = e);
            },
            stop: function () {
              this.done = !0;
              var e = this.tryEntries[0].completion;
              if ("throw" === e.type) throw e.arg;
              return this.rval;
            },
            dispatchException: function (t) {
              if (this.done) throw t;
              var n = this;
              function a(r, a) {
                return (
                  (s.type = "throw"),
                  (s.arg = t),
                  (n.next = r),
                  a && ((n.method = "next"), (n.arg = e)),
                  !!a
                );
              }
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var o = this.tryEntries[i],
                  s = o.completion;
                if ("root" === o.tryLoc) return a("end");
                if (o.tryLoc <= this.prev) {
                  var l = r.call(o, "catchLoc"),
                    u = r.call(o, "finallyLoc");
                  if (l && u) {
                    if (this.prev < o.catchLoc) return a(o.catchLoc, !0);
                    if (this.prev < o.finallyLoc) return a(o.finallyLoc);
                  } else if (l) {
                    if (this.prev < o.catchLoc) return a(o.catchLoc, !0);
                  } else {
                    if (!u)
                      throw new Error("try statement without catch or finally");
                    if (this.prev < o.finallyLoc) return a(o.finallyLoc);
                  }
                }
              }
            },
            abrupt: function (e, t) {
              for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                var a = this.tryEntries[n];
                if (
                  a.tryLoc <= this.prev &&
                  r.call(a, "finallyLoc") &&
                  this.prev < a.finallyLoc
                ) {
                  var i = a;
                  break;
                }
              }
              i &&
                ("break" === e || "continue" === e) &&
                i.tryLoc <= t &&
                t <= i.finallyLoc &&
                (i = null);
              var o = i ? i.completion : {};
              return (
                (o.type = e),
                (o.arg = t),
                i
                  ? ((this.method = "next"), (this.next = i.finallyLoc), m)
                  : this.complete(o)
              );
            },
            complete: function (e, t) {
              if ("throw" === e.type) throw e.arg;
              return (
                "break" === e.type || "continue" === e.type
                  ? (this.next = e.arg)
                  : "return" === e.type
                  ? ((this.rval = this.arg = e.arg),
                    (this.method = "return"),
                    (this.next = "end"))
                  : "normal" === e.type && t && (this.next = t),
                m
              );
            },
            finish: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var n = this.tryEntries[t];
                if (n.finallyLoc === e)
                  return this.complete(n.completion, n.afterLoc), P(n), m;
              }
            },
            catch: function (e) {
              for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                var n = this.tryEntries[t];
                if (n.tryLoc === e) {
                  var r = n.completion;
                  if ("throw" === r.type) {
                    var a = r.arg;
                    P(n);
                  }
                  return a;
                }
              }
              throw new Error("illegal catch attempt");
            },
            delegateYield: function (t, n, r) {
              return (
                (this.delegate = { iterator: L(t), resultName: n, nextLoc: r }),
                "next" === this.method && (this.arg = e),
                m
              );
            },
          }),
          t
        );
      }
      function w(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      function T(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n];
          (r.enumerable = r.enumerable || !1),
            (r.configurable = !0),
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, x(r.key), r);
        }
      }
      function M(e, t, n) {
        return (
          t && T(e.prototype, t),
          n && T(e, n),
          Object.defineProperty(e, "prototype", { writable: !1 }),
          e
        );
      }
      var A = "158",
        C = 1,
        k = 2,
        R = 3,
        P = 0,
        U = 1,
        L = 100,
        D = 0,
        I = 1,
        O = 2,
        N = 0,
        F = 1,
        z = 2,
        B = 3,
        H = 4,
        G = 5,
        V = 301,
        W = 302,
        j = 303,
        X = 304,
        q = 306,
        Y = 1e3,
        K = 1001,
        $ = 1002,
        Z = 1003,
        J = 1004,
        Q = 1005,
        ee = 1006,
        te = 1008,
        ne = 1009,
        re = 1012,
        ae = 1013,
        ie = 1014,
        oe = 1015,
        se = 1016,
        le = 1020,
        ue = 1023,
        ce = 1026,
        fe = 1027,
        de = 33776,
        he = 33777,
        pe = 33778,
        ve = 33779,
        me = 36492,
        ge = 2300,
        ye = 2301,
        _e = 2302,
        be = 2400,
        xe = 2401,
        Se = 2402,
        Ee = 3001,
        we = 3201,
        Te = "",
        Me = "srgb",
        Ae = "srgb-linear",
        Ce = "display-p3",
        ke = "display-p3-linear",
        Re = "linear",
        Pe = "srgb",
        Ue = "rec709",
        Le = "p3",
        De = 7680,
        Ie = 35044,
        Oe = "300 es",
        Ne = 1035,
        Fe = 2e3,
        ze = 2001,
        Be = (function () {
          function e() {
            w(this, e);
          }
          return (
            M(e, [
              {
                key: "addEventListener",
                value: function (e, t) {
                  void 0 === this._listeners && (this._listeners = {});
                  var n = this._listeners;
                  void 0 === n[e] && (n[e] = []),
                    -1 === n[e].indexOf(t) && n[e].push(t);
                },
              },
              {
                key: "hasEventListener",
                value: function (e, t) {
                  if (void 0 === this._listeners) return !1;
                  var n = this._listeners;
                  return void 0 !== n[e] && -1 !== n[e].indexOf(t);
                },
              },
              {
                key: "removeEventListener",
                value: function (e, t) {
                  if (void 0 !== this._listeners) {
                    var n = this._listeners[e];
                    if (void 0 !== n) {
                      var r = n.indexOf(t);
                      -1 !== r && n.splice(r, 1);
                    }
                  }
                },
              },
              {
                key: "dispatchEvent",
                value: function (e) {
                  if (void 0 !== this._listeners) {
                    var t = this._listeners[e.type];
                    if (void 0 !== t) {
                      e.target = this;
                      for (var n = t.slice(0), r = 0, a = n.length; r < a; r++)
                        n[r].call(this, e);
                      e.target = null;
                    }
                  }
                },
              },
            ]),
            e
          );
        })(),
        He = [
          "00",
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "0a",
          "0b",
          "0c",
          "0d",
          "0e",
          "0f",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "1a",
          "1b",
          "1c",
          "1d",
          "1e",
          "1f",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "29",
          "2a",
          "2b",
          "2c",
          "2d",
          "2e",
          "2f",
          "30",
          "31",
          "32",
          "33",
          "34",
          "35",
          "36",
          "37",
          "38",
          "39",
          "3a",
          "3b",
          "3c",
          "3d",
          "3e",
          "3f",
          "40",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "49",
          "4a",
          "4b",
          "4c",
          "4d",
          "4e",
          "4f",
          "50",
          "51",
          "52",
          "53",
          "54",
          "55",
          "56",
          "57",
          "58",
          "59",
          "5a",
          "5b",
          "5c",
          "5d",
          "5e",
          "5f",
          "60",
          "61",
          "62",
          "63",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "6a",
          "6b",
          "6c",
          "6d",
          "6e",
          "6f",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "77",
          "78",
          "79",
          "7a",
          "7b",
          "7c",
          "7d",
          "7e",
          "7f",
          "80",
          "81",
          "82",
          "83",
          "84",
          "85",
          "86",
          "87",
          "88",
          "89",
          "8a",
          "8b",
          "8c",
          "8d",
          "8e",
          "8f",
          "90",
          "91",
          "92",
          "93",
          "94",
          "95",
          "96",
          "97",
          "98",
          "99",
          "9a",
          "9b",
          "9c",
          "9d",
          "9e",
          "9f",
          "a0",
          "a1",
          "a2",
          "a3",
          "a4",
          "a5",
          "a6",
          "a7",
          "a8",
          "a9",
          "aa",
          "ab",
          "ac",
          "ad",
          "ae",
          "af",
          "b0",
          "b1",
          "b2",
          "b3",
          "b4",
          "b5",
          "b6",
          "b7",
          "b8",
          "b9",
          "ba",
          "bb",
          "bc",
          "bd",
          "be",
          "bf",
          "c0",
          "c1",
          "c2",
          "c3",
          "c4",
          "c5",
          "c6",
          "c7",
          "c8",
          "c9",
          "ca",
          "cb",
          "cc",
          "cd",
          "ce",
          "cf",
          "d0",
          "d1",
          "d2",
          "d3",
          "d4",
          "d5",
          "d6",
          "d7",
          "d8",
          "d9",
          "da",
          "db",
          "dc",
          "dd",
          "de",
          "df",
          "e0",
          "e1",
          "e2",
          "e3",
          "e4",
          "e5",
          "e6",
          "e7",
          "e8",
          "e9",
          "ea",
          "eb",
          "ec",
          "ed",
          "ee",
          "ef",
          "f0",
          "f1",
          "f2",
          "f3",
          "f4",
          "f5",
          "f6",
          "f7",
          "f8",
          "f9",
          "fa",
          "fb",
          "fc",
          "fd",
          "fe",
          "ff",
        ],
        Ge = Math.PI / 180,
        Ve = 180 / Math.PI;
      function We() {
        var e = (4294967295 * Math.random()) | 0,
          t = (4294967295 * Math.random()) | 0,
          n = (4294967295 * Math.random()) | 0,
          r = (4294967295 * Math.random()) | 0;
        return (
          He[255 & e] +
          He[(e >> 8) & 255] +
          He[(e >> 16) & 255] +
          He[(e >> 24) & 255] +
          "-" +
          He[255 & t] +
          He[(t >> 8) & 255] +
          "-" +
          He[((t >> 16) & 15) | 64] +
          He[(t >> 24) & 255] +
          "-" +
          He[(63 & n) | 128] +
          He[(n >> 8) & 255] +
          "-" +
          He[(n >> 16) & 255] +
          He[(n >> 24) & 255] +
          He[255 & r] +
          He[(r >> 8) & 255] +
          He[(r >> 16) & 255] +
          He[(r >> 24) & 255]
        ).toLowerCase();
      }
      function je(e, t, n) {
        return Math.max(t, Math.min(n, e));
      }
      function Xe(e, t) {
        return ((e % t) + t) % t;
      }
      function qe(e, t, n) {
        return (1 - n) * e + n * t;
      }
      function Ye(e) {
        return 0 === (e & (e - 1)) && 0 !== e;
      }
      function Ke(e) {
        return Math.pow(2, Math.floor(Math.log(e) / Math.LN2));
      }
      function $e(e, t) {
        switch (t.constructor) {
          case Float32Array:
            return e;
          case Uint32Array:
            return e / 4294967295;
          case Uint16Array:
            return e / 65535;
          case Uint8Array:
            return e / 255;
          case Int32Array:
            return Math.max(e / 2147483647, -1);
          case Int16Array:
            return Math.max(e / 32767, -1);
          case Int8Array:
            return Math.max(e / 127, -1);
          default:
            throw new Error("Invalid component type.");
        }
      }
      function Ze(e, t) {
        switch (t.constructor) {
          case Float32Array:
            return e;
          case Uint32Array:
            return Math.round(4294967295 * e);
          case Uint16Array:
            return Math.round(65535 * e);
          case Uint8Array:
            return Math.round(255 * e);
          case Int32Array:
            return Math.round(2147483647 * e);
          case Int16Array:
            return Math.round(32767 * e);
          case Int8Array:
            return Math.round(127 * e);
          default:
            throw new Error("Invalid component type.");
        }
      }
      var Je = (function (e) {
          function t() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            w(this, t),
              (t.prototype.isVector2 = !0),
              (this.x = e),
              (this.y = n);
          }
          return (
            M(t, [
              {
                key: "width",
                get: function () {
                  return this.x;
                },
                set: function (e) {
                  this.x = e;
                },
              },
              {
                key: "height",
                get: function () {
                  return this.y;
                },
                set: function (e) {
                  this.y = e;
                },
              },
              {
                key: "set",
                value: function (e, t) {
                  return (this.x = e), (this.y = t), this;
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (this.x = e), (this.y = e), this;
                },
              },
              {
                key: "setX",
                value: function (e) {
                  return (this.x = e), this;
                },
              },
              {
                key: "setY",
                value: function (e) {
                  return (this.y = e), this;
                },
              },
              {
                key: "setComponent",
                value: function (e, t) {
                  switch (e) {
                    case 0:
                      this.x = t;
                      break;
                    case 1:
                      this.y = t;
                      break;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                  return this;
                },
              },
              {
                key: "getComponent",
                value: function (e) {
                  switch (e) {
                    case 0:
                      return this.x;
                    case 1:
                      return this.y;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.x, this.y);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.x = e.x), (this.y = e.y), this;
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (this.x += e.x), (this.y += e.y), this;
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (this.x += e), (this.y += e), this;
                },
              },
              {
                key: "addVectors",
                value: function (e, t) {
                  return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
                },
              },
              {
                key: "addScaledVector",
                value: function (e, t) {
                  return (this.x += e.x * t), (this.y += e.y * t), this;
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (this.x -= e.x), (this.y -= e.y), this;
                },
              },
              {
                key: "subScalar",
                value: function (e) {
                  return (this.x -= e), (this.y -= e), this;
                },
              },
              {
                key: "subVectors",
                value: function (e, t) {
                  return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (this.x *= e.x), (this.y *= e.y), this;
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (this.x *= e), (this.y *= e), this;
                },
              },
              {
                key: "divide",
                value: function (e) {
                  return (this.x /= e.x), (this.y /= e.y), this;
                },
              },
              {
                key: "divideScalar",
                value: function (e) {
                  return this.multiplyScalar(1 / e);
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = e.elements;
                  return (
                    (this.x = r[0] * t + r[3] * n + r[6]),
                    (this.y = r[1] * t + r[4] * n + r[7]),
                    this
                  );
                },
              },
              {
                key: "min",
                value: function (e) {
                  return (
                    (this.x = Math.min(this.x, e.x)),
                    (this.y = Math.min(this.y, e.y)),
                    this
                  );
                },
              },
              {
                key: "max",
                value: function (e) {
                  return (
                    (this.x = Math.max(this.x, e.x)),
                    (this.y = Math.max(this.y, e.y)),
                    this
                  );
                },
              },
              {
                key: "clamp",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e.x, Math.min(t.x, this.x))),
                    (this.y = Math.max(e.y, Math.min(t.y, this.y))),
                    this
                  );
                },
              },
              {
                key: "clampScalar",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e, Math.min(t, this.x))),
                    (this.y = Math.max(e, Math.min(t, this.y))),
                    this
                  );
                },
              },
              {
                key: "clampLength",
                value: function (e, t) {
                  var n = this.length();
                  return this.divideScalar(n || 1).multiplyScalar(
                    Math.max(e, Math.min(t, n))
                  );
                },
              },
              {
                key: "floor",
                value: function () {
                  return (
                    (this.x = Math.floor(this.x)),
                    (this.y = Math.floor(this.y)),
                    this
                  );
                },
              },
              {
                key: "ceil",
                value: function () {
                  return (
                    (this.x = Math.ceil(this.x)),
                    (this.y = Math.ceil(this.y)),
                    this
                  );
                },
              },
              {
                key: "round",
                value: function () {
                  return (
                    (this.x = Math.round(this.x)),
                    (this.y = Math.round(this.y)),
                    this
                  );
                },
              },
              {
                key: "roundToZero",
                value: function () {
                  return (
                    (this.x = Math.trunc(this.x)),
                    (this.y = Math.trunc(this.y)),
                    this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (this.x = -this.x), (this.y = -this.y), this;
                },
              },
              {
                key: "dot",
                value: function (e) {
                  return this.x * e.x + this.y * e.y;
                },
              },
              {
                key: "cross",
                value: function (e) {
                  return this.x * e.y - this.y * e.x;
                },
              },
              {
                key: "lengthSq",
                value: function () {
                  return this.x * this.x + this.y * this.y;
                },
              },
              {
                key: "length",
                value: function () {
                  return Math.sqrt(this.x * this.x + this.y * this.y);
                },
              },
              {
                key: "manhattanLength",
                value: function () {
                  return Math.abs(this.x) + Math.abs(this.y);
                },
              },
              {
                key: "normalize",
                value: function () {
                  return this.divideScalar(this.length() || 1);
                },
              },
              {
                key: "angle",
                value: function () {
                  var e = Math.atan2(-this.y, -this.x) + Math.PI;
                  return e;
                },
              },
              {
                key: "angleTo",
                value: function (e) {
                  var t = Math.sqrt(this.lengthSq() * e.lengthSq());
                  if (0 === t) return Math.PI / 2;
                  var n = this.dot(e) / t;
                  return Math.acos(je(n, -1, 1));
                },
              },
              {
                key: "distanceTo",
                value: function (e) {
                  return Math.sqrt(this.distanceToSquared(e));
                },
              },
              {
                key: "distanceToSquared",
                value: function (e) {
                  var t = this.x - e.x,
                    n = this.y - e.y;
                  return t * t + n * n;
                },
              },
              {
                key: "manhattanDistanceTo",
                value: function (e) {
                  return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
                },
              },
              {
                key: "setLength",
                value: function (e) {
                  return this.normalize().multiplyScalar(e);
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.x += (e.x - this.x) * t),
                    (this.y += (e.y - this.y) * t),
                    this
                  );
                },
              },
              {
                key: "lerpVectors",
                value: function (e, t, n) {
                  return (
                    (this.x = e.x + (t.x - e.x) * n),
                    (this.y = e.y + (t.y - e.y) * n),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.x === this.x && e.y === this.y;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (this.x = e[t]), (this.y = e[t + 1]), this;
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (e[t] = this.x), (e[t + 1] = this.y), e;
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (this.x = e.getX(t)), (this.y = e.getY(t)), this;
                },
              },
              {
                key: "rotateAround",
                value: function (e, t) {
                  var n = Math.cos(t),
                    r = Math.sin(t),
                    a = this.x - e.x,
                    i = this.y - e.y;
                  return (
                    (this.x = a * n - i * r + e.x),
                    (this.y = a * r + i * n + e.y),
                    this
                  );
                },
              },
              {
                key: "random",
                value: function () {
                  return (
                    (this.x = Math.random()), (this.y = Math.random()), this
                  );
                },
              },
              {
                key: Symbol.iterator,
                value: E().mark(function e() {
                  return E().wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.x;
                          case 2:
                            return (e.next = 4), this.y;
                          case 4:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            t
          );
        })(),
        Qe = (function () {
          function e(t, n, r, a, i, o, s, l, u) {
            w(this, e),
              (e.prototype.isMatrix3 = !0),
              (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
              void 0 !== t && this.set(t, n, r, a, i, o, s, l, u);
          }
          return (
            M(e, [
              {
                key: "set",
                value: function (e, t, n, r, a, i, o, s, l) {
                  var u = this.elements;
                  return (
                    (u[0] = e),
                    (u[1] = r),
                    (u[2] = o),
                    (u[3] = t),
                    (u[4] = a),
                    (u[5] = s),
                    (u[6] = n),
                    (u[7] = i),
                    (u[8] = l),
                    this
                  );
                },
              },
              {
                key: "identity",
                value: function () {
                  return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements;
                  return (
                    (t[0] = n[0]),
                    (t[1] = n[1]),
                    (t[2] = n[2]),
                    (t[3] = n[3]),
                    (t[4] = n[4]),
                    (t[5] = n[5]),
                    (t[6] = n[6]),
                    (t[7] = n[7]),
                    (t[8] = n[8]),
                    this
                  );
                },
              },
              {
                key: "extractBasis",
                value: function (e, t, n) {
                  return (
                    e.setFromMatrix3Column(this, 0),
                    t.setFromMatrix3Column(this, 1),
                    n.setFromMatrix3Column(this, 2),
                    this
                  );
                },
              },
              {
                key: "setFromMatrix4",
                value: function (e) {
                  var t = e.elements;
                  return (
                    this.set(
                      t[0],
                      t[4],
                      t[8],
                      t[1],
                      t[5],
                      t[9],
                      t[2],
                      t[6],
                      t[10]
                    ),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return this.multiplyMatrices(this, e);
                },
              },
              {
                key: "premultiply",
                value: function (e) {
                  return this.multiplyMatrices(e, this);
                },
              },
              {
                key: "multiplyMatrices",
                value: function (e, t) {
                  var n = e.elements,
                    r = t.elements,
                    a = this.elements,
                    i = n[0],
                    o = n[3],
                    s = n[6],
                    l = n[1],
                    u = n[4],
                    c = n[7],
                    f = n[2],
                    d = n[5],
                    h = n[8],
                    p = r[0],
                    v = r[3],
                    m = r[6],
                    g = r[1],
                    y = r[4],
                    _ = r[7],
                    b = r[2],
                    x = r[5],
                    S = r[8];
                  return (
                    (a[0] = i * p + o * g + s * b),
                    (a[3] = i * v + o * y + s * x),
                    (a[6] = i * m + o * _ + s * S),
                    (a[1] = l * p + u * g + c * b),
                    (a[4] = l * v + u * y + c * x),
                    (a[7] = l * m + u * _ + c * S),
                    (a[2] = f * p + d * g + h * b),
                    (a[5] = f * v + d * y + h * x),
                    (a[8] = f * m + d * _ + h * S),
                    this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  var t = this.elements;
                  return (
                    (t[0] *= e),
                    (t[3] *= e),
                    (t[6] *= e),
                    (t[1] *= e),
                    (t[4] *= e),
                    (t[7] *= e),
                    (t[2] *= e),
                    (t[5] *= e),
                    (t[8] *= e),
                    this
                  );
                },
              },
              {
                key: "determinant",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[1],
                    r = e[2],
                    a = e[3],
                    i = e[4],
                    o = e[5],
                    s = e[6],
                    l = e[7],
                    u = e[8];
                  return (
                    t * i * u -
                    t * o * l -
                    n * a * u +
                    n * o * s +
                    r * a * l -
                    r * i * s
                  );
                },
              },
              {
                key: "invert",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[1],
                    r = e[2],
                    a = e[3],
                    i = e[4],
                    o = e[5],
                    s = e[6],
                    l = e[7],
                    u = e[8],
                    c = u * i - o * l,
                    f = o * s - u * a,
                    d = l * a - i * s,
                    h = t * c + n * f + r * d;
                  if (0 === h) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
                  var p = 1 / h;
                  return (
                    (e[0] = c * p),
                    (e[1] = (r * l - u * n) * p),
                    (e[2] = (o * n - r * i) * p),
                    (e[3] = f * p),
                    (e[4] = (u * t - r * s) * p),
                    (e[5] = (r * a - o * t) * p),
                    (e[6] = d * p),
                    (e[7] = (n * s - l * t) * p),
                    (e[8] = (i * t - n * a) * p),
                    this
                  );
                },
              },
              {
                key: "transpose",
                value: function () {
                  var e,
                    t = this.elements;
                  return (
                    (e = t[1]),
                    (t[1] = t[3]),
                    (t[3] = e),
                    (e = t[2]),
                    (t[2] = t[6]),
                    (t[6] = e),
                    (e = t[5]),
                    (t[5] = t[7]),
                    (t[7] = e),
                    this
                  );
                },
              },
              {
                key: "getNormalMatrix",
                value: function (e) {
                  return this.setFromMatrix4(e).invert().transpose();
                },
              },
              {
                key: "transposeIntoArray",
                value: function (e) {
                  var t = this.elements;
                  return (
                    (e[0] = t[0]),
                    (e[1] = t[3]),
                    (e[2] = t[6]),
                    (e[3] = t[1]),
                    (e[4] = t[4]),
                    (e[5] = t[7]),
                    (e[6] = t[2]),
                    (e[7] = t[5]),
                    (e[8] = t[8]),
                    this
                  );
                },
              },
              {
                key: "setUvTransform",
                value: function (e, t, n, r, a, i, o) {
                  var s = Math.cos(a),
                    l = Math.sin(a);
                  return (
                    this.set(
                      n * s,
                      n * l,
                      -n * (s * i + l * o) + i + e,
                      -r * l,
                      r * s,
                      -r * (-l * i + s * o) + o + t,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "scale",
                value: function (e, t) {
                  return this.premultiply(et.makeScale(e, t)), this;
                },
              },
              {
                key: "rotate",
                value: function (e) {
                  return this.premultiply(et.makeRotation(-e)), this;
                },
              },
              {
                key: "translate",
                value: function (e, t) {
                  return this.premultiply(et.makeTranslation(e, t)), this;
                },
              },
              {
                key: "makeTranslation",
                value: function (e, t) {
                  return (
                    e.isVector2
                      ? this.set(1, 0, e.x, 0, 1, e.y, 0, 0, 1)
                      : this.set(1, 0, e, 0, 1, t, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotation",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return this.set(t, -n, 0, n, t, 0, 0, 0, 1), this;
                },
              },
              {
                key: "makeScale",
                value: function (e, t) {
                  return this.set(e, 0, 0, 0, t, 0, 0, 0, 1), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  for (var t = this.elements, n = e.elements, r = 0; r < 9; r++)
                    if (t[r] !== n[r]) return !1;
                  return !0;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  for (
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0,
                      n = 0;
                    n < 9;
                    n++
                  )
                    this.elements[n] = e[n + t];
                  return this;
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n = this.elements;
                  return (
                    (e[t] = n[0]),
                    (e[t + 1] = n[1]),
                    (e[t + 2] = n[2]),
                    (e[t + 3] = n[3]),
                    (e[t + 4] = n[4]),
                    (e[t + 5] = n[5]),
                    (e[t + 6] = n[6]),
                    (e[t + 7] = n[7]),
                    (e[t + 8] = n[8]),
                    e
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().fromArray(this.elements);
                },
              },
            ]),
            e
          );
        })(),
        et = new Qe();
      function tt(e) {
        for (var t = e.length - 1; t >= 0; --t) if (e[t] >= 65535) return !0;
        return !1;
      }
      Int8Array,
        Uint8Array,
        Uint8ClampedArray,
        Int16Array,
        Uint16Array,
        Int32Array,
        Uint32Array,
        Float32Array,
        Float64Array;
      function nt(e) {
        return document.createElementNS("http://www.w3.org/1999/xhtml", e);
      }
      var rt = {};
      function at(e) {
        e in rt || ((rt[e] = !0), console.warn(e));
      }
      var it,
        ot = new Qe().set(
          0.8224621,
          0.177538,
          0,
          0.0331941,
          0.9668058,
          0,
          0.0170827,
          0.0723974,
          0.9105199
        ),
        st = new Qe().set(
          1.2249401,
          -0.2249404,
          0,
          -0.0420569,
          1.0420571,
          0,
          -0.0196376,
          -0.0786361,
          1.0982735
        ),
        lt =
          (S((s = {}), Ae, {
            transfer: Re,
            primaries: Ue,
            toReference: function (e) {
              return e;
            },
            fromReference: function (e) {
              return e;
            },
          }),
          S(s, Me, {
            transfer: Pe,
            primaries: Ue,
            toReference: function (e) {
              return e.convertSRGBToLinear();
            },
            fromReference: function (e) {
              return e.convertLinearToSRGB();
            },
          }),
          S(s, ke, {
            transfer: Re,
            primaries: Le,
            toReference: function (e) {
              return e.applyMatrix3(st);
            },
            fromReference: function (e) {
              return e.applyMatrix3(ot);
            },
          }),
          S(s, Ce, {
            transfer: Pe,
            primaries: Le,
            toReference: function (e) {
              return e.convertSRGBToLinear().applyMatrix3(st);
            },
            fromReference: function (e) {
              return e.applyMatrix3(ot).convertLinearToSRGB();
            },
          }),
          s),
        ut = new Set([Ae, ke]),
        ct = {
          enabled: !0,
          _workingColorSpace: Ae,
          get legacyMode() {
            return (
              console.warn(
                "THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."
              ),
              !this.enabled
            );
          },
          set legacyMode(e) {
            console.warn(
              "THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."
            ),
              (this.enabled = !e);
          },
          get workingColorSpace() {
            return this._workingColorSpace;
          },
          set workingColorSpace(e) {
            if (!ut.has(e))
              throw new Error(
                'Unsupported working color space, "'.concat(e, '".')
              );
            this._workingColorSpace = e;
          },
          convert: function (e, t, n) {
            if (!1 === this.enabled || t === n || !t || !n) return e;
            var r = lt[t].toReference;
            return (0, lt[n].fromReference)(r(e));
          },
          fromWorkingColorSpace: function (e, t) {
            return this.convert(e, this._workingColorSpace, t);
          },
          toWorkingColorSpace: function (e, t) {
            return this.convert(e, t, this._workingColorSpace);
          },
          getPrimaries: function (e) {
            return lt[e].primaries;
          },
          getTransfer: function (e) {
            return e === Te ? Re : lt[e].transfer;
          },
        };
      function ft(e) {
        return e < 0.04045
          ? 0.0773993808 * e
          : Math.pow(0.9478672986 * e + 0.0521327014, 2.4);
      }
      function dt(e) {
        return e < 0.0031308 ? 12.92 * e : 1.055 * Math.pow(e, 0.41666) - 0.055;
      }
      var ht = (function () {
          function e() {
            w(this, e);
          }
          return (
            M(e, null, [
              {
                key: "getDataURL",
                value: function (e) {
                  if (/^data:/i.test(e.src)) return e.src;
                  if ("undefined" === typeof HTMLCanvasElement) return e.src;
                  var t;
                  if (e instanceof HTMLCanvasElement) t = e;
                  else {
                    void 0 === it && (it = nt("canvas")),
                      (it.width = e.width),
                      (it.height = e.height);
                    var n = it.getContext("2d");
                    e instanceof ImageData
                      ? n.putImageData(e, 0, 0)
                      : n.drawImage(e, 0, 0, e.width, e.height),
                      (t = it);
                  }
                  return t.width > 2048 || t.height > 2048
                    ? (console.warn(
                        "THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",
                        e
                      ),
                      t.toDataURL("image/jpeg", 0.6))
                    : t.toDataURL("image/png");
                },
              },
              {
                key: "sRGBToLinear",
                value: function (e) {
                  if (
                    ("undefined" !== typeof HTMLImageElement &&
                      e instanceof HTMLImageElement) ||
                    ("undefined" !== typeof HTMLCanvasElement &&
                      e instanceof HTMLCanvasElement) ||
                    ("undefined" !== typeof ImageBitmap &&
                      e instanceof ImageBitmap)
                  ) {
                    var t = nt("canvas");
                    (t.width = e.width), (t.height = e.height);
                    var n = t.getContext("2d");
                    n.drawImage(e, 0, 0, e.width, e.height);
                    for (
                      var r = n.getImageData(0, 0, e.width, e.height),
                        a = r.data,
                        i = 0;
                      i < a.length;
                      i++
                    )
                      a[i] = 255 * ft(a[i] / 255);
                    return n.putImageData(r, 0, 0), t;
                  }
                  if (e.data) {
                    for (var o = e.data.slice(0), s = 0; s < o.length; s++)
                      o instanceof Uint8Array || o instanceof Uint8ClampedArray
                        ? (o[s] = Math.floor(255 * ft(o[s] / 255)))
                        : (o[s] = ft(o[s]));
                    return { data: o, width: e.width, height: e.height };
                  }
                  return (
                    console.warn(
                      "THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."
                    ),
                    e
                  );
                },
              },
            ]),
            e
          );
        })(),
        pt = 0,
        vt = (function () {
          function e() {
            var t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null;
            w(this, e),
              (this.isSource = !0),
              Object.defineProperty(this, "id", { value: pt++ }),
              (this.uuid = We()),
              (this.data = t),
              (this.version = 0);
          }
          return (
            M(e, [
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e;
                  if (!t && void 0 !== e.images[this.uuid])
                    return e.images[this.uuid];
                  var n = { uuid: this.uuid, url: "" },
                    r = this.data;
                  if (null !== r) {
                    var a;
                    if (Array.isArray(r)) {
                      a = [];
                      for (var i = 0, o = r.length; i < o; i++)
                        r[i].isDataTexture
                          ? a.push(mt(r[i].image))
                          : a.push(mt(r[i]));
                    } else a = mt(r);
                    n.url = a;
                  }
                  return t || (e.images[this.uuid] = n), n;
                },
              },
            ]),
            e
          );
        })();
      function mt(e) {
        return ("undefined" !== typeof HTMLImageElement &&
          e instanceof HTMLImageElement) ||
          ("undefined" !== typeof HTMLCanvasElement &&
            e instanceof HTMLCanvasElement) ||
          ("undefined" !== typeof ImageBitmap && e instanceof ImageBitmap)
          ? ht.getDataURL(e)
          : e.data
          ? {
              data: Array.from(e.data),
              width: e.width,
              height: e.height,
              type: e.data.constructor.name,
            }
          : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
      }
      var gt = 0,
        yt = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : n.DEFAULT_IMAGE,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : n.DEFAULT_MAPPING,
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : K,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : K,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : ee,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : te,
              u =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : ue,
              c =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : ne,
              f =
                arguments.length > 8 && void 0 !== arguments[8]
                  ? arguments[8]
                  : n.DEFAULT_ANISOTROPY,
              d =
                arguments.length > 9 && void 0 !== arguments[9]
                  ? arguments[9]
                  : Te;
            return (
              w(this, n),
              ((e = t.call(this)).isTexture = !0),
              Object.defineProperty(m(e), "id", { value: gt++ }),
              (e.uuid = We()),
              (e.name = ""),
              (e.source = new vt(r)),
              (e.mipmaps = []),
              (e.mapping = a),
              (e.channel = 0),
              (e.wrapS = i),
              (e.wrapT = o),
              (e.magFilter = s),
              (e.minFilter = l),
              (e.anisotropy = f),
              (e.format = u),
              (e.internalFormat = null),
              (e.type = c),
              (e.offset = new Je(0, 0)),
              (e.repeat = new Je(1, 1)),
              (e.center = new Je(0, 0)),
              (e.rotation = 0),
              (e.matrixAutoUpdate = !0),
              (e.matrix = new Qe()),
              (e.generateMipmaps = !0),
              (e.premultiplyAlpha = !1),
              (e.flipY = !0),
              (e.unpackAlignment = 4),
              "string" === typeof d
                ? (e.colorSpace = d)
                : (at(
                    "THREE.Texture: Property .encoding has been replaced by .colorSpace."
                  ),
                  (e.colorSpace = d === Ee ? Me : Te)),
              (e.userData = {}),
              (e.version = 0),
              (e.onUpdate = null),
              (e.isRenderTargetTexture = !1),
              (e.needsPMREMUpdate = !1),
              e
            );
          }
          return (
            M(n, [
              {
                key: "image",
                get: function () {
                  return this.source.data;
                },
                set: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : null;
                  this.source.data = e;
                },
              },
              {
                key: "updateMatrix",
                value: function () {
                  this.matrix.setUvTransform(
                    this.offset.x,
                    this.offset.y,
                    this.repeat.x,
                    this.repeat.y,
                    this.rotation,
                    this.center.x,
                    this.center.y
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.name = e.name),
                    (this.source = e.source),
                    (this.mipmaps = e.mipmaps.slice(0)),
                    (this.mapping = e.mapping),
                    (this.channel = e.channel),
                    (this.wrapS = e.wrapS),
                    (this.wrapT = e.wrapT),
                    (this.magFilter = e.magFilter),
                    (this.minFilter = e.minFilter),
                    (this.anisotropy = e.anisotropy),
                    (this.format = e.format),
                    (this.internalFormat = e.internalFormat),
                    (this.type = e.type),
                    this.offset.copy(e.offset),
                    this.repeat.copy(e.repeat),
                    this.center.copy(e.center),
                    (this.rotation = e.rotation),
                    (this.matrixAutoUpdate = e.matrixAutoUpdate),
                    this.matrix.copy(e.matrix),
                    (this.generateMipmaps = e.generateMipmaps),
                    (this.premultiplyAlpha = e.premultiplyAlpha),
                    (this.flipY = e.flipY),
                    (this.unpackAlignment = e.unpackAlignment),
                    (this.colorSpace = e.colorSpace),
                    (this.userData = JSON.parse(JSON.stringify(e.userData))),
                    (this.needsUpdate = !0),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e;
                  if (!t && void 0 !== e.textures[this.uuid])
                    return e.textures[this.uuid];
                  var n = {
                    metadata: {
                      version: 4.6,
                      type: "Texture",
                      generator: "Texture.toJSON",
                    },
                    uuid: this.uuid,
                    name: this.name,
                    image: this.source.toJSON(e).uuid,
                    mapping: this.mapping,
                    channel: this.channel,
                    repeat: [this.repeat.x, this.repeat.y],
                    offset: [this.offset.x, this.offset.y],
                    center: [this.center.x, this.center.y],
                    rotation: this.rotation,
                    wrap: [this.wrapS, this.wrapT],
                    format: this.format,
                    internalFormat: this.internalFormat,
                    type: this.type,
                    colorSpace: this.colorSpace,
                    minFilter: this.minFilter,
                    magFilter: this.magFilter,
                    anisotropy: this.anisotropy,
                    flipY: this.flipY,
                    generateMipmaps: this.generateMipmaps,
                    premultiplyAlpha: this.premultiplyAlpha,
                    unpackAlignment: this.unpackAlignment,
                  };
                  return (
                    Object.keys(this.userData).length > 0 &&
                      (n.userData = this.userData),
                    t || (e.textures[this.uuid] = n),
                    n
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
              {
                key: "transformUv",
                value: function (e) {
                  if (300 !== this.mapping) return e;
                  if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
                    switch (this.wrapS) {
                      case Y:
                        e.x = e.x - Math.floor(e.x);
                        break;
                      case K:
                        e.x = e.x < 0 ? 0 : 1;
                        break;
                      case $:
                        1 === Math.abs(Math.floor(e.x) % 2)
                          ? (e.x = Math.ceil(e.x) - e.x)
                          : (e.x = e.x - Math.floor(e.x));
                    }
                  if (e.y < 0 || e.y > 1)
                    switch (this.wrapT) {
                      case Y:
                        e.y = e.y - Math.floor(e.y);
                        break;
                      case K:
                        e.y = e.y < 0 ? 0 : 1;
                        break;
                      case $:
                        1 === Math.abs(Math.floor(e.y) % 2)
                          ? (e.y = Math.ceil(e.y) - e.y)
                          : (e.y = e.y - Math.floor(e.y));
                    }
                  return this.flipY && (e.y = 1 - e.y), e;
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && (this.version++, (this.source.needsUpdate = !0));
                },
              },
              {
                key: "encoding",
                get: function () {
                  return (
                    at(
                      "THREE.Texture: Property .encoding has been replaced by .colorSpace."
                    ),
                    this.colorSpace === Me ? Ee : 3e3
                  );
                },
                set: function (e) {
                  at(
                    "THREE.Texture: Property .encoding has been replaced by .colorSpace."
                  ),
                    (this.colorSpace = e === Ee ? Me : Te);
                },
              },
            ]),
            n
          );
        })(Be);
      (yt.DEFAULT_IMAGE = null),
        (yt.DEFAULT_MAPPING = 300),
        (yt.DEFAULT_ANISOTROPY = 1);
      var _t = (function (e) {
          function t() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              a =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            w(this, t),
              (t.prototype.isVector4 = !0),
              (this.x = e),
              (this.y = n),
              (this.z = r),
              (this.w = a);
          }
          return (
            M(t, [
              {
                key: "width",
                get: function () {
                  return this.z;
                },
                set: function (e) {
                  this.z = e;
                },
              },
              {
                key: "height",
                get: function () {
                  return this.w;
                },
                set: function (e) {
                  this.w = e;
                },
              },
              {
                key: "set",
                value: function (e, t, n, r) {
                  return (
                    (this.x = e), (this.y = t), (this.z = n), (this.w = r), this
                  );
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (
                    (this.x = e), (this.y = e), (this.z = e), (this.w = e), this
                  );
                },
              },
              {
                key: "setX",
                value: function (e) {
                  return (this.x = e), this;
                },
              },
              {
                key: "setY",
                value: function (e) {
                  return (this.y = e), this;
                },
              },
              {
                key: "setZ",
                value: function (e) {
                  return (this.z = e), this;
                },
              },
              {
                key: "setW",
                value: function (e) {
                  return (this.w = e), this;
                },
              },
              {
                key: "setComponent",
                value: function (e, t) {
                  switch (e) {
                    case 0:
                      this.x = t;
                      break;
                    case 1:
                      this.y = t;
                      break;
                    case 2:
                      this.z = t;
                      break;
                    case 3:
                      this.w = t;
                      break;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                  return this;
                },
              },
              {
                key: "getComponent",
                value: function (e) {
                  switch (e) {
                    case 0:
                      return this.x;
                    case 1:
                      return this.y;
                    case 2:
                      return this.z;
                    case 3:
                      return this.w;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.x, this.y, this.z, this.w);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.x = e.x),
                    (this.y = e.y),
                    (this.z = e.z),
                    (this.w = void 0 !== e.w ? e.w : 1),
                    this
                  );
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (
                    (this.x += e.x),
                    (this.y += e.y),
                    (this.z += e.z),
                    (this.w += e.w),
                    this
                  );
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (
                    (this.x += e),
                    (this.y += e),
                    (this.z += e),
                    (this.w += e),
                    this
                  );
                },
              },
              {
                key: "addVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x + t.x),
                    (this.y = e.y + t.y),
                    (this.z = e.z + t.z),
                    (this.w = e.w + t.w),
                    this
                  );
                },
              },
              {
                key: "addScaledVector",
                value: function (e, t) {
                  return (
                    (this.x += e.x * t),
                    (this.y += e.y * t),
                    (this.z += e.z * t),
                    (this.w += e.w * t),
                    this
                  );
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (
                    (this.x -= e.x),
                    (this.y -= e.y),
                    (this.z -= e.z),
                    (this.w -= e.w),
                    this
                  );
                },
              },
              {
                key: "subScalar",
                value: function (e) {
                  return (
                    (this.x -= e),
                    (this.y -= e),
                    (this.z -= e),
                    (this.w -= e),
                    this
                  );
                },
              },
              {
                key: "subVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x - t.x),
                    (this.y = e.y - t.y),
                    (this.z = e.z - t.z),
                    (this.w = e.w - t.w),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (
                    (this.x *= e.x),
                    (this.y *= e.y),
                    (this.z *= e.z),
                    (this.w *= e.w),
                    this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (
                    (this.x *= e),
                    (this.y *= e),
                    (this.z *= e),
                    (this.w *= e),
                    this
                  );
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    a = this.w,
                    i = e.elements;
                  return (
                    (this.x = i[0] * t + i[4] * n + i[8] * r + i[12] * a),
                    (this.y = i[1] * t + i[5] * n + i[9] * r + i[13] * a),
                    (this.z = i[2] * t + i[6] * n + i[10] * r + i[14] * a),
                    (this.w = i[3] * t + i[7] * n + i[11] * r + i[15] * a),
                    this
                  );
                },
              },
              {
                key: "divideScalar",
                value: function (e) {
                  return this.multiplyScalar(1 / e);
                },
              },
              {
                key: "setAxisAngleFromQuaternion",
                value: function (e) {
                  this.w = 2 * Math.acos(e.w);
                  var t = Math.sqrt(1 - e.w * e.w);
                  return (
                    t < 1e-4
                      ? ((this.x = 1), (this.y = 0), (this.z = 0))
                      : ((this.x = e.x / t),
                        (this.y = e.y / t),
                        (this.z = e.z / t)),
                    this
                  );
                },
              },
              {
                key: "setAxisAngleFromRotationMatrix",
                value: function (e) {
                  var t,
                    n,
                    r,
                    a,
                    i = 0.01,
                    o = 0.1,
                    s = e.elements,
                    l = s[0],
                    u = s[4],
                    c = s[8],
                    f = s[1],
                    d = s[5],
                    h = s[9],
                    p = s[2],
                    v = s[6],
                    m = s[10];
                  if (
                    Math.abs(u - f) < i &&
                    Math.abs(c - p) < i &&
                    Math.abs(h - v) < i
                  ) {
                    if (
                      Math.abs(u + f) < o &&
                      Math.abs(c + p) < o &&
                      Math.abs(h + v) < o &&
                      Math.abs(l + d + m - 3) < o
                    )
                      return this.set(1, 0, 0, 0), this;
                    t = Math.PI;
                    var g = (l + 1) / 2,
                      y = (d + 1) / 2,
                      _ = (m + 1) / 2,
                      b = (u + f) / 4,
                      x = (c + p) / 4,
                      S = (h + v) / 4;
                    return (
                      g > y && g > _
                        ? g < i
                          ? ((n = 0), (r = 0.707106781), (a = 0.707106781))
                          : ((r = b / (n = Math.sqrt(g))), (a = x / n))
                        : y > _
                        ? y < i
                          ? ((n = 0.707106781), (r = 0), (a = 0.707106781))
                          : ((n = b / (r = Math.sqrt(y))), (a = S / r))
                        : _ < i
                        ? ((n = 0.707106781), (r = 0.707106781), (a = 0))
                        : ((n = x / (a = Math.sqrt(_))), (r = S / a)),
                      this.set(n, r, a, t),
                      this
                    );
                  }
                  var E = Math.sqrt(
                    (v - h) * (v - h) + (c - p) * (c - p) + (f - u) * (f - u)
                  );
                  return (
                    Math.abs(E) < 0.001 && (E = 1),
                    (this.x = (v - h) / E),
                    (this.y = (c - p) / E),
                    (this.z = (f - u) / E),
                    (this.w = Math.acos((l + d + m - 1) / 2)),
                    this
                  );
                },
              },
              {
                key: "min",
                value: function (e) {
                  return (
                    (this.x = Math.min(this.x, e.x)),
                    (this.y = Math.min(this.y, e.y)),
                    (this.z = Math.min(this.z, e.z)),
                    (this.w = Math.min(this.w, e.w)),
                    this
                  );
                },
              },
              {
                key: "max",
                value: function (e) {
                  return (
                    (this.x = Math.max(this.x, e.x)),
                    (this.y = Math.max(this.y, e.y)),
                    (this.z = Math.max(this.z, e.z)),
                    (this.w = Math.max(this.w, e.w)),
                    this
                  );
                },
              },
              {
                key: "clamp",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e.x, Math.min(t.x, this.x))),
                    (this.y = Math.max(e.y, Math.min(t.y, this.y))),
                    (this.z = Math.max(e.z, Math.min(t.z, this.z))),
                    (this.w = Math.max(e.w, Math.min(t.w, this.w))),
                    this
                  );
                },
              },
              {
                key: "clampScalar",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e, Math.min(t, this.x))),
                    (this.y = Math.max(e, Math.min(t, this.y))),
                    (this.z = Math.max(e, Math.min(t, this.z))),
                    (this.w = Math.max(e, Math.min(t, this.w))),
                    this
                  );
                },
              },
              {
                key: "clampLength",
                value: function (e, t) {
                  var n = this.length();
                  return this.divideScalar(n || 1).multiplyScalar(
                    Math.max(e, Math.min(t, n))
                  );
                },
              },
              {
                key: "floor",
                value: function () {
                  return (
                    (this.x = Math.floor(this.x)),
                    (this.y = Math.floor(this.y)),
                    (this.z = Math.floor(this.z)),
                    (this.w = Math.floor(this.w)),
                    this
                  );
                },
              },
              {
                key: "ceil",
                value: function () {
                  return (
                    (this.x = Math.ceil(this.x)),
                    (this.y = Math.ceil(this.y)),
                    (this.z = Math.ceil(this.z)),
                    (this.w = Math.ceil(this.w)),
                    this
                  );
                },
              },
              {
                key: "round",
                value: function () {
                  return (
                    (this.x = Math.round(this.x)),
                    (this.y = Math.round(this.y)),
                    (this.z = Math.round(this.z)),
                    (this.w = Math.round(this.w)),
                    this
                  );
                },
              },
              {
                key: "roundToZero",
                value: function () {
                  return (
                    (this.x = Math.trunc(this.x)),
                    (this.y = Math.trunc(this.y)),
                    (this.z = Math.trunc(this.z)),
                    (this.w = Math.trunc(this.w)),
                    this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (
                    (this.x = -this.x),
                    (this.y = -this.y),
                    (this.z = -this.z),
                    (this.w = -this.w),
                    this
                  );
                },
              },
              {
                key: "dot",
                value: function (e) {
                  return (
                    this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
                  );
                },
              },
              {
                key: "lengthSq",
                value: function () {
                  return (
                    this.x * this.x +
                    this.y * this.y +
                    this.z * this.z +
                    this.w * this.w
                  );
                },
              },
              {
                key: "length",
                value: function () {
                  return Math.sqrt(
                    this.x * this.x +
                      this.y * this.y +
                      this.z * this.z +
                      this.w * this.w
                  );
                },
              },
              {
                key: "manhattanLength",
                value: function () {
                  return (
                    Math.abs(this.x) +
                    Math.abs(this.y) +
                    Math.abs(this.z) +
                    Math.abs(this.w)
                  );
                },
              },
              {
                key: "normalize",
                value: function () {
                  return this.divideScalar(this.length() || 1);
                },
              },
              {
                key: "setLength",
                value: function (e) {
                  return this.normalize().multiplyScalar(e);
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.x += (e.x - this.x) * t),
                    (this.y += (e.y - this.y) * t),
                    (this.z += (e.z - this.z) * t),
                    (this.w += (e.w - this.w) * t),
                    this
                  );
                },
              },
              {
                key: "lerpVectors",
                value: function (e, t, n) {
                  return (
                    (this.x = e.x + (t.x - e.x) * n),
                    (this.y = e.y + (t.y - e.y) * n),
                    (this.z = e.z + (t.z - e.z) * n),
                    (this.w = e.w + (t.w - e.w) * n),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.x === this.x &&
                    e.y === this.y &&
                    e.z === this.z &&
                    e.w === this.w
                  );
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (
                    (this.x = e[t]),
                    (this.y = e[t + 1]),
                    (this.z = e[t + 2]),
                    (this.w = e[t + 3]),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this.x),
                    (e[t + 1] = this.y),
                    (e[t + 2] = this.z),
                    (e[t + 3] = this.w),
                    e
                  );
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (
                    (this.x = e.getX(t)),
                    (this.y = e.getY(t)),
                    (this.z = e.getZ(t)),
                    (this.w = e.getW(t)),
                    this
                  );
                },
              },
              {
                key: "random",
                value: function () {
                  return (
                    (this.x = Math.random()),
                    (this.y = Math.random()),
                    (this.z = Math.random()),
                    (this.w = Math.random()),
                    this
                  );
                },
              },
              {
                key: Symbol.iterator,
                value: E().mark(function e() {
                  return E().wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.x;
                          case 2:
                            return (e.next = 4), this.y;
                          case 4:
                            return (e.next = 6), this.z;
                          case 6:
                            return (e.next = 8), this.w;
                          case 8:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            t
          );
        })(),
        bt = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
            w(this, n),
              ((e = t.call(this)).isRenderTarget = !0),
              (e.width = r),
              (e.height = a),
              (e.depth = 1),
              (e.scissor = new _t(0, 0, r, a)),
              (e.scissorTest = !1),
              (e.viewport = new _t(0, 0, r, a));
            var o = { width: r, height: a, depth: 1 };
            return (
              void 0 !== i.encoding &&
                (at(
                  "THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."
                ),
                (i.colorSpace = i.encoding === Ee ? Me : Te)),
              (i = Object.assign(
                {
                  generateMipmaps: !1,
                  internalFormat: null,
                  minFilter: ee,
                  depthBuffer: !0,
                  stencilBuffer: !1,
                  depthTexture: null,
                  samples: 0,
                },
                i
              )),
              (e.texture = new yt(
                o,
                i.mapping,
                i.wrapS,
                i.wrapT,
                i.magFilter,
                i.minFilter,
                i.format,
                i.type,
                i.anisotropy,
                i.colorSpace
              )),
              (e.texture.isRenderTargetTexture = !0),
              (e.texture.flipY = !1),
              (e.texture.generateMipmaps = i.generateMipmaps),
              (e.texture.internalFormat = i.internalFormat),
              (e.depthBuffer = i.depthBuffer),
              (e.stencilBuffer = i.stencilBuffer),
              (e.depthTexture = i.depthTexture),
              (e.samples = i.samples),
              e
            );
          }
          return (
            M(n, [
              {
                key: "setSize",
                value: function (e, t) {
                  var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 1;
                  (this.width === e && this.height === t && this.depth === n) ||
                    ((this.width = e),
                    (this.height = t),
                    (this.depth = n),
                    (this.texture.image.width = e),
                    (this.texture.image.height = t),
                    (this.texture.image.depth = n),
                    this.dispose()),
                    this.viewport.set(0, 0, e, t),
                    this.scissor.set(0, 0, e, t);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.width = e.width),
                    (this.height = e.height),
                    (this.depth = e.depth),
                    this.scissor.copy(e.scissor),
                    (this.scissorTest = e.scissorTest),
                    this.viewport.copy(e.viewport),
                    (this.texture = e.texture.clone()),
                    (this.texture.isRenderTargetTexture = !0);
                  var t = Object.assign({}, e.texture.image);
                  return (
                    (this.texture.source = new vt(t)),
                    (this.depthBuffer = e.depthBuffer),
                    (this.stencilBuffer = e.stencilBuffer),
                    null !== e.depthTexture &&
                      (this.depthTexture = e.depthTexture.clone()),
                    (this.samples = e.samples),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
            ]),
            n
          );
        })(Be),
        xt = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
            return (
              w(this, n),
              ((e = t.call(this, r, a, i)).isWebGLRenderTarget = !0),
              e
            );
          }
          return M(n);
        })(bt),
        St = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            return (
              w(this, n),
              ((e = t.call(this, null)).isDataArrayTexture = !0),
              (e.image = { data: r, width: a, height: i, depth: o }),
              (e.magFilter = Z),
              (e.minFilter = Z),
              (e.wrapR = K),
              (e.generateMipmaps = !1),
              (e.flipY = !1),
              (e.unpackAlignment = 1),
              e
            );
          }
          return M(n);
        })(yt),
        Et = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            return (
              w(this, n),
              ((e = t.call(this, null)).isData3DTexture = !0),
              (e.image = { data: r, width: a, height: i, depth: o }),
              (e.magFilter = Z),
              (e.minFilter = Z),
              (e.wrapR = K),
              (e.generateMipmaps = !1),
              (e.flipY = !1),
              (e.unpackAlignment = 1),
              e
            );
          }
          return M(n);
        })(yt),
        wt = (function (e) {
          function t() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              a =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            w(this, t),
              (this.isQuaternion = !0),
              (this._x = e),
              (this._y = n),
              (this._z = r),
              (this._w = a);
          }
          return (
            M(
              t,
              [
                {
                  key: "x",
                  get: function () {
                    return this._x;
                  },
                  set: function (e) {
                    (this._x = e), this._onChangeCallback();
                  },
                },
                {
                  key: "y",
                  get: function () {
                    return this._y;
                  },
                  set: function (e) {
                    (this._y = e), this._onChangeCallback();
                  },
                },
                {
                  key: "z",
                  get: function () {
                    return this._z;
                  },
                  set: function (e) {
                    (this._z = e), this._onChangeCallback();
                  },
                },
                {
                  key: "w",
                  get: function () {
                    return this._w;
                  },
                  set: function (e) {
                    (this._w = e), this._onChangeCallback();
                  },
                },
                {
                  key: "set",
                  value: function (e, t, n, r) {
                    return (
                      (this._x = e),
                      (this._y = t),
                      (this._z = n),
                      (this._w = r),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    return new this.constructor(
                      this._x,
                      this._y,
                      this._z,
                      this._w
                    );
                  },
                },
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      (this._x = e.x),
                      (this._y = e.y),
                      (this._z = e.z),
                      (this._w = e.w),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "setFromEuler",
                  value: function (e, t) {
                    var n = e._x,
                      r = e._y,
                      a = e._z,
                      i = e._order,
                      o = Math.cos,
                      s = Math.sin,
                      l = o(n / 2),
                      u = o(r / 2),
                      c = o(a / 2),
                      f = s(n / 2),
                      d = s(r / 2),
                      h = s(a / 2);
                    switch (i) {
                      case "XYZ":
                        (this._x = f * u * c + l * d * h),
                          (this._y = l * d * c - f * u * h),
                          (this._z = l * u * h + f * d * c),
                          (this._w = l * u * c - f * d * h);
                        break;
                      case "YXZ":
                        (this._x = f * u * c + l * d * h),
                          (this._y = l * d * c - f * u * h),
                          (this._z = l * u * h - f * d * c),
                          (this._w = l * u * c + f * d * h);
                        break;
                      case "ZXY":
                        (this._x = f * u * c - l * d * h),
                          (this._y = l * d * c + f * u * h),
                          (this._z = l * u * h + f * d * c),
                          (this._w = l * u * c - f * d * h);
                        break;
                      case "ZYX":
                        (this._x = f * u * c - l * d * h),
                          (this._y = l * d * c + f * u * h),
                          (this._z = l * u * h - f * d * c),
                          (this._w = l * u * c + f * d * h);
                        break;
                      case "YZX":
                        (this._x = f * u * c + l * d * h),
                          (this._y = l * d * c + f * u * h),
                          (this._z = l * u * h - f * d * c),
                          (this._w = l * u * c - f * d * h);
                        break;
                      case "XZY":
                        (this._x = f * u * c - l * d * h),
                          (this._y = l * d * c - f * u * h),
                          (this._z = l * u * h + f * d * c),
                          (this._w = l * u * c + f * d * h);
                        break;
                      default:
                        console.warn(
                          "THREE.Quaternion: .setFromEuler() encountered an unknown order: " +
                            i
                        );
                    }
                    return !1 !== t && this._onChangeCallback(), this;
                  },
                },
                {
                  key: "setFromAxisAngle",
                  value: function (e, t) {
                    var n = t / 2,
                      r = Math.sin(n);
                    return (
                      (this._x = e.x * r),
                      (this._y = e.y * r),
                      (this._z = e.z * r),
                      (this._w = Math.cos(n)),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "setFromRotationMatrix",
                  value: function (e) {
                    var t = e.elements,
                      n = t[0],
                      r = t[4],
                      a = t[8],
                      i = t[1],
                      o = t[5],
                      s = t[9],
                      l = t[2],
                      u = t[6],
                      c = t[10],
                      f = n + o + c;
                    if (f > 0) {
                      var d = 0.5 / Math.sqrt(f + 1);
                      (this._w = 0.25 / d),
                        (this._x = (u - s) * d),
                        (this._y = (a - l) * d),
                        (this._z = (i - r) * d);
                    } else if (n > o && n > c) {
                      var h = 2 * Math.sqrt(1 + n - o - c);
                      (this._w = (u - s) / h),
                        (this._x = 0.25 * h),
                        (this._y = (r + i) / h),
                        (this._z = (a + l) / h);
                    } else if (o > c) {
                      var p = 2 * Math.sqrt(1 + o - n - c);
                      (this._w = (a - l) / p),
                        (this._x = (r + i) / p),
                        (this._y = 0.25 * p),
                        (this._z = (s + u) / p);
                    } else {
                      var v = 2 * Math.sqrt(1 + c - n - o);
                      (this._w = (i - r) / v),
                        (this._x = (a + l) / v),
                        (this._y = (s + u) / v),
                        (this._z = 0.25 * v);
                    }
                    return this._onChangeCallback(), this;
                  },
                },
                {
                  key: "setFromUnitVectors",
                  value: function (e, t) {
                    var n = e.dot(t) + 1;
                    return (
                      n < Number.EPSILON
                        ? ((n = 0),
                          Math.abs(e.x) > Math.abs(e.z)
                            ? ((this._x = -e.y),
                              (this._y = e.x),
                              (this._z = 0),
                              (this._w = n))
                            : ((this._x = 0),
                              (this._y = -e.z),
                              (this._z = e.y),
                              (this._w = n)))
                        : ((this._x = e.y * t.z - e.z * t.y),
                          (this._y = e.z * t.x - e.x * t.z),
                          (this._z = e.x * t.y - e.y * t.x),
                          (this._w = n)),
                      this.normalize()
                    );
                  },
                },
                {
                  key: "angleTo",
                  value: function (e) {
                    return 2 * Math.acos(Math.abs(je(this.dot(e), -1, 1)));
                  },
                },
                {
                  key: "rotateTowards",
                  value: function (e, t) {
                    var n = this.angleTo(e);
                    if (0 === n) return this;
                    var r = Math.min(1, t / n);
                    return this.slerp(e, r), this;
                  },
                },
                {
                  key: "identity",
                  value: function () {
                    return this.set(0, 0, 0, 1);
                  },
                },
                {
                  key: "invert",
                  value: function () {
                    return this.conjugate();
                  },
                },
                {
                  key: "conjugate",
                  value: function () {
                    return (
                      (this._x *= -1),
                      (this._y *= -1),
                      (this._z *= -1),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "dot",
                  value: function (e) {
                    return (
                      this._x * e._x +
                      this._y * e._y +
                      this._z * e._z +
                      this._w * e._w
                    );
                  },
                },
                {
                  key: "lengthSq",
                  value: function () {
                    return (
                      this._x * this._x +
                      this._y * this._y +
                      this._z * this._z +
                      this._w * this._w
                    );
                  },
                },
                {
                  key: "length",
                  value: function () {
                    return Math.sqrt(
                      this._x * this._x +
                        this._y * this._y +
                        this._z * this._z +
                        this._w * this._w
                    );
                  },
                },
                {
                  key: "normalize",
                  value: function () {
                    var e = this.length();
                    return (
                      0 === e
                        ? ((this._x = 0),
                          (this._y = 0),
                          (this._z = 0),
                          (this._w = 1))
                        : ((e = 1 / e),
                          (this._x = this._x * e),
                          (this._y = this._y * e),
                          (this._z = this._z * e),
                          (this._w = this._w * e)),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "multiply",
                  value: function (e) {
                    return this.multiplyQuaternions(this, e);
                  },
                },
                {
                  key: "premultiply",
                  value: function (e) {
                    return this.multiplyQuaternions(e, this);
                  },
                },
                {
                  key: "multiplyQuaternions",
                  value: function (e, t) {
                    var n = e._x,
                      r = e._y,
                      a = e._z,
                      i = e._w,
                      o = t._x,
                      s = t._y,
                      l = t._z,
                      u = t._w;
                    return (
                      (this._x = n * u + i * o + r * l - a * s),
                      (this._y = r * u + i * s + a * o - n * l),
                      (this._z = a * u + i * l + n * s - r * o),
                      (this._w = i * u - n * o - r * s - a * l),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "slerp",
                  value: function (e, t) {
                    if (0 === t) return this;
                    if (1 === t) return this.copy(e);
                    var n = this._x,
                      r = this._y,
                      a = this._z,
                      i = this._w,
                      o = i * e._w + n * e._x + r * e._y + a * e._z;
                    if (
                      (o < 0
                        ? ((this._w = -e._w),
                          (this._x = -e._x),
                          (this._y = -e._y),
                          (this._z = -e._z),
                          (o = -o))
                        : this.copy(e),
                      o >= 1)
                    )
                      return (
                        (this._w = i),
                        (this._x = n),
                        (this._y = r),
                        (this._z = a),
                        this
                      );
                    var s = 1 - o * o;
                    if (s <= Number.EPSILON) {
                      var l = 1 - t;
                      return (
                        (this._w = l * i + t * this._w),
                        (this._x = l * n + t * this._x),
                        (this._y = l * r + t * this._y),
                        (this._z = l * a + t * this._z),
                        this.normalize(),
                        this._onChangeCallback(),
                        this
                      );
                    }
                    var u = Math.sqrt(s),
                      c = Math.atan2(u, o),
                      f = Math.sin((1 - t) * c) / u,
                      d = Math.sin(t * c) / u;
                    return (
                      (this._w = i * f + this._w * d),
                      (this._x = n * f + this._x * d),
                      (this._y = r * f + this._y * d),
                      (this._z = a * f + this._z * d),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "slerpQuaternions",
                  value: function (e, t, n) {
                    return this.copy(e).slerp(t, n);
                  },
                },
                {
                  key: "random",
                  value: function () {
                    var e = Math.random(),
                      t = Math.sqrt(1 - e),
                      n = Math.sqrt(e),
                      r = 2 * Math.PI * Math.random(),
                      a = 2 * Math.PI * Math.random();
                    return this.set(
                      t * Math.cos(r),
                      n * Math.sin(a),
                      n * Math.cos(a),
                      t * Math.sin(r)
                    );
                  },
                },
                {
                  key: "equals",
                  value: function (e) {
                    return (
                      e._x === this._x &&
                      e._y === this._y &&
                      e._z === this._z &&
                      e._w === this._w
                    );
                  },
                },
                {
                  key: "fromArray",
                  value: function (e) {
                    var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                    return (
                      (this._x = e[t]),
                      (this._y = e[t + 1]),
                      (this._z = e[t + 2]),
                      (this._w = e[t + 3]),
                      this._onChangeCallback(),
                      this
                    );
                  },
                },
                {
                  key: "toArray",
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : [],
                      t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0;
                    return (
                      (e[t] = this._x),
                      (e[t + 1] = this._y),
                      (e[t + 2] = this._z),
                      (e[t + 3] = this._w),
                      e
                    );
                  },
                },
                {
                  key: "fromBufferAttribute",
                  value: function (e, t) {
                    return (
                      (this._x = e.getX(t)),
                      (this._y = e.getY(t)),
                      (this._z = e.getZ(t)),
                      (this._w = e.getW(t)),
                      this
                    );
                  },
                },
                {
                  key: "toJSON",
                  value: function () {
                    return this.toArray();
                  },
                },
                {
                  key: "_onChange",
                  value: function (e) {
                    return (this._onChangeCallback = e), this;
                  },
                },
                { key: "_onChangeCallback", value: function () {} },
                {
                  key: Symbol.iterator,
                  value: E().mark(function e() {
                    return E().wrap(
                      function (e) {
                        for (;;)
                          switch ((e.prev = e.next)) {
                            case 0:
                              return (e.next = 2), this._x;
                            case 2:
                              return (e.next = 4), this._y;
                            case 4:
                              return (e.next = 6), this._z;
                            case 6:
                              return (e.next = 8), this._w;
                            case 8:
                            case "end":
                              return e.stop();
                          }
                      },
                      e,
                      this
                    );
                  }),
                },
              ],
              [
                {
                  key: "slerpFlat",
                  value: function (e, t, n, r, a, i, o) {
                    var s = n[r + 0],
                      l = n[r + 1],
                      u = n[r + 2],
                      c = n[r + 3],
                      f = a[i + 0],
                      d = a[i + 1],
                      h = a[i + 2],
                      p = a[i + 3];
                    if (0 === o)
                      return (
                        (e[t + 0] = s),
                        (e[t + 1] = l),
                        (e[t + 2] = u),
                        void (e[t + 3] = c)
                      );
                    if (1 === o)
                      return (
                        (e[t + 0] = f),
                        (e[t + 1] = d),
                        (e[t + 2] = h),
                        void (e[t + 3] = p)
                      );
                    if (c !== p || s !== f || l !== d || u !== h) {
                      var v = 1 - o,
                        m = s * f + l * d + u * h + c * p,
                        g = m >= 0 ? 1 : -1,
                        y = 1 - m * m;
                      if (y > Number.EPSILON) {
                        var _ = Math.sqrt(y),
                          b = Math.atan2(_, m * g);
                        (v = Math.sin(v * b) / _), (o = Math.sin(o * b) / _);
                      }
                      var x = o * g;
                      if (
                        ((s = s * v + f * x),
                        (l = l * v + d * x),
                        (u = u * v + h * x),
                        (c = c * v + p * x),
                        v === 1 - o)
                      ) {
                        var S = 1 / Math.sqrt(s * s + l * l + u * u + c * c);
                        (s *= S), (l *= S), (u *= S), (c *= S);
                      }
                    }
                    (e[t] = s), (e[t + 1] = l), (e[t + 2] = u), (e[t + 3] = c);
                  },
                },
                {
                  key: "multiplyQuaternionsFlat",
                  value: function (e, t, n, r, a, i) {
                    var o = n[r],
                      s = n[r + 1],
                      l = n[r + 2],
                      u = n[r + 3],
                      c = a[i],
                      f = a[i + 1],
                      d = a[i + 2],
                      h = a[i + 3];
                    return (
                      (e[t] = o * h + u * c + s * d - l * f),
                      (e[t + 1] = s * h + u * f + l * c - o * d),
                      (e[t + 2] = l * h + u * d + o * f - s * c),
                      (e[t + 3] = u * h - o * c - s * f - l * d),
                      e
                    );
                  },
                },
              ]
            ),
            t
          );
        })(),
        Tt = (function (e) {
          function t() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0;
            w(this, t),
              (t.prototype.isVector3 = !0),
              (this.x = e),
              (this.y = n),
              (this.z = r);
          }
          return (
            M(t, [
              {
                key: "set",
                value: function (e, t, n) {
                  return (
                    void 0 === n && (n = this.z),
                    (this.x = e),
                    (this.y = t),
                    (this.z = n),
                    this
                  );
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (this.x = e), (this.y = e), (this.z = e), this;
                },
              },
              {
                key: "setX",
                value: function (e) {
                  return (this.x = e), this;
                },
              },
              {
                key: "setY",
                value: function (e) {
                  return (this.y = e), this;
                },
              },
              {
                key: "setZ",
                value: function (e) {
                  return (this.z = e), this;
                },
              },
              {
                key: "setComponent",
                value: function (e, t) {
                  switch (e) {
                    case 0:
                      this.x = t;
                      break;
                    case 1:
                      this.y = t;
                      break;
                    case 2:
                      this.z = t;
                      break;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                  return this;
                },
              },
              {
                key: "getComponent",
                value: function (e) {
                  switch (e) {
                    case 0:
                      return this.x;
                    case 1:
                      return this.y;
                    case 2:
                      return this.z;
                    default:
                      throw new Error("index is out of range: " + e);
                  }
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.x, this.y, this.z);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (
                    (this.x += e.x), (this.y += e.y), (this.z += e.z), this
                  );
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (this.x += e), (this.y += e), (this.z += e), this;
                },
              },
              {
                key: "addVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x + t.x),
                    (this.y = e.y + t.y),
                    (this.z = e.z + t.z),
                    this
                  );
                },
              },
              {
                key: "addScaledVector",
                value: function (e, t) {
                  return (
                    (this.x += e.x * t),
                    (this.y += e.y * t),
                    (this.z += e.z * t),
                    this
                  );
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (
                    (this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this
                  );
                },
              },
              {
                key: "subScalar",
                value: function (e) {
                  return (this.x -= e), (this.y -= e), (this.z -= e), this;
                },
              },
              {
                key: "subVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x - t.x),
                    (this.y = e.y - t.y),
                    (this.z = e.z - t.z),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (
                    (this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (this.x *= e), (this.y *= e), (this.z *= e), this;
                },
              },
              {
                key: "multiplyVectors",
                value: function (e, t) {
                  return (
                    (this.x = e.x * t.x),
                    (this.y = e.y * t.y),
                    (this.z = e.z * t.z),
                    this
                  );
                },
              },
              {
                key: "applyEuler",
                value: function (e) {
                  return this.applyQuaternion(At.setFromEuler(e));
                },
              },
              {
                key: "applyAxisAngle",
                value: function (e, t) {
                  return this.applyQuaternion(At.setFromAxisAngle(e, t));
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    a = e.elements;
                  return (
                    (this.x = a[0] * t + a[3] * n + a[6] * r),
                    (this.y = a[1] * t + a[4] * n + a[7] * r),
                    (this.z = a[2] * t + a[5] * n + a[8] * r),
                    this
                  );
                },
              },
              {
                key: "applyNormalMatrix",
                value: function (e) {
                  return this.applyMatrix3(e).normalize();
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    a = e.elements,
                    i = 1 / (a[3] * t + a[7] * n + a[11] * r + a[15]);
                  return (
                    (this.x = (a[0] * t + a[4] * n + a[8] * r + a[12]) * i),
                    (this.y = (a[1] * t + a[5] * n + a[9] * r + a[13]) * i),
                    (this.z = (a[2] * t + a[6] * n + a[10] * r + a[14]) * i),
                    this
                  );
                },
              },
              {
                key: "applyQuaternion",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    a = e.x,
                    i = e.y,
                    o = e.z,
                    s = e.w,
                    l = 2 * (i * r - o * n),
                    u = 2 * (o * t - a * r),
                    c = 2 * (a * n - i * t);
                  return (
                    (this.x = t + s * l + i * c - o * u),
                    (this.y = n + s * u + o * l - a * c),
                    (this.z = r + s * c + a * u - i * l),
                    this
                  );
                },
              },
              {
                key: "project",
                value: function (e) {
                  return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
                    e.projectionMatrix
                  );
                },
              },
              {
                key: "unproject",
                value: function (e) {
                  return this.applyMatrix4(
                    e.projectionMatrixInverse
                  ).applyMatrix4(e.matrixWorld);
                },
              },
              {
                key: "transformDirection",
                value: function (e) {
                  var t = this.x,
                    n = this.y,
                    r = this.z,
                    a = e.elements;
                  return (
                    (this.x = a[0] * t + a[4] * n + a[8] * r),
                    (this.y = a[1] * t + a[5] * n + a[9] * r),
                    (this.z = a[2] * t + a[6] * n + a[10] * r),
                    this.normalize()
                  );
                },
              },
              {
                key: "divide",
                value: function (e) {
                  return (
                    (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this
                  );
                },
              },
              {
                key: "divideScalar",
                value: function (e) {
                  return this.multiplyScalar(1 / e);
                },
              },
              {
                key: "min",
                value: function (e) {
                  return (
                    (this.x = Math.min(this.x, e.x)),
                    (this.y = Math.min(this.y, e.y)),
                    (this.z = Math.min(this.z, e.z)),
                    this
                  );
                },
              },
              {
                key: "max",
                value: function (e) {
                  return (
                    (this.x = Math.max(this.x, e.x)),
                    (this.y = Math.max(this.y, e.y)),
                    (this.z = Math.max(this.z, e.z)),
                    this
                  );
                },
              },
              {
                key: "clamp",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e.x, Math.min(t.x, this.x))),
                    (this.y = Math.max(e.y, Math.min(t.y, this.y))),
                    (this.z = Math.max(e.z, Math.min(t.z, this.z))),
                    this
                  );
                },
              },
              {
                key: "clampScalar",
                value: function (e, t) {
                  return (
                    (this.x = Math.max(e, Math.min(t, this.x))),
                    (this.y = Math.max(e, Math.min(t, this.y))),
                    (this.z = Math.max(e, Math.min(t, this.z))),
                    this
                  );
                },
              },
              {
                key: "clampLength",
                value: function (e, t) {
                  var n = this.length();
                  return this.divideScalar(n || 1).multiplyScalar(
                    Math.max(e, Math.min(t, n))
                  );
                },
              },
              {
                key: "floor",
                value: function () {
                  return (
                    (this.x = Math.floor(this.x)),
                    (this.y = Math.floor(this.y)),
                    (this.z = Math.floor(this.z)),
                    this
                  );
                },
              },
              {
                key: "ceil",
                value: function () {
                  return (
                    (this.x = Math.ceil(this.x)),
                    (this.y = Math.ceil(this.y)),
                    (this.z = Math.ceil(this.z)),
                    this
                  );
                },
              },
              {
                key: "round",
                value: function () {
                  return (
                    (this.x = Math.round(this.x)),
                    (this.y = Math.round(this.y)),
                    (this.z = Math.round(this.z)),
                    this
                  );
                },
              },
              {
                key: "roundToZero",
                value: function () {
                  return (
                    (this.x = Math.trunc(this.x)),
                    (this.y = Math.trunc(this.y)),
                    (this.z = Math.trunc(this.z)),
                    this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (
                    (this.x = -this.x),
                    (this.y = -this.y),
                    (this.z = -this.z),
                    this
                  );
                },
              },
              {
                key: "dot",
                value: function (e) {
                  return this.x * e.x + this.y * e.y + this.z * e.z;
                },
              },
              {
                key: "lengthSq",
                value: function () {
                  return this.x * this.x + this.y * this.y + this.z * this.z;
                },
              },
              {
                key: "length",
                value: function () {
                  return Math.sqrt(
                    this.x * this.x + this.y * this.y + this.z * this.z
                  );
                },
              },
              {
                key: "manhattanLength",
                value: function () {
                  return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
                },
              },
              {
                key: "normalize",
                value: function () {
                  return this.divideScalar(this.length() || 1);
                },
              },
              {
                key: "setLength",
                value: function (e) {
                  return this.normalize().multiplyScalar(e);
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.x += (e.x - this.x) * t),
                    (this.y += (e.y - this.y) * t),
                    (this.z += (e.z - this.z) * t),
                    this
                  );
                },
              },
              {
                key: "lerpVectors",
                value: function (e, t, n) {
                  return (
                    (this.x = e.x + (t.x - e.x) * n),
                    (this.y = e.y + (t.y - e.y) * n),
                    (this.z = e.z + (t.z - e.z) * n),
                    this
                  );
                },
              },
              {
                key: "cross",
                value: function (e) {
                  return this.crossVectors(this, e);
                },
              },
              {
                key: "crossVectors",
                value: function (e, t) {
                  var n = e.x,
                    r = e.y,
                    a = e.z,
                    i = t.x,
                    o = t.y,
                    s = t.z;
                  return (
                    (this.x = r * s - a * o),
                    (this.y = a * i - n * s),
                    (this.z = n * o - r * i),
                    this
                  );
                },
              },
              {
                key: "projectOnVector",
                value: function (e) {
                  var t = e.lengthSq();
                  if (0 === t) return this.set(0, 0, 0);
                  var n = e.dot(this) / t;
                  return this.copy(e).multiplyScalar(n);
                },
              },
              {
                key: "projectOnPlane",
                value: function (e) {
                  return Mt.copy(this).projectOnVector(e), this.sub(Mt);
                },
              },
              {
                key: "reflect",
                value: function (e) {
                  return this.sub(Mt.copy(e).multiplyScalar(2 * this.dot(e)));
                },
              },
              {
                key: "angleTo",
                value: function (e) {
                  var t = Math.sqrt(this.lengthSq() * e.lengthSq());
                  if (0 === t) return Math.PI / 2;
                  var n = this.dot(e) / t;
                  return Math.acos(je(n, -1, 1));
                },
              },
              {
                key: "distanceTo",
                value: function (e) {
                  return Math.sqrt(this.distanceToSquared(e));
                },
              },
              {
                key: "distanceToSquared",
                value: function (e) {
                  var t = this.x - e.x,
                    n = this.y - e.y,
                    r = this.z - e.z;
                  return t * t + n * n + r * r;
                },
              },
              {
                key: "manhattanDistanceTo",
                value: function (e) {
                  return (
                    Math.abs(this.x - e.x) +
                    Math.abs(this.y - e.y) +
                    Math.abs(this.z - e.z)
                  );
                },
              },
              {
                key: "setFromSpherical",
                value: function (e) {
                  return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
                },
              },
              {
                key: "setFromSphericalCoords",
                value: function (e, t, n) {
                  var r = Math.sin(t) * e;
                  return (
                    (this.x = r * Math.sin(n)),
                    (this.y = Math.cos(t) * e),
                    (this.z = r * Math.cos(n)),
                    this
                  );
                },
              },
              {
                key: "setFromCylindrical",
                value: function (e) {
                  return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
                },
              },
              {
                key: "setFromCylindricalCoords",
                value: function (e, t, n) {
                  return (
                    (this.x = e * Math.sin(t)),
                    (this.y = n),
                    (this.z = e * Math.cos(t)),
                    this
                  );
                },
              },
              {
                key: "setFromMatrixPosition",
                value: function (e) {
                  var t = e.elements;
                  return (
                    (this.x = t[12]), (this.y = t[13]), (this.z = t[14]), this
                  );
                },
              },
              {
                key: "setFromMatrixScale",
                value: function (e) {
                  var t = this.setFromMatrixColumn(e, 0).length(),
                    n = this.setFromMatrixColumn(e, 1).length(),
                    r = this.setFromMatrixColumn(e, 2).length();
                  return (this.x = t), (this.y = n), (this.z = r), this;
                },
              },
              {
                key: "setFromMatrixColumn",
                value: function (e, t) {
                  return this.fromArray(e.elements, 4 * t);
                },
              },
              {
                key: "setFromMatrix3Column",
                value: function (e, t) {
                  return this.fromArray(e.elements, 3 * t);
                },
              },
              {
                key: "setFromEuler",
                value: function (e) {
                  return (
                    (this.x = e._x), (this.y = e._y), (this.z = e._z), this
                  );
                },
              },
              {
                key: "setFromColor",
                value: function (e) {
                  return (this.x = e.r), (this.y = e.g), (this.z = e.b), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.x === this.x && e.y === this.y && e.z === this.z;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (
                    (this.x = e[t]),
                    (this.y = e[t + 1]),
                    (this.z = e[t + 2]),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this.x), (e[t + 1] = this.y), (e[t + 2] = this.z), e
                  );
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (
                    (this.x = e.getX(t)),
                    (this.y = e.getY(t)),
                    (this.z = e.getZ(t)),
                    this
                  );
                },
              },
              {
                key: "random",
                value: function () {
                  return (
                    (this.x = Math.random()),
                    (this.y = Math.random()),
                    (this.z = Math.random()),
                    this
                  );
                },
              },
              {
                key: "randomDirection",
                value: function () {
                  var e = 2 * (Math.random() - 0.5),
                    t = Math.random() * Math.PI * 2,
                    n = Math.sqrt(1 - Math.pow(e, 2));
                  return (
                    (this.x = n * Math.cos(t)),
                    (this.y = n * Math.sin(t)),
                    (this.z = e),
                    this
                  );
                },
              },
              {
                key: Symbol.iterator,
                value: E().mark(function e() {
                  return E().wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.x;
                          case 2:
                            return (e.next = 4), this.y;
                          case 4:
                            return (e.next = 6), this.z;
                          case 6:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            t
          );
        })(),
        Mt = new Tt(),
        At = new wt(),
        Ct = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Tt(1 / 0, 1 / 0, 1 / 0),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Tt(-1 / 0, -1 / 0, -1 / 0);
            w(this, e), (this.isBox3 = !0), (this.min = t), (this.max = n);
          }
          return (
            M(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.min.copy(e), this.max.copy(t), this;
                },
              },
              {
                key: "setFromArray",
                value: function (e) {
                  this.makeEmpty();
                  for (var t = 0, n = e.length; t < n; t += 3)
                    this.expandByPoint(Rt.fromArray(e, t));
                  return this;
                },
              },
              {
                key: "setFromBufferAttribute",
                value: function (e) {
                  this.makeEmpty();
                  for (var t = 0, n = e.count; t < n; t++)
                    this.expandByPoint(Rt.fromBufferAttribute(e, t));
                  return this;
                },
              },
              {
                key: "setFromPoints",
                value: function (e) {
                  this.makeEmpty();
                  for (var t = 0, n = e.length; t < n; t++)
                    this.expandByPoint(e[t]);
                  return this;
                },
              },
              {
                key: "setFromCenterAndSize",
                value: function (e, t) {
                  var n = Rt.copy(t).multiplyScalar(0.5);
                  return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
                },
              },
              {
                key: "setFromObject",
                value: function (e) {
                  var t =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1];
                  return this.makeEmpty(), this.expandByObject(e, t);
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return this.min.copy(e.min), this.max.copy(e.max), this;
                },
              },
              {
                key: "makeEmpty",
                value: function () {
                  return (
                    (this.min.x = this.min.y = this.min.z = 1 / 0),
                    (this.max.x = this.max.y = this.max.z = -1 / 0),
                    this
                  );
                },
              },
              {
                key: "isEmpty",
                value: function () {
                  return (
                    this.max.x < this.min.x ||
                    this.max.y < this.min.y ||
                    this.max.z < this.min.z
                  );
                },
              },
              {
                key: "getCenter",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0, 0)
                    : e.addVectors(this.min, this.max).multiplyScalar(0.5);
                },
              },
              {
                key: "getSize",
                value: function (e) {
                  return this.isEmpty()
                    ? e.set(0, 0, 0)
                    : e.subVectors(this.max, this.min);
                },
              },
              {
                key: "expandByPoint",
                value: function (e) {
                  return this.min.min(e), this.max.max(e), this;
                },
              },
              {
                key: "expandByVector",
                value: function (e) {
                  return this.min.sub(e), this.max.add(e), this;
                },
              },
              {
                key: "expandByScalar",
                value: function (e) {
                  return this.min.addScalar(-e), this.max.addScalar(e), this;
                },
              },
              {
                key: "expandByObject",
                value: function (e) {
                  var t =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1];
                  e.updateWorldMatrix(!1, !1);
                  var n = e.geometry;
                  if (void 0 !== n) {
                    var r = n.getAttribute("position");
                    if (!0 === t && void 0 !== r && !0 !== e.isInstancedMesh)
                      for (var a = 0, i = r.count; a < i; a++)
                        !0 === e.isMesh
                          ? e.getVertexPosition(a, Rt)
                          : Rt.fromBufferAttribute(r, a),
                          Rt.applyMatrix4(e.matrixWorld),
                          this.expandByPoint(Rt);
                    else
                      void 0 !== e.boundingBox
                        ? (null === e.boundingBox && e.computeBoundingBox(),
                          Pt.copy(e.boundingBox))
                        : (null === n.boundingBox && n.computeBoundingBox(),
                          Pt.copy(n.boundingBox)),
                        Pt.applyMatrix4(e.matrixWorld),
                        this.union(Pt);
                  }
                  for (var o = e.children, s = 0, l = o.length; s < l; s++)
                    this.expandByObject(o[s], t);
                  return this;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  return !(
                    e.x < this.min.x ||
                    e.x > this.max.x ||
                    e.y < this.min.y ||
                    e.y > this.max.y ||
                    e.z < this.min.z ||
                    e.z > this.max.z
                  );
                },
              },
              {
                key: "containsBox",
                value: function (e) {
                  return (
                    this.min.x <= e.min.x &&
                    e.max.x <= this.max.x &&
                    this.min.y <= e.min.y &&
                    e.max.y <= this.max.y &&
                    this.min.z <= e.min.z &&
                    e.max.z <= this.max.z
                  );
                },
              },
              {
                key: "getParameter",
                value: function (e, t) {
                  return t.set(
                    (e.x - this.min.x) / (this.max.x - this.min.x),
                    (e.y - this.min.y) / (this.max.y - this.min.y),
                    (e.z - this.min.z) / (this.max.z - this.min.z)
                  );
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return !(
                    e.max.x < this.min.x ||
                    e.min.x > this.max.x ||
                    e.max.y < this.min.y ||
                    e.min.y > this.max.y ||
                    e.max.z < this.min.z ||
                    e.min.z > this.max.z
                  );
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  return (
                    this.clampPoint(e.center, Rt),
                    Rt.distanceToSquared(e.center) <= e.radius * e.radius
                  );
                },
              },
              {
                key: "intersectsPlane",
                value: function (e) {
                  var t, n;
                  return (
                    e.normal.x > 0
                      ? ((t = e.normal.x * this.min.x),
                        (n = e.normal.x * this.max.x))
                      : ((t = e.normal.x * this.max.x),
                        (n = e.normal.x * this.min.x)),
                    e.normal.y > 0
                      ? ((t += e.normal.y * this.min.y),
                        (n += e.normal.y * this.max.y))
                      : ((t += e.normal.y * this.max.y),
                        (n += e.normal.y * this.min.y)),
                    e.normal.z > 0
                      ? ((t += e.normal.z * this.min.z),
                        (n += e.normal.z * this.max.z))
                      : ((t += e.normal.z * this.max.z),
                        (n += e.normal.z * this.min.z)),
                    t <= -e.constant && n >= -e.constant
                  );
                },
              },
              {
                key: "intersectsTriangle",
                value: function (e) {
                  if (this.isEmpty()) return !1;
                  this.getCenter(Ft),
                    zt.subVectors(this.max, Ft),
                    Ut.subVectors(e.a, Ft),
                    Lt.subVectors(e.b, Ft),
                    Dt.subVectors(e.c, Ft),
                    It.subVectors(Lt, Ut),
                    Ot.subVectors(Dt, Lt),
                    Nt.subVectors(Ut, Dt);
                  var t = [
                    0,
                    -It.z,
                    It.y,
                    0,
                    -Ot.z,
                    Ot.y,
                    0,
                    -Nt.z,
                    Nt.y,
                    It.z,
                    0,
                    -It.x,
                    Ot.z,
                    0,
                    -Ot.x,
                    Nt.z,
                    0,
                    -Nt.x,
                    -It.y,
                    It.x,
                    0,
                    -Ot.y,
                    Ot.x,
                    0,
                    -Nt.y,
                    Nt.x,
                    0,
                  ];
                  return (
                    !!Gt(t, Ut, Lt, Dt, zt) &&
                    !!Gt((t = [1, 0, 0, 0, 1, 0, 0, 0, 1]), Ut, Lt, Dt, zt) &&
                    (Bt.crossVectors(It, Ot),
                    Gt((t = [Bt.x, Bt.y, Bt.z]), Ut, Lt, Dt, zt))
                  );
                },
              },
              {
                key: "clampPoint",
                value: function (e, t) {
                  return t.copy(e).clamp(this.min, this.max);
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return this.clampPoint(e, Rt).distanceTo(e);
                },
              },
              {
                key: "getBoundingSphere",
                value: function (e) {
                  return (
                    this.isEmpty()
                      ? e.makeEmpty()
                      : (this.getCenter(e.center),
                        (e.radius = 0.5 * this.getSize(Rt).length())),
                    e
                  );
                },
              },
              {
                key: "intersect",
                value: function (e) {
                  return (
                    this.min.max(e.min),
                    this.max.min(e.max),
                    this.isEmpty() && this.makeEmpty(),
                    this
                  );
                },
              },
              {
                key: "union",
                value: function (e) {
                  return this.min.min(e.min), this.max.max(e.max), this;
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.isEmpty() ||
                      (kt[0]
                        .set(this.min.x, this.min.y, this.min.z)
                        .applyMatrix4(e),
                      kt[1]
                        .set(this.min.x, this.min.y, this.max.z)
                        .applyMatrix4(e),
                      kt[2]
                        .set(this.min.x, this.max.y, this.min.z)
                        .applyMatrix4(e),
                      kt[3]
                        .set(this.min.x, this.max.y, this.max.z)
                        .applyMatrix4(e),
                      kt[4]
                        .set(this.max.x, this.min.y, this.min.z)
                        .applyMatrix4(e),
                      kt[5]
                        .set(this.max.x, this.min.y, this.max.z)
                        .applyMatrix4(e),
                      kt[6]
                        .set(this.max.x, this.max.y, this.min.z)
                        .applyMatrix4(e),
                      kt[7]
                        .set(this.max.x, this.max.y, this.max.z)
                        .applyMatrix4(e),
                      this.setFromPoints(kt)),
                    this
                  );
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return this.min.add(e), this.max.add(e), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.min.equals(this.min) && e.max.equals(this.max);
                },
              },
            ]),
            e
          );
        })(),
        kt = [
          new Tt(),
          new Tt(),
          new Tt(),
          new Tt(),
          new Tt(),
          new Tt(),
          new Tt(),
          new Tt(),
        ],
        Rt = new Tt(),
        Pt = new Ct(),
        Ut = new Tt(),
        Lt = new Tt(),
        Dt = new Tt(),
        It = new Tt(),
        Ot = new Tt(),
        Nt = new Tt(),
        Ft = new Tt(),
        zt = new Tt(),
        Bt = new Tt(),
        Ht = new Tt();
      function Gt(e, t, n, r, a) {
        for (var i = 0, o = e.length - 3; i <= o; i += 3) {
          Ht.fromArray(e, i);
          var s =
              a.x * Math.abs(Ht.x) +
              a.y * Math.abs(Ht.y) +
              a.z * Math.abs(Ht.z),
            l = t.dot(Ht),
            u = n.dot(Ht),
            c = r.dot(Ht);
          if (Math.max(-Math.max(l, u, c), Math.min(l, u, c)) > s) return !1;
        }
        return !0;
      }
      var Vt = new Ct(),
        Wt = new Tt(),
        jt = new Tt(),
        Xt = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Tt(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : -1;
            w(this, e), (this.center = t), (this.radius = n);
          }
          return (
            M(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.center.copy(e), (this.radius = t), this;
                },
              },
              {
                key: "setFromPoints",
                value: function (e, t) {
                  var n = this.center;
                  void 0 !== t ? n.copy(t) : Vt.setFromPoints(e).getCenter(n);
                  for (var r = 0, a = 0, i = e.length; a < i; a++)
                    r = Math.max(r, n.distanceToSquared(e[a]));
                  return (this.radius = Math.sqrt(r)), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    this.center.copy(e.center), (this.radius = e.radius), this
                  );
                },
              },
              {
                key: "isEmpty",
                value: function () {
                  return this.radius < 0;
                },
              },
              {
                key: "makeEmpty",
                value: function () {
                  return this.center.set(0, 0, 0), (this.radius = -1), this;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  return (
                    e.distanceToSquared(this.center) <=
                    this.radius * this.radius
                  );
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return e.distanceTo(this.center) - this.radius;
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  var t = this.radius + e.radius;
                  return e.center.distanceToSquared(this.center) <= t * t;
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return e.intersectsSphere(this);
                },
              },
              {
                key: "intersectsPlane",
                value: function (e) {
                  return (
                    Math.abs(e.distanceToPoint(this.center)) <= this.radius
                  );
                },
              },
              {
                key: "clampPoint",
                value: function (e, t) {
                  var n = this.center.distanceToSquared(e);
                  return (
                    t.copy(e),
                    n > this.radius * this.radius &&
                      (t.sub(this.center).normalize(),
                      t.multiplyScalar(this.radius).add(this.center)),
                    t
                  );
                },
              },
              {
                key: "getBoundingBox",
                value: function (e) {
                  return this.isEmpty()
                    ? (e.makeEmpty(), e)
                    : (e.set(this.center, this.center),
                      e.expandByScalar(this.radius),
                      e);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.center.applyMatrix4(e),
                    (this.radius = this.radius * e.getMaxScaleOnAxis()),
                    this
                  );
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return this.center.add(e), this;
                },
              },
              {
                key: "expandByPoint",
                value: function (e) {
                  if (this.isEmpty())
                    return this.center.copy(e), (this.radius = 0), this;
                  Wt.subVectors(e, this.center);
                  var t = Wt.lengthSq();
                  if (t > this.radius * this.radius) {
                    var n = Math.sqrt(t),
                      r = 0.5 * (n - this.radius);
                    this.center.addScaledVector(Wt, r / n), (this.radius += r);
                  }
                  return this;
                },
              },
              {
                key: "union",
                value: function (e) {
                  return e.isEmpty()
                    ? this
                    : this.isEmpty()
                    ? (this.copy(e), this)
                    : (!0 === this.center.equals(e.center)
                        ? (this.radius = Math.max(this.radius, e.radius))
                        : (jt
                            .subVectors(e.center, this.center)
                            .setLength(e.radius),
                          this.expandByPoint(Wt.copy(e.center).add(jt)),
                          this.expandByPoint(Wt.copy(e.center).sub(jt))),
                      this);
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.center.equals(this.center) && e.radius === this.radius
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        qt = new Tt(),
        Yt = new Tt(),
        Kt = new Tt(),
        $t = new Tt(),
        Zt = new Tt(),
        Jt = new Tt(),
        Qt = new Tt(),
        en = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Tt(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Tt(0, 0, -1);
            w(this, e), (this.origin = t), (this.direction = n);
          }
          return (
            M(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.origin.copy(e), this.direction.copy(t), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    this.origin.copy(e.origin),
                    this.direction.copy(e.direction),
                    this
                  );
                },
              },
              {
                key: "at",
                value: function (e, t) {
                  return t.copy(this.origin).addScaledVector(this.direction, e);
                },
              },
              {
                key: "lookAt",
                value: function (e) {
                  return (
                    this.direction.copy(e).sub(this.origin).normalize(), this
                  );
                },
              },
              {
                key: "recast",
                value: function (e) {
                  return this.origin.copy(this.at(e, qt)), this;
                },
              },
              {
                key: "closestPointToPoint",
                value: function (e, t) {
                  t.subVectors(e, this.origin);
                  var n = t.dot(this.direction);
                  return n < 0
                    ? t.copy(this.origin)
                    : t.copy(this.origin).addScaledVector(this.direction, n);
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return Math.sqrt(this.distanceSqToPoint(e));
                },
              },
              {
                key: "distanceSqToPoint",
                value: function (e) {
                  var t = qt.subVectors(e, this.origin).dot(this.direction);
                  return t < 0
                    ? this.origin.distanceToSquared(e)
                    : (qt.copy(this.origin).addScaledVector(this.direction, t),
                      qt.distanceToSquared(e));
                },
              },
              {
                key: "distanceSqToSegment",
                value: function (e, t, n, r) {
                  Yt.copy(e).add(t).multiplyScalar(0.5),
                    Kt.copy(t).sub(e).normalize(),
                    $t.copy(this.origin).sub(Yt);
                  var a,
                    i,
                    o,
                    s,
                    l = 0.5 * e.distanceTo(t),
                    u = -this.direction.dot(Kt),
                    c = $t.dot(this.direction),
                    f = -$t.dot(Kt),
                    d = $t.lengthSq(),
                    h = Math.abs(1 - u * u);
                  if (h > 0)
                    if (((i = u * c - f), (s = l * h), (a = u * f - c) >= 0))
                      if (i >= -s)
                        if (i <= s) {
                          var p = 1 / h;
                          o =
                            (a *= p) * (a + u * (i *= p) + 2 * c) +
                            i * (u * a + i + 2 * f) +
                            d;
                        } else
                          (i = l),
                            (o =
                              -(a = Math.max(0, -(u * i + c))) * a +
                              i * (i + 2 * f) +
                              d);
                      else
                        (i = -l),
                          (o =
                            -(a = Math.max(0, -(u * i + c))) * a +
                            i * (i + 2 * f) +
                            d);
                    else
                      i <= -s
                        ? (o =
                            -(a = Math.max(0, -(-u * l + c))) * a +
                            (i = a > 0 ? -l : Math.min(Math.max(-l, -f), l)) *
                              (i + 2 * f) +
                            d)
                        : i <= s
                        ? ((a = 0),
                          (o =
                            (i = Math.min(Math.max(-l, -f), l)) * (i + 2 * f) +
                            d))
                        : (o =
                            -(a = Math.max(0, -(u * l + c))) * a +
                            (i = a > 0 ? l : Math.min(Math.max(-l, -f), l)) *
                              (i + 2 * f) +
                            d);
                  else
                    (i = u > 0 ? -l : l),
                      (o =
                        -(a = Math.max(0, -(u * i + c))) * a +
                        i * (i + 2 * f) +
                        d);
                  return (
                    n && n.copy(this.origin).addScaledVector(this.direction, a),
                    r && r.copy(Yt).addScaledVector(Kt, i),
                    o
                  );
                },
              },
              {
                key: "intersectSphere",
                value: function (e, t) {
                  qt.subVectors(e.center, this.origin);
                  var n = qt.dot(this.direction),
                    r = qt.dot(qt) - n * n,
                    a = e.radius * e.radius;
                  if (r > a) return null;
                  var i = Math.sqrt(a - r),
                    o = n - i,
                    s = n + i;
                  return s < 0 ? null : o < 0 ? this.at(s, t) : this.at(o, t);
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  return (
                    this.distanceSqToPoint(e.center) <= e.radius * e.radius
                  );
                },
              },
              {
                key: "distanceToPlane",
                value: function (e) {
                  var t = e.normal.dot(this.direction);
                  if (0 === t)
                    return 0 === e.distanceToPoint(this.origin) ? 0 : null;
                  var n = -(this.origin.dot(e.normal) + e.constant) / t;
                  return n >= 0 ? n : null;
                },
              },
              {
                key: "intersectPlane",
                value: function (e, t) {
                  var n = this.distanceToPlane(e);
                  return null === n ? null : this.at(n, t);
                },
              },
              {
                key: "intersectsPlane",
                value: function (e) {
                  var t = e.distanceToPoint(this.origin);
                  return 0 === t || e.normal.dot(this.direction) * t < 0;
                },
              },
              {
                key: "intersectBox",
                value: function (e, t) {
                  var n,
                    r,
                    a,
                    i,
                    o,
                    s,
                    l = 1 / this.direction.x,
                    u = 1 / this.direction.y,
                    c = 1 / this.direction.z,
                    f = this.origin;
                  return (
                    l >= 0
                      ? ((n = (e.min.x - f.x) * l), (r = (e.max.x - f.x) * l))
                      : ((n = (e.max.x - f.x) * l), (r = (e.min.x - f.x) * l)),
                    u >= 0
                      ? ((a = (e.min.y - f.y) * u), (i = (e.max.y - f.y) * u))
                      : ((a = (e.max.y - f.y) * u), (i = (e.min.y - f.y) * u)),
                    n > i || a > r
                      ? null
                      : ((a > n || isNaN(n)) && (n = a),
                        (i < r || isNaN(r)) && (r = i),
                        c >= 0
                          ? ((o = (e.min.z - f.z) * c),
                            (s = (e.max.z - f.z) * c))
                          : ((o = (e.max.z - f.z) * c),
                            (s = (e.min.z - f.z) * c)),
                        n > s || o > r
                          ? null
                          : ((o > n || n !== n) && (n = o),
                            (s < r || r !== r) && (r = s),
                            r < 0 ? null : this.at(n >= 0 ? n : r, t)))
                  );
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return null !== this.intersectBox(e, qt);
                },
              },
              {
                key: "intersectTriangle",
                value: function (e, t, n, r, a) {
                  Zt.subVectors(t, e),
                    Jt.subVectors(n, e),
                    Qt.crossVectors(Zt, Jt);
                  var i,
                    o = this.direction.dot(Qt);
                  if (o > 0) {
                    if (r) return null;
                    i = 1;
                  } else {
                    if (!(o < 0)) return null;
                    (i = -1), (o = -o);
                  }
                  $t.subVectors(this.origin, e);
                  var s = i * this.direction.dot(Jt.crossVectors($t, Jt));
                  if (s < 0) return null;
                  var l = i * this.direction.dot(Zt.cross($t));
                  if (l < 0) return null;
                  if (s + l > o) return null;
                  var u = -i * $t.dot(Qt);
                  return u < 0 ? null : this.at(u / o, a);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  return (
                    this.origin.applyMatrix4(e),
                    this.direction.transformDirection(e),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.origin.equals(this.origin) &&
                    e.direction.equals(this.direction)
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        tn = (function () {
          function e(t, n, r, a, i, o, s, l, u, c, f, d, h, p, v, m) {
            w(this, e),
              (e.prototype.isMatrix4 = !0),
              (this.elements = [
                1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,
              ]),
              void 0 !== t &&
                this.set(t, n, r, a, i, o, s, l, u, c, f, d, h, p, v, m);
          }
          return (
            M(e, [
              {
                key: "set",
                value: function (
                  e,
                  t,
                  n,
                  r,
                  a,
                  i,
                  o,
                  s,
                  l,
                  u,
                  c,
                  f,
                  d,
                  h,
                  p,
                  v
                ) {
                  var m = this.elements;
                  return (
                    (m[0] = e),
                    (m[4] = t),
                    (m[8] = n),
                    (m[12] = r),
                    (m[1] = a),
                    (m[5] = i),
                    (m[9] = o),
                    (m[13] = s),
                    (m[2] = l),
                    (m[6] = u),
                    (m[10] = c),
                    (m[14] = f),
                    (m[3] = d),
                    (m[7] = h),
                    (m[11] = p),
                    (m[15] = v),
                    this
                  );
                },
              },
              {
                key: "identity",
                value: function () {
                  return (
                    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new e().fromArray(this.elements);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements;
                  return (
                    (t[0] = n[0]),
                    (t[1] = n[1]),
                    (t[2] = n[2]),
                    (t[3] = n[3]),
                    (t[4] = n[4]),
                    (t[5] = n[5]),
                    (t[6] = n[6]),
                    (t[7] = n[7]),
                    (t[8] = n[8]),
                    (t[9] = n[9]),
                    (t[10] = n[10]),
                    (t[11] = n[11]),
                    (t[12] = n[12]),
                    (t[13] = n[13]),
                    (t[14] = n[14]),
                    (t[15] = n[15]),
                    this
                  );
                },
              },
              {
                key: "copyPosition",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements;
                  return (
                    (t[12] = n[12]), (t[13] = n[13]), (t[14] = n[14]), this
                  );
                },
              },
              {
                key: "setFromMatrix3",
                value: function (e) {
                  var t = e.elements;
                  return (
                    this.set(
                      t[0],
                      t[3],
                      t[6],
                      0,
                      t[1],
                      t[4],
                      t[7],
                      0,
                      t[2],
                      t[5],
                      t[8],
                      0,
                      0,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "extractBasis",
                value: function (e, t, n) {
                  return (
                    e.setFromMatrixColumn(this, 0),
                    t.setFromMatrixColumn(this, 1),
                    n.setFromMatrixColumn(this, 2),
                    this
                  );
                },
              },
              {
                key: "makeBasis",
                value: function (e, t, n) {
                  return (
                    this.set(
                      e.x,
                      t.x,
                      n.x,
                      0,
                      e.y,
                      t.y,
                      n.y,
                      0,
                      e.z,
                      t.z,
                      n.z,
                      0,
                      0,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "extractRotation",
                value: function (e) {
                  var t = this.elements,
                    n = e.elements,
                    r = 1 / nn.setFromMatrixColumn(e, 0).length(),
                    a = 1 / nn.setFromMatrixColumn(e, 1).length(),
                    i = 1 / nn.setFromMatrixColumn(e, 2).length();
                  return (
                    (t[0] = n[0] * r),
                    (t[1] = n[1] * r),
                    (t[2] = n[2] * r),
                    (t[3] = 0),
                    (t[4] = n[4] * a),
                    (t[5] = n[5] * a),
                    (t[6] = n[6] * a),
                    (t[7] = 0),
                    (t[8] = n[8] * i),
                    (t[9] = n[9] * i),
                    (t[10] = n[10] * i),
                    (t[11] = 0),
                    (t[12] = 0),
                    (t[13] = 0),
                    (t[14] = 0),
                    (t[15] = 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationFromEuler",
                value: function (e) {
                  var t = this.elements,
                    n = e.x,
                    r = e.y,
                    a = e.z,
                    i = Math.cos(n),
                    o = Math.sin(n),
                    s = Math.cos(r),
                    l = Math.sin(r),
                    u = Math.cos(a),
                    c = Math.sin(a);
                  if ("XYZ" === e.order) {
                    var f = i * u,
                      d = i * c,
                      h = o * u,
                      p = o * c;
                    (t[0] = s * u),
                      (t[4] = -s * c),
                      (t[8] = l),
                      (t[1] = d + h * l),
                      (t[5] = f - p * l),
                      (t[9] = -o * s),
                      (t[2] = p - f * l),
                      (t[6] = h + d * l),
                      (t[10] = i * s);
                  } else if ("YXZ" === e.order) {
                    var v = s * u,
                      m = s * c,
                      g = l * u,
                      y = l * c;
                    (t[0] = v + y * o),
                      (t[4] = g * o - m),
                      (t[8] = i * l),
                      (t[1] = i * c),
                      (t[5] = i * u),
                      (t[9] = -o),
                      (t[2] = m * o - g),
                      (t[6] = y + v * o),
                      (t[10] = i * s);
                  } else if ("ZXY" === e.order) {
                    var _ = s * u,
                      b = s * c,
                      x = l * u,
                      S = l * c;
                    (t[0] = _ - S * o),
                      (t[4] = -i * c),
                      (t[8] = x + b * o),
                      (t[1] = b + x * o),
                      (t[5] = i * u),
                      (t[9] = S - _ * o),
                      (t[2] = -i * l),
                      (t[6] = o),
                      (t[10] = i * s);
                  } else if ("ZYX" === e.order) {
                    var E = i * u,
                      w = i * c,
                      T = o * u,
                      M = o * c;
                    (t[0] = s * u),
                      (t[4] = T * l - w),
                      (t[8] = E * l + M),
                      (t[1] = s * c),
                      (t[5] = M * l + E),
                      (t[9] = w * l - T),
                      (t[2] = -l),
                      (t[6] = o * s),
                      (t[10] = i * s);
                  } else if ("YZX" === e.order) {
                    var A = i * s,
                      C = i * l,
                      k = o * s,
                      R = o * l;
                    (t[0] = s * u),
                      (t[4] = R - A * c),
                      (t[8] = k * c + C),
                      (t[1] = c),
                      (t[5] = i * u),
                      (t[9] = -o * u),
                      (t[2] = -l * u),
                      (t[6] = C * c + k),
                      (t[10] = A - R * c);
                  } else if ("XZY" === e.order) {
                    var P = i * s,
                      U = i * l,
                      L = o * s,
                      D = o * l;
                    (t[0] = s * u),
                      (t[4] = -c),
                      (t[8] = l * u),
                      (t[1] = P * c + D),
                      (t[5] = i * u),
                      (t[9] = U * c - L),
                      (t[2] = L * c - U),
                      (t[6] = o * u),
                      (t[10] = D * c + P);
                  }
                  return (
                    (t[3] = 0),
                    (t[7] = 0),
                    (t[11] = 0),
                    (t[12] = 0),
                    (t[13] = 0),
                    (t[14] = 0),
                    (t[15] = 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationFromQuaternion",
                value: function (e) {
                  return this.compose(an, e, on);
                },
              },
              {
                key: "lookAt",
                value: function (e, t, n) {
                  var r = this.elements;
                  return (
                    un.subVectors(e, t),
                    0 === un.lengthSq() && (un.z = 1),
                    un.normalize(),
                    sn.crossVectors(n, un),
                    0 === sn.lengthSq() &&
                      (1 === Math.abs(n.z) ? (un.x += 1e-4) : (un.z += 1e-4),
                      un.normalize(),
                      sn.crossVectors(n, un)),
                    sn.normalize(),
                    ln.crossVectors(un, sn),
                    (r[0] = sn.x),
                    (r[4] = ln.x),
                    (r[8] = un.x),
                    (r[1] = sn.y),
                    (r[5] = ln.y),
                    (r[9] = un.y),
                    (r[2] = sn.z),
                    (r[6] = ln.z),
                    (r[10] = un.z),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return this.multiplyMatrices(this, e);
                },
              },
              {
                key: "premultiply",
                value: function (e) {
                  return this.multiplyMatrices(e, this);
                },
              },
              {
                key: "multiplyMatrices",
                value: function (e, t) {
                  var n = e.elements,
                    r = t.elements,
                    a = this.elements,
                    i = n[0],
                    o = n[4],
                    s = n[8],
                    l = n[12],
                    u = n[1],
                    c = n[5],
                    f = n[9],
                    d = n[13],
                    h = n[2],
                    p = n[6],
                    v = n[10],
                    m = n[14],
                    g = n[3],
                    y = n[7],
                    _ = n[11],
                    b = n[15],
                    x = r[0],
                    S = r[4],
                    E = r[8],
                    w = r[12],
                    T = r[1],
                    M = r[5],
                    A = r[9],
                    C = r[13],
                    k = r[2],
                    R = r[6],
                    P = r[10],
                    U = r[14],
                    L = r[3],
                    D = r[7],
                    I = r[11],
                    O = r[15];
                  return (
                    (a[0] = i * x + o * T + s * k + l * L),
                    (a[4] = i * S + o * M + s * R + l * D),
                    (a[8] = i * E + o * A + s * P + l * I),
                    (a[12] = i * w + o * C + s * U + l * O),
                    (a[1] = u * x + c * T + f * k + d * L),
                    (a[5] = u * S + c * M + f * R + d * D),
                    (a[9] = u * E + c * A + f * P + d * I),
                    (a[13] = u * w + c * C + f * U + d * O),
                    (a[2] = h * x + p * T + v * k + m * L),
                    (a[6] = h * S + p * M + v * R + m * D),
                    (a[10] = h * E + p * A + v * P + m * I),
                    (a[14] = h * w + p * C + v * U + m * O),
                    (a[3] = g * x + y * T + _ * k + b * L),
                    (a[7] = g * S + y * M + _ * R + b * D),
                    (a[11] = g * E + y * A + _ * P + b * I),
                    (a[15] = g * w + y * C + _ * U + b * O),
                    this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  var t = this.elements;
                  return (
                    (t[0] *= e),
                    (t[4] *= e),
                    (t[8] *= e),
                    (t[12] *= e),
                    (t[1] *= e),
                    (t[5] *= e),
                    (t[9] *= e),
                    (t[13] *= e),
                    (t[2] *= e),
                    (t[6] *= e),
                    (t[10] *= e),
                    (t[14] *= e),
                    (t[3] *= e),
                    (t[7] *= e),
                    (t[11] *= e),
                    (t[15] *= e),
                    this
                  );
                },
              },
              {
                key: "determinant",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[4],
                    r = e[8],
                    a = e[12],
                    i = e[1],
                    o = e[5],
                    s = e[9],
                    l = e[13],
                    u = e[2],
                    c = e[6],
                    f = e[10],
                    d = e[14];
                  return (
                    e[3] *
                      (+a * s * c -
                        r * l * c -
                        a * o * f +
                        n * l * f +
                        r * o * d -
                        n * s * d) +
                    e[7] *
                      (+t * s * d -
                        t * l * f +
                        a * i * f -
                        r * i * d +
                        r * l * u -
                        a * s * u) +
                    e[11] *
                      (+t * l * c -
                        t * o * d -
                        a * i * c +
                        n * i * d +
                        a * o * u -
                        n * l * u) +
                    e[15] *
                      (-r * o * u -
                        t * s * c +
                        t * o * f +
                        r * i * c -
                        n * i * f +
                        n * s * u)
                  );
                },
              },
              {
                key: "transpose",
                value: function () {
                  var e,
                    t = this.elements;
                  return (
                    (e = t[1]),
                    (t[1] = t[4]),
                    (t[4] = e),
                    (e = t[2]),
                    (t[2] = t[8]),
                    (t[8] = e),
                    (e = t[6]),
                    (t[6] = t[9]),
                    (t[9] = e),
                    (e = t[3]),
                    (t[3] = t[12]),
                    (t[12] = e),
                    (e = t[7]),
                    (t[7] = t[13]),
                    (t[13] = e),
                    (e = t[11]),
                    (t[11] = t[14]),
                    (t[14] = e),
                    this
                  );
                },
              },
              {
                key: "setPosition",
                value: function (e, t, n) {
                  var r = this.elements;
                  return (
                    e.isVector3
                      ? ((r[12] = e.x), (r[13] = e.y), (r[14] = e.z))
                      : ((r[12] = e), (r[13] = t), (r[14] = n)),
                    this
                  );
                },
              },
              {
                key: "invert",
                value: function () {
                  var e = this.elements,
                    t = e[0],
                    n = e[1],
                    r = e[2],
                    a = e[3],
                    i = e[4],
                    o = e[5],
                    s = e[6],
                    l = e[7],
                    u = e[8],
                    c = e[9],
                    f = e[10],
                    d = e[11],
                    h = e[12],
                    p = e[13],
                    v = e[14],
                    m = e[15],
                    g =
                      c * v * l -
                      p * f * l +
                      p * s * d -
                      o * v * d -
                      c * s * m +
                      o * f * m,
                    y =
                      h * f * l -
                      u * v * l -
                      h * s * d +
                      i * v * d +
                      u * s * m -
                      i * f * m,
                    _ =
                      u * p * l -
                      h * c * l +
                      h * o * d -
                      i * p * d -
                      u * o * m +
                      i * c * m,
                    b =
                      h * c * s -
                      u * p * s -
                      h * o * f +
                      i * p * f +
                      u * o * v -
                      i * c * v,
                    x = t * g + n * y + r * _ + a * b;
                  if (0 === x)
                    return this.set(
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    );
                  var S = 1 / x;
                  return (
                    (e[0] = g * S),
                    (e[1] =
                      (p * f * a -
                        c * v * a -
                        p * r * d +
                        n * v * d +
                        c * r * m -
                        n * f * m) *
                      S),
                    (e[2] =
                      (o * v * a -
                        p * s * a +
                        p * r * l -
                        n * v * l -
                        o * r * m +
                        n * s * m) *
                      S),
                    (e[3] =
                      (c * s * a -
                        o * f * a -
                        c * r * l +
                        n * f * l +
                        o * r * d -
                        n * s * d) *
                      S),
                    (e[4] = y * S),
                    (e[5] =
                      (u * v * a -
                        h * f * a +
                        h * r * d -
                        t * v * d -
                        u * r * m +
                        t * f * m) *
                      S),
                    (e[6] =
                      (h * s * a -
                        i * v * a -
                        h * r * l +
                        t * v * l +
                        i * r * m -
                        t * s * m) *
                      S),
                    (e[7] =
                      (i * f * a -
                        u * s * a +
                        u * r * l -
                        t * f * l -
                        i * r * d +
                        t * s * d) *
                      S),
                    (e[8] = _ * S),
                    (e[9] =
                      (h * c * a -
                        u * p * a -
                        h * n * d +
                        t * p * d +
                        u * n * m -
                        t * c * m) *
                      S),
                    (e[10] =
                      (i * p * a -
                        h * o * a +
                        h * n * l -
                        t * p * l -
                        i * n * m +
                        t * o * m) *
                      S),
                    (e[11] =
                      (u * o * a -
                        i * c * a -
                        u * n * l +
                        t * c * l +
                        i * n * d -
                        t * o * d) *
                      S),
                    (e[12] = b * S),
                    (e[13] =
                      (u * p * r -
                        h * c * r +
                        h * n * f -
                        t * p * f -
                        u * n * v +
                        t * c * v) *
                      S),
                    (e[14] =
                      (h * o * r -
                        i * p * r -
                        h * n * s +
                        t * p * s +
                        i * n * v -
                        t * o * v) *
                      S),
                    (e[15] =
                      (i * c * r -
                        u * o * r +
                        u * n * s -
                        t * c * s -
                        i * n * f +
                        t * o * f) *
                      S),
                    this
                  );
                },
              },
              {
                key: "scale",
                value: function (e) {
                  var t = this.elements,
                    n = e.x,
                    r = e.y,
                    a = e.z;
                  return (
                    (t[0] *= n),
                    (t[4] *= r),
                    (t[8] *= a),
                    (t[1] *= n),
                    (t[5] *= r),
                    (t[9] *= a),
                    (t[2] *= n),
                    (t[6] *= r),
                    (t[10] *= a),
                    (t[3] *= n),
                    (t[7] *= r),
                    (t[11] *= a),
                    this
                  );
                },
              },
              {
                key: "getMaxScaleOnAxis",
                value: function () {
                  var e = this.elements,
                    t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
                    n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
                    r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
                  return Math.sqrt(Math.max(t, n, r));
                },
              },
              {
                key: "makeTranslation",
                value: function (e, t, n) {
                  return (
                    e.isVector3
                      ? this.set(
                          1,
                          0,
                          0,
                          e.x,
                          0,
                          1,
                          0,
                          e.y,
                          0,
                          0,
                          1,
                          e.z,
                          0,
                          0,
                          0,
                          1
                        )
                      : this.set(
                          1,
                          0,
                          0,
                          e,
                          0,
                          1,
                          0,
                          t,
                          0,
                          0,
                          1,
                          n,
                          0,
                          0,
                          0,
                          1
                        ),
                    this
                  );
                },
              },
              {
                key: "makeRotationX",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return (
                    this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationY",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return (
                    this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationZ",
                value: function (e) {
                  var t = Math.cos(e),
                    n = Math.sin(e);
                  return (
                    this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeRotationAxis",
                value: function (e, t) {
                  var n = Math.cos(t),
                    r = Math.sin(t),
                    a = 1 - n,
                    i = e.x,
                    o = e.y,
                    s = e.z,
                    l = a * i,
                    u = a * o;
                  return (
                    this.set(
                      l * i + n,
                      l * o - r * s,
                      l * s + r * o,
                      0,
                      l * o + r * s,
                      u * o + n,
                      u * s - r * i,
                      0,
                      l * s - r * o,
                      u * s + r * i,
                      a * s * s + n,
                      0,
                      0,
                      0,
                      0,
                      1
                    ),
                    this
                  );
                },
              },
              {
                key: "makeScale",
                value: function (e, t, n) {
                  return (
                    this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "makeShear",
                value: function (e, t, n, r, a, i) {
                  return (
                    this.set(1, n, a, 0, e, 1, i, 0, t, r, 1, 0, 0, 0, 0, 1),
                    this
                  );
                },
              },
              {
                key: "compose",
                value: function (e, t, n) {
                  var r = this.elements,
                    a = t._x,
                    i = t._y,
                    o = t._z,
                    s = t._w,
                    l = a + a,
                    u = i + i,
                    c = o + o,
                    f = a * l,
                    d = a * u,
                    h = a * c,
                    p = i * u,
                    v = i * c,
                    m = o * c,
                    g = s * l,
                    y = s * u,
                    _ = s * c,
                    b = n.x,
                    x = n.y,
                    S = n.z;
                  return (
                    (r[0] = (1 - (p + m)) * b),
                    (r[1] = (d + _) * b),
                    (r[2] = (h - y) * b),
                    (r[3] = 0),
                    (r[4] = (d - _) * x),
                    (r[5] = (1 - (f + m)) * x),
                    (r[6] = (v + g) * x),
                    (r[7] = 0),
                    (r[8] = (h + y) * S),
                    (r[9] = (v - g) * S),
                    (r[10] = (1 - (f + p)) * S),
                    (r[11] = 0),
                    (r[12] = e.x),
                    (r[13] = e.y),
                    (r[14] = e.z),
                    (r[15] = 1),
                    this
                  );
                },
              },
              {
                key: "decompose",
                value: function (e, t, n) {
                  var r = this.elements,
                    a = nn.set(r[0], r[1], r[2]).length(),
                    i = nn.set(r[4], r[5], r[6]).length(),
                    o = nn.set(r[8], r[9], r[10]).length();
                  this.determinant() < 0 && (a = -a),
                    (e.x = r[12]),
                    (e.y = r[13]),
                    (e.z = r[14]),
                    rn.copy(this);
                  var s = 1 / a,
                    l = 1 / i,
                    u = 1 / o;
                  return (
                    (rn.elements[0] *= s),
                    (rn.elements[1] *= s),
                    (rn.elements[2] *= s),
                    (rn.elements[4] *= l),
                    (rn.elements[5] *= l),
                    (rn.elements[6] *= l),
                    (rn.elements[8] *= u),
                    (rn.elements[9] *= u),
                    (rn.elements[10] *= u),
                    t.setFromRotationMatrix(rn),
                    (n.x = a),
                    (n.y = i),
                    (n.z = o),
                    this
                  );
                },
              },
              {
                key: "makePerspective",
                value: function (e, t, n, r, a, i) {
                  var o,
                    s,
                    l =
                      arguments.length > 6 && void 0 !== arguments[6]
                        ? arguments[6]
                        : Fe,
                    u = this.elements,
                    c = (2 * a) / (t - e),
                    f = (2 * a) / (n - r),
                    d = (t + e) / (t - e),
                    h = (n + r) / (n - r);
                  if (l === Fe)
                    (o = -(i + a) / (i - a)), (s = (-2 * i * a) / (i - a));
                  else {
                    if (l !== ze)
                      throw new Error(
                        "THREE.Matrix4.makePerspective(): Invalid coordinate system: " +
                          l
                      );
                    (o = -i / (i - a)), (s = (-i * a) / (i - a));
                  }
                  return (
                    (u[0] = c),
                    (u[4] = 0),
                    (u[8] = d),
                    (u[12] = 0),
                    (u[1] = 0),
                    (u[5] = f),
                    (u[9] = h),
                    (u[13] = 0),
                    (u[2] = 0),
                    (u[6] = 0),
                    (u[10] = o),
                    (u[14] = s),
                    (u[3] = 0),
                    (u[7] = 0),
                    (u[11] = -1),
                    (u[15] = 0),
                    this
                  );
                },
              },
              {
                key: "makeOrthographic",
                value: function (e, t, n, r, a, i) {
                  var o,
                    s,
                    l =
                      arguments.length > 6 && void 0 !== arguments[6]
                        ? arguments[6]
                        : Fe,
                    u = this.elements,
                    c = 1 / (t - e),
                    f = 1 / (n - r),
                    d = 1 / (i - a),
                    h = (t + e) * c,
                    p = (n + r) * f;
                  if (l === Fe) (o = (i + a) * d), (s = -2 * d);
                  else {
                    if (l !== ze)
                      throw new Error(
                        "THREE.Matrix4.makeOrthographic(): Invalid coordinate system: " +
                          l
                      );
                    (o = a * d), (s = -1 * d);
                  }
                  return (
                    (u[0] = 2 * c),
                    (u[4] = 0),
                    (u[8] = 0),
                    (u[12] = -h),
                    (u[1] = 0),
                    (u[5] = 2 * f),
                    (u[9] = 0),
                    (u[13] = -p),
                    (u[2] = 0),
                    (u[6] = 0),
                    (u[10] = s),
                    (u[14] = -o),
                    (u[3] = 0),
                    (u[7] = 0),
                    (u[11] = 0),
                    (u[15] = 1),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  for (
                    var t = this.elements, n = e.elements, r = 0;
                    r < 16;
                    r++
                  )
                    if (t[r] !== n[r]) return !1;
                  return !0;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  for (
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0,
                      n = 0;
                    n < 16;
                    n++
                  )
                    this.elements[n] = e[n + t];
                  return this;
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n = this.elements;
                  return (
                    (e[t] = n[0]),
                    (e[t + 1] = n[1]),
                    (e[t + 2] = n[2]),
                    (e[t + 3] = n[3]),
                    (e[t + 4] = n[4]),
                    (e[t + 5] = n[5]),
                    (e[t + 6] = n[6]),
                    (e[t + 7] = n[7]),
                    (e[t + 8] = n[8]),
                    (e[t + 9] = n[9]),
                    (e[t + 10] = n[10]),
                    (e[t + 11] = n[11]),
                    (e[t + 12] = n[12]),
                    (e[t + 13] = n[13]),
                    (e[t + 14] = n[14]),
                    (e[t + 15] = n[15]),
                    e
                  );
                },
              },
            ]),
            e
          );
        })(),
        nn = new Tt(),
        rn = new tn(),
        an = new Tt(0, 0, 0),
        on = new Tt(1, 1, 1),
        sn = new Tt(),
        ln = new Tt(),
        un = new Tt(),
        cn = new tn(),
        fn = new wt(),
        dn = (function (e) {
          function t() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              a =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : t.DEFAULT_ORDER;
            w(this, t),
              (this.isEuler = !0),
              (this._x = e),
              (this._y = n),
              (this._z = r),
              (this._order = a);
          }
          return (
            M(t, [
              {
                key: "x",
                get: function () {
                  return this._x;
                },
                set: function (e) {
                  (this._x = e), this._onChangeCallback();
                },
              },
              {
                key: "y",
                get: function () {
                  return this._y;
                },
                set: function (e) {
                  (this._y = e), this._onChangeCallback();
                },
              },
              {
                key: "z",
                get: function () {
                  return this._z;
                },
                set: function (e) {
                  (this._z = e), this._onChangeCallback();
                },
              },
              {
                key: "order",
                get: function () {
                  return this._order;
                },
                set: function (e) {
                  (this._order = e), this._onChangeCallback();
                },
              },
              {
                key: "set",
                value: function (e, t, n) {
                  var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : this._order;
                  return (
                    (this._x = e),
                    (this._y = t),
                    (this._z = n),
                    (this._order = r),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(
                    this._x,
                    this._y,
                    this._z,
                    this._order
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this._x = e._x),
                    (this._y = e._y),
                    (this._z = e._z),
                    (this._order = e._order),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "setFromRotationMatrix",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : this._order,
                    n =
                      !(arguments.length > 2 && void 0 !== arguments[2]) ||
                      arguments[2],
                    r = e.elements,
                    a = r[0],
                    i = r[4],
                    o = r[8],
                    s = r[1],
                    l = r[5],
                    u = r[9],
                    c = r[2],
                    f = r[6],
                    d = r[10];
                  switch (t) {
                    case "XYZ":
                      (this._y = Math.asin(je(o, -1, 1))),
                        Math.abs(o) < 0.9999999
                          ? ((this._x = Math.atan2(-u, d)),
                            (this._z = Math.atan2(-i, a)))
                          : ((this._x = Math.atan2(f, l)), (this._z = 0));
                      break;
                    case "YXZ":
                      (this._x = Math.asin(-je(u, -1, 1))),
                        Math.abs(u) < 0.9999999
                          ? ((this._y = Math.atan2(o, d)),
                            (this._z = Math.atan2(s, l)))
                          : ((this._y = Math.atan2(-c, a)), (this._z = 0));
                      break;
                    case "ZXY":
                      (this._x = Math.asin(je(f, -1, 1))),
                        Math.abs(f) < 0.9999999
                          ? ((this._y = Math.atan2(-c, d)),
                            (this._z = Math.atan2(-i, l)))
                          : ((this._y = 0), (this._z = Math.atan2(s, a)));
                      break;
                    case "ZYX":
                      (this._y = Math.asin(-je(c, -1, 1))),
                        Math.abs(c) < 0.9999999
                          ? ((this._x = Math.atan2(f, d)),
                            (this._z = Math.atan2(s, a)))
                          : ((this._x = 0), (this._z = Math.atan2(-i, l)));
                      break;
                    case "YZX":
                      (this._z = Math.asin(je(s, -1, 1))),
                        Math.abs(s) < 0.9999999
                          ? ((this._x = Math.atan2(-u, l)),
                            (this._y = Math.atan2(-c, a)))
                          : ((this._x = 0), (this._y = Math.atan2(o, d)));
                      break;
                    case "XZY":
                      (this._z = Math.asin(-je(i, -1, 1))),
                        Math.abs(i) < 0.9999999
                          ? ((this._x = Math.atan2(f, l)),
                            (this._y = Math.atan2(o, a)))
                          : ((this._x = Math.atan2(-u, d)), (this._y = 0));
                      break;
                    default:
                      console.warn(
                        "THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " +
                          t
                      );
                  }
                  return (
                    (this._order = t),
                    !0 === n && this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "setFromQuaternion",
                value: function (e, t, n) {
                  return (
                    cn.makeRotationFromQuaternion(e),
                    this.setFromRotationMatrix(cn, t, n)
                  );
                },
              },
              {
                key: "setFromVector3",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : this._order;
                  return this.set(e.x, e.y, e.z, t);
                },
              },
              {
                key: "reorder",
                value: function (e) {
                  return fn.setFromEuler(this), this.setFromQuaternion(fn, e);
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e._x === this._x &&
                    e._y === this._y &&
                    e._z === this._z &&
                    e._order === this._order
                  );
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  return (
                    (this._x = e[0]),
                    (this._y = e[1]),
                    (this._z = e[2]),
                    void 0 !== e[3] && (this._order = e[3]),
                    this._onChangeCallback(),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this._x),
                    (e[t + 1] = this._y),
                    (e[t + 2] = this._z),
                    (e[t + 3] = this._order),
                    e
                  );
                },
              },
              {
                key: "_onChange",
                value: function (e) {
                  return (this._onChangeCallback = e), this;
                },
              },
              { key: "_onChangeCallback", value: function () {} },
              {
                key: Symbol.iterator,
                value: E().mark(function e() {
                  return E().wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this._x;
                          case 2:
                            return (e.next = 4), this._y;
                          case 4:
                            return (e.next = 6), this._z;
                          case 6:
                            return (e.next = 8), this._order;
                          case 8:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            t
          );
        })();
      dn.DEFAULT_ORDER = "XYZ";
      var hn = (function () {
          function e() {
            w(this, e), (this.mask = 1);
          }
          return (
            M(e, [
              {
                key: "set",
                value: function (e) {
                  this.mask = ((1 << e) | 0) >>> 0;
                },
              },
              {
                key: "enable",
                value: function (e) {
                  this.mask |= (1 << e) | 0;
                },
              },
              {
                key: "enableAll",
                value: function () {
                  this.mask = -1;
                },
              },
              {
                key: "toggle",
                value: function (e) {
                  this.mask ^= (1 << e) | 0;
                },
              },
              {
                key: "disable",
                value: function (e) {
                  this.mask &= ~((1 << e) | 0);
                },
              },
              {
                key: "disableAll",
                value: function () {
                  this.mask = 0;
                },
              },
              {
                key: "test",
                value: function (e) {
                  return 0 !== (this.mask & e.mask);
                },
              },
              {
                key: "isEnabled",
                value: function (e) {
                  return 0 !== (this.mask & ((1 << e) | 0));
                },
              },
            ]),
            e
          );
        })(),
        pn = 0,
        vn = new Tt(),
        mn = new wt(),
        gn = new tn(),
        yn = new Tt(),
        _n = new Tt(),
        bn = new Tt(),
        xn = new wt(),
        Sn = new Tt(1, 0, 0),
        En = new Tt(0, 1, 0),
        wn = new Tt(0, 0, 1),
        Tn = { type: "added" },
        Mn = { type: "removed" },
        An = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e;
            w(this, n),
              ((e = t.call(this)).isObject3D = !0),
              Object.defineProperty(m(e), "id", { value: pn++ }),
              (e.uuid = We()),
              (e.name = ""),
              (e.type = "Object3D"),
              (e.parent = null),
              (e.children = []),
              (e.up = n.DEFAULT_UP.clone());
            var r = new Tt(),
              a = new dn(),
              i = new wt(),
              o = new Tt(1, 1, 1);
            return (
              a._onChange(function () {
                i.setFromEuler(a, !1);
              }),
              i._onChange(function () {
                a.setFromQuaternion(i, void 0, !1);
              }),
              Object.defineProperties(m(e), {
                position: { configurable: !0, enumerable: !0, value: r },
                rotation: { configurable: !0, enumerable: !0, value: a },
                quaternion: { configurable: !0, enumerable: !0, value: i },
                scale: { configurable: !0, enumerable: !0, value: o },
                modelViewMatrix: { value: new tn() },
                normalMatrix: { value: new Qe() },
              }),
              (e.matrix = new tn()),
              (e.matrixWorld = new tn()),
              (e.matrixAutoUpdate = n.DEFAULT_MATRIX_AUTO_UPDATE),
              (e.matrixWorldNeedsUpdate = !1),
              (e.matrixWorldAutoUpdate = n.DEFAULT_MATRIX_WORLD_AUTO_UPDATE),
              (e.layers = new hn()),
              (e.visible = !0),
              (e.castShadow = !1),
              (e.receiveShadow = !1),
              (e.frustumCulled = !0),
              (e.renderOrder = 0),
              (e.animations = []),
              (e.userData = {}),
              e
            );
          }
          return (
            M(n, [
              { key: "onBeforeRender", value: function () {} },
              { key: "onAfterRender", value: function () {} },
              {
                key: "applyMatrix4",
                value: function (e) {
                  this.matrixAutoUpdate && this.updateMatrix(),
                    this.matrix.premultiply(e),
                    this.matrix.decompose(
                      this.position,
                      this.quaternion,
                      this.scale
                    );
                },
              },
              {
                key: "applyQuaternion",
                value: function (e) {
                  return this.quaternion.premultiply(e), this;
                },
              },
              {
                key: "setRotationFromAxisAngle",
                value: function (e, t) {
                  this.quaternion.setFromAxisAngle(e, t);
                },
              },
              {
                key: "setRotationFromEuler",
                value: function (e) {
                  this.quaternion.setFromEuler(e, !0);
                },
              },
              {
                key: "setRotationFromMatrix",
                value: function (e) {
                  this.quaternion.setFromRotationMatrix(e);
                },
              },
              {
                key: "setRotationFromQuaternion",
                value: function (e) {
                  this.quaternion.copy(e);
                },
              },
              {
                key: "rotateOnAxis",
                value: function (e, t) {
                  return (
                    mn.setFromAxisAngle(e, t),
                    this.quaternion.multiply(mn),
                    this
                  );
                },
              },
              {
                key: "rotateOnWorldAxis",
                value: function (e, t) {
                  return (
                    mn.setFromAxisAngle(e, t),
                    this.quaternion.premultiply(mn),
                    this
                  );
                },
              },
              {
                key: "rotateX",
                value: function (e) {
                  return this.rotateOnAxis(Sn, e);
                },
              },
              {
                key: "rotateY",
                value: function (e) {
                  return this.rotateOnAxis(En, e);
                },
              },
              {
                key: "rotateZ",
                value: function (e) {
                  return this.rotateOnAxis(wn, e);
                },
              },
              {
                key: "translateOnAxis",
                value: function (e, t) {
                  return (
                    vn.copy(e).applyQuaternion(this.quaternion),
                    this.position.add(vn.multiplyScalar(t)),
                    this
                  );
                },
              },
              {
                key: "translateX",
                value: function (e) {
                  return this.translateOnAxis(Sn, e);
                },
              },
              {
                key: "translateY",
                value: function (e) {
                  return this.translateOnAxis(En, e);
                },
              },
              {
                key: "translateZ",
                value: function (e) {
                  return this.translateOnAxis(wn, e);
                },
              },
              {
                key: "localToWorld",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    e.applyMatrix4(this.matrixWorld)
                  );
                },
              },
              {
                key: "worldToLocal",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    e.applyMatrix4(gn.copy(this.matrixWorld).invert())
                  );
                },
              },
              {
                key: "lookAt",
                value: function (e, t, n) {
                  e.isVector3 ? yn.copy(e) : yn.set(e, t, n);
                  var r = this.parent;
                  this.updateWorldMatrix(!0, !1),
                    _n.setFromMatrixPosition(this.matrixWorld),
                    this.isCamera || this.isLight
                      ? gn.lookAt(_n, yn, this.up)
                      : gn.lookAt(yn, _n, this.up),
                    this.quaternion.setFromRotationMatrix(gn),
                    r &&
                      (gn.extractRotation(r.matrixWorld),
                      mn.setFromRotationMatrix(gn),
                      this.quaternion.premultiply(mn.invert()));
                },
              },
              {
                key: "add",
                value: function (e) {
                  if (arguments.length > 1) {
                    for (var t = 0; t < arguments.length; t++)
                      this.add(arguments[t]);
                    return this;
                  }
                  return e === this
                    ? (console.error(
                        "THREE.Object3D.add: object can't be added as a child of itself.",
                        e
                      ),
                      this)
                    : (e && e.isObject3D
                        ? (null !== e.parent && e.parent.remove(e),
                          (e.parent = this),
                          this.children.push(e),
                          e.dispatchEvent(Tn))
                        : console.error(
                            "THREE.Object3D.add: object not an instance of THREE.Object3D.",
                            e
                          ),
                      this);
                },
              },
              {
                key: "remove",
                value: function (e) {
                  if (arguments.length > 1) {
                    for (var t = 0; t < arguments.length; t++)
                      this.remove(arguments[t]);
                    return this;
                  }
                  var n = this.children.indexOf(e);
                  return (
                    -1 !== n &&
                      ((e.parent = null),
                      this.children.splice(n, 1),
                      e.dispatchEvent(Mn)),
                    this
                  );
                },
              },
              {
                key: "removeFromParent",
                value: function () {
                  var e = this.parent;
                  return null !== e && e.remove(this), this;
                },
              },
              {
                key: "clear",
                value: function () {
                  return this.remove.apply(this, f(this.children));
                },
              },
              {
                key: "attach",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    gn.copy(this.matrixWorld).invert(),
                    null !== e.parent &&
                      (e.parent.updateWorldMatrix(!0, !1),
                      gn.multiply(e.parent.matrixWorld)),
                    e.applyMatrix4(gn),
                    this.add(e),
                    e.updateWorldMatrix(!1, !0),
                    this
                  );
                },
              },
              {
                key: "getObjectById",
                value: function (e) {
                  return this.getObjectByProperty("id", e);
                },
              },
              {
                key: "getObjectByName",
                value: function (e) {
                  return this.getObjectByProperty("name", e);
                },
              },
              {
                key: "getObjectByProperty",
                value: function (e, t) {
                  if (this[e] === t) return this;
                  for (var n = 0, r = this.children.length; n < r; n++) {
                    var a = this.children[n].getObjectByProperty(e, t);
                    if (void 0 !== a) return a;
                  }
                },
              },
              {
                key: "getObjectsByProperty",
                value: function (e, t) {
                  var n = [];
                  this[e] === t && n.push(this);
                  for (var r = 0, a = this.children.length; r < a; r++) {
                    var i = this.children[r].getObjectsByProperty(e, t);
                    i.length > 0 && (n = n.concat(i));
                  }
                  return n;
                },
              },
              {
                key: "getWorldPosition",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    e.setFromMatrixPosition(this.matrixWorld)
                  );
                },
              },
              {
                key: "getWorldQuaternion",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    this.matrixWorld.decompose(_n, e, bn),
                    e
                  );
                },
              },
              {
                key: "getWorldScale",
                value: function (e) {
                  return (
                    this.updateWorldMatrix(!0, !1),
                    this.matrixWorld.decompose(_n, xn, e),
                    e
                  );
                },
              },
              {
                key: "getWorldDirection",
                value: function (e) {
                  this.updateWorldMatrix(!0, !1);
                  var t = this.matrixWorld.elements;
                  return e.set(t[8], t[9], t[10]).normalize();
                },
              },
              { key: "raycast", value: function () {} },
              {
                key: "traverse",
                value: function (e) {
                  e(this);
                  for (var t = this.children, n = 0, r = t.length; n < r; n++)
                    t[n].traverse(e);
                },
              },
              {
                key: "traverseVisible",
                value: function (e) {
                  if (!1 !== this.visible) {
                    e(this);
                    for (var t = this.children, n = 0, r = t.length; n < r; n++)
                      t[n].traverseVisible(e);
                  }
                },
              },
              {
                key: "traverseAncestors",
                value: function (e) {
                  var t = this.parent;
                  null !== t && (e(t), t.traverseAncestors(e));
                },
              },
              {
                key: "updateMatrix",
                value: function () {
                  this.matrix.compose(
                    this.position,
                    this.quaternion,
                    this.scale
                  ),
                    (this.matrixWorldNeedsUpdate = !0);
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  this.matrixAutoUpdate && this.updateMatrix(),
                    (this.matrixWorldNeedsUpdate || e) &&
                      (null === this.parent
                        ? this.matrixWorld.copy(this.matrix)
                        : this.matrixWorld.multiplyMatrices(
                            this.parent.matrixWorld,
                            this.matrix
                          ),
                      (this.matrixWorldNeedsUpdate = !1),
                      (e = !0));
                  for (var t = this.children, n = 0, r = t.length; n < r; n++) {
                    var a = t[n];
                    (!0 !== a.matrixWorldAutoUpdate && !0 !== e) ||
                      a.updateMatrixWorld(e);
                  }
                },
              },
              {
                key: "updateWorldMatrix",
                value: function (e, t) {
                  var n = this.parent;
                  if (
                    (!0 === e &&
                      null !== n &&
                      !0 === n.matrixWorldAutoUpdate &&
                      n.updateWorldMatrix(!0, !1),
                    this.matrixAutoUpdate && this.updateMatrix(),
                    null === this.parent
                      ? this.matrixWorld.copy(this.matrix)
                      : this.matrixWorld.multiplyMatrices(
                          this.parent.matrixWorld,
                          this.matrix
                        ),
                    !0 === t)
                  )
                    for (
                      var r = this.children, a = 0, i = r.length;
                      a < i;
                      a++
                    ) {
                      var o = r[a];
                      !0 === o.matrixWorldAutoUpdate &&
                        o.updateWorldMatrix(!1, !0);
                    }
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e,
                    n = {};
                  t &&
                    ((e = {
                      geometries: {},
                      materials: {},
                      textures: {},
                      images: {},
                      shapes: {},
                      skeletons: {},
                      animations: {},
                      nodes: {},
                    }),
                    (n.metadata = {
                      version: 4.6,
                      type: "Object",
                      generator: "Object3D.toJSON",
                    }));
                  var r = {};
                  function a(t, n) {
                    return (
                      void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid
                    );
                  }
                  if (
                    ((r.uuid = this.uuid),
                    (r.type = this.type),
                    "" !== this.name && (r.name = this.name),
                    !0 === this.castShadow && (r.castShadow = !0),
                    !0 === this.receiveShadow && (r.receiveShadow = !0),
                    !1 === this.visible && (r.visible = !1),
                    !1 === this.frustumCulled && (r.frustumCulled = !1),
                    0 !== this.renderOrder &&
                      (r.renderOrder = this.renderOrder),
                    Object.keys(this.userData).length > 0 &&
                      (r.userData = this.userData),
                    (r.layers = this.layers.mask),
                    (r.matrix = this.matrix.toArray()),
                    (r.up = this.up.toArray()),
                    !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1),
                    this.isInstancedMesh &&
                      ((r.type = "InstancedMesh"),
                      (r.count = this.count),
                      (r.instanceMatrix = this.instanceMatrix.toJSON()),
                      null !== this.instanceColor &&
                        (r.instanceColor = this.instanceColor.toJSON())),
                    this.isScene)
                  )
                    this.background &&
                      (this.background.isColor
                        ? (r.background = this.background.toJSON())
                        : this.background.isTexture &&
                          (r.background = this.background.toJSON(e).uuid)),
                      this.environment &&
                        this.environment.isTexture &&
                        !0 !== this.environment.isRenderTargetTexture &&
                        (r.environment = this.environment.toJSON(e).uuid);
                  else if (this.isMesh || this.isLine || this.isPoints) {
                    r.geometry = a(e.geometries, this.geometry);
                    var i = this.geometry.parameters;
                    if (void 0 !== i && void 0 !== i.shapes) {
                      var o = i.shapes;
                      if (Array.isArray(o))
                        for (var s = 0, l = o.length; s < l; s++) {
                          var u = o[s];
                          a(e.shapes, u);
                        }
                      else a(e.shapes, o);
                    }
                  }
                  if (
                    (this.isSkinnedMesh &&
                      ((r.bindMode = this.bindMode),
                      (r.bindMatrix = this.bindMatrix.toArray()),
                      void 0 !== this.skeleton &&
                        (a(e.skeletons, this.skeleton),
                        (r.skeleton = this.skeleton.uuid))),
                    void 0 !== this.material)
                  )
                    if (Array.isArray(this.material)) {
                      for (
                        var c = [], f = 0, d = this.material.length;
                        f < d;
                        f++
                      )
                        c.push(a(e.materials, this.material[f]));
                      r.material = c;
                    } else r.material = a(e.materials, this.material);
                  if (this.children.length > 0) {
                    r.children = [];
                    for (var h = 0; h < this.children.length; h++)
                      r.children.push(this.children[h].toJSON(e).object);
                  }
                  if (this.animations.length > 0) {
                    r.animations = [];
                    for (var p = 0; p < this.animations.length; p++) {
                      var v = this.animations[p];
                      r.animations.push(a(e.animations, v));
                    }
                  }
                  if (t) {
                    var m = w(e.geometries),
                      g = w(e.materials),
                      y = w(e.textures),
                      _ = w(e.images),
                      b = w(e.shapes),
                      x = w(e.skeletons),
                      S = w(e.animations),
                      E = w(e.nodes);
                    m.length > 0 && (n.geometries = m),
                      g.length > 0 && (n.materials = g),
                      y.length > 0 && (n.textures = y),
                      _.length > 0 && (n.images = _),
                      b.length > 0 && (n.shapes = b),
                      x.length > 0 && (n.skeletons = x),
                      S.length > 0 && (n.animations = S),
                      E.length > 0 && (n.nodes = E);
                  }
                  return (n.object = r), n;
                  function w(e) {
                    var t = [];
                    for (var n in e) {
                      var r = e[n];
                      delete r.metadata, t.push(r);
                    }
                    return t;
                  }
                },
              },
              {
                key: "clone",
                value: function (e) {
                  return new this.constructor().copy(this, e);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  var t =
                    !(arguments.length > 1 && void 0 !== arguments[1]) ||
                    arguments[1];
                  if (
                    ((this.name = e.name),
                    this.up.copy(e.up),
                    this.position.copy(e.position),
                    (this.rotation.order = e.rotation.order),
                    this.quaternion.copy(e.quaternion),
                    this.scale.copy(e.scale),
                    this.matrix.copy(e.matrix),
                    this.matrixWorld.copy(e.matrixWorld),
                    (this.matrixAutoUpdate = e.matrixAutoUpdate),
                    (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
                    (this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate),
                    (this.layers.mask = e.layers.mask),
                    (this.visible = e.visible),
                    (this.castShadow = e.castShadow),
                    (this.receiveShadow = e.receiveShadow),
                    (this.frustumCulled = e.frustumCulled),
                    (this.renderOrder = e.renderOrder),
                    (this.animations = e.animations.slice()),
                    (this.userData = JSON.parse(JSON.stringify(e.userData))),
                    !0 === t)
                  )
                    for (var n = 0; n < e.children.length; n++) {
                      var r = e.children[n];
                      this.add(r.clone());
                    }
                  return this;
                },
              },
            ]),
            n
          );
        })(Be);
      (An.DEFAULT_UP = new Tt(0, 1, 0)),
        (An.DEFAULT_MATRIX_AUTO_UPDATE = !0),
        (An.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0);
      var Cn = new Tt(),
        kn = new Tt(),
        Rn = new Tt(),
        Pn = new Tt(),
        Un = new Tt(),
        Ln = new Tt(),
        Dn = new Tt(),
        In = new Tt(),
        On = new Tt(),
        Nn = new Tt(),
        Fn = !1,
        zn = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Tt(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Tt(),
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new Tt();
            w(this, e), (this.a = t), (this.b = n), (this.c = r);
          }
          return (
            M(
              e,
              [
                {
                  key: "set",
                  value: function (e, t, n) {
                    return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
                  },
                },
                {
                  key: "setFromPointsAndIndices",
                  value: function (e, t, n, r) {
                    return (
                      this.a.copy(e[t]),
                      this.b.copy(e[n]),
                      this.c.copy(e[r]),
                      this
                    );
                  },
                },
                {
                  key: "setFromAttributeAndIndices",
                  value: function (e, t, n, r) {
                    return (
                      this.a.fromBufferAttribute(e, t),
                      this.b.fromBufferAttribute(e, n),
                      this.c.fromBufferAttribute(e, r),
                      this
                    );
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    return new this.constructor().copy(this);
                  },
                },
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this
                    );
                  },
                },
                {
                  key: "getArea",
                  value: function () {
                    return (
                      Cn.subVectors(this.c, this.b),
                      kn.subVectors(this.a, this.b),
                      0.5 * Cn.cross(kn).length()
                    );
                  },
                },
                {
                  key: "getMidpoint",
                  value: function (e) {
                    return e
                      .addVectors(this.a, this.b)
                      .add(this.c)
                      .multiplyScalar(1 / 3);
                  },
                },
                {
                  key: "getNormal",
                  value: function (t) {
                    return e.getNormal(this.a, this.b, this.c, t);
                  },
                },
                {
                  key: "getPlane",
                  value: function (e) {
                    return e.setFromCoplanarPoints(this.a, this.b, this.c);
                  },
                },
                {
                  key: "getBarycoord",
                  value: function (t, n) {
                    return e.getBarycoord(t, this.a, this.b, this.c, n);
                  },
                },
                {
                  key: "getUV",
                  value: function (t, n, r, a, i) {
                    return (
                      !1 === Fn &&
                        (console.warn(
                          "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."
                        ),
                        (Fn = !0)),
                      e.getInterpolation(t, this.a, this.b, this.c, n, r, a, i)
                    );
                  },
                },
                {
                  key: "getInterpolation",
                  value: function (t, n, r, a, i) {
                    return e.getInterpolation(
                      t,
                      this.a,
                      this.b,
                      this.c,
                      n,
                      r,
                      a,
                      i
                    );
                  },
                },
                {
                  key: "containsPoint",
                  value: function (t) {
                    return e.containsPoint(t, this.a, this.b, this.c);
                  },
                },
                {
                  key: "isFrontFacing",
                  value: function (t) {
                    return e.isFrontFacing(this.a, this.b, this.c, t);
                  },
                },
                {
                  key: "intersectsBox",
                  value: function (e) {
                    return e.intersectsTriangle(this);
                  },
                },
                {
                  key: "closestPointToPoint",
                  value: function (e, t) {
                    var n,
                      r,
                      a = this.a,
                      i = this.b,
                      o = this.c;
                    Un.subVectors(i, a),
                      Ln.subVectors(o, a),
                      In.subVectors(e, a);
                    var s = Un.dot(In),
                      l = Ln.dot(In);
                    if (s <= 0 && l <= 0) return t.copy(a);
                    On.subVectors(e, i);
                    var u = Un.dot(On),
                      c = Ln.dot(On);
                    if (u >= 0 && c <= u) return t.copy(i);
                    var f = s * c - u * l;
                    if (f <= 0 && s >= 0 && u <= 0)
                      return (
                        (n = s / (s - u)), t.copy(a).addScaledVector(Un, n)
                      );
                    Nn.subVectors(e, o);
                    var d = Un.dot(Nn),
                      h = Ln.dot(Nn);
                    if (h >= 0 && d <= h) return t.copy(o);
                    var p = d * l - s * h;
                    if (p <= 0 && l >= 0 && h <= 0)
                      return (
                        (r = l / (l - h)), t.copy(a).addScaledVector(Ln, r)
                      );
                    var v = u * h - d * c;
                    if (v <= 0 && c - u >= 0 && d - h >= 0)
                      return (
                        Dn.subVectors(o, i),
                        (r = (c - u) / (c - u + (d - h))),
                        t.copy(i).addScaledVector(Dn, r)
                      );
                    var m = 1 / (v + p + f);
                    return (
                      (n = p * m),
                      (r = f * m),
                      t.copy(a).addScaledVector(Un, n).addScaledVector(Ln, r)
                    );
                  },
                },
                {
                  key: "equals",
                  value: function (e) {
                    return (
                      e.a.equals(this.a) &&
                      e.b.equals(this.b) &&
                      e.c.equals(this.c)
                    );
                  },
                },
              ],
              [
                {
                  key: "getNormal",
                  value: function (e, t, n, r) {
                    r.subVectors(n, t), Cn.subVectors(e, t), r.cross(Cn);
                    var a = r.lengthSq();
                    return a > 0
                      ? r.multiplyScalar(1 / Math.sqrt(a))
                      : r.set(0, 0, 0);
                  },
                },
                {
                  key: "getBarycoord",
                  value: function (e, t, n, r, a) {
                    Cn.subVectors(r, t),
                      kn.subVectors(n, t),
                      Rn.subVectors(e, t);
                    var i = Cn.dot(Cn),
                      o = Cn.dot(kn),
                      s = Cn.dot(Rn),
                      l = kn.dot(kn),
                      u = kn.dot(Rn),
                      c = i * l - o * o;
                    if (0 === c) return a.set(-2, -1, -1);
                    var f = 1 / c,
                      d = (l * s - o * u) * f,
                      h = (i * u - o * s) * f;
                    return a.set(1 - d - h, h, d);
                  },
                },
                {
                  key: "containsPoint",
                  value: function (e, t, n, r) {
                    return (
                      this.getBarycoord(e, t, n, r, Pn),
                      Pn.x >= 0 && Pn.y >= 0 && Pn.x + Pn.y <= 1
                    );
                  },
                },
                {
                  key: "getUV",
                  value: function (e, t, n, r, a, i, o, s) {
                    return (
                      !1 === Fn &&
                        (console.warn(
                          "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."
                        ),
                        (Fn = !0)),
                      this.getInterpolation(e, t, n, r, a, i, o, s)
                    );
                  },
                },
                {
                  key: "getInterpolation",
                  value: function (e, t, n, r, a, i, o, s) {
                    return (
                      this.getBarycoord(e, t, n, r, Pn),
                      s.setScalar(0),
                      s.addScaledVector(a, Pn.x),
                      s.addScaledVector(i, Pn.y),
                      s.addScaledVector(o, Pn.z),
                      s
                    );
                  },
                },
                {
                  key: "isFrontFacing",
                  value: function (e, t, n, r) {
                    return (
                      Cn.subVectors(n, t),
                      kn.subVectors(e, t),
                      Cn.cross(kn).dot(r) < 0
                    );
                  },
                },
              ]
            ),
            e
          );
        })(),
        Bn = {
          aliceblue: 15792383,
          antiquewhite: 16444375,
          aqua: 65535,
          aquamarine: 8388564,
          azure: 15794175,
          beige: 16119260,
          bisque: 16770244,
          black: 0,
          blanchedalmond: 16772045,
          blue: 255,
          blueviolet: 9055202,
          brown: 10824234,
          burlywood: 14596231,
          cadetblue: 6266528,
          chartreuse: 8388352,
          chocolate: 13789470,
          coral: 16744272,
          cornflowerblue: 6591981,
          cornsilk: 16775388,
          crimson: 14423100,
          cyan: 65535,
          darkblue: 139,
          darkcyan: 35723,
          darkgoldenrod: 12092939,
          darkgray: 11119017,
          darkgreen: 25600,
          darkgrey: 11119017,
          darkkhaki: 12433259,
          darkmagenta: 9109643,
          darkolivegreen: 5597999,
          darkorange: 16747520,
          darkorchid: 10040012,
          darkred: 9109504,
          darksalmon: 15308410,
          darkseagreen: 9419919,
          darkslateblue: 4734347,
          darkslategray: 3100495,
          darkslategrey: 3100495,
          darkturquoise: 52945,
          darkviolet: 9699539,
          deeppink: 16716947,
          deepskyblue: 49151,
          dimgray: 6908265,
          dimgrey: 6908265,
          dodgerblue: 2003199,
          firebrick: 11674146,
          floralwhite: 16775920,
          forestgreen: 2263842,
          fuchsia: 16711935,
          gainsboro: 14474460,
          ghostwhite: 16316671,
          gold: 16766720,
          goldenrod: 14329120,
          gray: 8421504,
          green: 32768,
          greenyellow: 11403055,
          grey: 8421504,
          honeydew: 15794160,
          hotpink: 16738740,
          indianred: 13458524,
          indigo: 4915330,
          ivory: 16777200,
          khaki: 15787660,
          lavender: 15132410,
          lavenderblush: 16773365,
          lawngreen: 8190976,
          lemonchiffon: 16775885,
          lightblue: 11393254,
          lightcoral: 15761536,
          lightcyan: 14745599,
          lightgoldenrodyellow: 16448210,
          lightgray: 13882323,
          lightgreen: 9498256,
          lightgrey: 13882323,
          lightpink: 16758465,
          lightsalmon: 16752762,
          lightseagreen: 2142890,
          lightskyblue: 8900346,
          lightslategray: 7833753,
          lightslategrey: 7833753,
          lightsteelblue: 11584734,
          lightyellow: 16777184,
          lime: 65280,
          limegreen: 3329330,
          linen: 16445670,
          magenta: 16711935,
          maroon: 8388608,
          mediumaquamarine: 6737322,
          mediumblue: 205,
          mediumorchid: 12211667,
          mediumpurple: 9662683,
          mediumseagreen: 3978097,
          mediumslateblue: 8087790,
          mediumspringgreen: 64154,
          mediumturquoise: 4772300,
          mediumvioletred: 13047173,
          midnightblue: 1644912,
          mintcream: 16121850,
          mistyrose: 16770273,
          moccasin: 16770229,
          navajowhite: 16768685,
          navy: 128,
          oldlace: 16643558,
          olive: 8421376,
          olivedrab: 7048739,
          orange: 16753920,
          orangered: 16729344,
          orchid: 14315734,
          palegoldenrod: 15657130,
          palegreen: 10025880,
          paleturquoise: 11529966,
          palevioletred: 14381203,
          papayawhip: 16773077,
          peachpuff: 16767673,
          peru: 13468991,
          pink: 16761035,
          plum: 14524637,
          powderblue: 11591910,
          purple: 8388736,
          rebeccapurple: 6697881,
          red: 16711680,
          rosybrown: 12357519,
          royalblue: 4286945,
          saddlebrown: 9127187,
          salmon: 16416882,
          sandybrown: 16032864,
          seagreen: 3050327,
          seashell: 16774638,
          sienna: 10506797,
          silver: 12632256,
          skyblue: 8900331,
          slateblue: 6970061,
          slategray: 7372944,
          slategrey: 7372944,
          snow: 16775930,
          springgreen: 65407,
          steelblue: 4620980,
          tan: 13808780,
          teal: 32896,
          thistle: 14204888,
          tomato: 16737095,
          turquoise: 4251856,
          violet: 15631086,
          wheat: 16113331,
          white: 16777215,
          whitesmoke: 16119285,
          yellow: 16776960,
          yellowgreen: 10145074,
        },
        Hn = { h: 0, s: 0, l: 0 },
        Gn = { h: 0, s: 0, l: 0 };
      function Vn(e, t, n) {
        return (
          n < 0 && (n += 1),
          n > 1 && (n -= 1),
          n < 1 / 6
            ? e + 6 * (t - e) * n
            : n < 0.5
            ? t
            : n < 2 / 3
            ? e + 6 * (t - e) * (2 / 3 - n)
            : e
        );
      }
      var Wn = (function (e) {
          function t(e, n, r) {
            return (
              w(this, t),
              (this.isColor = !0),
              (this.r = 1),
              (this.g = 1),
              (this.b = 1),
              this.set(e, n, r)
            );
          }
          return (
            M(t, [
              {
                key: "set",
                value: function (e, t, n) {
                  if (void 0 === t && void 0 === n) {
                    var r = e;
                    r && r.isColor
                      ? this.copy(r)
                      : "number" === typeof r
                      ? this.setHex(r)
                      : "string" === typeof r && this.setStyle(r);
                  } else this.setRGB(e, t, n);
                  return this;
                },
              },
              {
                key: "setScalar",
                value: function (e) {
                  return (this.r = e), (this.g = e), (this.b = e), this;
                },
              },
              {
                key: "setHex",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : Me;
                  return (
                    (e = Math.floor(e)),
                    (this.r = ((e >> 16) & 255) / 255),
                    (this.g = ((e >> 8) & 255) / 255),
                    (this.b = (255 & e) / 255),
                    ct.toWorkingColorSpace(this, t),
                    this
                  );
                },
              },
              {
                key: "setRGB",
                value: function (e, t, n) {
                  var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : ct.workingColorSpace;
                  return (
                    (this.r = e),
                    (this.g = t),
                    (this.b = n),
                    ct.toWorkingColorSpace(this, r),
                    this
                  );
                },
              },
              {
                key: "setHSL",
                value: function (e, t, n) {
                  var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : ct.workingColorSpace;
                  if (
                    ((e = Xe(e, 1)),
                    (t = je(t, 0, 1)),
                    (n = je(n, 0, 1)),
                    0 === t)
                  )
                    this.r = this.g = this.b = n;
                  else {
                    var a = n <= 0.5 ? n * (1 + t) : n + t - n * t,
                      i = 2 * n - a;
                    (this.r = Vn(i, a, e + 1 / 3)),
                      (this.g = Vn(i, a, e)),
                      (this.b = Vn(i, a, e - 1 / 3));
                  }
                  return ct.toWorkingColorSpace(this, r), this;
                },
              },
              {
                key: "setStyle",
                value: function (e) {
                  var t,
                    n =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : Me;
                  function r(t) {
                    void 0 !== t &&
                      parseFloat(t) < 1 &&
                      console.warn(
                        "THREE.Color: Alpha component of " +
                          e +
                          " will be ignored."
                      );
                  }
                  if ((t = /^(\w+)\(([^\)]*)\)/.exec(e))) {
                    var a,
                      i = t[1],
                      o = t[2];
                    switch (i) {
                      case "rgb":
                      case "rgba":
                        if (
                          (a =
                            /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                              o
                            ))
                        )
                          return (
                            r(a[4]),
                            this.setRGB(
                              Math.min(255, parseInt(a[1], 10)) / 255,
                              Math.min(255, parseInt(a[2], 10)) / 255,
                              Math.min(255, parseInt(a[3], 10)) / 255,
                              n
                            )
                          );
                        if (
                          (a =
                            /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                              o
                            ))
                        )
                          return (
                            r(a[4]),
                            this.setRGB(
                              Math.min(100, parseInt(a[1], 10)) / 100,
                              Math.min(100, parseInt(a[2], 10)) / 100,
                              Math.min(100, parseInt(a[3], 10)) / 100,
                              n
                            )
                          );
                        break;
                      case "hsl":
                      case "hsla":
                        if (
                          (a =
                            /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                              o
                            ))
                        )
                          return (
                            r(a[4]),
                            this.setHSL(
                              parseFloat(a[1]) / 360,
                              parseFloat(a[2]) / 100,
                              parseFloat(a[3]) / 100,
                              n
                            )
                          );
                        break;
                      default:
                        console.warn("THREE.Color: Unknown color model " + e);
                    }
                  } else if ((t = /^\#([A-Fa-f\d]+)$/.exec(e))) {
                    var s = t[1],
                      l = s.length;
                    if (3 === l)
                      return this.setRGB(
                        parseInt(s.charAt(0), 16) / 15,
                        parseInt(s.charAt(1), 16) / 15,
                        parseInt(s.charAt(2), 16) / 15,
                        n
                      );
                    if (6 === l) return this.setHex(parseInt(s, 16), n);
                    console.warn("THREE.Color: Invalid hex color " + e);
                  } else if (e && e.length > 0) return this.setColorName(e, n);
                  return this;
                },
              },
              {
                key: "setColorName",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : Me,
                    n = Bn[e.toLowerCase()];
                  return (
                    void 0 !== n
                      ? this.setHex(n, t)
                      : console.warn("THREE.Color: Unknown color " + e),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.r, this.g, this.b);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
                },
              },
              {
                key: "copySRGBToLinear",
                value: function (e) {
                  return (
                    (this.r = ft(e.r)),
                    (this.g = ft(e.g)),
                    (this.b = ft(e.b)),
                    this
                  );
                },
              },
              {
                key: "copyLinearToSRGB",
                value: function (e) {
                  return (
                    (this.r = dt(e.r)),
                    (this.g = dt(e.g)),
                    (this.b = dt(e.b)),
                    this
                  );
                },
              },
              {
                key: "convertSRGBToLinear",
                value: function () {
                  return this.copySRGBToLinear(this), this;
                },
              },
              {
                key: "convertLinearToSRGB",
                value: function () {
                  return this.copyLinearToSRGB(this), this;
                },
              },
              {
                key: "getHex",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : Me;
                  return (
                    ct.fromWorkingColorSpace(jn.copy(this), e),
                    65536 * Math.round(je(255 * jn.r, 0, 255)) +
                      256 * Math.round(je(255 * jn.g, 0, 255)) +
                      Math.round(je(255 * jn.b, 0, 255))
                  );
                },
              },
              {
                key: "getHexString",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : Me;
                  return ("000000" + this.getHex(e).toString(16)).slice(-6);
                },
              },
              {
                key: "getHSL",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : ct.workingColorSpace;
                  ct.fromWorkingColorSpace(jn.copy(this), t);
                  var n,
                    r,
                    a = jn.r,
                    i = jn.g,
                    o = jn.b,
                    s = Math.max(a, i, o),
                    l = Math.min(a, i, o),
                    u = (l + s) / 2;
                  if (l === s) (n = 0), (r = 0);
                  else {
                    var c = s - l;
                    switch (
                      ((r = u <= 0.5 ? c / (s + l) : c / (2 - s - l)), s)
                    ) {
                      case a:
                        n = (i - o) / c + (i < o ? 6 : 0);
                        break;
                      case i:
                        n = (o - a) / c + 2;
                        break;
                      case o:
                        n = (a - i) / c + 4;
                    }
                    n /= 6;
                  }
                  return (e.h = n), (e.s = r), (e.l = u), e;
                },
              },
              {
                key: "getRGB",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : ct.workingColorSpace;
                  return (
                    ct.fromWorkingColorSpace(jn.copy(this), t),
                    (e.r = jn.r),
                    (e.g = jn.g),
                    (e.b = jn.b),
                    e
                  );
                },
              },
              {
                key: "getStyle",
                value: function () {
                  var e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : Me;
                  ct.fromWorkingColorSpace(jn.copy(this), e);
                  var t = jn.r,
                    n = jn.g,
                    r = jn.b;
                  return e !== Me
                    ? "color("
                        .concat(e, " ")
                        .concat(t.toFixed(3), " ")
                        .concat(n.toFixed(3), " ")
                        .concat(r.toFixed(3), ")")
                    : "rgb("
                        .concat(Math.round(255 * t), ",")
                        .concat(Math.round(255 * n), ",")
                        .concat(Math.round(255 * r), ")");
                },
              },
              {
                key: "offsetHSL",
                value: function (e, t, n) {
                  return (
                    this.getHSL(Hn), this.setHSL(Hn.h + e, Hn.s + t, Hn.l + n)
                  );
                },
              },
              {
                key: "add",
                value: function (e) {
                  return (
                    (this.r += e.r), (this.g += e.g), (this.b += e.b), this
                  );
                },
              },
              {
                key: "addColors",
                value: function (e, t) {
                  return (
                    (this.r = e.r + t.r),
                    (this.g = e.g + t.g),
                    (this.b = e.b + t.b),
                    this
                  );
                },
              },
              {
                key: "addScalar",
                value: function (e) {
                  return (this.r += e), (this.g += e), (this.b += e), this;
                },
              },
              {
                key: "sub",
                value: function (e) {
                  return (
                    (this.r = Math.max(0, this.r - e.r)),
                    (this.g = Math.max(0, this.g - e.g)),
                    (this.b = Math.max(0, this.b - e.b)),
                    this
                  );
                },
              },
              {
                key: "multiply",
                value: function (e) {
                  return (
                    (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this
                  );
                },
              },
              {
                key: "multiplyScalar",
                value: function (e) {
                  return (this.r *= e), (this.g *= e), (this.b *= e), this;
                },
              },
              {
                key: "lerp",
                value: function (e, t) {
                  return (
                    (this.r += (e.r - this.r) * t),
                    (this.g += (e.g - this.g) * t),
                    (this.b += (e.b - this.b) * t),
                    this
                  );
                },
              },
              {
                key: "lerpColors",
                value: function (e, t, n) {
                  return (
                    (this.r = e.r + (t.r - e.r) * n),
                    (this.g = e.g + (t.g - e.g) * n),
                    (this.b = e.b + (t.b - e.b) * n),
                    this
                  );
                },
              },
              {
                key: "lerpHSL",
                value: function (e, t) {
                  this.getHSL(Hn), e.getHSL(Gn);
                  var n = qe(Hn.h, Gn.h, t),
                    r = qe(Hn.s, Gn.s, t),
                    a = qe(Hn.l, Gn.l, t);
                  return this.setHSL(n, r, a), this;
                },
              },
              {
                key: "setFromVector3",
                value: function (e) {
                  return (this.r = e.x), (this.g = e.y), (this.b = e.z), this;
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  var t = this.r,
                    n = this.g,
                    r = this.b,
                    a = e.elements;
                  return (
                    (this.r = a[0] * t + a[3] * n + a[6] * r),
                    (this.g = a[1] * t + a[4] * n + a[7] * r),
                    (this.b = a[2] * t + a[5] * n + a[8] * r),
                    this
                  );
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return e.r === this.r && e.g === this.g && e.b === this.b;
                },
              },
              {
                key: "fromArray",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return (
                    (this.r = e[t]),
                    (this.g = e[t + 1]),
                    (this.b = e[t + 2]),
                    this
                  );
                },
              },
              {
                key: "toArray",
                value: function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : [],
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0;
                  return (
                    (e[t] = this.r), (e[t + 1] = this.g), (e[t + 2] = this.b), e
                  );
                },
              },
              {
                key: "fromBufferAttribute",
                value: function (e, t) {
                  return (
                    (this.r = e.getX(t)),
                    (this.g = e.getY(t)),
                    (this.b = e.getZ(t)),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  return this.getHex();
                },
              },
              {
                key: Symbol.iterator,
                value: E().mark(function e() {
                  return E().wrap(
                    function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), this.r;
                          case 2:
                            return (e.next = 4), this.g;
                          case 4:
                            return (e.next = 6), this.b;
                          case 6:
                          case "end":
                            return e.stop();
                        }
                    },
                    e,
                    this
                  );
                }),
              },
            ]),
            t
          );
        })(),
        jn = new Wn();
      Wn.NAMES = Bn;
      var Xn = 0,
        qn = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e;
            return (
              w(this, n),
              ((e = t.call(this)).isMaterial = !0),
              Object.defineProperty(m(e), "id", { value: Xn++ }),
              (e.uuid = We()),
              (e.name = ""),
              (e.type = "Material"),
              (e.blending = 1),
              (e.side = P),
              (e.vertexColors = !1),
              (e.opacity = 1),
              (e.transparent = !1),
              (e.alphaHash = !1),
              (e.blendSrc = 204),
              (e.blendDst = 205),
              (e.blendEquation = L),
              (e.blendSrcAlpha = null),
              (e.blendDstAlpha = null),
              (e.blendEquationAlpha = null),
              (e.blendColor = new Wn(0, 0, 0)),
              (e.blendAlpha = 0),
              (e.depthFunc = 3),
              (e.depthTest = !0),
              (e.depthWrite = !0),
              (e.stencilWriteMask = 255),
              (e.stencilFunc = 519),
              (e.stencilRef = 0),
              (e.stencilFuncMask = 255),
              (e.stencilFail = De),
              (e.stencilZFail = De),
              (e.stencilZPass = De),
              (e.stencilWrite = !1),
              (e.clippingPlanes = null),
              (e.clipIntersection = !1),
              (e.clipShadows = !1),
              (e.shadowSide = null),
              (e.colorWrite = !0),
              (e.precision = null),
              (e.polygonOffset = !1),
              (e.polygonOffsetFactor = 0),
              (e.polygonOffsetUnits = 0),
              (e.dithering = !1),
              (e.alphaToCoverage = !1),
              (e.premultipliedAlpha = !1),
              (e.forceSinglePass = !1),
              (e.visible = !0),
              (e.toneMapped = !0),
              (e.userData = {}),
              (e.version = 0),
              (e._alphaTest = 0),
              e
            );
          }
          return (
            M(n, [
              {
                key: "alphaTest",
                get: function () {
                  return this._alphaTest;
                },
                set: function (e) {
                  this._alphaTest > 0 !== e > 0 && this.version++,
                    (this._alphaTest = e);
                },
              },
              { key: "onBuild", value: function () {} },
              { key: "onBeforeRender", value: function () {} },
              { key: "onBeforeCompile", value: function () {} },
              {
                key: "customProgramCacheKey",
                value: function () {
                  return this.onBeforeCompile.toString();
                },
              },
              {
                key: "setValues",
                value: function (e) {
                  if (void 0 !== e)
                    for (var t in e) {
                      var n = e[t];
                      if (void 0 !== n) {
                        var r = this[t];
                        void 0 !== r
                          ? r && r.isColor
                            ? r.set(n)
                            : r && r.isVector3 && n && n.isVector3
                            ? r.copy(n)
                            : (this[t] = n)
                          : console.warn(
                              "THREE.Material: '"
                                .concat(t, "' is not a property of THREE.")
                                .concat(this.type, ".")
                            );
                      } else
                        console.warn(
                          "THREE.Material: parameter '".concat(
                            t,
                            "' has value of undefined."
                          )
                        );
                    }
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = void 0 === e || "string" === typeof e;
                  t && (e = { textures: {}, images: {} });
                  var n = {
                    metadata: {
                      version: 4.6,
                      type: "Material",
                      generator: "Material.toJSON",
                    },
                  };
                  function r(e) {
                    var t = [];
                    for (var n in e) {
                      var r = e[n];
                      delete r.metadata, t.push(r);
                    }
                    return t;
                  }
                  if (
                    ((n.uuid = this.uuid),
                    (n.type = this.type),
                    "" !== this.name && (n.name = this.name),
                    this.color &&
                      this.color.isColor &&
                      (n.color = this.color.getHex()),
                    void 0 !== this.roughness && (n.roughness = this.roughness),
                    void 0 !== this.metalness && (n.metalness = this.metalness),
                    void 0 !== this.sheen && (n.sheen = this.sheen),
                    this.sheenColor &&
                      this.sheenColor.isColor &&
                      (n.sheenColor = this.sheenColor.getHex()),
                    void 0 !== this.sheenRoughness &&
                      (n.sheenRoughness = this.sheenRoughness),
                    this.emissive &&
                      this.emissive.isColor &&
                      (n.emissive = this.emissive.getHex()),
                    this.emissiveIntensity &&
                      1 !== this.emissiveIntensity &&
                      (n.emissiveIntensity = this.emissiveIntensity),
                    this.specular &&
                      this.specular.isColor &&
                      (n.specular = this.specular.getHex()),
                    void 0 !== this.specularIntensity &&
                      (n.specularIntensity = this.specularIntensity),
                    this.specularColor &&
                      this.specularColor.isColor &&
                      (n.specularColor = this.specularColor.getHex()),
                    void 0 !== this.shininess && (n.shininess = this.shininess),
                    void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat),
                    void 0 !== this.clearcoatRoughness &&
                      (n.clearcoatRoughness = this.clearcoatRoughness),
                    this.clearcoatMap &&
                      this.clearcoatMap.isTexture &&
                      (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
                    this.clearcoatRoughnessMap &&
                      this.clearcoatRoughnessMap.isTexture &&
                      (n.clearcoatRoughnessMap =
                        this.clearcoatRoughnessMap.toJSON(e).uuid),
                    this.clearcoatNormalMap &&
                      this.clearcoatNormalMap.isTexture &&
                      ((n.clearcoatNormalMap =
                        this.clearcoatNormalMap.toJSON(e).uuid),
                      (n.clearcoatNormalScale =
                        this.clearcoatNormalScale.toArray())),
                    void 0 !== this.iridescence &&
                      (n.iridescence = this.iridescence),
                    void 0 !== this.iridescenceIOR &&
                      (n.iridescenceIOR = this.iridescenceIOR),
                    void 0 !== this.iridescenceThicknessRange &&
                      (n.iridescenceThicknessRange =
                        this.iridescenceThicknessRange),
                    this.iridescenceMap &&
                      this.iridescenceMap.isTexture &&
                      (n.iridescenceMap = this.iridescenceMap.toJSON(e).uuid),
                    this.iridescenceThicknessMap &&
                      this.iridescenceThicknessMap.isTexture &&
                      (n.iridescenceThicknessMap =
                        this.iridescenceThicknessMap.toJSON(e).uuid),
                    void 0 !== this.anisotropy &&
                      (n.anisotropy = this.anisotropy),
                    void 0 !== this.anisotropyRotation &&
                      (n.anisotropyRotation = this.anisotropyRotation),
                    this.anisotropyMap &&
                      this.anisotropyMap.isTexture &&
                      (n.anisotropyMap = this.anisotropyMap.toJSON(e).uuid),
                    this.map &&
                      this.map.isTexture &&
                      (n.map = this.map.toJSON(e).uuid),
                    this.matcap &&
                      this.matcap.isTexture &&
                      (n.matcap = this.matcap.toJSON(e).uuid),
                    this.alphaMap &&
                      this.alphaMap.isTexture &&
                      (n.alphaMap = this.alphaMap.toJSON(e).uuid),
                    this.lightMap &&
                      this.lightMap.isTexture &&
                      ((n.lightMap = this.lightMap.toJSON(e).uuid),
                      (n.lightMapIntensity = this.lightMapIntensity)),
                    this.aoMap &&
                      this.aoMap.isTexture &&
                      ((n.aoMap = this.aoMap.toJSON(e).uuid),
                      (n.aoMapIntensity = this.aoMapIntensity)),
                    this.bumpMap &&
                      this.bumpMap.isTexture &&
                      ((n.bumpMap = this.bumpMap.toJSON(e).uuid),
                      (n.bumpScale = this.bumpScale)),
                    this.normalMap &&
                      this.normalMap.isTexture &&
                      ((n.normalMap = this.normalMap.toJSON(e).uuid),
                      (n.normalMapType = this.normalMapType),
                      (n.normalScale = this.normalScale.toArray())),
                    this.displacementMap &&
                      this.displacementMap.isTexture &&
                      ((n.displacementMap =
                        this.displacementMap.toJSON(e).uuid),
                      (n.displacementScale = this.displacementScale),
                      (n.displacementBias = this.displacementBias)),
                    this.roughnessMap &&
                      this.roughnessMap.isTexture &&
                      (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
                    this.metalnessMap &&
                      this.metalnessMap.isTexture &&
                      (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
                    this.emissiveMap &&
                      this.emissiveMap.isTexture &&
                      (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
                    this.specularMap &&
                      this.specularMap.isTexture &&
                      (n.specularMap = this.specularMap.toJSON(e).uuid),
                    this.specularIntensityMap &&
                      this.specularIntensityMap.isTexture &&
                      (n.specularIntensityMap =
                        this.specularIntensityMap.toJSON(e).uuid),
                    this.specularColorMap &&
                      this.specularColorMap.isTexture &&
                      (n.specularColorMap =
                        this.specularColorMap.toJSON(e).uuid),
                    this.envMap &&
                      this.envMap.isTexture &&
                      ((n.envMap = this.envMap.toJSON(e).uuid),
                      void 0 !== this.combine && (n.combine = this.combine)),
                    void 0 !== this.envMapIntensity &&
                      (n.envMapIntensity = this.envMapIntensity),
                    void 0 !== this.reflectivity &&
                      (n.reflectivity = this.reflectivity),
                    void 0 !== this.refractionRatio &&
                      (n.refractionRatio = this.refractionRatio),
                    this.gradientMap &&
                      this.gradientMap.isTexture &&
                      (n.gradientMap = this.gradientMap.toJSON(e).uuid),
                    void 0 !== this.transmission &&
                      (n.transmission = this.transmission),
                    this.transmissionMap &&
                      this.transmissionMap.isTexture &&
                      (n.transmissionMap = this.transmissionMap.toJSON(e).uuid),
                    void 0 !== this.thickness && (n.thickness = this.thickness),
                    this.thicknessMap &&
                      this.thicknessMap.isTexture &&
                      (n.thicknessMap = this.thicknessMap.toJSON(e).uuid),
                    void 0 !== this.attenuationDistance &&
                      this.attenuationDistance !== 1 / 0 &&
                      (n.attenuationDistance = this.attenuationDistance),
                    void 0 !== this.attenuationColor &&
                      (n.attenuationColor = this.attenuationColor.getHex()),
                    void 0 !== this.size && (n.size = this.size),
                    null !== this.shadowSide &&
                      (n.shadowSide = this.shadowSide),
                    void 0 !== this.sizeAttenuation &&
                      (n.sizeAttenuation = this.sizeAttenuation),
                    1 !== this.blending && (n.blending = this.blending),
                    this.side !== P && (n.side = this.side),
                    !0 === this.vertexColors && (n.vertexColors = !0),
                    this.opacity < 1 && (n.opacity = this.opacity),
                    !0 === this.transparent && (n.transparent = !0),
                    204 !== this.blendSrc && (n.blendSrc = this.blendSrc),
                    205 !== this.blendDst && (n.blendDst = this.blendDst),
                    this.blendEquation !== L &&
                      (n.blendEquation = this.blendEquation),
                    null !== this.blendSrcAlpha &&
                      (n.blendSrcAlpha = this.blendSrcAlpha),
                    null !== this.blendDstAlpha &&
                      (n.blendDstAlpha = this.blendDstAlpha),
                    null !== this.blendEquationAlpha &&
                      (n.blendEquationAlpha = this.blendEquationAlpha),
                    this.blendColor &&
                      this.blendColor.isColor &&
                      (n.blendColor = this.blendColor.getHex()),
                    0 !== this.blendAlpha && (n.blendAlpha = this.blendAlpha),
                    3 !== this.depthFunc && (n.depthFunc = this.depthFunc),
                    !1 === this.depthTest && (n.depthTest = this.depthTest),
                    !1 === this.depthWrite && (n.depthWrite = this.depthWrite),
                    !1 === this.colorWrite && (n.colorWrite = this.colorWrite),
                    255 !== this.stencilWriteMask &&
                      (n.stencilWriteMask = this.stencilWriteMask),
                    519 !== this.stencilFunc &&
                      (n.stencilFunc = this.stencilFunc),
                    0 !== this.stencilRef && (n.stencilRef = this.stencilRef),
                    255 !== this.stencilFuncMask &&
                      (n.stencilFuncMask = this.stencilFuncMask),
                    this.stencilFail !== De &&
                      (n.stencilFail = this.stencilFail),
                    this.stencilZFail !== De &&
                      (n.stencilZFail = this.stencilZFail),
                    this.stencilZPass !== De &&
                      (n.stencilZPass = this.stencilZPass),
                    !0 === this.stencilWrite &&
                      (n.stencilWrite = this.stencilWrite),
                    void 0 !== this.rotation &&
                      0 !== this.rotation &&
                      (n.rotation = this.rotation),
                    !0 === this.polygonOffset && (n.polygonOffset = !0),
                    0 !== this.polygonOffsetFactor &&
                      (n.polygonOffsetFactor = this.polygonOffsetFactor),
                    0 !== this.polygonOffsetUnits &&
                      (n.polygonOffsetUnits = this.polygonOffsetUnits),
                    void 0 !== this.linewidth &&
                      1 !== this.linewidth &&
                      (n.linewidth = this.linewidth),
                    void 0 !== this.dashSize && (n.dashSize = this.dashSize),
                    void 0 !== this.gapSize && (n.gapSize = this.gapSize),
                    void 0 !== this.scale && (n.scale = this.scale),
                    !0 === this.dithering && (n.dithering = !0),
                    this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
                    !0 === this.alphaHash && (n.alphaHash = !0),
                    !0 === this.alphaToCoverage && (n.alphaToCoverage = !0),
                    !0 === this.premultipliedAlpha &&
                      (n.premultipliedAlpha = !0),
                    !0 === this.forceSinglePass && (n.forceSinglePass = !0),
                    !0 === this.wireframe && (n.wireframe = !0),
                    this.wireframeLinewidth > 1 &&
                      (n.wireframeLinewidth = this.wireframeLinewidth),
                    "round" !== this.wireframeLinecap &&
                      (n.wireframeLinecap = this.wireframeLinecap),
                    "round" !== this.wireframeLinejoin &&
                      (n.wireframeLinejoin = this.wireframeLinejoin),
                    !0 === this.flatShading && (n.flatShading = !0),
                    !1 === this.visible && (n.visible = !1),
                    !1 === this.toneMapped && (n.toneMapped = !1),
                    !1 === this.fog && (n.fog = !1),
                    Object.keys(this.userData).length > 0 &&
                      (n.userData = this.userData),
                    t)
                  ) {
                    var a = r(e.textures),
                      i = r(e.images);
                    a.length > 0 && (n.textures = a),
                      i.length > 0 && (n.images = i);
                  }
                  return n;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.name = e.name),
                    (this.blending = e.blending),
                    (this.side = e.side),
                    (this.vertexColors = e.vertexColors),
                    (this.opacity = e.opacity),
                    (this.transparent = e.transparent),
                    (this.blendSrc = e.blendSrc),
                    (this.blendDst = e.blendDst),
                    (this.blendEquation = e.blendEquation),
                    (this.blendSrcAlpha = e.blendSrcAlpha),
                    (this.blendDstAlpha = e.blendDstAlpha),
                    (this.blendEquationAlpha = e.blendEquationAlpha),
                    this.blendColor.copy(e.blendColor),
                    (this.blendAlpha = e.blendAlpha),
                    (this.depthFunc = e.depthFunc),
                    (this.depthTest = e.depthTest),
                    (this.depthWrite = e.depthWrite),
                    (this.stencilWriteMask = e.stencilWriteMask),
                    (this.stencilFunc = e.stencilFunc),
                    (this.stencilRef = e.stencilRef),
                    (this.stencilFuncMask = e.stencilFuncMask),
                    (this.stencilFail = e.stencilFail),
                    (this.stencilZFail = e.stencilZFail),
                    (this.stencilZPass = e.stencilZPass),
                    (this.stencilWrite = e.stencilWrite);
                  var t = e.clippingPlanes,
                    n = null;
                  if (null !== t) {
                    var r = t.length;
                    n = new Array(r);
                    for (var a = 0; a !== r; ++a) n[a] = t[a].clone();
                  }
                  return (
                    (this.clippingPlanes = n),
                    (this.clipIntersection = e.clipIntersection),
                    (this.clipShadows = e.clipShadows),
                    (this.shadowSide = e.shadowSide),
                    (this.colorWrite = e.colorWrite),
                    (this.precision = e.precision),
                    (this.polygonOffset = e.polygonOffset),
                    (this.polygonOffsetFactor = e.polygonOffsetFactor),
                    (this.polygonOffsetUnits = e.polygonOffsetUnits),
                    (this.dithering = e.dithering),
                    (this.alphaTest = e.alphaTest),
                    (this.alphaHash = e.alphaHash),
                    (this.alphaToCoverage = e.alphaToCoverage),
                    (this.premultipliedAlpha = e.premultipliedAlpha),
                    (this.forceSinglePass = e.forceSinglePass),
                    (this.visible = e.visible),
                    (this.toneMapped = e.toneMapped),
                    (this.userData = JSON.parse(JSON.stringify(e.userData))),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
            ]),
            n
          );
        })(Be),
        Yn = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e) {
            var r;
            return (
              w(this, n),
              ((r = t.call(this)).isMeshBasicMaterial = !0),
              (r.type = "MeshBasicMaterial"),
              (r.color = new Wn(16777215)),
              (r.map = null),
              (r.lightMap = null),
              (r.lightMapIntensity = 1),
              (r.aoMap = null),
              (r.aoMapIntensity = 1),
              (r.specularMap = null),
              (r.alphaMap = null),
              (r.envMap = null),
              (r.combine = D),
              (r.reflectivity = 1),
              (r.refractionRatio = 0.98),
              (r.wireframe = !1),
              (r.wireframeLinewidth = 1),
              (r.wireframeLinecap = "round"),
              (r.wireframeLinejoin = "round"),
              (r.fog = !0),
              r.setValues(e),
              r
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.lightMap = e.lightMap),
                    (this.lightMapIntensity = e.lightMapIntensity),
                    (this.aoMap = e.aoMap),
                    (this.aoMapIntensity = e.aoMapIntensity),
                    (this.specularMap = e.specularMap),
                    (this.alphaMap = e.alphaMap),
                    (this.envMap = e.envMap),
                    (this.combine = e.combine),
                    (this.reflectivity = e.reflectivity),
                    (this.refractionRatio = e.refractionRatio),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.wireframeLinecap = e.wireframeLinecap),
                    (this.wireframeLinejoin = e.wireframeLinejoin),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(qn);
      var Kn = new Tt(),
        $n = new Je(),
        Zn = (function () {
          function e(t, n) {
            var r =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
            if ((w(this, e), Array.isArray(t)))
              throw new TypeError(
                "THREE.BufferAttribute: array should be a Typed Array."
              );
            (this.isBufferAttribute = !0),
              (this.name = ""),
              (this.array = t),
              (this.itemSize = n),
              (this.count = void 0 !== t ? t.length / n : 0),
              (this.normalized = r),
              (this.usage = Ie),
              (this.updateRange = { offset: 0, count: -1 }),
              (this.gpuType = oe),
              (this.version = 0);
          }
          return (
            M(e, [
              { key: "onUploadCallback", value: function () {} },
              {
                key: "needsUpdate",
                set: function (e) {
                  !0 === e && this.version++;
                },
              },
              {
                key: "setUsage",
                value: function (e) {
                  return (this.usage = e), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    (this.name = e.name),
                    (this.array = new e.array.constructor(e.array)),
                    (this.itemSize = e.itemSize),
                    (this.count = e.count),
                    (this.normalized = e.normalized),
                    (this.usage = e.usage),
                    (this.gpuType = e.gpuType),
                    this
                  );
                },
              },
              {
                key: "copyAt",
                value: function (e, t, n) {
                  (e *= this.itemSize), (n *= t.itemSize);
                  for (var r = 0, a = this.itemSize; r < a; r++)
                    this.array[e + r] = t.array[n + r];
                  return this;
                },
              },
              {
                key: "copyArray",
                value: function (e) {
                  return this.array.set(e), this;
                },
              },
              {
                key: "applyMatrix3",
                value: function (e) {
                  if (2 === this.itemSize)
                    for (var t = 0, n = this.count; t < n; t++)
                      $n.fromBufferAttribute(this, t),
                        $n.applyMatrix3(e),
                        this.setXY(t, $n.x, $n.y);
                  else if (3 === this.itemSize)
                    for (var r = 0, a = this.count; r < a; r++)
                      Kn.fromBufferAttribute(this, r),
                        Kn.applyMatrix3(e),
                        this.setXYZ(r, Kn.x, Kn.y, Kn.z);
                  return this;
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    Kn.fromBufferAttribute(this, t),
                      Kn.applyMatrix4(e),
                      this.setXYZ(t, Kn.x, Kn.y, Kn.z);
                  return this;
                },
              },
              {
                key: "applyNormalMatrix",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    Kn.fromBufferAttribute(this, t),
                      Kn.applyNormalMatrix(e),
                      this.setXYZ(t, Kn.x, Kn.y, Kn.z);
                  return this;
                },
              },
              {
                key: "transformDirection",
                value: function (e) {
                  for (var t = 0, n = this.count; t < n; t++)
                    Kn.fromBufferAttribute(this, t),
                      Kn.transformDirection(e),
                      this.setXYZ(t, Kn.x, Kn.y, Kn.z);
                  return this;
                },
              },
              {
                key: "set",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0;
                  return this.array.set(e, t), this;
                },
              },
              {
                key: "getComponent",
                value: function (e, t) {
                  var n = this.array[e * this.itemSize + t];
                  return this.normalized && (n = $e(n, this.array)), n;
                },
              },
              {
                key: "setComponent",
                value: function (e, t, n) {
                  return (
                    this.normalized && (n = Ze(n, this.array)),
                    (this.array[e * this.itemSize + t] = n),
                    this
                  );
                },
              },
              {
                key: "getX",
                value: function (e) {
                  var t = this.array[e * this.itemSize];
                  return this.normalized && (t = $e(t, this.array)), t;
                },
              },
              {
                key: "setX",
                value: function (e, t) {
                  return (
                    this.normalized && (t = Ze(t, this.array)),
                    (this.array[e * this.itemSize] = t),
                    this
                  );
                },
              },
              {
                key: "getY",
                value: function (e) {
                  var t = this.array[e * this.itemSize + 1];
                  return this.normalized && (t = $e(t, this.array)), t;
                },
              },
              {
                key: "setY",
                value: function (e, t) {
                  return (
                    this.normalized && (t = Ze(t, this.array)),
                    (this.array[e * this.itemSize + 1] = t),
                    this
                  );
                },
              },
              {
                key: "getZ",
                value: function (e) {
                  var t = this.array[e * this.itemSize + 2];
                  return this.normalized && (t = $e(t, this.array)), t;
                },
              },
              {
                key: "setZ",
                value: function (e, t) {
                  return (
                    this.normalized && (t = Ze(t, this.array)),
                    (this.array[e * this.itemSize + 2] = t),
                    this
                  );
                },
              },
              {
                key: "getW",
                value: function (e) {
                  var t = this.array[e * this.itemSize + 3];
                  return this.normalized && (t = $e(t, this.array)), t;
                },
              },
              {
                key: "setW",
                value: function (e, t) {
                  return (
                    this.normalized && (t = Ze(t, this.array)),
                    (this.array[e * this.itemSize + 3] = t),
                    this
                  );
                },
              },
              {
                key: "setXY",
                value: function (e, t, n) {
                  return (
                    (e *= this.itemSize),
                    this.normalized &&
                      ((t = Ze(t, this.array)), (n = Ze(n, this.array))),
                    (this.array[e + 0] = t),
                    (this.array[e + 1] = n),
                    this
                  );
                },
              },
              {
                key: "setXYZ",
                value: function (e, t, n, r) {
                  return (
                    (e *= this.itemSize),
                    this.normalized &&
                      ((t = Ze(t, this.array)),
                      (n = Ze(n, this.array)),
                      (r = Ze(r, this.array))),
                    (this.array[e + 0] = t),
                    (this.array[e + 1] = n),
                    (this.array[e + 2] = r),
                    this
                  );
                },
              },
              {
                key: "setXYZW",
                value: function (e, t, n, r, a) {
                  return (
                    (e *= this.itemSize),
                    this.normalized &&
                      ((t = Ze(t, this.array)),
                      (n = Ze(n, this.array)),
                      (r = Ze(r, this.array)),
                      (a = Ze(a, this.array))),
                    (this.array[e + 0] = t),
                    (this.array[e + 1] = n),
                    (this.array[e + 2] = r),
                    (this.array[e + 3] = a),
                    this
                  );
                },
              },
              {
                key: "onUpload",
                value: function (e) {
                  return (this.onUploadCallback = e), this;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor(this.array, this.itemSize).copy(
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    itemSize: this.itemSize,
                    type: this.array.constructor.name,
                    array: Array.from(this.array),
                    normalized: this.normalized,
                  };
                  return (
                    "" !== this.name && (e.name = this.name),
                    this.usage !== Ie && (e.usage = this.usage),
                    (0 === this.updateRange.offset &&
                      -1 === this.updateRange.count) ||
                      (e.updateRange = this.updateRange),
                    e
                  );
                },
              },
            ]),
            e
          );
        })(),
        Jn = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e, r, a) {
            return w(this, n), t.call(this, new Uint16Array(e), r, a);
          }
          return M(n);
        })(Zn),
        Qn = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e, r, a) {
            return w(this, n), t.call(this, new Uint32Array(e), r, a);
          }
          return M(n);
        })(Zn),
        er = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e, r, a) {
            return w(this, n), t.call(this, new Float32Array(e), r, a);
          }
          return M(n);
        })(Zn),
        tr = 0,
        nr = new tn(),
        rr = new An(),
        ar = new Tt(),
        ir = new Ct(),
        or = new Ct(),
        sr = new Tt(),
        lr = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e;
            return (
              w(this, n),
              ((e = t.call(this)).isBufferGeometry = !0),
              Object.defineProperty(m(e), "id", { value: tr++ }),
              (e.uuid = We()),
              (e.name = ""),
              (e.type = "BufferGeometry"),
              (e.index = null),
              (e.attributes = {}),
              (e.morphAttributes = {}),
              (e.morphTargetsRelative = !1),
              (e.groups = []),
              (e.boundingBox = null),
              (e.boundingSphere = null),
              (e.drawRange = { start: 0, count: 1 / 0 }),
              (e.userData = {}),
              e
            );
          }
          return (
            M(n, [
              {
                key: "getIndex",
                value: function () {
                  return this.index;
                },
              },
              {
                key: "setIndex",
                value: function (e) {
                  return (
                    Array.isArray(e)
                      ? (this.index = new (tt(e) ? Qn : Jn)(e, 1))
                      : (this.index = e),
                    this
                  );
                },
              },
              {
                key: "getAttribute",
                value: function (e) {
                  return this.attributes[e];
                },
              },
              {
                key: "setAttribute",
                value: function (e, t) {
                  return (this.attributes[e] = t), this;
                },
              },
              {
                key: "deleteAttribute",
                value: function (e) {
                  return delete this.attributes[e], this;
                },
              },
              {
                key: "hasAttribute",
                value: function (e) {
                  return void 0 !== this.attributes[e];
                },
              },
              {
                key: "addGroup",
                value: function (e, t) {
                  var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 0;
                  this.groups.push({ start: e, count: t, materialIndex: n });
                },
              },
              {
                key: "clearGroups",
                value: function () {
                  this.groups = [];
                },
              },
              {
                key: "setDrawRange",
                value: function (e, t) {
                  (this.drawRange.start = e), (this.drawRange.count = t);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e) {
                  var t = this.attributes.position;
                  void 0 !== t && (t.applyMatrix4(e), (t.needsUpdate = !0));
                  var n = this.attributes.normal;
                  if (void 0 !== n) {
                    var r = new Qe().getNormalMatrix(e);
                    n.applyNormalMatrix(r), (n.needsUpdate = !0);
                  }
                  var a = this.attributes.tangent;
                  return (
                    void 0 !== a &&
                      (a.transformDirection(e), (a.needsUpdate = !0)),
                    null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere &&
                      this.computeBoundingSphere(),
                    this
                  );
                },
              },
              {
                key: "applyQuaternion",
                value: function (e) {
                  return (
                    nr.makeRotationFromQuaternion(e),
                    this.applyMatrix4(nr),
                    this
                  );
                },
              },
              {
                key: "rotateX",
                value: function (e) {
                  return nr.makeRotationX(e), this.applyMatrix4(nr), this;
                },
              },
              {
                key: "rotateY",
                value: function (e) {
                  return nr.makeRotationY(e), this.applyMatrix4(nr), this;
                },
              },
              {
                key: "rotateZ",
                value: function (e) {
                  return nr.makeRotationZ(e), this.applyMatrix4(nr), this;
                },
              },
              {
                key: "translate",
                value: function (e, t, n) {
                  return (
                    nr.makeTranslation(e, t, n), this.applyMatrix4(nr), this
                  );
                },
              },
              {
                key: "scale",
                value: function (e, t, n) {
                  return nr.makeScale(e, t, n), this.applyMatrix4(nr), this;
                },
              },
              {
                key: "lookAt",
                value: function (e) {
                  return (
                    rr.lookAt(e),
                    rr.updateMatrix(),
                    this.applyMatrix4(rr.matrix),
                    this
                  );
                },
              },
              {
                key: "center",
                value: function () {
                  return (
                    this.computeBoundingBox(),
                    this.boundingBox.getCenter(ar).negate(),
                    this.translate(ar.x, ar.y, ar.z),
                    this
                  );
                },
              },
              {
                key: "setFromPoints",
                value: function (e) {
                  for (var t = [], n = 0, r = e.length; n < r; n++) {
                    var a = e[n];
                    t.push(a.x, a.y, a.z || 0);
                  }
                  return this.setAttribute("position", new er(t, 3)), this;
                },
              },
              {
                key: "computeBoundingBox",
                value: function () {
                  null === this.boundingBox && (this.boundingBox = new Ct());
                  var e = this.attributes.position,
                    t = this.morphAttributes.position;
                  if (e && e.isGLBufferAttribute)
                    return (
                      console.error(
                        'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',
                        this
                      ),
                      void this.boundingBox.set(
                        new Tt(-1 / 0, -1 / 0, -1 / 0),
                        new Tt(1 / 0, 1 / 0, 1 / 0)
                      )
                    );
                  if (void 0 !== e) {
                    if ((this.boundingBox.setFromBufferAttribute(e), t))
                      for (var n = 0, r = t.length; n < r; n++) {
                        var a = t[n];
                        ir.setFromBufferAttribute(a),
                          this.morphTargetsRelative
                            ? (sr.addVectors(this.boundingBox.min, ir.min),
                              this.boundingBox.expandByPoint(sr),
                              sr.addVectors(this.boundingBox.max, ir.max),
                              this.boundingBox.expandByPoint(sr))
                            : (this.boundingBox.expandByPoint(ir.min),
                              this.boundingBox.expandByPoint(ir.max));
                      }
                  } else this.boundingBox.makeEmpty();
                  (isNaN(this.boundingBox.min.x) ||
                    isNaN(this.boundingBox.min.y) ||
                    isNaN(this.boundingBox.min.z)) &&
                    console.error(
                      'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
                      this
                    );
                },
              },
              {
                key: "computeBoundingSphere",
                value: function () {
                  null === this.boundingSphere &&
                    (this.boundingSphere = new Xt());
                  var e = this.attributes.position,
                    t = this.morphAttributes.position;
                  if (e && e.isGLBufferAttribute)
                    return (
                      console.error(
                        'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',
                        this
                      ),
                      void this.boundingSphere.set(new Tt(), 1 / 0)
                    );
                  if (e) {
                    var n = this.boundingSphere.center;
                    if ((ir.setFromBufferAttribute(e), t))
                      for (var r = 0, a = t.length; r < a; r++) {
                        var i = t[r];
                        or.setFromBufferAttribute(i),
                          this.morphTargetsRelative
                            ? (sr.addVectors(ir.min, or.min),
                              ir.expandByPoint(sr),
                              sr.addVectors(ir.max, or.max),
                              ir.expandByPoint(sr))
                            : (ir.expandByPoint(or.min),
                              ir.expandByPoint(or.max));
                      }
                    ir.getCenter(n);
                    for (var o = 0, s = 0, l = e.count; s < l; s++)
                      sr.fromBufferAttribute(e, s),
                        (o = Math.max(o, n.distanceToSquared(sr)));
                    if (t)
                      for (var u = 0, c = t.length; u < c; u++)
                        for (
                          var f = t[u],
                            d = this.morphTargetsRelative,
                            h = 0,
                            p = f.count;
                          h < p;
                          h++
                        )
                          sr.fromBufferAttribute(f, h),
                            d && (ar.fromBufferAttribute(e, h), sr.add(ar)),
                            (o = Math.max(o, n.distanceToSquared(sr)));
                    (this.boundingSphere.radius = Math.sqrt(o)),
                      isNaN(this.boundingSphere.radius) &&
                        console.error(
                          'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
                          this
                        );
                  }
                },
              },
              {
                key: "computeTangents",
                value: function () {
                  var e = this.index,
                    t = this.attributes;
                  if (
                    null !== e &&
                    void 0 !== t.position &&
                    void 0 !== t.normal &&
                    void 0 !== t.uv
                  ) {
                    var n = e.array,
                      r = t.position.array,
                      a = t.normal.array,
                      i = t.uv.array,
                      o = r.length / 3;
                    !1 === this.hasAttribute("tangent") &&
                      this.setAttribute(
                        "tangent",
                        new Zn(new Float32Array(4 * o), 4)
                      );
                    for (
                      var s = this.getAttribute("tangent").array,
                        l = [],
                        u = [],
                        c = 0;
                      c < o;
                      c++
                    )
                      (l[c] = new Tt()), (u[c] = new Tt());
                    var f = new Tt(),
                      d = new Tt(),
                      h = new Tt(),
                      p = new Je(),
                      v = new Je(),
                      m = new Je(),
                      g = new Tt(),
                      y = new Tt(),
                      _ = this.groups;
                    0 === _.length && (_ = [{ start: 0, count: n.length }]);
                    for (var b = 0, x = _.length; b < x; ++b)
                      for (
                        var S = _[b], E = S.start, w = E, T = E + S.count;
                        w < T;
                        w += 3
                      )
                        O(n[w + 0], n[w + 1], n[w + 2]);
                    for (
                      var M = new Tt(),
                        A = new Tt(),
                        C = new Tt(),
                        k = new Tt(),
                        R = 0,
                        P = _.length;
                      R < P;
                      ++R
                    )
                      for (
                        var U = _[R], L = U.start, D = L, I = L + U.count;
                        D < I;
                        D += 3
                      )
                        N(n[D + 0]), N(n[D + 1]), N(n[D + 2]);
                  } else
                    console.error(
                      "THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)"
                    );
                  function O(e, t, n) {
                    f.fromArray(r, 3 * e),
                      d.fromArray(r, 3 * t),
                      h.fromArray(r, 3 * n),
                      p.fromArray(i, 2 * e),
                      v.fromArray(i, 2 * t),
                      m.fromArray(i, 2 * n),
                      d.sub(f),
                      h.sub(f),
                      v.sub(p),
                      m.sub(p);
                    var a = 1 / (v.x * m.y - m.x * v.y);
                    isFinite(a) &&
                      (g
                        .copy(d)
                        .multiplyScalar(m.y)
                        .addScaledVector(h, -v.y)
                        .multiplyScalar(a),
                      y
                        .copy(h)
                        .multiplyScalar(v.x)
                        .addScaledVector(d, -m.x)
                        .multiplyScalar(a),
                      l[e].add(g),
                      l[t].add(g),
                      l[n].add(g),
                      u[e].add(y),
                      u[t].add(y),
                      u[n].add(y));
                  }
                  function N(e) {
                    C.fromArray(a, 3 * e), k.copy(C);
                    var t = l[e];
                    M.copy(t),
                      M.sub(C.multiplyScalar(C.dot(t))).normalize(),
                      A.crossVectors(k, t);
                    var n = A.dot(u[e]) < 0 ? -1 : 1;
                    (s[4 * e] = M.x),
                      (s[4 * e + 1] = M.y),
                      (s[4 * e + 2] = M.z),
                      (s[4 * e + 3] = n);
                  }
                },
              },
              {
                key: "computeVertexNormals",
                value: function () {
                  var e = this.index,
                    t = this.getAttribute("position");
                  if (void 0 !== t) {
                    var n = this.getAttribute("normal");
                    if (void 0 === n)
                      (n = new Zn(new Float32Array(3 * t.count), 3)),
                        this.setAttribute("normal", n);
                    else
                      for (var r = 0, a = n.count; r < a; r++)
                        n.setXYZ(r, 0, 0, 0);
                    var i = new Tt(),
                      o = new Tt(),
                      s = new Tt(),
                      l = new Tt(),
                      u = new Tt(),
                      c = new Tt(),
                      f = new Tt(),
                      d = new Tt();
                    if (e)
                      for (var h = 0, p = e.count; h < p; h += 3) {
                        var v = e.getX(h + 0),
                          m = e.getX(h + 1),
                          g = e.getX(h + 2);
                        i.fromBufferAttribute(t, v),
                          o.fromBufferAttribute(t, m),
                          s.fromBufferAttribute(t, g),
                          f.subVectors(s, o),
                          d.subVectors(i, o),
                          f.cross(d),
                          l.fromBufferAttribute(n, v),
                          u.fromBufferAttribute(n, m),
                          c.fromBufferAttribute(n, g),
                          l.add(f),
                          u.add(f),
                          c.add(f),
                          n.setXYZ(v, l.x, l.y, l.z),
                          n.setXYZ(m, u.x, u.y, u.z),
                          n.setXYZ(g, c.x, c.y, c.z);
                      }
                    else
                      for (var y = 0, _ = t.count; y < _; y += 3)
                        i.fromBufferAttribute(t, y + 0),
                          o.fromBufferAttribute(t, y + 1),
                          s.fromBufferAttribute(t, y + 2),
                          f.subVectors(s, o),
                          d.subVectors(i, o),
                          f.cross(d),
                          n.setXYZ(y + 0, f.x, f.y, f.z),
                          n.setXYZ(y + 1, f.x, f.y, f.z),
                          n.setXYZ(y + 2, f.x, f.y, f.z);
                    this.normalizeNormals(), (n.needsUpdate = !0);
                  }
                },
              },
              {
                key: "normalizeNormals",
                value: function () {
                  for (
                    var e = this.attributes.normal, t = 0, n = e.count;
                    t < n;
                    t++
                  )
                    sr.fromBufferAttribute(e, t),
                      sr.normalize(),
                      e.setXYZ(t, sr.x, sr.y, sr.z);
                },
              },
              {
                key: "toNonIndexed",
                value: function () {
                  function e(e, t) {
                    for (
                      var n = e.array,
                        r = e.itemSize,
                        a = e.normalized,
                        i = new n.constructor(t.length * r),
                        o = 0,
                        s = 0,
                        l = 0,
                        u = t.length;
                      l < u;
                      l++
                    ) {
                      o = e.isInterleavedBufferAttribute
                        ? t[l] * e.data.stride + e.offset
                        : t[l] * r;
                      for (var c = 0; c < r; c++) i[s++] = n[o++];
                    }
                    return new Zn(i, r, a);
                  }
                  if (null === this.index)
                    return (
                      console.warn(
                        "THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."
                      ),
                      this
                    );
                  var t = new n(),
                    r = this.index.array,
                    a = this.attributes;
                  for (var i in a) {
                    var o = e(a[i], r);
                    t.setAttribute(i, o);
                  }
                  var s = this.morphAttributes;
                  for (var l in s) {
                    for (
                      var u = [], c = s[l], f = 0, d = c.length;
                      f < d;
                      f++
                    ) {
                      var h = e(c[f], r);
                      u.push(h);
                    }
                    t.morphAttributes[l] = u;
                  }
                  t.morphTargetsRelative = this.morphTargetsRelative;
                  for (var p = this.groups, v = 0, m = p.length; v < m; v++) {
                    var g = p[v];
                    t.addGroup(g.start, g.count, g.materialIndex);
                  }
                  return t;
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = {
                    metadata: {
                      version: 4.6,
                      type: "BufferGeometry",
                      generator: "BufferGeometry.toJSON",
                    },
                  };
                  if (
                    ((e.uuid = this.uuid),
                    (e.type = this.type),
                    "" !== this.name && (e.name = this.name),
                    Object.keys(this.userData).length > 0 &&
                      (e.userData = this.userData),
                    void 0 !== this.parameters)
                  ) {
                    var t = this.parameters;
                    for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
                    return e;
                  }
                  e.data = { attributes: {} };
                  var r = this.index;
                  null !== r &&
                    (e.data.index = {
                      type: r.array.constructor.name,
                      array: Array.prototype.slice.call(r.array),
                    });
                  var a = this.attributes;
                  for (var i in a) {
                    var o = a[i];
                    e.data.attributes[i] = o.toJSON(e.data);
                  }
                  var s = {},
                    l = !1;
                  for (var u in this.morphAttributes) {
                    for (
                      var c = this.morphAttributes[u],
                        f = [],
                        d = 0,
                        h = c.length;
                      d < h;
                      d++
                    ) {
                      var p = c[d];
                      f.push(p.toJSON(e.data));
                    }
                    f.length > 0 && ((s[u] = f), (l = !0));
                  }
                  l &&
                    ((e.data.morphAttributes = s),
                    (e.data.morphTargetsRelative = this.morphTargetsRelative));
                  var v = this.groups;
                  v.length > 0 &&
                    (e.data.groups = JSON.parse(JSON.stringify(v)));
                  var m = this.boundingSphere;
                  return (
                    null !== m &&
                      (e.data.boundingSphere = {
                        center: m.center.toArray(),
                        radius: m.radius,
                      }),
                    e
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
              {
                key: "copy",
                value: function (e) {
                  (this.index = null),
                    (this.attributes = {}),
                    (this.morphAttributes = {}),
                    (this.groups = []),
                    (this.boundingBox = null),
                    (this.boundingSphere = null);
                  var t = {};
                  this.name = e.name;
                  var n = e.index;
                  null !== n && this.setIndex(n.clone(t));
                  var r = e.attributes;
                  for (var a in r) {
                    var i = r[a];
                    this.setAttribute(a, i.clone(t));
                  }
                  var o = e.morphAttributes;
                  for (var s in o) {
                    for (var l = [], u = o[s], c = 0, f = u.length; c < f; c++)
                      l.push(u[c].clone(t));
                    this.morphAttributes[s] = l;
                  }
                  this.morphTargetsRelative = e.morphTargetsRelative;
                  for (var d = e.groups, h = 0, p = d.length; h < p; h++) {
                    var v = d[h];
                    this.addGroup(v.start, v.count, v.materialIndex);
                  }
                  var m = e.boundingBox;
                  null !== m && (this.boundingBox = m.clone());
                  var g = e.boundingSphere;
                  return (
                    null !== g && (this.boundingSphere = g.clone()),
                    (this.drawRange.start = e.drawRange.start),
                    (this.drawRange.count = e.drawRange.count),
                    (this.userData = e.userData),
                    this
                  );
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.dispatchEvent({ type: "dispose" });
                },
              },
            ]),
            n
          );
        })(Be),
        ur = new tn(),
        cr = new en(),
        fr = new Xt(),
        dr = new Tt(),
        hr = new Tt(),
        pr = new Tt(),
        vr = new Tt(),
        mr = new Tt(),
        gr = new Tt(),
        yr = new Je(),
        _r = new Je(),
        br = new Je(),
        xr = new Tt(),
        Sr = new Tt(),
        Er = new Tt(),
        wr = new Tt(),
        Tr = new Tt(),
        Mr = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new lr(),
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Yn();
            return (
              w(this, n),
              ((e = t.call(this)).isMesh = !0),
              (e.type = "Mesh"),
              (e.geometry = r),
              (e.material = a),
              e.updateMorphTargets(),
              e
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e, t),
                    void 0 !== e.morphTargetInfluences &&
                      (this.morphTargetInfluences =
                        e.morphTargetInfluences.slice()),
                    void 0 !== e.morphTargetDictionary &&
                      (this.morphTargetDictionary = Object.assign(
                        {},
                        e.morphTargetDictionary
                      )),
                    (this.material = Array.isArray(e.material)
                      ? e.material.slice()
                      : e.material),
                    (this.geometry = e.geometry),
                    this
                  );
                },
              },
              {
                key: "updateMorphTargets",
                value: function () {
                  var e = this.geometry.morphAttributes,
                    t = Object.keys(e);
                  if (t.length > 0) {
                    var n = e[t[0]];
                    if (void 0 !== n) {
                      (this.morphTargetInfluences = []),
                        (this.morphTargetDictionary = {});
                      for (var r = 0, a = n.length; r < a; r++) {
                        var i = n[r].name || String(r);
                        this.morphTargetInfluences.push(0),
                          (this.morphTargetDictionary[i] = r);
                      }
                    }
                  }
                },
              },
              {
                key: "getVertexPosition",
                value: function (e, t) {
                  var n = this.geometry,
                    r = n.attributes.position,
                    a = n.morphAttributes.position,
                    i = n.morphTargetsRelative;
                  t.fromBufferAttribute(r, e);
                  var o = this.morphTargetInfluences;
                  if (a && o) {
                    gr.set(0, 0, 0);
                    for (var s = 0, l = a.length; s < l; s++) {
                      var u = o[s],
                        c = a[s];
                      0 !== u &&
                        (mr.fromBufferAttribute(c, e),
                        i
                          ? gr.addScaledVector(mr, u)
                          : gr.addScaledVector(mr.sub(t), u));
                    }
                    t.add(gr);
                  }
                  return t;
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.geometry,
                    r = this.material,
                    a = this.matrixWorld;
                  if (void 0 !== r) {
                    if (
                      (null === n.boundingSphere && n.computeBoundingSphere(),
                      fr.copy(n.boundingSphere),
                      fr.applyMatrix4(a),
                      cr.copy(e.ray).recast(e.near),
                      !1 === fr.containsPoint(cr.origin))
                    ) {
                      if (null === cr.intersectSphere(fr, dr)) return;
                      if (
                        cr.origin.distanceToSquared(dr) >
                        Math.pow(e.far - e.near, 2)
                      )
                        return;
                    }
                    ur.copy(a).invert(),
                      cr.copy(e.ray).applyMatrix4(ur),
                      (null !== n.boundingBox &&
                        !1 === cr.intersectsBox(n.boundingBox)) ||
                        this._computeIntersections(e, t, cr);
                  }
                },
              },
              {
                key: "_computeIntersections",
                value: function (e, t, n) {
                  var r,
                    a = this.geometry,
                    i = this.material,
                    o = a.index,
                    s = a.attributes.position,
                    l = a.attributes.uv,
                    u = a.attributes.uv1,
                    c = a.attributes.normal,
                    f = a.groups,
                    d = a.drawRange;
                  if (null !== o)
                    if (Array.isArray(i))
                      for (var h = 0, p = f.length; h < p; h++)
                        for (
                          var v = f[h],
                            m = i[v.materialIndex],
                            g = Math.max(v.start, d.start),
                            y = Math.min(
                              o.count,
                              Math.min(v.start + v.count, d.start + d.count)
                            );
                          g < y;
                          g += 3
                        ) {
                          (r = Ar(
                            this,
                            m,
                            e,
                            n,
                            l,
                            u,
                            c,
                            o.getX(g),
                            o.getX(g + 1),
                            o.getX(g + 2)
                          )) &&
                            ((r.faceIndex = Math.floor(g / 3)),
                            (r.face.materialIndex = v.materialIndex),
                            t.push(r));
                        }
                    else
                      for (
                        var _ = Math.max(0, d.start),
                          b = Math.min(o.count, d.start + d.count);
                        _ < b;
                        _ += 3
                      ) {
                        (r = Ar(
                          this,
                          i,
                          e,
                          n,
                          l,
                          u,
                          c,
                          o.getX(_),
                          o.getX(_ + 1),
                          o.getX(_ + 2)
                        )) && ((r.faceIndex = Math.floor(_ / 3)), t.push(r));
                      }
                  else if (void 0 !== s)
                    if (Array.isArray(i))
                      for (var x = 0, S = f.length; x < S; x++)
                        for (
                          var E = f[x],
                            w = i[E.materialIndex],
                            T = Math.max(E.start, d.start),
                            M = Math.min(
                              s.count,
                              Math.min(E.start + E.count, d.start + d.count)
                            );
                          T < M;
                          T += 3
                        ) {
                          (r = Ar(this, w, e, n, l, u, c, T, T + 1, T + 2)) &&
                            ((r.faceIndex = Math.floor(T / 3)),
                            (r.face.materialIndex = E.materialIndex),
                            t.push(r));
                        }
                    else
                      for (
                        var A = Math.max(0, d.start),
                          C = Math.min(s.count, d.start + d.count);
                        A < C;
                        A += 3
                      ) {
                        (r = Ar(this, i, e, n, l, u, c, A, A + 1, A + 2)) &&
                          ((r.faceIndex = Math.floor(A / 3)), t.push(r));
                      }
                },
              },
            ]),
            n
          );
        })(An);
      function Ar(e, t, n, r, a, i, o, s, l, u) {
        e.getVertexPosition(s, hr),
          e.getVertexPosition(l, pr),
          e.getVertexPosition(u, vr);
        var c = (function (e, t, n, r, a, i, o, s) {
          if (
            null ===
            (t.side === U
              ? r.intersectTriangle(o, i, a, !0, s)
              : r.intersectTriangle(a, i, o, t.side === P, s))
          )
            return null;
          Tr.copy(s), Tr.applyMatrix4(e.matrixWorld);
          var l = n.ray.origin.distanceTo(Tr);
          return l < n.near || l > n.far
            ? null
            : { distance: l, point: Tr.clone(), object: e };
        })(e, t, n, r, hr, pr, vr, wr);
        if (c) {
          a &&
            (yr.fromBufferAttribute(a, s),
            _r.fromBufferAttribute(a, l),
            br.fromBufferAttribute(a, u),
            (c.uv = zn.getInterpolation(wr, hr, pr, vr, yr, _r, br, new Je()))),
            i &&
              (yr.fromBufferAttribute(i, s),
              _r.fromBufferAttribute(i, l),
              br.fromBufferAttribute(i, u),
              (c.uv1 = zn.getInterpolation(
                wr,
                hr,
                pr,
                vr,
                yr,
                _r,
                br,
                new Je()
              )),
              (c.uv2 = c.uv1)),
            o &&
              (xr.fromBufferAttribute(o, s),
              Sr.fromBufferAttribute(o, l),
              Er.fromBufferAttribute(o, u),
              (c.normal = zn.getInterpolation(
                wr,
                hr,
                pr,
                vr,
                xr,
                Sr,
                Er,
                new Tt()
              )),
              c.normal.dot(r.direction) > 0 && c.normal.multiplyScalar(-1));
          var f = { a: s, b: l, c: u, normal: new Tt(), materialIndex: 0 };
          zn.getNormal(hr, pr, vr, f.normal), (c.face = f);
        }
        return c;
      }
      var Cr = (function (e) {
        y(n, e);
        var t = b(n);
        function n() {
          var e,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 1,
            a =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1,
            i =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 1,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 1,
            s =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : 1,
            l =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : 1;
          w(this, n),
            ((e = t.call(this)).type = "BoxGeometry"),
            (e.parameters = {
              width: r,
              height: a,
              depth: i,
              widthSegments: o,
              heightSegments: s,
              depthSegments: l,
            });
          var u = m(e);
          (o = Math.floor(o)), (s = Math.floor(s)), (l = Math.floor(l));
          var c = [],
            f = [],
            d = [],
            h = [],
            p = 0,
            v = 0;
          function g(e, t, n, r, a, i, o, s, l, m, g) {
            for (
              var y = i / l,
                _ = o / m,
                b = i / 2,
                x = o / 2,
                S = s / 2,
                E = l + 1,
                w = m + 1,
                T = 0,
                M = 0,
                A = new Tt(),
                C = 0;
              C < w;
              C++
            )
              for (var k = C * _ - x, R = 0; R < E; R++) {
                var P = R * y - b;
                (A[e] = P * r),
                  (A[t] = k * a),
                  (A[n] = S),
                  f.push(A.x, A.y, A.z),
                  (A[e] = 0),
                  (A[t] = 0),
                  (A[n] = s > 0 ? 1 : -1),
                  d.push(A.x, A.y, A.z),
                  h.push(R / l),
                  h.push(1 - C / m),
                  (T += 1);
              }
            for (var U = 0; U < m; U++)
              for (var L = 0; L < l; L++) {
                var D = p + L + E * U,
                  I = p + L + E * (U + 1),
                  O = p + (L + 1) + E * (U + 1),
                  N = p + (L + 1) + E * U;
                c.push(D, I, N), c.push(I, O, N), (M += 6);
              }
            u.addGroup(v, M, g), (v += M), (p += T);
          }
          return (
            g("z", "y", "x", -1, -1, i, a, r, l, s, 0),
            g("z", "y", "x", 1, -1, i, a, -r, l, s, 1),
            g("x", "z", "y", 1, 1, r, i, a, o, l, 2),
            g("x", "z", "y", 1, -1, r, i, -a, o, l, 3),
            g("x", "y", "z", 1, -1, r, a, i, o, s, 4),
            g("x", "y", "z", -1, -1, r, a, -i, o, s, 5),
            e.setIndex(c),
            e.setAttribute("position", new er(f, 3)),
            e.setAttribute("normal", new er(d, 3)),
            e.setAttribute("uv", new er(h, 2)),
            e
          );
        }
        return (
          M(
            n,
            [
              {
                key: "copy",
                value: function (e) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e),
                    (this.parameters = Object.assign({}, e.parameters)),
                    this
                  );
                },
              },
            ],
            [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.width,
                    e.height,
                    e.depth,
                    e.widthSegments,
                    e.heightSegments,
                    e.depthSegments
                  );
                },
              },
            ]
          ),
          n
        );
      })(lr);
      function kr(e) {
        var t = {};
        for (var n in e)
          for (var r in ((t[n] = {}), e[n])) {
            var a = e[n][r];
            a &&
            (a.isColor ||
              a.isMatrix3 ||
              a.isMatrix4 ||
              a.isVector2 ||
              a.isVector3 ||
              a.isVector4 ||
              a.isTexture ||
              a.isQuaternion)
              ? a.isRenderTargetTexture
                ? (console.warn(
                    "UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."
                  ),
                  (t[n][r] = null))
                : (t[n][r] = a.clone())
              : Array.isArray(a)
              ? (t[n][r] = a.slice())
              : (t[n][r] = a);
          }
        return t;
      }
      function Rr(e) {
        for (var t = {}, n = 0; n < e.length; n++) {
          var r = kr(e[n]);
          for (var a in r) t[a] = r[a];
        }
        return t;
      }
      function Pr(e) {
        return null === e.getRenderTarget()
          ? e.outputColorSpace
          : ct.workingColorSpace;
      }
      var Ur = { clone: kr, merge: Rr },
        Lr = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e) {
            var r;
            return (
              w(this, n),
              ((r = t.call(this)).isShaderMaterial = !0),
              (r.type = "ShaderMaterial"),
              (r.defines = {}),
              (r.uniforms = {}),
              (r.uniformsGroups = []),
              (r.vertexShader =
                "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"),
              (r.fragmentShader =
                "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}"),
              (r.linewidth = 1),
              (r.wireframe = !1),
              (r.wireframeLinewidth = 1),
              (r.fog = !1),
              (r.lights = !1),
              (r.clipping = !1),
              (r.forceSinglePass = !0),
              (r.extensions = {
                derivatives: !1,
                fragDepth: !1,
                drawBuffers: !1,
                shaderTextureLOD: !1,
              }),
              (r.defaultAttributeValues = {
                color: [1, 1, 1],
                uv: [0, 0],
                uv1: [0, 0],
              }),
              (r.index0AttributeName = void 0),
              (r.uniformsNeedUpdate = !1),
              (r.glslVersion = null),
              void 0 !== e && r.setValues(e),
              r
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e),
                    (this.fragmentShader = e.fragmentShader),
                    (this.vertexShader = e.vertexShader),
                    (this.uniforms = kr(e.uniforms)),
                    (this.uniformsGroups = (function (e) {
                      for (var t = [], n = 0; n < e.length; n++)
                        t.push(e[n].clone());
                      return t;
                    })(e.uniformsGroups)),
                    (this.defines = Object.assign({}, e.defines)),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    (this.fog = e.fog),
                    (this.lights = e.lights),
                    (this.clipping = e.clipping),
                    (this.extensions = Object.assign({}, e.extensions)),
                    (this.glslVersion = e.glslVersion),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = v(p(n.prototype), "toJSON", this).call(this, e);
                  for (var r in ((t.glslVersion = this.glslVersion),
                  (t.uniforms = {}),
                  this.uniforms)) {
                    var a = this.uniforms[r].value;
                    a && a.isTexture
                      ? (t.uniforms[r] = { type: "t", value: a.toJSON(e).uuid })
                      : a && a.isColor
                      ? (t.uniforms[r] = { type: "c", value: a.getHex() })
                      : a && a.isVector2
                      ? (t.uniforms[r] = { type: "v2", value: a.toArray() })
                      : a && a.isVector3
                      ? (t.uniforms[r] = { type: "v3", value: a.toArray() })
                      : a && a.isVector4
                      ? (t.uniforms[r] = { type: "v4", value: a.toArray() })
                      : a && a.isMatrix3
                      ? (t.uniforms[r] = { type: "m3", value: a.toArray() })
                      : a && a.isMatrix4
                      ? (t.uniforms[r] = { type: "m4", value: a.toArray() })
                      : (t.uniforms[r] = { value: a });
                  }
                  Object.keys(this.defines).length > 0 &&
                    (t.defines = this.defines),
                    (t.vertexShader = this.vertexShader),
                    (t.fragmentShader = this.fragmentShader),
                    (t.lights = this.lights),
                    (t.clipping = this.clipping);
                  var i = {};
                  for (var o in this.extensions)
                    !0 === this.extensions[o] && (i[o] = !0);
                  return Object.keys(i).length > 0 && (t.extensions = i), t;
                },
              },
            ]),
            n
          );
        })(qn),
        Dr = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e;
            return (
              w(this, n),
              ((e = t.call(this)).isCamera = !0),
              (e.type = "Camera"),
              (e.matrixWorldInverse = new tn()),
              (e.projectionMatrix = new tn()),
              (e.projectionMatrixInverse = new tn()),
              (e.coordinateSystem = Fe),
              e
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e, t),
                    this.matrixWorldInverse.copy(e.matrixWorldInverse),
                    this.projectionMatrix.copy(e.projectionMatrix),
                    this.projectionMatrixInverse.copy(
                      e.projectionMatrixInverse
                    ),
                    (this.coordinateSystem = e.coordinateSystem),
                    this
                  );
                },
              },
              {
                key: "getWorldDirection",
                value: function (e) {
                  return v(p(n.prototype), "getWorldDirection", this)
                    .call(this, e)
                    .negate();
                },
              },
              {
                key: "updateMatrixWorld",
                value: function (e) {
                  v(p(n.prototype), "updateMatrixWorld", this).call(this, e),
                    this.matrixWorldInverse.copy(this.matrixWorld).invert();
                },
              },
              {
                key: "updateWorldMatrix",
                value: function (e, t) {
                  v(p(n.prototype), "updateWorldMatrix", this).call(this, e, t),
                    this.matrixWorldInverse.copy(this.matrixWorld).invert();
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            n
          );
        })(An),
        Ir = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 50,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0.1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2e3;
            return (
              w(this, n),
              ((e = t.call(this)).isPerspectiveCamera = !0),
              (e.type = "PerspectiveCamera"),
              (e.fov = r),
              (e.zoom = 1),
              (e.near = i),
              (e.far = o),
              (e.focus = 10),
              (e.aspect = a),
              (e.view = null),
              (e.filmGauge = 35),
              (e.filmOffset = 0),
              e.updateProjectionMatrix(),
              e
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e, t),
                    (this.fov = e.fov),
                    (this.zoom = e.zoom),
                    (this.near = e.near),
                    (this.far = e.far),
                    (this.focus = e.focus),
                    (this.aspect = e.aspect),
                    (this.view =
                      null === e.view ? null : Object.assign({}, e.view)),
                    (this.filmGauge = e.filmGauge),
                    (this.filmOffset = e.filmOffset),
                    this
                  );
                },
              },
              {
                key: "setFocalLength",
                value: function (e) {
                  var t = (0.5 * this.getFilmHeight()) / e;
                  (this.fov = 2 * Ve * Math.atan(t)),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "getFocalLength",
                value: function () {
                  var e = Math.tan(0.5 * Ge * this.fov);
                  return (0.5 * this.getFilmHeight()) / e;
                },
              },
              {
                key: "getEffectiveFOV",
                value: function () {
                  return (
                    2 *
                    Ve *
                    Math.atan(Math.tan(0.5 * Ge * this.fov) / this.zoom)
                  );
                },
              },
              {
                key: "getFilmWidth",
                value: function () {
                  return this.filmGauge * Math.min(this.aspect, 1);
                },
              },
              {
                key: "getFilmHeight",
                value: function () {
                  return this.filmGauge / Math.max(this.aspect, 1);
                },
              },
              {
                key: "setViewOffset",
                value: function (e, t, n, r, a, i) {
                  (this.aspect = e / t),
                    null === this.view &&
                      (this.view = {
                        enabled: !0,
                        fullWidth: 1,
                        fullHeight: 1,
                        offsetX: 0,
                        offsetY: 0,
                        width: 1,
                        height: 1,
                      }),
                    (this.view.enabled = !0),
                    (this.view.fullWidth = e),
                    (this.view.fullHeight = t),
                    (this.view.offsetX = n),
                    (this.view.offsetY = r),
                    (this.view.width = a),
                    (this.view.height = i),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "clearViewOffset",
                value: function () {
                  null !== this.view && (this.view.enabled = !1),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "updateProjectionMatrix",
                value: function () {
                  var e = this.near,
                    t = (e * Math.tan(0.5 * Ge * this.fov)) / this.zoom,
                    n = 2 * t,
                    r = this.aspect * n,
                    a = -0.5 * r,
                    i = this.view;
                  if (null !== this.view && this.view.enabled) {
                    var o = i.fullWidth,
                      s = i.fullHeight;
                    (a += (i.offsetX * r) / o),
                      (t -= (i.offsetY * n) / s),
                      (r *= i.width / o),
                      (n *= i.height / s);
                  }
                  var l = this.filmOffset;
                  0 !== l && (a += (e * l) / this.getFilmWidth()),
                    this.projectionMatrix.makePerspective(
                      a,
                      a + r,
                      t,
                      t - n,
                      e,
                      this.far,
                      this.coordinateSystem
                    ),
                    this.projectionMatrixInverse
                      .copy(this.projectionMatrix)
                      .invert();
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = v(p(n.prototype), "toJSON", this).call(this, e);
                  return (
                    (t.object.fov = this.fov),
                    (t.object.zoom = this.zoom),
                    (t.object.near = this.near),
                    (t.object.far = this.far),
                    (t.object.focus = this.focus),
                    (t.object.aspect = this.aspect),
                    null !== this.view &&
                      (t.object.view = Object.assign({}, this.view)),
                    (t.object.filmGauge = this.filmGauge),
                    (t.object.filmOffset = this.filmOffset),
                    t
                  );
                },
              },
            ]),
            n
          );
        })(Dr),
        Or = -90,
        Nr = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e, r, a) {
            var i;
            w(this, n),
              ((i = t.call(this)).type = "CubeCamera"),
              (i.renderTarget = a),
              (i.coordinateSystem = null),
              (i.activeMipmapLevel = 0);
            var o = new Ir(Or, 1, e, r);
            (o.layers = i.layers), i.add(o);
            var s = new Ir(Or, 1, e, r);
            (s.layers = i.layers), i.add(s);
            var l = new Ir(Or, 1, e, r);
            (l.layers = i.layers), i.add(l);
            var u = new Ir(Or, 1, e, r);
            (u.layers = i.layers), i.add(u);
            var c = new Ir(Or, 1, e, r);
            (c.layers = i.layers), i.add(c);
            var f = new Ir(Or, 1, e, r);
            return (f.layers = i.layers), i.add(f), i;
          }
          return (
            M(n, [
              {
                key: "updateCoordinateSystem",
                value: function () {
                  var e,
                    t = this.coordinateSystem,
                    n = this.children.concat(),
                    r = o(n, 6),
                    a = r[0],
                    i = r[1],
                    s = r[2],
                    l = r[3],
                    u = r[4],
                    c = r[5],
                    f = h(n);
                  try {
                    for (f.s(); !(e = f.n()).done; ) {
                      var d = e.value;
                      this.remove(d);
                    }
                  } catch (g) {
                    f.e(g);
                  } finally {
                    f.f();
                  }
                  if (t === Fe)
                    a.up.set(0, 1, 0),
                      a.lookAt(1, 0, 0),
                      i.up.set(0, 1, 0),
                      i.lookAt(-1, 0, 0),
                      s.up.set(0, 0, -1),
                      s.lookAt(0, 1, 0),
                      l.up.set(0, 0, 1),
                      l.lookAt(0, -1, 0),
                      u.up.set(0, 1, 0),
                      u.lookAt(0, 0, 1),
                      c.up.set(0, 1, 0),
                      c.lookAt(0, 0, -1);
                  else {
                    if (t !== ze)
                      throw new Error(
                        "THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: " +
                          t
                      );
                    a.up.set(0, -1, 0),
                      a.lookAt(-1, 0, 0),
                      i.up.set(0, -1, 0),
                      i.lookAt(1, 0, 0),
                      s.up.set(0, 0, 1),
                      s.lookAt(0, 1, 0),
                      l.up.set(0, 0, -1),
                      l.lookAt(0, -1, 0),
                      u.up.set(0, -1, 0),
                      u.lookAt(0, 0, 1),
                      c.up.set(0, -1, 0),
                      c.lookAt(0, 0, -1);
                  }
                  var p,
                    v = h(n);
                  try {
                    for (v.s(); !(p = v.n()).done; ) {
                      var m = p.value;
                      this.add(m), m.updateMatrixWorld();
                    }
                  } catch (g) {
                    v.e(g);
                  } finally {
                    v.f();
                  }
                },
              },
              {
                key: "update",
                value: function (e, t) {
                  null === this.parent && this.updateMatrixWorld();
                  var n = this.renderTarget,
                    r = this.activeMipmapLevel;
                  this.coordinateSystem !== e.coordinateSystem &&
                    ((this.coordinateSystem = e.coordinateSystem),
                    this.updateCoordinateSystem());
                  var a = o(this.children, 6),
                    i = a[0],
                    s = a[1],
                    l = a[2],
                    u = a[3],
                    c = a[4],
                    f = a[5],
                    d = e.getRenderTarget(),
                    h = e.getActiveCubeFace(),
                    p = e.getActiveMipmapLevel(),
                    v = e.xr.enabled;
                  e.xr.enabled = !1;
                  var m = n.texture.generateMipmaps;
                  (n.texture.generateMipmaps = !1),
                    e.setRenderTarget(n, 0, r),
                    e.render(t, i),
                    e.setRenderTarget(n, 1, r),
                    e.render(t, s),
                    e.setRenderTarget(n, 2, r),
                    e.render(t, l),
                    e.setRenderTarget(n, 3, r),
                    e.render(t, u),
                    e.setRenderTarget(n, 4, r),
                    e.render(t, c),
                    (n.texture.generateMipmaps = m),
                    e.setRenderTarget(n, 5, r),
                    e.render(t, f),
                    e.setRenderTarget(d, h, p),
                    (e.xr.enabled = v),
                    (n.texture.needsPMREMUpdate = !0);
                },
              },
            ]),
            n
          );
        })(An),
        Fr = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e, r, a, i, o, s, l, u, c, f) {
            var d;
            return (
              w(this, n),
              (e = void 0 !== e ? e : []),
              (r = void 0 !== r ? r : V),
              ((d = t.call(this, e, r, a, i, o, s, l, u, c, f)).isCubeTexture =
                !0),
              (d.flipY = !1),
              d
            );
          }
          return (
            M(n, [
              {
                key: "images",
                get: function () {
                  return this.image;
                },
                set: function (e) {
                  this.image = e;
                },
              },
            ]),
            n
          );
        })(yt),
        zr = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
            w(this, n),
              ((e = t.call(this, r, r, a)).isWebGLCubeRenderTarget = !0);
            var i = { width: r, height: r, depth: 1 },
              o = [i, i, i, i, i, i];
            return (
              void 0 !== a.encoding &&
                (at(
                  "THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."
                ),
                (a.colorSpace = a.encoding === Ee ? Me : Te)),
              (e.texture = new Fr(
                o,
                a.mapping,
                a.wrapS,
                a.wrapT,
                a.magFilter,
                a.minFilter,
                a.format,
                a.type,
                a.anisotropy,
                a.colorSpace
              )),
              (e.texture.isRenderTargetTexture = !0),
              (e.texture.generateMipmaps =
                void 0 !== a.generateMipmaps && a.generateMipmaps),
              (e.texture.minFilter = void 0 !== a.minFilter ? a.minFilter : ee),
              e
            );
          }
          return (
            M(n, [
              {
                key: "fromEquirectangularTexture",
                value: function (e, t) {
                  (this.texture.type = t.type),
                    (this.texture.colorSpace = t.colorSpace),
                    (this.texture.generateMipmaps = t.generateMipmaps),
                    (this.texture.minFilter = t.minFilter),
                    (this.texture.magFilter = t.magFilter);
                  var n = { tEquirect: { value: null } },
                    r =
                      "\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",
                    a =
                      "\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",
                    i = new Cr(5, 5, 5),
                    o = new Lr({
                      name: "CubemapFromEquirect",
                      uniforms: kr(n),
                      vertexShader: r,
                      fragmentShader: a,
                      side: U,
                      blending: 0,
                    });
                  o.uniforms.tEquirect.value = t;
                  var s = new Mr(i, o),
                    l = t.minFilter;
                  return (
                    t.minFilter === te && (t.minFilter = ee),
                    new Nr(1, 10, this).update(e, s),
                    (t.minFilter = l),
                    s.geometry.dispose(),
                    s.material.dispose(),
                    this
                  );
                },
              },
              {
                key: "clear",
                value: function (e, t, n, r) {
                  for (var a = e.getRenderTarget(), i = 0; i < 6; i++)
                    e.setRenderTarget(this, i), e.clear(t, n, r);
                  e.setRenderTarget(a);
                },
              },
            ]),
            n
          );
        })(xt),
        Br = new Tt(),
        Hr = new Tt(),
        Gr = new Qe(),
        Vr = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Tt(1, 0, 0),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            w(this, e),
              (this.isPlane = !0),
              (this.normal = t),
              (this.constant = n);
          }
          return (
            M(e, [
              {
                key: "set",
                value: function (e, t) {
                  return this.normal.copy(e), (this.constant = t), this;
                },
              },
              {
                key: "setComponents",
                value: function (e, t, n, r) {
                  return this.normal.set(e, t, n), (this.constant = r), this;
                },
              },
              {
                key: "setFromNormalAndCoplanarPoint",
                value: function (e, t) {
                  return (
                    this.normal.copy(e),
                    (this.constant = -t.dot(this.normal)),
                    this
                  );
                },
              },
              {
                key: "setFromCoplanarPoints",
                value: function (e, t, n) {
                  var r = Br.subVectors(n, t)
                    .cross(Hr.subVectors(e, t))
                    .normalize();
                  return this.setFromNormalAndCoplanarPoint(r, e), this;
                },
              },
              {
                key: "copy",
                value: function (e) {
                  return (
                    this.normal.copy(e.normal),
                    (this.constant = e.constant),
                    this
                  );
                },
              },
              {
                key: "normalize",
                value: function () {
                  var e = 1 / this.normal.length();
                  return (
                    this.normal.multiplyScalar(e), (this.constant *= e), this
                  );
                },
              },
              {
                key: "negate",
                value: function () {
                  return (this.constant *= -1), this.normal.negate(), this;
                },
              },
              {
                key: "distanceToPoint",
                value: function (e) {
                  return this.normal.dot(e) + this.constant;
                },
              },
              {
                key: "distanceToSphere",
                value: function (e) {
                  return this.distanceToPoint(e.center) - e.radius;
                },
              },
              {
                key: "projectPoint",
                value: function (e, t) {
                  return t
                    .copy(e)
                    .addScaledVector(this.normal, -this.distanceToPoint(e));
                },
              },
              {
                key: "intersectLine",
                value: function (e, t) {
                  var n = e.delta(Br),
                    r = this.normal.dot(n);
                  if (0 === r)
                    return 0 === this.distanceToPoint(e.start)
                      ? t.copy(e.start)
                      : null;
                  var a = -(e.start.dot(this.normal) + this.constant) / r;
                  return a < 0 || a > 1
                    ? null
                    : t.copy(e.start).addScaledVector(n, a);
                },
              },
              {
                key: "intersectsLine",
                value: function (e) {
                  var t = this.distanceToPoint(e.start),
                    n = this.distanceToPoint(e.end);
                  return (t < 0 && n > 0) || (n < 0 && t > 0);
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  return e.intersectsPlane(this);
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  return e.intersectsPlane(this);
                },
              },
              {
                key: "coplanarPoint",
                value: function (e) {
                  return e.copy(this.normal).multiplyScalar(-this.constant);
                },
              },
              {
                key: "applyMatrix4",
                value: function (e, t) {
                  var n = t || Gr.getNormalMatrix(e),
                    r = this.coplanarPoint(Br).applyMatrix4(e),
                    a = this.normal.applyMatrix3(n).normalize();
                  return (this.constant = -r.dot(a)), this;
                },
              },
              {
                key: "translate",
                value: function (e) {
                  return (this.constant -= e.dot(this.normal)), this;
                },
              },
              {
                key: "equals",
                value: function (e) {
                  return (
                    e.normal.equals(this.normal) && e.constant === this.constant
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })(),
        Wr = new Xt(),
        jr = new Tt(),
        Xr = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new Vr(),
              n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Vr(),
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : new Vr(),
              a =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : new Vr(),
              i =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : new Vr(),
              o =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : new Vr();
            w(this, e), (this.planes = [t, n, r, a, i, o]);
          }
          return (
            M(e, [
              {
                key: "set",
                value: function (e, t, n, r, a, i) {
                  var o = this.planes;
                  return (
                    o[0].copy(e),
                    o[1].copy(t),
                    o[2].copy(n),
                    o[3].copy(r),
                    o[4].copy(a),
                    o[5].copy(i),
                    this
                  );
                },
              },
              {
                key: "copy",
                value: function (e) {
                  for (var t = this.planes, n = 0; n < 6; n++)
                    t[n].copy(e.planes[n]);
                  return this;
                },
              },
              {
                key: "setFromProjectionMatrix",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : Fe,
                    n = this.planes,
                    r = e.elements,
                    a = r[0],
                    i = r[1],
                    o = r[2],
                    s = r[3],
                    l = r[4],
                    u = r[5],
                    c = r[6],
                    f = r[7],
                    d = r[8],
                    h = r[9],
                    p = r[10],
                    v = r[11],
                    m = r[12],
                    g = r[13],
                    y = r[14],
                    _ = r[15];
                  if (
                    (n[0].setComponents(s - a, f - l, v - d, _ - m).normalize(),
                    n[1].setComponents(s + a, f + l, v + d, _ + m).normalize(),
                    n[2].setComponents(s + i, f + u, v + h, _ + g).normalize(),
                    n[3].setComponents(s - i, f - u, v - h, _ - g).normalize(),
                    n[4].setComponents(s - o, f - c, v - p, _ - y).normalize(),
                    t === Fe)
                  )
                    n[5].setComponents(s + o, f + c, v + p, _ + y).normalize();
                  else {
                    if (t !== ze)
                      throw new Error(
                        "THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: " +
                          t
                      );
                    n[5].setComponents(o, c, p, y).normalize();
                  }
                  return this;
                },
              },
              {
                key: "intersectsObject",
                value: function (e) {
                  if (void 0 !== e.boundingSphere)
                    null === e.boundingSphere && e.computeBoundingSphere(),
                      Wr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);
                  else {
                    var t = e.geometry;
                    null === t.boundingSphere && t.computeBoundingSphere(),
                      Wr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld);
                  }
                  return this.intersectsSphere(Wr);
                },
              },
              {
                key: "intersectsSprite",
                value: function (e) {
                  return (
                    Wr.center.set(0, 0, 0),
                    (Wr.radius = 0.7071067811865476),
                    Wr.applyMatrix4(e.matrixWorld),
                    this.intersectsSphere(Wr)
                  );
                },
              },
              {
                key: "intersectsSphere",
                value: function (e) {
                  for (
                    var t = this.planes, n = e.center, r = -e.radius, a = 0;
                    a < 6;
                    a++
                  ) {
                    if (t[a].distanceToPoint(n) < r) return !1;
                  }
                  return !0;
                },
              },
              {
                key: "intersectsBox",
                value: function (e) {
                  for (var t = this.planes, n = 0; n < 6; n++) {
                    var r = t[n];
                    if (
                      ((jr.x = r.normal.x > 0 ? e.max.x : e.min.x),
                      (jr.y = r.normal.y > 0 ? e.max.y : e.min.y),
                      (jr.z = r.normal.z > 0 ? e.max.z : e.min.z),
                      r.distanceToPoint(jr) < 0)
                    )
                      return !1;
                  }
                  return !0;
                },
              },
              {
                key: "containsPoint",
                value: function (e) {
                  for (var t = this.planes, n = 0; n < 6; n++)
                    if (t[n].distanceToPoint(e) < 0) return !1;
                  return !0;
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            e
          );
        })();
      function qr() {
        var e = null,
          t = !1,
          n = null,
          r = null;
        function a(t, i) {
          n(t, i), (r = e.requestAnimationFrame(a));
        }
        return {
          start: function () {
            !0 !== t &&
              null !== n &&
              ((r = e.requestAnimationFrame(a)), (t = !0));
          },
          stop: function () {
            e.cancelAnimationFrame(r), (t = !1);
          },
          setAnimationLoop: function (e) {
            n = e;
          },
          setContext: function (t) {
            e = t;
          },
        };
      }
      function Yr(e, t) {
        var n = t.isWebGL2,
          r = new WeakMap();
        return {
          get: function (e) {
            return e.isInterleavedBufferAttribute && (e = e.data), r.get(e);
          },
          remove: function (t) {
            t.isInterleavedBufferAttribute && (t = t.data);
            var n = r.get(t);
            n && (e.deleteBuffer(n.buffer), r.delete(t));
          },
          update: function (t, a) {
            if (t.isGLBufferAttribute) {
              var i = r.get(t);
              (!i || i.version < t.version) &&
                r.set(t, {
                  buffer: t.buffer,
                  type: t.type,
                  bytesPerElement: t.elementSize,
                  version: t.version,
                });
            } else {
              t.isInterleavedBufferAttribute && (t = t.data);
              var o = r.get(t);
              void 0 === o
                ? r.set(
                    t,
                    (function (t, r) {
                      var a,
                        i = t.array,
                        o = t.usage,
                        s = e.createBuffer();
                      if (
                        (e.bindBuffer(r, s),
                        e.bufferData(r, i, o),
                        t.onUploadCallback(),
                        i instanceof Float32Array)
                      )
                        a = e.FLOAT;
                      else if (i instanceof Uint16Array)
                        if (t.isFloat16BufferAttribute) {
                          if (!n)
                            throw new Error(
                              "THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."
                            );
                          a = e.HALF_FLOAT;
                        } else a = e.UNSIGNED_SHORT;
                      else if (i instanceof Int16Array) a = e.SHORT;
                      else if (i instanceof Uint32Array) a = e.UNSIGNED_INT;
                      else if (i instanceof Int32Array) a = e.INT;
                      else if (i instanceof Int8Array) a = e.BYTE;
                      else if (i instanceof Uint8Array) a = e.UNSIGNED_BYTE;
                      else {
                        if (!(i instanceof Uint8ClampedArray))
                          throw new Error(
                            "THREE.WebGLAttributes: Unsupported buffer data format: " +
                              i
                          );
                        a = e.UNSIGNED_BYTE;
                      }
                      return {
                        buffer: s,
                        type: a,
                        bytesPerElement: i.BYTES_PER_ELEMENT,
                        version: t.version,
                      };
                    })(t, a)
                  )
                : o.version < t.version &&
                  (!(function (t, r, a) {
                    var i = r.array,
                      o = r.updateRange;
                    e.bindBuffer(a, t),
                      -1 === o.count
                        ? e.bufferSubData(a, 0, i)
                        : (n
                            ? e.bufferSubData(
                                a,
                                o.offset * i.BYTES_PER_ELEMENT,
                                i,
                                o.offset,
                                o.count
                              )
                            : e.bufferSubData(
                                a,
                                o.offset * i.BYTES_PER_ELEMENT,
                                i.subarray(o.offset, o.offset + o.count)
                              ),
                          (o.count = -1)),
                      r.onUploadCallback();
                  })(o.buffer, t, a),
                  (o.version = t.version));
            }
          },
        };
      }
      var Kr = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            w(this, n),
              ((e = t.call(this)).type = "PlaneGeometry"),
              (e.parameters = {
                width: r,
                height: a,
                widthSegments: i,
                heightSegments: o,
              });
            for (
              var s = r / 2,
                l = a / 2,
                u = Math.floor(i),
                c = Math.floor(o),
                f = u + 1,
                d = c + 1,
                h = r / u,
                p = a / c,
                v = [],
                m = [],
                g = [],
                y = [],
                _ = 0;
              _ < d;
              _++
            )
              for (var b = _ * p - l, x = 0; x < f; x++) {
                var S = x * h - s;
                m.push(S, -b, 0),
                  g.push(0, 0, 1),
                  y.push(x / u),
                  y.push(1 - _ / c);
              }
            for (var E = 0; E < c; E++)
              for (var T = 0; T < u; T++) {
                var M = T + f * E,
                  A = T + f * (E + 1),
                  C = T + 1 + f * (E + 1),
                  k = T + 1 + f * E;
                v.push(M, A, k), v.push(A, C, k);
              }
            return (
              e.setIndex(v),
              e.setAttribute("position", new er(m, 3)),
              e.setAttribute("normal", new er(g, 3)),
              e.setAttribute("uv", new er(y, 2)),
              e
            );
          }
          return (
            M(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      v(p(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(
                      e.width,
                      e.height,
                      e.widthSegments,
                      e.heightSegments
                    );
                  },
                },
              ]
            ),
            n
          );
        })(lr),
        $r = {
          alphahash_fragment:
            "#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",
          alphahash_pars_fragment:
            "#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",
          alphamap_fragment:
            "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",
          alphamap_pars_fragment:
            "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
          alphatest_fragment:
            "#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",
          alphatest_pars_fragment:
            "#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",
          aomap_fragment:
            "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",
          aomap_pars_fragment:
            "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
          begin_vertex:
            "vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",
          beginnormal_vertex:
            "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
          bsdfs:
            "float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",
          iridescence_fragment:
            "#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",
          bumpmap_pars_fragment:
            "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
          clipping_planes_fragment:
            "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
          clipping_planes_pars_fragment:
            "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
          clipping_planes_pars_vertex:
            "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",
          clipping_planes_vertex:
            "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",
          color_fragment:
            "#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",
          color_pars_fragment:
            "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",
          color_pars_vertex:
            "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",
          color_vertex:
            "#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",
          common:
            "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",
          cube_uv_reflection_fragment:
            "#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",
          defaultnormal_vertex:
            "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
          displacementmap_pars_vertex:
            "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
          displacementmap_vertex:
            "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",
          emissivemap_fragment:
            "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
          emissivemap_pars_fragment:
            "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
          colorspace_fragment:
            "gl_FragColor = linearToOutputTexel( gl_FragColor );",
          colorspace_pars_fragment:
            "\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n\tvec3( 0.8224621, 0.177538, 0.0 ),\n\tvec3( 0.0331941, 0.9668058, 0.0 ),\n\tvec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.2249401, - 0.2249404, 0.0 ),\n\tvec3( - 0.0420569, 1.0420571, 0.0 ),\n\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn sRGBTransferOETF( value );\n}",
          envmap_fragment:
            "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
          envmap_common_pars_fragment:
            "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
          envmap_pars_fragment:
            "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
          envmap_pars_vertex:
            "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
          envmap_physical_pars_fragment:
            "#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",
          envmap_vertex:
            "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
          fog_vertex: "#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",
          fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",
          fog_fragment:
            "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
          fog_pars_fragment:
            "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
          gradientmap_pars_fragment:
            "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",
          lightmap_fragment:
            "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",
          lightmap_pars_fragment:
            "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
          lights_lambert_fragment:
            "LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",
          lights_lambert_pars_fragment:
            "varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",
          lights_pars_begin:
            "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( LEGACY_LIGHTS )\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#else\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",
          lights_toon_fragment:
            "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",
          lights_toon_pars_fragment:
            "varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",
          lights_phong_fragment:
            "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
          lights_phong_pars_fragment:
            "varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",
          lights_physical_fragment:
            "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tanisotropyV /= material.anisotropy;\n\tmaterial.anisotropy = saturate( material.anisotropy );\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\n#endif",
          lights_physical_pars_fragment:
            "struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
          lights_fragment_begin:
            "\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
          lights_fragment_maps:
            "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",
          lights_fragment_end:
            "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",
          logdepthbuf_fragment:
            "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
          logdepthbuf_pars_fragment:
            "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
          logdepthbuf_pars_vertex:
            "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
          logdepthbuf_vertex:
            "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",
          map_fragment:
            "#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",
          map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
          map_particle_fragment:
            "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
          map_particle_pars_fragment:
            "#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
          metalnessmap_fragment:
            "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
          metalnessmap_pars_fragment:
            "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
          morphcolor_vertex:
            "#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",
          morphnormal_vertex:
            "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",
          morphtarget_pars_vertex:
            "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",
          morphtarget_vertex:
            "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",
          normal_fragment_begin:
            "float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",
          normal_fragment_maps:
            "#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",
          normal_pars_fragment:
            "#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",
          normal_pars_vertex:
            "#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",
          normal_vertex:
            "#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",
          normalmap_pars_fragment:
            "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",
          clearcoat_normal_fragment_begin:
            "#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",
          clearcoat_normal_fragment_maps:
            "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",
          clearcoat_pars_fragment:
            "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",
          iridescence_pars_fragment:
            "#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",
          opaque_fragment:
            "#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",
          packing:
            "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",
          premultiplied_alpha_fragment:
            "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
          project_vertex:
            "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
          dithering_fragment:
            "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
          dithering_pars_fragment:
            "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
          roughnessmap_fragment:
            "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
          roughnessmap_pars_fragment:
            "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
          shadowmap_pars_fragment:
            "#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
          shadowmap_pars_vertex:
            "#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
          shadowmap_vertex:
            "#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",
          shadowmask_pars_fragment:
            "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
          skinbase_vertex:
            "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
          skinning_pars_vertex:
            "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",
          skinning_vertex:
            "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
          skinnormal_vertex:
            "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
          specularmap_fragment:
            "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
          specularmap_pars_fragment:
            "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
          tonemapping_fragment:
            "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
          tonemapping_pars_fragment:
            "#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
          transmission_fragment:
            "#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",
          transmission_pars_fragment:
            "#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",
          uv_pars_fragment:
            "#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",
          uv_pars_vertex:
            "#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",
          uv_vertex:
            "#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",
          worldpos_vertex:
            "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
          background_vert:
            "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
          background_frag:
            "uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",
          backgroundCube_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
          backgroundCube_frag:
            "#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",
          cube_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
          cube_frag:
            "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",
          depth_vert:
            "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
          depth_frag:
            "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
          distanceRGBA_vert:
            "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
          distanceRGBA_frag:
            "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
          equirect_vert:
            "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
          equirect_frag:
            "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",
          linedashed_vert:
            "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
          linedashed_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
          meshbasic_vert:
            "#include <common>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
          meshbasic_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshlambert_vert:
            "#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          meshlambert_frag:
            "#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshmatcap_vert:
            "#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
          meshmatcap_frag:
            "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshnormal_vert:
            "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
          meshnormal_frag:
            "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",
          meshphong_vert:
            "#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          meshphong_frag:
            "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshphysical_vert:
            "#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",
          meshphysical_frag:
            "#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          meshtoon_vert:
            "#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          meshtoon_frag:
            "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
          points_vert:
            "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
          points_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
          shadow_vert:
            "#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
          shadow_frag:
            "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",
          sprite_vert:
            "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
          sprite_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",
        },
        Zr = {
          common: {
            diffuse: { value: new Wn(16777215) },
            opacity: { value: 1 },
            map: { value: null },
            mapTransform: { value: new Qe() },
            alphaMap: { value: null },
            alphaMapTransform: { value: new Qe() },
            alphaTest: { value: 0 },
          },
          specularmap: {
            specularMap: { value: null },
            specularMapTransform: { value: new Qe() },
          },
          envmap: {
            envMap: { value: null },
            flipEnvMap: { value: -1 },
            reflectivity: { value: 1 },
            ior: { value: 1.5 },
            refractionRatio: { value: 0.98 },
          },
          aomap: {
            aoMap: { value: null },
            aoMapIntensity: { value: 1 },
            aoMapTransform: { value: new Qe() },
          },
          lightmap: {
            lightMap: { value: null },
            lightMapIntensity: { value: 1 },
            lightMapTransform: { value: new Qe() },
          },
          bumpmap: {
            bumpMap: { value: null },
            bumpMapTransform: { value: new Qe() },
            bumpScale: { value: 1 },
          },
          normalmap: {
            normalMap: { value: null },
            normalMapTransform: { value: new Qe() },
            normalScale: { value: new Je(1, 1) },
          },
          displacementmap: {
            displacementMap: { value: null },
            displacementMapTransform: { value: new Qe() },
            displacementScale: { value: 1 },
            displacementBias: { value: 0 },
          },
          emissivemap: {
            emissiveMap: { value: null },
            emissiveMapTransform: { value: new Qe() },
          },
          metalnessmap: {
            metalnessMap: { value: null },
            metalnessMapTransform: { value: new Qe() },
          },
          roughnessmap: {
            roughnessMap: { value: null },
            roughnessMapTransform: { value: new Qe() },
          },
          gradientmap: { gradientMap: { value: null } },
          fog: {
            fogDensity: { value: 25e-5 },
            fogNear: { value: 1 },
            fogFar: { value: 2e3 },
            fogColor: { value: new Wn(16777215) },
          },
          lights: {
            ambientLightColor: { value: [] },
            lightProbe: { value: [] },
            directionalLights: {
              value: [],
              properties: { direction: {}, color: {} },
            },
            directionalLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
              },
            },
            directionalShadowMap: { value: [] },
            directionalShadowMatrix: { value: [] },
            spotLights: {
              value: [],
              properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {},
              },
            },
            spotLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
              },
            },
            spotLightMap: { value: [] },
            spotShadowMap: { value: [] },
            spotLightMatrix: { value: [] },
            pointLights: {
              value: [],
              properties: { color: {}, position: {}, decay: {}, distance: {} },
            },
            pointLightShadows: {
              value: [],
              properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {},
              },
            },
            pointShadowMap: { value: [] },
            pointShadowMatrix: { value: [] },
            hemisphereLights: {
              value: [],
              properties: { direction: {}, skyColor: {}, groundColor: {} },
            },
            rectAreaLights: {
              value: [],
              properties: { color: {}, position: {}, width: {}, height: {} },
            },
            ltc_1: { value: null },
            ltc_2: { value: null },
          },
          points: {
            diffuse: { value: new Wn(16777215) },
            opacity: { value: 1 },
            size: { value: 1 },
            scale: { value: 1 },
            map: { value: null },
            alphaMap: { value: null },
            alphaMapTransform: { value: new Qe() },
            alphaTest: { value: 0 },
            uvTransform: { value: new Qe() },
          },
          sprite: {
            diffuse: { value: new Wn(16777215) },
            opacity: { value: 1 },
            center: { value: new Je(0.5, 0.5) },
            rotation: { value: 0 },
            map: { value: null },
            mapTransform: { value: new Qe() },
            alphaMap: { value: null },
            alphaMapTransform: { value: new Qe() },
            alphaTest: { value: 0 },
          },
        },
        Jr = {
          basic: {
            uniforms: Rr([
              Zr.common,
              Zr.specularmap,
              Zr.envmap,
              Zr.aomap,
              Zr.lightmap,
              Zr.fog,
            ]),
            vertexShader: $r.meshbasic_vert,
            fragmentShader: $r.meshbasic_frag,
          },
          lambert: {
            uniforms: Rr([
              Zr.common,
              Zr.specularmap,
              Zr.envmap,
              Zr.aomap,
              Zr.lightmap,
              Zr.emissivemap,
              Zr.bumpmap,
              Zr.normalmap,
              Zr.displacementmap,
              Zr.fog,
              Zr.lights,
              { emissive: { value: new Wn(0) } },
            ]),
            vertexShader: $r.meshlambert_vert,
            fragmentShader: $r.meshlambert_frag,
          },
          phong: {
            uniforms: Rr([
              Zr.common,
              Zr.specularmap,
              Zr.envmap,
              Zr.aomap,
              Zr.lightmap,
              Zr.emissivemap,
              Zr.bumpmap,
              Zr.normalmap,
              Zr.displacementmap,
              Zr.fog,
              Zr.lights,
              {
                emissive: { value: new Wn(0) },
                specular: { value: new Wn(1118481) },
                shininess: { value: 30 },
              },
            ]),
            vertexShader: $r.meshphong_vert,
            fragmentShader: $r.meshphong_frag,
          },
          standard: {
            uniforms: Rr([
              Zr.common,
              Zr.envmap,
              Zr.aomap,
              Zr.lightmap,
              Zr.emissivemap,
              Zr.bumpmap,
              Zr.normalmap,
              Zr.displacementmap,
              Zr.roughnessmap,
              Zr.metalnessmap,
              Zr.fog,
              Zr.lights,
              {
                emissive: { value: new Wn(0) },
                roughness: { value: 1 },
                metalness: { value: 0 },
                envMapIntensity: { value: 1 },
              },
            ]),
            vertexShader: $r.meshphysical_vert,
            fragmentShader: $r.meshphysical_frag,
          },
          toon: {
            uniforms: Rr([
              Zr.common,
              Zr.aomap,
              Zr.lightmap,
              Zr.emissivemap,
              Zr.bumpmap,
              Zr.normalmap,
              Zr.displacementmap,
              Zr.gradientmap,
              Zr.fog,
              Zr.lights,
              { emissive: { value: new Wn(0) } },
            ]),
            vertexShader: $r.meshtoon_vert,
            fragmentShader: $r.meshtoon_frag,
          },
          matcap: {
            uniforms: Rr([
              Zr.common,
              Zr.bumpmap,
              Zr.normalmap,
              Zr.displacementmap,
              Zr.fog,
              { matcap: { value: null } },
            ]),
            vertexShader: $r.meshmatcap_vert,
            fragmentShader: $r.meshmatcap_frag,
          },
          points: {
            uniforms: Rr([Zr.points, Zr.fog]),
            vertexShader: $r.points_vert,
            fragmentShader: $r.points_frag,
          },
          dashed: {
            uniforms: Rr([
              Zr.common,
              Zr.fog,
              {
                scale: { value: 1 },
                dashSize: { value: 1 },
                totalSize: { value: 2 },
              },
            ]),
            vertexShader: $r.linedashed_vert,
            fragmentShader: $r.linedashed_frag,
          },
          depth: {
            uniforms: Rr([Zr.common, Zr.displacementmap]),
            vertexShader: $r.depth_vert,
            fragmentShader: $r.depth_frag,
          },
          normal: {
            uniforms: Rr([
              Zr.common,
              Zr.bumpmap,
              Zr.normalmap,
              Zr.displacementmap,
              { opacity: { value: 1 } },
            ]),
            vertexShader: $r.meshnormal_vert,
            fragmentShader: $r.meshnormal_frag,
          },
          sprite: {
            uniforms: Rr([Zr.sprite, Zr.fog]),
            vertexShader: $r.sprite_vert,
            fragmentShader: $r.sprite_frag,
          },
          background: {
            uniforms: {
              uvTransform: { value: new Qe() },
              t2D: { value: null },
              backgroundIntensity: { value: 1 },
            },
            vertexShader: $r.background_vert,
            fragmentShader: $r.background_frag,
          },
          backgroundCube: {
            uniforms: {
              envMap: { value: null },
              flipEnvMap: { value: -1 },
              backgroundBlurriness: { value: 0 },
              backgroundIntensity: { value: 1 },
            },
            vertexShader: $r.backgroundCube_vert,
            fragmentShader: $r.backgroundCube_frag,
          },
          cube: {
            uniforms: {
              tCube: { value: null },
              tFlip: { value: -1 },
              opacity: { value: 1 },
            },
            vertexShader: $r.cube_vert,
            fragmentShader: $r.cube_frag,
          },
          equirect: {
            uniforms: { tEquirect: { value: null } },
            vertexShader: $r.equirect_vert,
            fragmentShader: $r.equirect_frag,
          },
          distanceRGBA: {
            uniforms: Rr([
              Zr.common,
              Zr.displacementmap,
              {
                referencePosition: { value: new Tt() },
                nearDistance: { value: 1 },
                farDistance: { value: 1e3 },
              },
            ]),
            vertexShader: $r.distanceRGBA_vert,
            fragmentShader: $r.distanceRGBA_frag,
          },
          shadow: {
            uniforms: Rr([
              Zr.lights,
              Zr.fog,
              { color: { value: new Wn(0) }, opacity: { value: 1 } },
            ]),
            vertexShader: $r.shadow_vert,
            fragmentShader: $r.shadow_frag,
          },
        };
      Jr.physical = {
        uniforms: Rr([
          Jr.standard.uniforms,
          {
            clearcoat: { value: 0 },
            clearcoatMap: { value: null },
            clearcoatMapTransform: { value: new Qe() },
            clearcoatNormalMap: { value: null },
            clearcoatNormalMapTransform: { value: new Qe() },
            clearcoatNormalScale: { value: new Je(1, 1) },
            clearcoatRoughness: { value: 0 },
            clearcoatRoughnessMap: { value: null },
            clearcoatRoughnessMapTransform: { value: new Qe() },
            iridescence: { value: 0 },
            iridescenceMap: { value: null },
            iridescenceMapTransform: { value: new Qe() },
            iridescenceIOR: { value: 1.3 },
            iridescenceThicknessMinimum: { value: 100 },
            iridescenceThicknessMaximum: { value: 400 },
            iridescenceThicknessMap: { value: null },
            iridescenceThicknessMapTransform: { value: new Qe() },
            sheen: { value: 0 },
            sheenColor: { value: new Wn(0) },
            sheenColorMap: { value: null },
            sheenColorMapTransform: { value: new Qe() },
            sheenRoughness: { value: 1 },
            sheenRoughnessMap: { value: null },
            sheenRoughnessMapTransform: { value: new Qe() },
            transmission: { value: 0 },
            transmissionMap: { value: null },
            transmissionMapTransform: { value: new Qe() },
            transmissionSamplerSize: { value: new Je() },
            transmissionSamplerMap: { value: null },
            thickness: { value: 0 },
            thicknessMap: { value: null },
            thicknessMapTransform: { value: new Qe() },
            attenuationDistance: { value: 0 },
            attenuationColor: { value: new Wn(0) },
            specularColor: { value: new Wn(1, 1, 1) },
            specularColorMap: { value: null },
            specularColorMapTransform: { value: new Qe() },
            specularIntensity: { value: 1 },
            specularIntensityMap: { value: null },
            specularIntensityMapTransform: { value: new Qe() },
            anisotropyVector: { value: new Je() },
            anisotropyMap: { value: null },
            anisotropyMapTransform: { value: new Qe() },
          },
        ]),
        vertexShader: $r.meshphysical_vert,
        fragmentShader: $r.meshphysical_frag,
      };
      var Qr = { r: 0, b: 0, g: 0 };
      function ea(e, t, n, r, a, i, o) {
        var s,
          l,
          u = new Wn(0),
          c = !0 === i ? 0 : 1,
          f = null,
          d = 0,
          h = null;
        function p(t, n) {
          t.getRGB(Qr, Pr(e)), r.buffers.color.setClear(Qr.r, Qr.g, Qr.b, n, o);
        }
        return {
          getClearColor: function () {
            return u;
          },
          setClearColor: function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1;
            u.set(e), p(u, (c = t));
          },
          getClearAlpha: function () {
            return c;
          },
          setClearAlpha: function (e) {
            p(u, (c = e));
          },
          render: function (i, v) {
            var m = !1,
              g = !0 === v.isScene ? v.background : null;
            g &&
              g.isTexture &&
              (g = (v.backgroundBlurriness > 0 ? n : t).get(g)),
              null === g ? p(u, c) : g && g.isColor && (p(g, 1), (m = !0));
            var y = e.xr.getEnvironmentBlendMode();
            "additive" === y
              ? r.buffers.color.setClear(0, 0, 0, 1, o)
              : "alpha-blend" === y && r.buffers.color.setClear(0, 0, 0, 0, o),
              (e.autoClear || m) &&
                e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
              g && (g.isCubeTexture || g.mapping === q)
                ? (void 0 === l &&
                    ((l = new Mr(
                      new Cr(1, 1, 1),
                      new Lr({
                        name: "BackgroundCubeMaterial",
                        uniforms: kr(Jr.backgroundCube.uniforms),
                        vertexShader: Jr.backgroundCube.vertexShader,
                        fragmentShader: Jr.backgroundCube.fragmentShader,
                        side: U,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1,
                      })
                    )).geometry.deleteAttribute("normal"),
                    l.geometry.deleteAttribute("uv"),
                    (l.onBeforeRender = function (e, t, n) {
                      this.matrixWorld.copyPosition(n.matrixWorld);
                    }),
                    Object.defineProperty(l.material, "envMap", {
                      get: function () {
                        return this.uniforms.envMap.value;
                      },
                    }),
                    a.update(l)),
                  (l.material.uniforms.envMap.value = g),
                  (l.material.uniforms.flipEnvMap.value =
                    g.isCubeTexture && !1 === g.isRenderTargetTexture ? -1 : 1),
                  (l.material.uniforms.backgroundBlurriness.value =
                    v.backgroundBlurriness),
                  (l.material.uniforms.backgroundIntensity.value =
                    v.backgroundIntensity),
                  (l.material.toneMapped = ct.getTransfer(g.colorSpace) !== Pe),
                  (f === g && d === g.version && h === e.toneMapping) ||
                    ((l.material.needsUpdate = !0),
                    (f = g),
                    (d = g.version),
                    (h = e.toneMapping)),
                  l.layers.enableAll(),
                  i.unshift(l, l.geometry, l.material, 0, 0, null))
                : g &&
                  g.isTexture &&
                  (void 0 === s &&
                    ((s = new Mr(
                      new Kr(2, 2),
                      new Lr({
                        name: "BackgroundMaterial",
                        uniforms: kr(Jr.background.uniforms),
                        vertexShader: Jr.background.vertexShader,
                        fragmentShader: Jr.background.fragmentShader,
                        side: P,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1,
                      })
                    )).geometry.deleteAttribute("normal"),
                    Object.defineProperty(s.material, "map", {
                      get: function () {
                        return this.uniforms.t2D.value;
                      },
                    }),
                    a.update(s)),
                  (s.material.uniforms.t2D.value = g),
                  (s.material.uniforms.backgroundIntensity.value =
                    v.backgroundIntensity),
                  (s.material.toneMapped = ct.getTransfer(g.colorSpace) !== Pe),
                  !0 === g.matrixAutoUpdate && g.updateMatrix(),
                  s.material.uniforms.uvTransform.value.copy(g.matrix),
                  (f === g && d === g.version && h === e.toneMapping) ||
                    ((s.material.needsUpdate = !0),
                    (f = g),
                    (d = g.version),
                    (h = e.toneMapping)),
                  s.layers.enableAll(),
                  i.unshift(s, s.geometry, s.material, 0, 0, null));
          },
        };
      }
      function ta(e, t, n, r) {
        var a = e.getParameter(e.MAX_VERTEX_ATTRIBS),
          i = r.isWebGL2 ? null : t.get("OES_vertex_array_object"),
          o = r.isWebGL2 || null !== i,
          s = {},
          l = h(null),
          u = l,
          c = !1;
        function f(t) {
          return r.isWebGL2 ? e.bindVertexArray(t) : i.bindVertexArrayOES(t);
        }
        function d(t) {
          return r.isWebGL2
            ? e.deleteVertexArray(t)
            : i.deleteVertexArrayOES(t);
        }
        function h(e) {
          for (var t = [], n = [], r = [], i = 0; i < a; i++)
            (t[i] = 0), (n[i] = 0), (r[i] = 0);
          return {
            geometry: null,
            program: null,
            wireframe: !1,
            newAttributes: t,
            enabledAttributes: n,
            attributeDivisors: r,
            object: e,
            attributes: {},
            index: null,
          };
        }
        function p() {
          for (var e = u.newAttributes, t = 0, n = e.length; t < n; t++)
            e[t] = 0;
        }
        function v(e) {
          m(e, 0);
        }
        function m(n, a) {
          var i = u.newAttributes,
            o = u.enabledAttributes,
            s = u.attributeDivisors;
          ((i[n] = 1),
          0 === o[n] && (e.enableVertexAttribArray(n), (o[n] = 1)),
          s[n] !== a) &&
            ((r.isWebGL2 ? e : t.get("ANGLE_instanced_arrays"))[
              r.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"
            ](n, a),
            (s[n] = a));
        }
        function g() {
          for (
            var t = u.newAttributes,
              n = u.enabledAttributes,
              r = 0,
              a = n.length;
            r < a;
            r++
          )
            n[r] !== t[r] && (e.disableVertexAttribArray(r), (n[r] = 0));
        }
        function y(t, n, r, a, i, o, s) {
          !0 === s
            ? e.vertexAttribIPointer(t, n, r, i, o)
            : e.vertexAttribPointer(t, n, r, a, i, o);
        }
        function _() {
          b(), (c = !0), u !== l && f((u = l).object);
        }
        function b() {
          (l.geometry = null), (l.program = null), (l.wireframe = !1);
        }
        return {
          setup: function (a, l, d, _, b) {
            var x = !1;
            if (o) {
              var S = (function (t, n, a) {
                var o = !0 === a.wireframe,
                  l = s[t.id];
                void 0 === l && ((l = {}), (s[t.id] = l));
                var u = l[n.id];
                void 0 === u && ((u = {}), (l[n.id] = u));
                var c = u[o];
                void 0 === c &&
                  ((c = h(
                    r.isWebGL2
                      ? e.createVertexArray()
                      : i.createVertexArrayOES()
                  )),
                  (u[o] = c));
                return c;
              })(_, d, l);
              u !== S && f((u = S).object),
                (x = (function (e, t, n, r) {
                  var a = u.attributes,
                    i = t.attributes,
                    o = 0,
                    s = n.getAttributes();
                  for (var l in s) {
                    if (s[l].location >= 0) {
                      var c = a[l],
                        f = i[l];
                      if (
                        (void 0 === f &&
                          ("instanceMatrix" === l &&
                            e.instanceMatrix &&
                            (f = e.instanceMatrix),
                          "instanceColor" === l &&
                            e.instanceColor &&
                            (f = e.instanceColor)),
                        void 0 === c)
                      )
                        return !0;
                      if (c.attribute !== f) return !0;
                      if (f && c.data !== f.data) return !0;
                      o++;
                    }
                  }
                  return u.attributesNum !== o || u.index !== r;
                })(a, _, d, b)),
                x &&
                  (function (e, t, n, r) {
                    var a = {},
                      i = t.attributes,
                      o = 0,
                      s = n.getAttributes();
                    for (var l in s) {
                      if (s[l].location >= 0) {
                        var c = i[l];
                        void 0 === c &&
                          ("instanceMatrix" === l &&
                            e.instanceMatrix &&
                            (c = e.instanceMatrix),
                          "instanceColor" === l &&
                            e.instanceColor &&
                            (c = e.instanceColor));
                        var f = {};
                        (f.attribute = c),
                          c && c.data && (f.data = c.data),
                          (a[l] = f),
                          o++;
                      }
                    }
                    (u.attributes = a), (u.attributesNum = o), (u.index = r);
                  })(a, _, d, b);
            } else {
              var E = !0 === l.wireframe;
              (u.geometry === _.id &&
                u.program === d.id &&
                u.wireframe === E) ||
                ((u.geometry = _.id),
                (u.program = d.id),
                (u.wireframe = E),
                (x = !0));
            }
            null !== b && n.update(b, e.ELEMENT_ARRAY_BUFFER),
              (x || c) &&
                ((c = !1),
                (function (a, i, o, s) {
                  if (
                    !1 === r.isWebGL2 &&
                    (a.isInstancedMesh || s.isInstancedBufferGeometry) &&
                    null === t.get("ANGLE_instanced_arrays")
                  )
                    return;
                  p();
                  var l = s.attributes,
                    u = o.getAttributes(),
                    c = i.defaultAttributeValues;
                  for (var f in u) {
                    var d = u[f];
                    if (d.location >= 0) {
                      var h = l[f];
                      if (
                        (void 0 === h &&
                          ("instanceMatrix" === f &&
                            a.instanceMatrix &&
                            (h = a.instanceMatrix),
                          "instanceColor" === f &&
                            a.instanceColor &&
                            (h = a.instanceColor)),
                        void 0 !== h)
                      ) {
                        var _ = h.normalized,
                          b = h.itemSize,
                          x = n.get(h);
                        if (void 0 === x) continue;
                        var S = x.buffer,
                          E = x.type,
                          w = x.bytesPerElement,
                          T =
                            !0 === r.isWebGL2 &&
                            (E === e.INT ||
                              E === e.UNSIGNED_INT ||
                              h.gpuType === ae);
                        if (h.isInterleavedBufferAttribute) {
                          var M = h.data,
                            A = M.stride,
                            C = h.offset;
                          if (M.isInstancedInterleavedBuffer) {
                            for (var k = 0; k < d.locationSize; k++)
                              m(d.location + k, M.meshPerAttribute);
                            !0 !== a.isInstancedMesh &&
                              void 0 === s._maxInstanceCount &&
                              (s._maxInstanceCount =
                                M.meshPerAttribute * M.count);
                          } else
                            for (var R = 0; R < d.locationSize; R++)
                              v(d.location + R);
                          e.bindBuffer(e.ARRAY_BUFFER, S);
                          for (var P = 0; P < d.locationSize; P++)
                            y(
                              d.location + P,
                              b / d.locationSize,
                              E,
                              _,
                              A * w,
                              (C + (b / d.locationSize) * P) * w,
                              T
                            );
                        } else {
                          if (h.isInstancedBufferAttribute) {
                            for (var U = 0; U < d.locationSize; U++)
                              m(d.location + U, h.meshPerAttribute);
                            !0 !== a.isInstancedMesh &&
                              void 0 === s._maxInstanceCount &&
                              (s._maxInstanceCount =
                                h.meshPerAttribute * h.count);
                          } else
                            for (var L = 0; L < d.locationSize; L++)
                              v(d.location + L);
                          e.bindBuffer(e.ARRAY_BUFFER, S);
                          for (var D = 0; D < d.locationSize; D++)
                            y(
                              d.location + D,
                              b / d.locationSize,
                              E,
                              _,
                              b * w,
                              (b / d.locationSize) * D * w,
                              T
                            );
                        }
                      } else if (void 0 !== c) {
                        var I = c[f];
                        if (void 0 !== I)
                          switch (I.length) {
                            case 2:
                              e.vertexAttrib2fv(d.location, I);
                              break;
                            case 3:
                              e.vertexAttrib3fv(d.location, I);
                              break;
                            case 4:
                              e.vertexAttrib4fv(d.location, I);
                              break;
                            default:
                              e.vertexAttrib1fv(d.location, I);
                          }
                      }
                    }
                  }
                  g();
                })(a, l, d, _),
                null !== b &&
                  e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, n.get(b).buffer));
          },
          reset: _,
          resetDefaultState: b,
          dispose: function () {
            for (var e in (_(), s)) {
              var t = s[e];
              for (var n in t) {
                var r = t[n];
                for (var a in r) d(r[a].object), delete r[a];
                delete t[n];
              }
              delete s[e];
            }
          },
          releaseStatesOfGeometry: function (e) {
            if (void 0 !== s[e.id]) {
              var t = s[e.id];
              for (var n in t) {
                var r = t[n];
                for (var a in r) d(r[a].object), delete r[a];
                delete t[n];
              }
              delete s[e.id];
            }
          },
          releaseStatesOfProgram: function (e) {
            for (var t in s) {
              var n = s[t];
              if (void 0 !== n[e.id]) {
                var r = n[e.id];
                for (var a in r) d(r[a].object), delete r[a];
                delete n[e.id];
              }
            }
          },
          initAttributes: p,
          enableAttribute: v,
          disableUnusedAttributes: g,
        };
      }
      function na(e, t, n, r) {
        var a,
          i = r.isWebGL2;
        (this.setMode = function (e) {
          a = e;
        }),
          (this.render = function (t, r) {
            e.drawArrays(a, t, r), n.update(r, a, 1);
          }),
          (this.renderInstances = function (r, o, s) {
            if (0 !== s) {
              var l, u;
              if (i) (l = e), (u = "drawArraysInstanced");
              else if (
                ((u = "drawArraysInstancedANGLE"),
                null === (l = t.get("ANGLE_instanced_arrays")))
              )
                return void console.error(
                  "THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                );
              l[u](a, r, o, s), n.update(o, a, s);
            }
          });
      }
      function ra(e, t, n) {
        var r;
        function a(t) {
          if ("highp" === t) {
            if (
              e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT)
                .precision > 0 &&
              e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT)
                .precision > 0
            )
              return "highp";
            t = "mediump";
          }
          return "mediump" === t &&
            e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT)
              .precision > 0 &&
            e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT)
              .precision > 0
            ? "mediump"
            : "lowp";
        }
        var i =
            "undefined" !== typeof WebGL2RenderingContext &&
            "WebGL2RenderingContext" === e.constructor.name,
          o = void 0 !== n.precision ? n.precision : "highp",
          s = a(o);
        s !== o &&
          (console.warn(
            "THREE.WebGLRenderer:",
            o,
            "not supported, using",
            s,
            "instead."
          ),
          (o = s));
        var l = i || t.has("WEBGL_draw_buffers"),
          u = !0 === n.logarithmicDepthBuffer,
          c = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),
          f = e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
          d = e.getParameter(e.MAX_TEXTURE_SIZE),
          h = e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),
          p = e.getParameter(e.MAX_VERTEX_ATTRIBS),
          v = e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),
          m = e.getParameter(e.MAX_VARYING_VECTORS),
          g = e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),
          y = f > 0,
          _ = i || t.has("OES_texture_float");
        return {
          isWebGL2: i,
          drawBuffers: l,
          getMaxAnisotropy: function () {
            if (void 0 !== r) return r;
            if (!0 === t.has("EXT_texture_filter_anisotropic")) {
              var n = t.get("EXT_texture_filter_anisotropic");
              r = e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
            } else r = 0;
            return r;
          },
          getMaxPrecision: a,
          precision: o,
          logarithmicDepthBuffer: u,
          maxTextures: c,
          maxVertexTextures: f,
          maxTextureSize: d,
          maxCubemapSize: h,
          maxAttributes: p,
          maxVertexUniforms: v,
          maxVaryings: m,
          maxFragmentUniforms: g,
          vertexTextures: y,
          floatFragmentTextures: _,
          floatVertexTextures: y && _,
          maxSamples: i ? e.getParameter(e.MAX_SAMPLES) : 0,
        };
      }
      function aa(e) {
        var t = this,
          n = null,
          r = 0,
          a = !1,
          i = !1,
          o = new Vr(),
          s = new Qe(),
          l = { value: null, needsUpdate: !1 };
        function u(e, n, r, a) {
          var i = null !== e ? e.length : 0,
            u = null;
          if (0 !== i) {
            if (((u = l.value), !0 !== a || null === u)) {
              var c = r + 4 * i,
                f = n.matrixWorldInverse;
              s.getNormalMatrix(f),
                (null === u || u.length < c) && (u = new Float32Array(c));
              for (var d = 0, h = r; d !== i; ++d, h += 4)
                o.copy(e[d]).applyMatrix4(f, s),
                  o.normal.toArray(u, h),
                  (u[h + 3] = o.constant);
            }
            (l.value = u), (l.needsUpdate = !0);
          }
          return (t.numPlanes = i), (t.numIntersection = 0), u;
        }
        (this.uniform = l),
          (this.numPlanes = 0),
          (this.numIntersection = 0),
          (this.init = function (e, t) {
            var n = 0 !== e.length || t || 0 !== r || a;
            return (a = t), (r = e.length), n;
          }),
          (this.beginShadows = function () {
            (i = !0), u(null);
          }),
          (this.endShadows = function () {
            i = !1;
          }),
          (this.setGlobalState = function (e, t) {
            n = u(e, t, 0);
          }),
          (this.setState = function (o, s, c) {
            var f = o.clippingPlanes,
              d = o.clipIntersection,
              h = o.clipShadows,
              p = e.get(o);
            if (!a || null === f || 0 === f.length || (i && !h))
              i
                ? u(null)
                : (function () {
                    l.value !== n && ((l.value = n), (l.needsUpdate = r > 0));
                    (t.numPlanes = r), (t.numIntersection = 0);
                  })();
            else {
              var v = i ? 0 : r,
                m = 4 * v,
                g = p.clippingState || null;
              (l.value = g), (g = u(f, s, m, c));
              for (var y = 0; y !== m; ++y) g[y] = n[y];
              (p.clippingState = g),
                (this.numIntersection = d ? this.numPlanes : 0),
                (this.numPlanes += v);
            }
          });
      }
      function ia(e) {
        var t = new WeakMap();
        function n(e, t) {
          return t === j ? (e.mapping = V) : t === X && (e.mapping = W), e;
        }
        function r(e) {
          var n = e.target;
          n.removeEventListener("dispose", r);
          var a = t.get(n);
          void 0 !== a && (t.delete(n), a.dispose());
        }
        return {
          get: function (a) {
            if (a && a.isTexture && !1 === a.isRenderTargetTexture) {
              var i = a.mapping;
              if (i === j || i === X) {
                if (t.has(a)) return n(t.get(a).texture, a.mapping);
                var o = a.image;
                if (o && o.height > 0) {
                  var s = new zr(o.height / 2);
                  return (
                    s.fromEquirectangularTexture(e, a),
                    t.set(a, s),
                    a.addEventListener("dispose", r),
                    n(s.texture, a.mapping)
                  );
                }
                return null;
              }
            }
            return a;
          },
          dispose: function () {
            t = new WeakMap();
          },
        };
      }
      var oa = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : -1,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : -1,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 0.1,
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 2e3;
            return (
              w(this, n),
              ((e = t.call(this)).isOrthographicCamera = !0),
              (e.type = "OrthographicCamera"),
              (e.zoom = 1),
              (e.view = null),
              (e.left = r),
              (e.right = a),
              (e.top = i),
              (e.bottom = o),
              (e.near = s),
              (e.far = l),
              e.updateProjectionMatrix(),
              e
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e, t),
                    (this.left = e.left),
                    (this.right = e.right),
                    (this.top = e.top),
                    (this.bottom = e.bottom),
                    (this.near = e.near),
                    (this.far = e.far),
                    (this.zoom = e.zoom),
                    (this.view =
                      null === e.view ? null : Object.assign({}, e.view)),
                    this
                  );
                },
              },
              {
                key: "setViewOffset",
                value: function (e, t, n, r, a, i) {
                  null === this.view &&
                    (this.view = {
                      enabled: !0,
                      fullWidth: 1,
                      fullHeight: 1,
                      offsetX: 0,
                      offsetY: 0,
                      width: 1,
                      height: 1,
                    }),
                    (this.view.enabled = !0),
                    (this.view.fullWidth = e),
                    (this.view.fullHeight = t),
                    (this.view.offsetX = n),
                    (this.view.offsetY = r),
                    (this.view.width = a),
                    (this.view.height = i),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "clearViewOffset",
                value: function () {
                  null !== this.view && (this.view.enabled = !1),
                    this.updateProjectionMatrix();
                },
              },
              {
                key: "updateProjectionMatrix",
                value: function () {
                  var e = (this.right - this.left) / (2 * this.zoom),
                    t = (this.top - this.bottom) / (2 * this.zoom),
                    n = (this.right + this.left) / 2,
                    r = (this.top + this.bottom) / 2,
                    a = n - e,
                    i = n + e,
                    o = r + t,
                    s = r - t;
                  if (null !== this.view && this.view.enabled) {
                    var l =
                        (this.right - this.left) /
                        this.view.fullWidth /
                        this.zoom,
                      u =
                        (this.top - this.bottom) /
                        this.view.fullHeight /
                        this.zoom;
                    (i = (a += l * this.view.offsetX) + l * this.view.width),
                      (s = (o -= u * this.view.offsetY) - u * this.view.height);
                  }
                  this.projectionMatrix.makeOrthographic(
                    a,
                    i,
                    o,
                    s,
                    this.near,
                    this.far,
                    this.coordinateSystem
                  ),
                    this.projectionMatrixInverse
                      .copy(this.projectionMatrix)
                      .invert();
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = v(p(n.prototype), "toJSON", this).call(this, e);
                  return (
                    (t.object.zoom = this.zoom),
                    (t.object.left = this.left),
                    (t.object.right = this.right),
                    (t.object.top = this.top),
                    (t.object.bottom = this.bottom),
                    (t.object.near = this.near),
                    (t.object.far = this.far),
                    null !== this.view &&
                      (t.object.view = Object.assign({}, this.view)),
                    t
                  );
                },
              },
            ]),
            n
          );
        })(Dr),
        sa = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
        la = 20,
        ua = new oa(),
        ca = new Wn(),
        fa = null,
        da = 0,
        ha = 0,
        pa = (1 + Math.sqrt(5)) / 2,
        va = 1 / pa,
        ma = [
          new Tt(1, 1, 1),
          new Tt(-1, 1, 1),
          new Tt(1, 1, -1),
          new Tt(-1, 1, -1),
          new Tt(0, pa, va),
          new Tt(0, pa, -va),
          new Tt(va, 0, pa),
          new Tt(-va, 0, pa),
          new Tt(pa, va, 0),
          new Tt(-pa, va, 0),
        ],
        ga = (function () {
          function e(t) {
            w(this, e),
              (this._renderer = t),
              (this._pingPongRenderTarget = null),
              (this._lodMax = 0),
              (this._cubeSize = 0),
              (this._lodPlanes = []),
              (this._sizeLods = []),
              (this._sigmas = []),
              (this._blurMaterial = null),
              (this._cubemapMaterial = null),
              (this._equirectMaterial = null),
              this._compileMaterial(this._blurMaterial);
          }
          return (
            M(e, [
              {
                key: "fromScene",
                value: function (e) {
                  var t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 0,
                    n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : 0.1,
                    r =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : 100;
                  (fa = this._renderer.getRenderTarget()),
                    (da = this._renderer.getActiveCubeFace()),
                    (ha = this._renderer.getActiveMipmapLevel()),
                    this._setSize(256);
                  var a = this._allocateTargets();
                  return (
                    (a.depthBuffer = !0),
                    this._sceneToCubeUV(e, n, r, a),
                    t > 0 && this._blur(a, 0, 0, t),
                    this._applyPMREM(a),
                    this._cleanup(a),
                    a
                  );
                },
              },
              {
                key: "fromEquirectangular",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : null;
                  return this._fromTexture(e, t);
                },
              },
              {
                key: "fromCubemap",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : null;
                  return this._fromTexture(e, t);
                },
              },
              {
                key: "compileCubemapShader",
                value: function () {
                  null === this._cubemapMaterial &&
                    ((this._cubemapMaterial = xa()),
                    this._compileMaterial(this._cubemapMaterial));
                },
              },
              {
                key: "compileEquirectangularShader",
                value: function () {
                  null === this._equirectMaterial &&
                    ((this._equirectMaterial = ba()),
                    this._compileMaterial(this._equirectMaterial));
                },
              },
              {
                key: "dispose",
                value: function () {
                  this._dispose(),
                    null !== this._cubemapMaterial &&
                      this._cubemapMaterial.dispose(),
                    null !== this._equirectMaterial &&
                      this._equirectMaterial.dispose();
                },
              },
              {
                key: "_setSize",
                value: function (e) {
                  (this._lodMax = Math.floor(Math.log2(e))),
                    (this._cubeSize = Math.pow(2, this._lodMax));
                },
              },
              {
                key: "_dispose",
                value: function () {
                  null !== this._blurMaterial && this._blurMaterial.dispose(),
                    null !== this._pingPongRenderTarget &&
                      this._pingPongRenderTarget.dispose();
                  for (var e = 0; e < this._lodPlanes.length; e++)
                    this._lodPlanes[e].dispose();
                },
              },
              {
                key: "_cleanup",
                value: function (e) {
                  this._renderer.setRenderTarget(fa, da, ha),
                    (e.scissorTest = !1),
                    _a(e, 0, 0, e.width, e.height);
                },
              },
              {
                key: "_fromTexture",
                value: function (e, t) {
                  e.mapping === V || e.mapping === W
                    ? this._setSize(
                        0 === e.image.length
                          ? 16
                          : e.image[0].width || e.image[0].image.width
                      )
                    : this._setSize(e.image.width / 4),
                    (fa = this._renderer.getRenderTarget()),
                    (da = this._renderer.getActiveCubeFace()),
                    (ha = this._renderer.getActiveMipmapLevel());
                  var n = t || this._allocateTargets();
                  return (
                    this._textureToCubeUV(e, n),
                    this._applyPMREM(n),
                    this._cleanup(n),
                    n
                  );
                },
              },
              {
                key: "_allocateTargets",
                value: function () {
                  var e = 3 * Math.max(this._cubeSize, 112),
                    t = 4 * this._cubeSize,
                    n = {
                      magFilter: ee,
                      minFilter: ee,
                      generateMipmaps: !1,
                      type: se,
                      format: ue,
                      colorSpace: Ae,
                      depthBuffer: !1,
                    },
                    r = ya(e, t, n);
                  if (
                    null === this._pingPongRenderTarget ||
                    this._pingPongRenderTarget.width !== e ||
                    this._pingPongRenderTarget.height !== t
                  ) {
                    null !== this._pingPongRenderTarget && this._dispose(),
                      (this._pingPongRenderTarget = ya(e, t, n));
                    var a = this._lodMax,
                      i = (function (e) {
                        for (
                          var t = [],
                            n = [],
                            r = [],
                            a = e,
                            i = e - 4 + 1 + sa.length,
                            o = 0;
                          o < i;
                          o++
                        ) {
                          var s = Math.pow(2, a);
                          n.push(s);
                          var l = 1 / s;
                          o > e - 4
                            ? (l = sa[o - e + 4 - 1])
                            : 0 === o && (l = 0),
                            r.push(l);
                          for (
                            var u = 1 / (s - 2),
                              c = -u,
                              f = 1 + u,
                              d = [c, c, f, c, f, f, c, c, f, f, c, f],
                              h = 6,
                              p = 6,
                              v = 3,
                              m = 2,
                              g = 1,
                              y = new Float32Array(v * p * h),
                              _ = new Float32Array(m * p * h),
                              b = new Float32Array(g * p * h),
                              x = 0;
                            x < h;
                            x++
                          ) {
                            var S = ((x % 3) * 2) / 3 - 1,
                              E = x > 2 ? 0 : -1,
                              w = [
                                S,
                                E,
                                0,
                                S + 2 / 3,
                                E,
                                0,
                                S + 2 / 3,
                                E + 1,
                                0,
                                S,
                                E,
                                0,
                                S + 2 / 3,
                                E + 1,
                                0,
                                S,
                                E + 1,
                                0,
                              ];
                            y.set(w, v * p * x), _.set(d, m * p * x);
                            var T = [x, x, x, x, x, x];
                            b.set(T, g * p * x);
                          }
                          var M = new lr();
                          M.setAttribute("position", new Zn(y, v)),
                            M.setAttribute("uv", new Zn(_, m)),
                            M.setAttribute("faceIndex", new Zn(b, g)),
                            t.push(M),
                            a > 4 && a--;
                        }
                        return { lodPlanes: t, sizeLods: n, sigmas: r };
                      })(a);
                    (this._sizeLods = i.sizeLods),
                      (this._lodPlanes = i.lodPlanes),
                      (this._sigmas = i.sigmas),
                      (this._blurMaterial = (function (e, t, n) {
                        var r = new Float32Array(la),
                          a = new Tt(0, 1, 0),
                          i = new Lr({
                            name: "SphericalGaussianBlur",
                            defines: {
                              n: la,
                              CUBEUV_TEXEL_WIDTH: 1 / t,
                              CUBEUV_TEXEL_HEIGHT: 1 / n,
                              CUBEUV_MAX_MIP: "".concat(e, ".0"),
                            },
                            uniforms: {
                              envMap: { value: null },
                              samples: { value: 1 },
                              weights: { value: r },
                              latitudinal: { value: !1 },
                              dTheta: { value: 0 },
                              mipInt: { value: 0 },
                              poleAxis: { value: a },
                            },
                            vertexShader:
                              "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                            fragmentShader:
                              "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",
                            blending: 0,
                            depthTest: !1,
                            depthWrite: !1,
                          });
                        return i;
                      })(a, e, t));
                  }
                  return r;
                },
              },
              {
                key: "_compileMaterial",
                value: function (e) {
                  var t = new Mr(this._lodPlanes[0], e);
                  this._renderer.compile(t, ua);
                },
              },
              {
                key: "_sceneToCubeUV",
                value: function (e, t, n, r) {
                  var a = new Ir(90, 1, t, n),
                    i = [1, -1, 1, 1, 1, 1],
                    o = [1, 1, 1, -1, -1, -1],
                    s = this._renderer,
                    l = s.autoClear,
                    u = s.toneMapping;
                  s.getClearColor(ca), (s.toneMapping = N), (s.autoClear = !1);
                  var c = new Yn({
                      name: "PMREM.Background",
                      side: U,
                      depthWrite: !1,
                      depthTest: !1,
                    }),
                    f = new Mr(new Cr(), c),
                    d = !1,
                    h = e.background;
                  h
                    ? h.isColor &&
                      (c.color.copy(h), (e.background = null), (d = !0))
                    : (c.color.copy(ca), (d = !0));
                  for (var p = 0; p < 6; p++) {
                    var v = p % 3;
                    0 === v
                      ? (a.up.set(0, i[p], 0), a.lookAt(o[p], 0, 0))
                      : 1 === v
                      ? (a.up.set(0, 0, i[p]), a.lookAt(0, o[p], 0))
                      : (a.up.set(0, i[p], 0), a.lookAt(0, 0, o[p]));
                    var m = this._cubeSize;
                    _a(r, v * m, p > 2 ? m : 0, m, m),
                      s.setRenderTarget(r),
                      d && s.render(f, a),
                      s.render(e, a);
                  }
                  f.geometry.dispose(),
                    f.material.dispose(),
                    (s.toneMapping = u),
                    (s.autoClear = l),
                    (e.background = h);
                },
              },
              {
                key: "_textureToCubeUV",
                value: function (e, t) {
                  var n = this._renderer,
                    r = e.mapping === V || e.mapping === W;
                  r
                    ? (null === this._cubemapMaterial &&
                        (this._cubemapMaterial = xa()),
                      (this._cubemapMaterial.uniforms.flipEnvMap.value =
                        !1 === e.isRenderTargetTexture ? -1 : 1))
                    : null === this._equirectMaterial &&
                      (this._equirectMaterial = ba());
                  var a = r ? this._cubemapMaterial : this._equirectMaterial,
                    i = new Mr(this._lodPlanes[0], a);
                  a.uniforms.envMap.value = e;
                  var o = this._cubeSize;
                  _a(t, 0, 0, 3 * o, 2 * o),
                    n.setRenderTarget(t),
                    n.render(i, ua);
                },
              },
              {
                key: "_applyPMREM",
                value: function (e) {
                  var t = this._renderer,
                    n = t.autoClear;
                  t.autoClear = !1;
                  for (var r = 1; r < this._lodPlanes.length; r++) {
                    var a = Math.sqrt(
                        this._sigmas[r] * this._sigmas[r] -
                          this._sigmas[r - 1] * this._sigmas[r - 1]
                      ),
                      i = ma[(r - 1) % ma.length];
                    this._blur(e, r - 1, r, a, i);
                  }
                  t.autoClear = n;
                },
              },
              {
                key: "_blur",
                value: function (e, t, n, r, a) {
                  var i = this._pingPongRenderTarget;
                  this._halfBlur(e, i, t, n, r, "latitudinal", a),
                    this._halfBlur(i, e, n, n, r, "longitudinal", a);
                },
              },
              {
                key: "_halfBlur",
                value: function (e, t, n, r, a, i, o) {
                  var s = this._renderer,
                    l = this._blurMaterial;
                  "latitudinal" !== i &&
                    "longitudinal" !== i &&
                    console.error(
                      "blur direction must be either latitudinal or longitudinal!"
                    );
                  var u = new Mr(this._lodPlanes[r], l),
                    c = l.uniforms,
                    f = this._sizeLods[n] - 1,
                    d = isFinite(a) ? Math.PI / (2 * f) : (2 * Math.PI) / 39,
                    h = a / d,
                    p = isFinite(a) ? 1 + Math.floor(3 * h) : la;
                  p > la &&
                    console.warn(
                      "sigmaRadians, "
                        .concat(
                          a,
                          ", is too large and will clip, as it requested "
                        )
                        .concat(p, " samples when the maximum is set to ")
                        .concat(la)
                    );
                  for (var v = [], m = 0, g = 0; g < la; ++g) {
                    var y = g / h,
                      _ = Math.exp((-y * y) / 2);
                    v.push(_), 0 === g ? (m += _) : g < p && (m += 2 * _);
                  }
                  for (var b = 0; b < v.length; b++) v[b] = v[b] / m;
                  (c.envMap.value = e.texture),
                    (c.samples.value = p),
                    (c.weights.value = v),
                    (c.latitudinal.value = "latitudinal" === i),
                    o && (c.poleAxis.value = o);
                  var x = this._lodMax;
                  (c.dTheta.value = d), (c.mipInt.value = x - n);
                  var S = this._sizeLods[r];
                  _a(
                    t,
                    3 * S * (r > x - 4 ? r - x + 4 : 0),
                    4 * (this._cubeSize - S),
                    3 * S,
                    2 * S
                  ),
                    s.setRenderTarget(t),
                    s.render(u, ua);
                },
              },
            ]),
            e
          );
        })();
      function ya(e, t, n) {
        var r = new xt(e, t, n);
        return (
          (r.texture.mapping = q),
          (r.texture.name = "PMREM.cubeUv"),
          (r.scissorTest = !0),
          r
        );
      }
      function _a(e, t, n, r, a) {
        e.viewport.set(t, n, r, a), e.scissor.set(t, n, r, a);
      }
      function ba() {
        return new Lr({
          name: "EquirectangularToCubeUV",
          uniforms: { envMap: { value: null } },
          vertexShader:
            "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
          fragmentShader:
            "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",
          blending: 0,
          depthTest: !1,
          depthWrite: !1,
        });
      }
      function xa() {
        return new Lr({
          name: "CubemapToCubeUV",
          uniforms: { envMap: { value: null }, flipEnvMap: { value: -1 } },
          vertexShader:
            "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
          fragmentShader:
            "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",
          blending: 0,
          depthTest: !1,
          depthWrite: !1,
        });
      }
      function Sa(e) {
        var t = new WeakMap(),
          n = null;
        function r(e) {
          var n = e.target;
          n.removeEventListener("dispose", r);
          var a = t.get(n);
          void 0 !== a && (t.delete(n), a.dispose());
        }
        return {
          get: function (a) {
            if (a && a.isTexture) {
              var i = a.mapping,
                o = i === j || i === X,
                s = i === V || i === W;
              if (o || s) {
                if (a.isRenderTargetTexture && !0 === a.needsPMREMUpdate) {
                  a.needsPMREMUpdate = !1;
                  var l = t.get(a);
                  return (
                    null === n && (n = new ga(e)),
                    (l = o ? n.fromEquirectangular(a, l) : n.fromCubemap(a, l)),
                    t.set(a, l),
                    l.texture
                  );
                }
                if (t.has(a)) return t.get(a).texture;
                var u = a.image;
                if (
                  (o && u && u.height > 0) ||
                  (s &&
                    u &&
                    (function (e) {
                      for (var t = 0, n = 6, r = 0; r < n; r++)
                        void 0 !== e[r] && t++;
                      return t === n;
                    })(u))
                ) {
                  null === n && (n = new ga(e));
                  var c = o ? n.fromEquirectangular(a) : n.fromCubemap(a);
                  return (
                    t.set(a, c), a.addEventListener("dispose", r), c.texture
                  );
                }
                return null;
              }
            }
            return a;
          },
          dispose: function () {
            (t = new WeakMap()), null !== n && (n.dispose(), (n = null));
          },
        };
      }
      function Ea(e) {
        var t = {};
        function n(n) {
          if (void 0 !== t[n]) return t[n];
          var r;
          switch (n) {
            case "WEBGL_depth_texture":
              r =
                e.getExtension("WEBGL_depth_texture") ||
                e.getExtension("MOZ_WEBGL_depth_texture") ||
                e.getExtension("WEBKIT_WEBGL_depth_texture");
              break;
            case "EXT_texture_filter_anisotropic":
              r =
                e.getExtension("EXT_texture_filter_anisotropic") ||
                e.getExtension("MOZ_EXT_texture_filter_anisotropic") ||
                e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
              break;
            case "WEBGL_compressed_texture_s3tc":
              r =
                e.getExtension("WEBGL_compressed_texture_s3tc") ||
                e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") ||
                e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
              break;
            case "WEBGL_compressed_texture_pvrtc":
              r =
                e.getExtension("WEBGL_compressed_texture_pvrtc") ||
                e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
              break;
            default:
              r = e.getExtension(n);
          }
          return (t[n] = r), r;
        }
        return {
          has: function (e) {
            return null !== n(e);
          },
          init: function (e) {
            e.isWebGL2
              ? n("EXT_color_buffer_float")
              : (n("WEBGL_depth_texture"),
                n("OES_texture_float"),
                n("OES_texture_half_float"),
                n("OES_texture_half_float_linear"),
                n("OES_standard_derivatives"),
                n("OES_element_index_uint"),
                n("OES_vertex_array_object"),
                n("ANGLE_instanced_arrays")),
              n("OES_texture_float_linear"),
              n("EXT_color_buffer_half_float"),
              n("WEBGL_multisampled_render_to_texture");
          },
          get: function (e) {
            var t = n(e);
            return (
              null === t &&
                console.warn(
                  "THREE.WebGLRenderer: " + e + " extension not supported."
                ),
              t
            );
          },
        };
      }
      function wa(e, t, n, r) {
        var a = {},
          i = new WeakMap();
        function o(e) {
          var s = e.target;
          for (var l in (null !== s.index && t.remove(s.index), s.attributes))
            t.remove(s.attributes[l]);
          for (var u in s.morphAttributes)
            for (var c = s.morphAttributes[u], f = 0, d = c.length; f < d; f++)
              t.remove(c[f]);
          s.removeEventListener("dispose", o), delete a[s.id];
          var h = i.get(s);
          h && (t.remove(h), i.delete(s)),
            r.releaseStatesOfGeometry(s),
            !0 === s.isInstancedBufferGeometry && delete s._maxInstanceCount,
            n.memory.geometries--;
        }
        function s(e) {
          var n = [],
            r = e.index,
            a = e.attributes.position,
            o = 0;
          if (null !== r) {
            var s = r.array;
            o = r.version;
            for (var l = 0, u = s.length; l < u; l += 3) {
              var c = s[l + 0],
                f = s[l + 1],
                d = s[l + 2];
              n.push(c, f, f, d, d, c);
            }
          } else {
            if (void 0 === a) return;
            var h = a.array;
            o = a.version;
            for (var p = 0, v = h.length / 3 - 1; p < v; p += 3) {
              var m = p + 0,
                g = p + 1,
                y = p + 2;
              n.push(m, g, g, y, y, m);
            }
          }
          var _ = new (tt(n) ? Qn : Jn)(n, 1);
          _.version = o;
          var b = i.get(e);
          b && t.remove(b), i.set(e, _);
        }
        return {
          get: function (e, t) {
            return (
              !0 === a[t.id] ||
                (t.addEventListener("dispose", o),
                (a[t.id] = !0),
                n.memory.geometries++),
              t
            );
          },
          update: function (n) {
            var r = n.attributes;
            for (var a in r) t.update(r[a], e.ARRAY_BUFFER);
            var i = n.morphAttributes;
            for (var o in i)
              for (var s = i[o], l = 0, u = s.length; l < u; l++)
                t.update(s[l], e.ARRAY_BUFFER);
          },
          getWireframeAttribute: function (e) {
            var t = i.get(e);
            if (t) {
              var n = e.index;
              null !== n && t.version < n.version && s(e);
            } else s(e);
            return i.get(e);
          },
        };
      }
      function Ta(e, t, n, r) {
        var a,
          i,
          o,
          s = r.isWebGL2;
        (this.setMode = function (e) {
          a = e;
        }),
          (this.setIndex = function (e) {
            (i = e.type), (o = e.bytesPerElement);
          }),
          (this.render = function (t, r) {
            e.drawElements(a, r, i, t * o), n.update(r, a, 1);
          }),
          (this.renderInstances = function (r, l, u) {
            if (0 !== u) {
              var c, f;
              if (s) (c = e), (f = "drawElementsInstanced");
              else if (
                ((f = "drawElementsInstancedANGLE"),
                null === (c = t.get("ANGLE_instanced_arrays")))
              )
                return void console.error(
                  "THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                );
              c[f](a, l, i, r * o, u), n.update(l, a, u);
            }
          });
      }
      function Ma(e) {
        var t = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
        return {
          memory: { geometries: 0, textures: 0 },
          render: t,
          programs: null,
          autoReset: !0,
          reset: function () {
            (t.calls = 0), (t.triangles = 0), (t.points = 0), (t.lines = 0);
          },
          update: function (n, r, a) {
            switch ((t.calls++, r)) {
              case e.TRIANGLES:
                t.triangles += a * (n / 3);
                break;
              case e.LINES:
                t.lines += a * (n / 2);
                break;
              case e.LINE_STRIP:
                t.lines += a * (n - 1);
                break;
              case e.LINE_LOOP:
                t.lines += a * n;
                break;
              case e.POINTS:
                t.points += a * n;
                break;
              default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", r);
            }
          },
        };
      }
      function Aa(e, t) {
        return e[0] - t[0];
      }
      function Ca(e, t) {
        return Math.abs(t[1]) - Math.abs(e[1]);
      }
      function ka(e, t, n) {
        for (
          var r = {},
            a = new Float32Array(8),
            i = new WeakMap(),
            o = new _t(),
            s = [],
            l = 0;
          l < 8;
          l++
        )
          s[l] = [l, 0];
        return {
          update: function (l, u, c) {
            var f = l.morphTargetInfluences;
            if (!0 === t.isWebGL2) {
              var d =
                  u.morphAttributes.position ||
                  u.morphAttributes.normal ||
                  u.morphAttributes.color,
                h = void 0 !== d ? d.length : 0,
                p = i.get(u);
              if (void 0 === p || p.count !== h) {
                void 0 !== p && p.texture.dispose();
                var v = void 0 !== u.morphAttributes.position,
                  m = void 0 !== u.morphAttributes.normal,
                  g = void 0 !== u.morphAttributes.color,
                  y = u.morphAttributes.position || [],
                  _ = u.morphAttributes.normal || [],
                  b = u.morphAttributes.color || [],
                  x = 0;
                !0 === v && (x = 1), !0 === m && (x = 2), !0 === g && (x = 3);
                var S = u.attributes.position.count * x,
                  E = 1;
                S > t.maxTextureSize &&
                  ((E = Math.ceil(S / t.maxTextureSize)),
                  (S = t.maxTextureSize));
                var w = new Float32Array(S * E * 4 * h),
                  T = new St(w, S, E, h);
                (T.type = oe), (T.needsUpdate = !0);
                for (var M = 4 * x, A = 0; A < h; A++)
                  for (
                    var C = y[A], k = _[A], R = b[A], P = S * E * 4 * A, U = 0;
                    U < C.count;
                    U++
                  ) {
                    var L = U * M;
                    !0 === v &&
                      (o.fromBufferAttribute(C, U),
                      (w[P + L + 0] = o.x),
                      (w[P + L + 1] = o.y),
                      (w[P + L + 2] = o.z),
                      (w[P + L + 3] = 0)),
                      !0 === m &&
                        (o.fromBufferAttribute(k, U),
                        (w[P + L + 4] = o.x),
                        (w[P + L + 5] = o.y),
                        (w[P + L + 6] = o.z),
                        (w[P + L + 7] = 0)),
                      !0 === g &&
                        (o.fromBufferAttribute(R, U),
                        (w[P + L + 8] = o.x),
                        (w[P + L + 9] = o.y),
                        (w[P + L + 10] = o.z),
                        (w[P + L + 11] = 4 === R.itemSize ? o.w : 1));
                  }
                (p = { count: h, texture: T, size: new Je(S, E) }),
                  i.set(u, p),
                  u.addEventListener("dispose", function e() {
                    T.dispose(),
                      i.delete(u),
                      u.removeEventListener("dispose", e);
                  });
              }
              for (var D = 0, I = 0; I < f.length; I++) D += f[I];
              var O = u.morphTargetsRelative ? 1 : 1 - D;
              c.getUniforms().setValue(e, "morphTargetBaseInfluence", O),
                c.getUniforms().setValue(e, "morphTargetInfluences", f),
                c
                  .getUniforms()
                  .setValue(e, "morphTargetsTexture", p.texture, n),
                c.getUniforms().setValue(e, "morphTargetsTextureSize", p.size);
            } else {
              var N = void 0 === f ? 0 : f.length,
                F = r[u.id];
              if (void 0 === F || F.length !== N) {
                F = [];
                for (var z = 0; z < N; z++) F[z] = [z, 0];
                r[u.id] = F;
              }
              for (var B = 0; B < N; B++) {
                var H = F[B];
                (H[0] = B), (H[1] = f[B]);
              }
              F.sort(Ca);
              for (var G = 0; G < 8; G++)
                G < N && F[G][1]
                  ? ((s[G][0] = F[G][0]), (s[G][1] = F[G][1]))
                  : ((s[G][0] = Number.MAX_SAFE_INTEGER), (s[G][1] = 0));
              s.sort(Aa);
              for (
                var V = u.morphAttributes.position,
                  W = u.morphAttributes.normal,
                  j = 0,
                  X = 0;
                X < 8;
                X++
              ) {
                var q = s[X],
                  Y = q[0],
                  K = q[1];
                Y !== Number.MAX_SAFE_INTEGER && K
                  ? (V &&
                      u.getAttribute("morphTarget" + X) !== V[Y] &&
                      u.setAttribute("morphTarget" + X, V[Y]),
                    W &&
                      u.getAttribute("morphNormal" + X) !== W[Y] &&
                      u.setAttribute("morphNormal" + X, W[Y]),
                    (a[X] = K),
                    (j += K))
                  : (V &&
                      !0 === u.hasAttribute("morphTarget" + X) &&
                      u.deleteAttribute("morphTarget" + X),
                    W &&
                      !0 === u.hasAttribute("morphNormal" + X) &&
                      u.deleteAttribute("morphNormal" + X),
                    (a[X] = 0));
              }
              var $ = u.morphTargetsRelative ? 1 : 1 - j;
              c.getUniforms().setValue(e, "morphTargetBaseInfluence", $),
                c.getUniforms().setValue(e, "morphTargetInfluences", a);
            }
          },
        };
      }
      function Ra(e, t, n, r) {
        var a = new WeakMap();
        function i(e) {
          var t = e.target;
          t.removeEventListener("dispose", i),
            n.remove(t.instanceMatrix),
            null !== t.instanceColor && n.remove(t.instanceColor);
        }
        return {
          update: function (o) {
            var s = r.render.frame,
              l = o.geometry,
              u = t.get(o, l);
            if (
              (a.get(u) !== s && (t.update(u), a.set(u, s)),
              o.isInstancedMesh &&
                (!1 === o.hasEventListener("dispose", i) &&
                  o.addEventListener("dispose", i),
                a.get(o) !== s &&
                  (n.update(o.instanceMatrix, e.ARRAY_BUFFER),
                  null !== o.instanceColor &&
                    n.update(o.instanceColor, e.ARRAY_BUFFER),
                  a.set(o, s))),
              o.isSkinnedMesh)
            ) {
              var c = o.skeleton;
              a.get(c) !== s && (c.update(), a.set(c, s));
            }
            return u;
          },
          dispose: function () {
            a = new WeakMap();
          },
        };
      }
      var Pa = new yt(),
        Ua = new St(),
        La = new Et(),
        Da = new Fr(),
        Ia = [],
        Oa = [],
        Na = new Float32Array(16),
        Fa = new Float32Array(9),
        za = new Float32Array(4);
      function Ba(e, t, n) {
        var r = e[0];
        if (r <= 0 || r > 0) return e;
        var a = t * n,
          i = Ia[a];
        if (
          (void 0 === i && ((i = new Float32Array(a)), (Ia[a] = i)), 0 !== t)
        ) {
          r.toArray(i, 0);
          for (var o = 1, s = 0; o !== t; ++o) (s += n), e[o].toArray(i, s);
        }
        return i;
      }
      function Ha(e, t) {
        if (e.length !== t.length) return !1;
        for (var n = 0, r = e.length; n < r; n++) if (e[n] !== t[n]) return !1;
        return !0;
      }
      function Ga(e, t) {
        for (var n = 0, r = t.length; n < r; n++) e[n] = t[n];
      }
      function Va(e, t) {
        var n = Oa[t];
        void 0 === n && ((n = new Int32Array(t)), (Oa[t] = n));
        for (var r = 0; r !== t; ++r) n[r] = e.allocateTextureUnit();
        return n;
      }
      function Wa(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1f(this.addr, t), (n[0] = t));
      }
      function ja(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y) ||
            (e.uniform2f(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
        else {
          if (Ha(n, t)) return;
          e.uniform2fv(this.addr, t), Ga(n, t);
        }
      }
      function Xa(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z) ||
            (e.uniform3f(this.addr, t.x, t.y, t.z),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z));
        else if (void 0 !== t.r)
          (n[0] === t.r && n[1] === t.g && n[2] === t.b) ||
            (e.uniform3f(this.addr, t.r, t.g, t.b),
            (n[0] = t.r),
            (n[1] = t.g),
            (n[2] = t.b));
        else {
          if (Ha(n, t)) return;
          e.uniform3fv(this.addr, t), Ga(n, t);
        }
      }
      function qa(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w) ||
            (e.uniform4f(this.addr, t.x, t.y, t.z, t.w),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z),
            (n[3] = t.w));
        else {
          if (Ha(n, t)) return;
          e.uniform4fv(this.addr, t), Ga(n, t);
        }
      }
      function Ya(e, t) {
        var n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (Ha(n, t)) return;
          e.uniformMatrix2fv(this.addr, !1, t), Ga(n, t);
        } else {
          if (Ha(n, r)) return;
          za.set(r), e.uniformMatrix2fv(this.addr, !1, za), Ga(n, r);
        }
      }
      function Ka(e, t) {
        var n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (Ha(n, t)) return;
          e.uniformMatrix3fv(this.addr, !1, t), Ga(n, t);
        } else {
          if (Ha(n, r)) return;
          Fa.set(r), e.uniformMatrix3fv(this.addr, !1, Fa), Ga(n, r);
        }
      }
      function $a(e, t) {
        var n = this.cache,
          r = t.elements;
        if (void 0 === r) {
          if (Ha(n, t)) return;
          e.uniformMatrix4fv(this.addr, !1, t), Ga(n, t);
        } else {
          if (Ha(n, r)) return;
          Na.set(r), e.uniformMatrix4fv(this.addr, !1, Na), Ga(n, r);
        }
      }
      function Za(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1i(this.addr, t), (n[0] = t));
      }
      function Ja(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y) ||
            (e.uniform2i(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
        else {
          if (Ha(n, t)) return;
          e.uniform2iv(this.addr, t), Ga(n, t);
        }
      }
      function Qa(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z) ||
            (e.uniform3i(this.addr, t.x, t.y, t.z),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z));
        else {
          if (Ha(n, t)) return;
          e.uniform3iv(this.addr, t), Ga(n, t);
        }
      }
      function ei(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w) ||
            (e.uniform4i(this.addr, t.x, t.y, t.z, t.w),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z),
            (n[3] = t.w));
        else {
          if (Ha(n, t)) return;
          e.uniform4iv(this.addr, t), Ga(n, t);
        }
      }
      function ti(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1ui(this.addr, t), (n[0] = t));
      }
      function ni(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y) ||
            (e.uniform2ui(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
        else {
          if (Ha(n, t)) return;
          e.uniform2uiv(this.addr, t), Ga(n, t);
        }
      }
      function ri(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z) ||
            (e.uniform3ui(this.addr, t.x, t.y, t.z),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z));
        else {
          if (Ha(n, t)) return;
          e.uniform3uiv(this.addr, t), Ga(n, t);
        }
      }
      function ai(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
          (n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w) ||
            (e.uniform4ui(this.addr, t.x, t.y, t.z, t.w),
            (n[0] = t.x),
            (n[1] = t.y),
            (n[2] = t.z),
            (n[3] = t.w));
        else {
          if (Ha(n, t)) return;
          e.uniform4uiv(this.addr, t), Ga(n, t);
        }
      }
      function ii(e, t, n) {
        var r = this.cache,
          a = n.allocateTextureUnit();
        r[0] !== a && (e.uniform1i(this.addr, a), (r[0] = a)),
          n.setTexture2D(t || Pa, a);
      }
      function oi(e, t, n) {
        var r = this.cache,
          a = n.allocateTextureUnit();
        r[0] !== a && (e.uniform1i(this.addr, a), (r[0] = a)),
          n.setTexture3D(t || La, a);
      }
      function si(e, t, n) {
        var r = this.cache,
          a = n.allocateTextureUnit();
        r[0] !== a && (e.uniform1i(this.addr, a), (r[0] = a)),
          n.setTextureCube(t || Da, a);
      }
      function li(e, t, n) {
        var r = this.cache,
          a = n.allocateTextureUnit();
        r[0] !== a && (e.uniform1i(this.addr, a), (r[0] = a)),
          n.setTexture2DArray(t || Ua, a);
      }
      function ui(e, t) {
        e.uniform1fv(this.addr, t);
      }
      function ci(e, t) {
        var n = Ba(t, this.size, 2);
        e.uniform2fv(this.addr, n);
      }
      function fi(e, t) {
        var n = Ba(t, this.size, 3);
        e.uniform3fv(this.addr, n);
      }
      function di(e, t) {
        var n = Ba(t, this.size, 4);
        e.uniform4fv(this.addr, n);
      }
      function hi(e, t) {
        var n = Ba(t, this.size, 4);
        e.uniformMatrix2fv(this.addr, !1, n);
      }
      function pi(e, t) {
        var n = Ba(t, this.size, 9);
        e.uniformMatrix3fv(this.addr, !1, n);
      }
      function vi(e, t) {
        var n = Ba(t, this.size, 16);
        e.uniformMatrix4fv(this.addr, !1, n);
      }
      function mi(e, t) {
        e.uniform1iv(this.addr, t);
      }
      function gi(e, t) {
        e.uniform2iv(this.addr, t);
      }
      function yi(e, t) {
        e.uniform3iv(this.addr, t);
      }
      function _i(e, t) {
        e.uniform4iv(this.addr, t);
      }
      function bi(e, t) {
        e.uniform1uiv(this.addr, t);
      }
      function xi(e, t) {
        e.uniform2uiv(this.addr, t);
      }
      function Si(e, t) {
        e.uniform3uiv(this.addr, t);
      }
      function Ei(e, t) {
        e.uniform4uiv(this.addr, t);
      }
      function wi(e, t, n) {
        var r = this.cache,
          a = t.length,
          i = Va(n, a);
        Ha(r, i) || (e.uniform1iv(this.addr, i), Ga(r, i));
        for (var o = 0; o !== a; ++o) n.setTexture2D(t[o] || Pa, i[o]);
      }
      function Ti(e, t, n) {
        var r = this.cache,
          a = t.length,
          i = Va(n, a);
        Ha(r, i) || (e.uniform1iv(this.addr, i), Ga(r, i));
        for (var o = 0; o !== a; ++o) n.setTexture3D(t[o] || La, i[o]);
      }
      function Mi(e, t, n) {
        var r = this.cache,
          a = t.length,
          i = Va(n, a);
        Ha(r, i) || (e.uniform1iv(this.addr, i), Ga(r, i));
        for (var o = 0; o !== a; ++o) n.setTextureCube(t[o] || Da, i[o]);
      }
      function Ai(e, t, n) {
        var r = this.cache,
          a = t.length,
          i = Va(n, a);
        Ha(r, i) || (e.uniform1iv(this.addr, i), Ga(r, i));
        for (var o = 0; o !== a; ++o) n.setTexture2DArray(t[o] || Ua, i[o]);
      }
      var Ci = M(function e(t, n, r) {
          w(this, e),
            (this.id = t),
            (this.addr = r),
            (this.cache = []),
            (this.setValue = (function (e) {
              switch (e) {
                case 5126:
                  return Wa;
                case 35664:
                  return ja;
                case 35665:
                  return Xa;
                case 35666:
                  return qa;
                case 35674:
                  return Ya;
                case 35675:
                  return Ka;
                case 35676:
                  return $a;
                case 5124:
                case 35670:
                  return Za;
                case 35667:
                case 35671:
                  return Ja;
                case 35668:
                case 35672:
                  return Qa;
                case 35669:
                case 35673:
                  return ei;
                case 5125:
                  return ti;
                case 36294:
                  return ni;
                case 36295:
                  return ri;
                case 36296:
                  return ai;
                case 35678:
                case 36198:
                case 36298:
                case 36306:
                case 35682:
                  return ii;
                case 35679:
                case 36299:
                case 36307:
                  return oi;
                case 35680:
                case 36300:
                case 36308:
                case 36293:
                  return si;
                case 36289:
                case 36303:
                case 36311:
                case 36292:
                  return li;
              }
            })(n.type));
        }),
        ki = M(function e(t, n, r) {
          w(this, e),
            (this.id = t),
            (this.addr = r),
            (this.cache = []),
            (this.size = n.size),
            (this.setValue = (function (e) {
              switch (e) {
                case 5126:
                  return ui;
                case 35664:
                  return ci;
                case 35665:
                  return fi;
                case 35666:
                  return di;
                case 35674:
                  return hi;
                case 35675:
                  return pi;
                case 35676:
                  return vi;
                case 5124:
                case 35670:
                  return mi;
                case 35667:
                case 35671:
                  return gi;
                case 35668:
                case 35672:
                  return yi;
                case 35669:
                case 35673:
                  return _i;
                case 5125:
                  return bi;
                case 36294:
                  return xi;
                case 36295:
                  return Si;
                case 36296:
                  return Ei;
                case 35678:
                case 36198:
                case 36298:
                case 36306:
                case 35682:
                  return wi;
                case 35679:
                case 36299:
                case 36307:
                  return Ti;
                case 35680:
                case 36300:
                case 36308:
                case 36293:
                  return Mi;
                case 36289:
                case 36303:
                case 36311:
                case 36292:
                  return Ai;
              }
            })(n.type));
        }),
        Ri = (function () {
          function e(t) {
            w(this, e), (this.id = t), (this.seq = []), (this.map = {});
          }
          return (
            M(e, [
              {
                key: "setValue",
                value: function (e, t, n) {
                  for (var r = this.seq, a = 0, i = r.length; a !== i; ++a) {
                    var o = r[a];
                    o.setValue(e, t[o.id], n);
                  }
                },
              },
            ]),
            e
          );
        })(),
        Pi = /(\w+)(\])?(\[|\.)?/g;
      function Ui(e, t) {
        e.seq.push(t), (e.map[t.id] = t);
      }
      function Li(e, t, n) {
        var r = e.name,
          a = r.length;
        for (Pi.lastIndex = 0; ; ) {
          var i = Pi.exec(r),
            o = Pi.lastIndex,
            s = i[1],
            l = "]" === i[2],
            u = i[3];
          if ((l && (s |= 0), void 0 === u || ("[" === u && o + 2 === a))) {
            Ui(n, void 0 === u ? new Ci(s, e, t) : new ki(s, e, t));
            break;
          }
          var c = n.map[s];
          void 0 === c && Ui(n, (c = new Ri(s))), (n = c);
        }
      }
      var Di = (function () {
        function e(t, n) {
          w(this, e), (this.seq = []), (this.map = {});
          for (
            var r = t.getProgramParameter(n, t.ACTIVE_UNIFORMS), a = 0;
            a < r;
            ++a
          ) {
            var i = t.getActiveUniform(n, a);
            Li(i, t.getUniformLocation(n, i.name), this);
          }
        }
        return (
          M(
            e,
            [
              {
                key: "setValue",
                value: function (e, t, n, r) {
                  var a = this.map[t];
                  void 0 !== a && a.setValue(e, n, r);
                },
              },
              {
                key: "setOptional",
                value: function (e, t, n) {
                  var r = t[n];
                  void 0 !== r && this.setValue(e, n, r);
                },
              },
            ],
            [
              {
                key: "upload",
                value: function (e, t, n, r) {
                  for (var a = 0, i = t.length; a !== i; ++a) {
                    var o = t[a],
                      s = n[o.id];
                    !1 !== s.needsUpdate && o.setValue(e, s.value, r);
                  }
                },
              },
              {
                key: "seqWithValue",
                value: function (e, t) {
                  for (var n = [], r = 0, a = e.length; r !== a; ++r) {
                    var i = e[r];
                    i.id in t && n.push(i);
                  }
                  return n;
                },
              },
            ]
          ),
          e
        );
      })();
      function Ii(e, t, n) {
        var r = e.createShader(t);
        return e.shaderSource(r, n), e.compileShader(r), r;
      }
      var Oi = 37297,
        Ni = 0;
      function Fi(e, t, n) {
        var r = e.getShaderParameter(t, e.COMPILE_STATUS),
          a = e.getShaderInfoLog(t).trim();
        if (r && "" === a) return "";
        var i = /ERROR: 0:(\d+)/.exec(a);
        if (i) {
          var o = parseInt(i[1]);
          return (
            n.toUpperCase() +
            "\n\n" +
            a +
            "\n\n" +
            (function (e, t) {
              for (
                var n = e.split("\n"),
                  r = [],
                  a = Math.max(t - 6, 0),
                  i = Math.min(t + 6, n.length),
                  o = a;
                o < i;
                o++
              ) {
                var s = o + 1;
                r.push(
                  ""
                    .concat(s === t ? ">" : " ", " ")
                    .concat(s, ": ")
                    .concat(n[o])
                );
              }
              return r.join("\n");
            })(e.getShaderSource(t), o)
          );
        }
        return a;
      }
      function zi(e, t) {
        var n = (function (e) {
          var t,
            n = ct.getPrimaries(ct.workingColorSpace),
            r = ct.getPrimaries(e);
          switch (
            (n === r
              ? (t = "")
              : n === Le && r === Ue
              ? (t = "LinearDisplayP3ToLinearSRGB")
              : n === Ue && r === Le && (t = "LinearSRGBToLinearDisplayP3"),
            e)
          ) {
            case Ae:
            case ke:
              return [t, "LinearTransferOETF"];
            case Me:
            case Ce:
              return [t, "sRGBTransferOETF"];
            default:
              return (
                console.warn("THREE.WebGLProgram: Unsupported color space:", e),
                [t, "LinearTransferOETF"]
              );
          }
        })(t);
        return "vec4 "
          .concat(e, "( vec4 value ) { return ")
          .concat(n[0], "( ")
          .concat(n[1], "( value ) ); }");
      }
      function Bi(e, t) {
        var n;
        switch (t) {
          case F:
            n = "Linear";
            break;
          case z:
            n = "Reinhard";
            break;
          case B:
            n = "OptimizedCineon";
            break;
          case H:
            n = "ACESFilmic";
            break;
          case G:
            n = "Custom";
            break;
          default:
            console.warn("THREE.WebGLProgram: Unsupported toneMapping:", t),
              (n = "Linear");
        }
        return (
          "vec3 " +
          e +
          "( vec3 color ) { return " +
          n +
          "ToneMapping( color ); }"
        );
      }
      function Hi(e) {
        return "" !== e;
      }
      function Gi(e, t) {
        var n =
          t.numSpotLightShadows +
          t.numSpotLightMaps -
          t.numSpotLightShadowsWithMaps;
        return e
          .replace(/NUM_DIR_LIGHTS/g, t.numDirLights)
          .replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights)
          .replace(/NUM_SPOT_LIGHT_MAPS/g, t.numSpotLightMaps)
          .replace(/NUM_SPOT_LIGHT_COORDS/g, n)
          .replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights)
          .replace(/NUM_POINT_LIGHTS/g, t.numPointLights)
          .replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights)
          .replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows)
          .replace(
            /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,
            t.numSpotLightShadowsWithMaps
          )
          .replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows)
          .replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows);
      }
      function Vi(e, t) {
        return e
          .replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes)
          .replace(
            /UNION_CLIPPING_PLANES/g,
            t.numClippingPlanes - t.numClipIntersection
          );
      }
      var Wi = /^[ \t]*#include +<([\w\d./]+)>/gm;
      function ji(e) {
        return e.replace(Wi, qi);
      }
      var Xi = new Map([
        ["encodings_fragment", "colorspace_fragment"],
        ["encodings_pars_fragment", "colorspace_pars_fragment"],
        ["output_fragment", "opaque_fragment"],
      ]);
      function qi(e, t) {
        var n = $r[t];
        if (void 0 === n) {
          var r = Xi.get(t);
          if (void 0 === r)
            throw new Error("Can not resolve #include <" + t + ">");
          (n = $r[r]),
            console.warn(
              'THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',
              t,
              r
            );
        }
        return ji(n);
      }
      var Yi =
        /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
      function Ki(e) {
        return e.replace(Yi, $i);
      }
      function $i(e, t, n, r) {
        for (var a = "", i = parseInt(t); i < parseInt(n); i++)
          a += r
            .replace(/\[\s*i\s*\]/g, "[ " + i + " ]")
            .replace(/UNROLLED_LOOP_INDEX/g, i);
        return a;
      }
      function Zi(e) {
        var t =
          "precision " +
          e.precision +
          " float;\nprecision " +
          e.precision +
          " int;";
        return (
          "highp" === e.precision
            ? (t += "\n#define HIGH_PRECISION")
            : "mediump" === e.precision
            ? (t += "\n#define MEDIUM_PRECISION")
            : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"),
          t
        );
      }
      function Ji(e, t, n, r) {
        var a,
          i,
          o = e.getContext(),
          s = n.defines,
          l = n.vertexShader,
          u = n.fragmentShader,
          c = (function (e) {
            var t = "SHADOWMAP_TYPE_BASIC";
            return (
              e.shadowMapType === C
                ? (t = "SHADOWMAP_TYPE_PCF")
                : e.shadowMapType === k
                ? (t = "SHADOWMAP_TYPE_PCF_SOFT")
                : e.shadowMapType === R && (t = "SHADOWMAP_TYPE_VSM"),
              t
            );
          })(n),
          f = (function (e) {
            var t = "ENVMAP_TYPE_CUBE";
            if (e.envMap)
              switch (e.envMapMode) {
                case V:
                case W:
                  t = "ENVMAP_TYPE_CUBE";
                  break;
                case q:
                  t = "ENVMAP_TYPE_CUBE_UV";
              }
            return t;
          })(n),
          d = (function (e) {
            var t = "ENVMAP_MODE_REFLECTION";
            e.envMap && e.envMapMode === W && (t = "ENVMAP_MODE_REFRACTION");
            return t;
          })(n),
          h = (function (e) {
            var t = "ENVMAP_BLENDING_NONE";
            if (e.envMap)
              switch (e.combine) {
                case D:
                  t = "ENVMAP_BLENDING_MULTIPLY";
                  break;
                case I:
                  t = "ENVMAP_BLENDING_MIX";
                  break;
                case O:
                  t = "ENVMAP_BLENDING_ADD";
              }
            return t;
          })(n),
          p = (function (e) {
            var t = e.envMapCubeUVHeight;
            if (null === t) return null;
            var n = Math.log2(t) - 2,
              r = 1 / t;
            return {
              texelWidth: 1 / (3 * Math.max(Math.pow(2, n), 112)),
              texelHeight: r,
              maxMip: n,
            };
          })(n),
          v = n.isWebGL2
            ? ""
            : (function (e) {
                return [
                  e.extensionDerivatives ||
                  e.envMapCubeUVHeight ||
                  e.bumpMap ||
                  e.normalMapTangentSpace ||
                  e.clearcoatNormalMap ||
                  e.flatShading ||
                  "physical" === e.shaderID
                    ? "#extension GL_OES_standard_derivatives : enable"
                    : "",
                  (e.extensionFragDepth || e.logarithmicDepthBuffer) &&
                  e.rendererExtensionFragDepth
                    ? "#extension GL_EXT_frag_depth : enable"
                    : "",
                  e.extensionDrawBuffers && e.rendererExtensionDrawBuffers
                    ? "#extension GL_EXT_draw_buffers : require"
                    : "",
                  (e.extensionShaderTextureLOD || e.envMap || e.transmission) &&
                  e.rendererExtensionShaderTextureLod
                    ? "#extension GL_EXT_shader_texture_lod : enable"
                    : "",
                ]
                  .filter(Hi)
                  .join("\n");
              })(n),
          m = (function (e) {
            var t = [];
            for (var n in e) {
              var r = e[n];
              !1 !== r && t.push("#define " + n + " " + r);
            }
            return t.join("\n");
          })(s),
          g = o.createProgram(),
          y = n.glslVersion ? "#version " + n.glslVersion + "\n" : "";
        n.isRawShaderMaterial
          ? ((a = [
              "#define SHADER_TYPE " + n.shaderType,
              "#define SHADER_NAME " + n.shaderName,
              m,
            ]
              .filter(Hi)
              .join("\n")).length > 0 && (a += "\n"),
            (i = [
              v,
              "#define SHADER_TYPE " + n.shaderType,
              "#define SHADER_NAME " + n.shaderName,
              m,
            ]
              .filter(Hi)
              .join("\n")).length > 0 && (i += "\n"))
          : ((a = [
              Zi(n),
              "#define SHADER_TYPE " + n.shaderType,
              "#define SHADER_NAME " + n.shaderName,
              m,
              n.instancing ? "#define USE_INSTANCING" : "",
              n.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
              n.useFog && n.fog ? "#define USE_FOG" : "",
              n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
              n.map ? "#define USE_MAP" : "",
              n.envMap ? "#define USE_ENVMAP" : "",
              n.envMap ? "#define " + d : "",
              n.lightMap ? "#define USE_LIGHTMAP" : "",
              n.aoMap ? "#define USE_AOMAP" : "",
              n.bumpMap ? "#define USE_BUMPMAP" : "",
              n.normalMap ? "#define USE_NORMALMAP" : "",
              n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
              n.normalMapTangentSpace
                ? "#define USE_NORMALMAP_TANGENTSPACE"
                : "",
              n.displacementMap ? "#define USE_DISPLACEMENTMAP" : "",
              n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
              n.anisotropy ? "#define USE_ANISOTROPY" : "",
              n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
              n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
              n.clearcoatRoughnessMap
                ? "#define USE_CLEARCOAT_ROUGHNESSMAP"
                : "",
              n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
              n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
              n.iridescenceThicknessMap
                ? "#define USE_IRIDESCENCE_THICKNESSMAP"
                : "",
              n.specularMap ? "#define USE_SPECULARMAP" : "",
              n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
              n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
              n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
              n.metalnessMap ? "#define USE_METALNESSMAP" : "",
              n.alphaMap ? "#define USE_ALPHAMAP" : "",
              n.alphaHash ? "#define USE_ALPHAHASH" : "",
              n.transmission ? "#define USE_TRANSMISSION" : "",
              n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
              n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
              n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
              n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
              n.mapUv ? "#define MAP_UV " + n.mapUv : "",
              n.alphaMapUv ? "#define ALPHAMAP_UV " + n.alphaMapUv : "",
              n.lightMapUv ? "#define LIGHTMAP_UV " + n.lightMapUv : "",
              n.aoMapUv ? "#define AOMAP_UV " + n.aoMapUv : "",
              n.emissiveMapUv
                ? "#define EMISSIVEMAP_UV " + n.emissiveMapUv
                : "",
              n.bumpMapUv ? "#define BUMPMAP_UV " + n.bumpMapUv : "",
              n.normalMapUv ? "#define NORMALMAP_UV " + n.normalMapUv : "",
              n.displacementMapUv
                ? "#define DISPLACEMENTMAP_UV " + n.displacementMapUv
                : "",
              n.metalnessMapUv
                ? "#define METALNESSMAP_UV " + n.metalnessMapUv
                : "",
              n.roughnessMapUv
                ? "#define ROUGHNESSMAP_UV " + n.roughnessMapUv
                : "",
              n.anisotropyMapUv
                ? "#define ANISOTROPYMAP_UV " + n.anisotropyMapUv
                : "",
              n.clearcoatMapUv
                ? "#define CLEARCOATMAP_UV " + n.clearcoatMapUv
                : "",
              n.clearcoatNormalMapUv
                ? "#define CLEARCOAT_NORMALMAP_UV " + n.clearcoatNormalMapUv
                : "",
              n.clearcoatRoughnessMapUv
                ? "#define CLEARCOAT_ROUGHNESSMAP_UV " +
                  n.clearcoatRoughnessMapUv
                : "",
              n.iridescenceMapUv
                ? "#define IRIDESCENCEMAP_UV " + n.iridescenceMapUv
                : "",
              n.iridescenceThicknessMapUv
                ? "#define IRIDESCENCE_THICKNESSMAP_UV " +
                  n.iridescenceThicknessMapUv
                : "",
              n.sheenColorMapUv
                ? "#define SHEEN_COLORMAP_UV " + n.sheenColorMapUv
                : "",
              n.sheenRoughnessMapUv
                ? "#define SHEEN_ROUGHNESSMAP_UV " + n.sheenRoughnessMapUv
                : "",
              n.specularMapUv
                ? "#define SPECULARMAP_UV " + n.specularMapUv
                : "",
              n.specularColorMapUv
                ? "#define SPECULAR_COLORMAP_UV " + n.specularColorMapUv
                : "",
              n.specularIntensityMapUv
                ? "#define SPECULAR_INTENSITYMAP_UV " + n.specularIntensityMapUv
                : "",
              n.transmissionMapUv
                ? "#define TRANSMISSIONMAP_UV " + n.transmissionMapUv
                : "",
              n.thicknessMapUv
                ? "#define THICKNESSMAP_UV " + n.thicknessMapUv
                : "",
              n.vertexTangents && !1 === n.flatShading
                ? "#define USE_TANGENT"
                : "",
              n.vertexColors ? "#define USE_COLOR" : "",
              n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
              n.vertexUv1s ? "#define USE_UV1" : "",
              n.vertexUv2s ? "#define USE_UV2" : "",
              n.vertexUv3s ? "#define USE_UV3" : "",
              n.pointsUvs ? "#define USE_POINTS_UV" : "",
              n.flatShading ? "#define FLAT_SHADED" : "",
              n.skinning ? "#define USE_SKINNING" : "",
              n.morphTargets ? "#define USE_MORPHTARGETS" : "",
              n.morphNormals && !1 === n.flatShading
                ? "#define USE_MORPHNORMALS"
                : "",
              n.morphColors && n.isWebGL2 ? "#define USE_MORPHCOLORS" : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_TEXTURE"
                : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_TEXTURE_STRIDE " + n.morphTextureStride
                : "",
              n.morphTargetsCount > 0 && n.isWebGL2
                ? "#define MORPHTARGETS_COUNT " + n.morphTargetsCount
                : "",
              n.doubleSided ? "#define DOUBLE_SIDED" : "",
              n.flipSided ? "#define FLIP_SIDED" : "",
              n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
              n.shadowMapEnabled ? "#define " + c : "",
              n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
              n.numLightProbes > 0 ? "#define USE_LIGHT_PROBES" : "",
              n.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
              n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
              n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
                ? "#define USE_LOGDEPTHBUF_EXT"
                : "",
              "uniform mat4 modelMatrix;",
              "uniform mat4 modelViewMatrix;",
              "uniform mat4 projectionMatrix;",
              "uniform mat4 viewMatrix;",
              "uniform mat3 normalMatrix;",
              "uniform vec3 cameraPosition;",
              "uniform bool isOrthographic;",
              "#ifdef USE_INSTANCING",
              "\tattribute mat4 instanceMatrix;",
              "#endif",
              "#ifdef USE_INSTANCING_COLOR",
              "\tattribute vec3 instanceColor;",
              "#endif",
              "attribute vec3 position;",
              "attribute vec3 normal;",
              "attribute vec2 uv;",
              "#ifdef USE_UV1",
              "\tattribute vec2 uv1;",
              "#endif",
              "#ifdef USE_UV2",
              "\tattribute vec2 uv2;",
              "#endif",
              "#ifdef USE_UV3",
              "\tattribute vec2 uv3;",
              "#endif",
              "#ifdef USE_TANGENT",
              "\tattribute vec4 tangent;",
              "#endif",
              "#if defined( USE_COLOR_ALPHA )",
              "\tattribute vec4 color;",
              "#elif defined( USE_COLOR )",
              "\tattribute vec3 color;",
              "#endif",
              "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
              "\tattribute vec3 morphTarget0;",
              "\tattribute vec3 morphTarget1;",
              "\tattribute vec3 morphTarget2;",
              "\tattribute vec3 morphTarget3;",
              "\t#ifdef USE_MORPHNORMALS",
              "\t\tattribute vec3 morphNormal0;",
              "\t\tattribute vec3 morphNormal1;",
              "\t\tattribute vec3 morphNormal2;",
              "\t\tattribute vec3 morphNormal3;",
              "\t#else",
              "\t\tattribute vec3 morphTarget4;",
              "\t\tattribute vec3 morphTarget5;",
              "\t\tattribute vec3 morphTarget6;",
              "\t\tattribute vec3 morphTarget7;",
              "\t#endif",
              "#endif",
              "#ifdef USE_SKINNING",
              "\tattribute vec4 skinIndex;",
              "\tattribute vec4 skinWeight;",
              "#endif",
              "\n",
            ]
              .filter(Hi)
              .join("\n")),
            (i = [
              v,
              Zi(n),
              "#define SHADER_TYPE " + n.shaderType,
              "#define SHADER_NAME " + n.shaderName,
              m,
              n.useFog && n.fog ? "#define USE_FOG" : "",
              n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
              n.map ? "#define USE_MAP" : "",
              n.matcap ? "#define USE_MATCAP" : "",
              n.envMap ? "#define USE_ENVMAP" : "",
              n.envMap ? "#define " + f : "",
              n.envMap ? "#define " + d : "",
              n.envMap ? "#define " + h : "",
              p ? "#define CUBEUV_TEXEL_WIDTH " + p.texelWidth : "",
              p ? "#define CUBEUV_TEXEL_HEIGHT " + p.texelHeight : "",
              p ? "#define CUBEUV_MAX_MIP " + p.maxMip + ".0" : "",
              n.lightMap ? "#define USE_LIGHTMAP" : "",
              n.aoMap ? "#define USE_AOMAP" : "",
              n.bumpMap ? "#define USE_BUMPMAP" : "",
              n.normalMap ? "#define USE_NORMALMAP" : "",
              n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
              n.normalMapTangentSpace
                ? "#define USE_NORMALMAP_TANGENTSPACE"
                : "",
              n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
              n.anisotropy ? "#define USE_ANISOTROPY" : "",
              n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
              n.clearcoat ? "#define USE_CLEARCOAT" : "",
              n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
              n.clearcoatRoughnessMap
                ? "#define USE_CLEARCOAT_ROUGHNESSMAP"
                : "",
              n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
              n.iridescence ? "#define USE_IRIDESCENCE" : "",
              n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
              n.iridescenceThicknessMap
                ? "#define USE_IRIDESCENCE_THICKNESSMAP"
                : "",
              n.specularMap ? "#define USE_SPECULARMAP" : "",
              n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
              n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
              n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
              n.metalnessMap ? "#define USE_METALNESSMAP" : "",
              n.alphaMap ? "#define USE_ALPHAMAP" : "",
              n.alphaTest ? "#define USE_ALPHATEST" : "",
              n.alphaHash ? "#define USE_ALPHAHASH" : "",
              n.sheen ? "#define USE_SHEEN" : "",
              n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
              n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
              n.transmission ? "#define USE_TRANSMISSION" : "",
              n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
              n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
              n.vertexTangents && !1 === n.flatShading
                ? "#define USE_TANGENT"
                : "",
              n.vertexColors || n.instancingColor ? "#define USE_COLOR" : "",
              n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
              n.vertexUv1s ? "#define USE_UV1" : "",
              n.vertexUv2s ? "#define USE_UV2" : "",
              n.vertexUv3s ? "#define USE_UV3" : "",
              n.pointsUvs ? "#define USE_POINTS_UV" : "",
              n.gradientMap ? "#define USE_GRADIENTMAP" : "",
              n.flatShading ? "#define FLAT_SHADED" : "",
              n.doubleSided ? "#define DOUBLE_SIDED" : "",
              n.flipSided ? "#define FLIP_SIDED" : "",
              n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
              n.shadowMapEnabled ? "#define " + c : "",
              n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
              n.numLightProbes > 0 ? "#define USE_LIGHT_PROBES" : "",
              n.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
              n.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
              n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
              n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
                ? "#define USE_LOGDEPTHBUF_EXT"
                : "",
              "uniform mat4 viewMatrix;",
              "uniform vec3 cameraPosition;",
              "uniform bool isOrthographic;",
              n.toneMapping !== N ? "#define TONE_MAPPING" : "",
              n.toneMapping !== N ? $r.tonemapping_pars_fragment : "",
              n.toneMapping !== N ? Bi("toneMapping", n.toneMapping) : "",
              n.dithering ? "#define DITHERING" : "",
              n.opaque ? "#define OPAQUE" : "",
              $r.colorspace_pars_fragment,
              zi("linearToOutputTexel", n.outputColorSpace),
              n.useDepthPacking
                ? "#define DEPTH_PACKING " + n.depthPacking
                : "",
              "\n",
            ]
              .filter(Hi)
              .join("\n"))),
          (l = Vi((l = Gi((l = ji(l)), n)), n)),
          (u = Vi((u = Gi((u = ji(u)), n)), n)),
          (l = Ki(l)),
          (u = Ki(u)),
          n.isWebGL2 &&
            !0 !== n.isRawShaderMaterial &&
            ((y = "#version 300 es\n"),
            (a =
              [
                "precision mediump sampler2DArray;",
                "#define attribute in",
                "#define varying out",
                "#define texture2D texture",
              ].join("\n") +
              "\n" +
              a),
            (i =
              [
                "precision mediump sampler2DArray;",
                "#define varying in",
                n.glslVersion === Oe
                  ? ""
                  : "layout(location = 0) out highp vec4 pc_fragColor;",
                n.glslVersion === Oe ? "" : "#define gl_FragColor pc_fragColor",
                "#define gl_FragDepthEXT gl_FragDepth",
                "#define texture2D texture",
                "#define textureCube texture",
                "#define texture2DProj textureProj",
                "#define texture2DLodEXT textureLod",
                "#define texture2DProjLodEXT textureProjLod",
                "#define textureCubeLodEXT textureLod",
                "#define texture2DGradEXT textureGrad",
                "#define texture2DProjGradEXT textureProjGrad",
                "#define textureCubeGradEXT textureGrad",
              ].join("\n") +
              "\n" +
              i));
        var _,
          b,
          x = y + a + l,
          S = y + i + u,
          E = Ii(o, o.VERTEX_SHADER, x),
          w = Ii(o, o.FRAGMENT_SHADER, S);
        function T(t) {
          if (e.debug.checkShaderErrors) {
            var n = o.getProgramInfoLog(g).trim(),
              r = o.getShaderInfoLog(E).trim(),
              s = o.getShaderInfoLog(w).trim(),
              l = !0,
              u = !0;
            if (!1 === o.getProgramParameter(g, o.LINK_STATUS))
              if (((l = !1), "function" === typeof e.debug.onShaderError))
                e.debug.onShaderError(o, g, E, w);
              else {
                var c = Fi(o, E, "vertex"),
                  f = Fi(o, w, "fragment");
                console.error(
                  "THREE.WebGLProgram: Shader Error " +
                    o.getError() +
                    " - VALIDATE_STATUS " +
                    o.getProgramParameter(g, o.VALIDATE_STATUS) +
                    "\n\nProgram Info Log: " +
                    n +
                    "\n" +
                    c +
                    "\n" +
                    f
                );
              }
            else
              "" !== n
                ? console.warn("THREE.WebGLProgram: Program Info Log:", n)
                : ("" !== r && "" !== s) || (u = !1);
            u &&
              (t.diagnostics = {
                runnable: l,
                programLog: n,
                vertexShader: { log: r, prefix: a },
                fragmentShader: { log: s, prefix: i },
              });
          }
          o.deleteShader(E),
            o.deleteShader(w),
            (_ = new Di(o, g)),
            (b = (function (e, t) {
              for (
                var n = {},
                  r = e.getProgramParameter(t, e.ACTIVE_ATTRIBUTES),
                  a = 0;
                a < r;
                a++
              ) {
                var i = e.getActiveAttrib(t, a),
                  o = i.name,
                  s = 1;
                i.type === e.FLOAT_MAT2 && (s = 2),
                  i.type === e.FLOAT_MAT3 && (s = 3),
                  i.type === e.FLOAT_MAT4 && (s = 4),
                  (n[o] = {
                    type: i.type,
                    location: e.getAttribLocation(t, o),
                    locationSize: s,
                  });
              }
              return n;
            })(o, g));
        }
        o.attachShader(g, E),
          o.attachShader(g, w),
          void 0 !== n.index0AttributeName
            ? o.bindAttribLocation(g, 0, n.index0AttributeName)
            : !0 === n.morphTargets && o.bindAttribLocation(g, 0, "position"),
          o.linkProgram(g),
          (this.getUniforms = function () {
            return void 0 === _ && T(this), _;
          }),
          (this.getAttributes = function () {
            return void 0 === b && T(this), b;
          });
        var M = !1 === n.rendererExtensionParallelShaderCompile;
        return (
          (this.isReady = function () {
            return !1 === M && (M = o.getProgramParameter(g, Oi)), M;
          }),
          (this.destroy = function () {
            r.releaseStatesOfProgram(this),
              o.deleteProgram(g),
              (this.program = void 0);
          }),
          (this.type = n.shaderType),
          (this.name = n.shaderName),
          (this.id = Ni++),
          (this.cacheKey = t),
          (this.usedTimes = 1),
          (this.program = g),
          (this.vertexShader = E),
          (this.fragmentShader = w),
          this
        );
      }
      var Qi = 0,
        eo = (function () {
          function e() {
            w(this, e),
              (this.shaderCache = new Map()),
              (this.materialCache = new Map());
          }
          return (
            M(e, [
              {
                key: "update",
                value: function (e) {
                  var t = e.vertexShader,
                    n = e.fragmentShader,
                    r = this._getShaderStage(t),
                    a = this._getShaderStage(n),
                    i = this._getShaderCacheForMaterial(e);
                  return (
                    !1 === i.has(r) && (i.add(r), r.usedTimes++),
                    !1 === i.has(a) && (i.add(a), a.usedTimes++),
                    this
                  );
                },
              },
              {
                key: "remove",
                value: function (e) {
                  var t,
                    n = h(this.materialCache.get(e));
                  try {
                    for (n.s(); !(t = n.n()).done; ) {
                      var r = t.value;
                      r.usedTimes--,
                        0 === r.usedTimes && this.shaderCache.delete(r.code);
                    }
                  } catch (a) {
                    n.e(a);
                  } finally {
                    n.f();
                  }
                  return this.materialCache.delete(e), this;
                },
              },
              {
                key: "getVertexShaderID",
                value: function (e) {
                  return this._getShaderStage(e.vertexShader).id;
                },
              },
              {
                key: "getFragmentShaderID",
                value: function (e) {
                  return this._getShaderStage(e.fragmentShader).id;
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.shaderCache.clear(), this.materialCache.clear();
                },
              },
              {
                key: "_getShaderCacheForMaterial",
                value: function (e) {
                  var t = this.materialCache,
                    n = t.get(e);
                  return void 0 === n && ((n = new Set()), t.set(e, n)), n;
                },
              },
              {
                key: "_getShaderStage",
                value: function (e) {
                  var t = this.shaderCache,
                    n = t.get(e);
                  return void 0 === n && ((n = new to(e)), t.set(e, n)), n;
                },
              },
            ]),
            e
          );
        })(),
        to = M(function e(t) {
          w(this, e), (this.id = Qi++), (this.code = t), (this.usedTimes = 0);
        });
      function no(e, t, n, r, a, i, o) {
        var s = new hn(),
          l = new eo(),
          u = [],
          c = a.isWebGL2,
          f = a.logarithmicDepthBuffer,
          d = a.vertexTextures,
          h = a.precision,
          p = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "toon",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            MeshMatcapMaterial: "matcap",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
            SpriteMaterial: "sprite",
          };
        function v(e) {
          return 0 === e ? "uv" : "uv".concat(e);
        }
        return {
          getParameters: function (i, s, u, m, g) {
            var y = m.fog,
              _ = g.geometry,
              b = i.isMeshStandardMaterial ? m.environment : null,
              x = (i.isMeshStandardMaterial ? n : t).get(i.envMap || b),
              S = x && x.mapping === q ? x.image.height : null,
              E = p[i.type];
            null !== i.precision &&
              (h = a.getMaxPrecision(i.precision)) !== i.precision &&
              console.warn(
                "THREE.WebGLProgram.getParameters:",
                i.precision,
                "not supported, using",
                h,
                "instead."
              );
            var w,
              T,
              M,
              A,
              C =
                _.morphAttributes.position ||
                _.morphAttributes.normal ||
                _.morphAttributes.color,
              k = void 0 !== C ? C.length : 0,
              R = 0;
            if (
              (void 0 !== _.morphAttributes.position && (R = 1),
              void 0 !== _.morphAttributes.normal && (R = 2),
              void 0 !== _.morphAttributes.color && (R = 3),
              E)
            ) {
              var P = Jr[E];
              (w = P.vertexShader), (T = P.fragmentShader);
            } else
              (w = i.vertexShader),
                (T = i.fragmentShader),
                l.update(i),
                (M = l.getVertexShaderID(i)),
                (A = l.getFragmentShaderID(i));
            var L = e.getRenderTarget(),
              D = !0 === g.isInstancedMesh,
              I = !!i.map,
              O = !!i.matcap,
              F = !!x,
              z = !!i.aoMap,
              B = !!i.lightMap,
              H = !!i.bumpMap,
              G = !!i.normalMap,
              V = !!i.displacementMap,
              W = !!i.emissiveMap,
              j = !!i.metalnessMap,
              X = !!i.roughnessMap,
              Y = i.anisotropy > 0,
              K = i.clearcoat > 0,
              $ = i.iridescence > 0,
              Z = i.sheen > 0,
              J = i.transmission > 0,
              Q = Y && !!i.anisotropyMap,
              ee = K && !!i.clearcoatMap,
              te = K && !!i.clearcoatNormalMap,
              ne = K && !!i.clearcoatRoughnessMap,
              re = $ && !!i.iridescenceMap,
              ae = $ && !!i.iridescenceThicknessMap,
              ie = Z && !!i.sheenColorMap,
              oe = Z && !!i.sheenRoughnessMap,
              se = !!i.specularMap,
              le = !!i.specularColorMap,
              ue = !!i.specularIntensityMap,
              ce = J && !!i.transmissionMap,
              fe = J && !!i.thicknessMap,
              de = !!i.gradientMap,
              he = !!i.alphaMap,
              pe = i.alphaTest > 0,
              ve = !!i.alphaHash,
              me = !!i.extensions,
              ge = !!_.attributes.uv1,
              ye = !!_.attributes.uv2,
              _e = !!_.attributes.uv3,
              be = N;
            return (
              i.toneMapped &&
                ((null !== L && !0 !== L.isXRRenderTarget) ||
                  (be = e.toneMapping)),
              {
                isWebGL2: c,
                shaderID: E,
                shaderType: i.type,
                shaderName: i.name,
                vertexShader: w,
                fragmentShader: T,
                defines: i.defines,
                customVertexShaderID: M,
                customFragmentShaderID: A,
                isRawShaderMaterial: !0 === i.isRawShaderMaterial,
                glslVersion: i.glslVersion,
                precision: h,
                instancing: D,
                instancingColor: D && null !== g.instanceColor,
                supportsVertexTextures: d,
                outputColorSpace:
                  null === L
                    ? e.outputColorSpace
                    : !0 === L.isXRRenderTarget
                    ? L.texture.colorSpace
                    : Ae,
                map: I,
                matcap: O,
                envMap: F,
                envMapMode: F && x.mapping,
                envMapCubeUVHeight: S,
                aoMap: z,
                lightMap: B,
                bumpMap: H,
                normalMap: G,
                displacementMap: d && V,
                emissiveMap: W,
                normalMapObjectSpace: G && 1 === i.normalMapType,
                normalMapTangentSpace: G && 0 === i.normalMapType,
                metalnessMap: j,
                roughnessMap: X,
                anisotropy: Y,
                anisotropyMap: Q,
                clearcoat: K,
                clearcoatMap: ee,
                clearcoatNormalMap: te,
                clearcoatRoughnessMap: ne,
                iridescence: $,
                iridescenceMap: re,
                iridescenceThicknessMap: ae,
                sheen: Z,
                sheenColorMap: ie,
                sheenRoughnessMap: oe,
                specularMap: se,
                specularColorMap: le,
                specularIntensityMap: ue,
                transmission: J,
                transmissionMap: ce,
                thicknessMap: fe,
                gradientMap: de,
                opaque: !1 === i.transparent && 1 === i.blending,
                alphaMap: he,
                alphaTest: pe,
                alphaHash: ve,
                combine: i.combine,
                mapUv: I && v(i.map.channel),
                aoMapUv: z && v(i.aoMap.channel),
                lightMapUv: B && v(i.lightMap.channel),
                bumpMapUv: H && v(i.bumpMap.channel),
                normalMapUv: G && v(i.normalMap.channel),
                displacementMapUv: V && v(i.displacementMap.channel),
                emissiveMapUv: W && v(i.emissiveMap.channel),
                metalnessMapUv: j && v(i.metalnessMap.channel),
                roughnessMapUv: X && v(i.roughnessMap.channel),
                anisotropyMapUv: Q && v(i.anisotropyMap.channel),
                clearcoatMapUv: ee && v(i.clearcoatMap.channel),
                clearcoatNormalMapUv: te && v(i.clearcoatNormalMap.channel),
                clearcoatRoughnessMapUv:
                  ne && v(i.clearcoatRoughnessMap.channel),
                iridescenceMapUv: re && v(i.iridescenceMap.channel),
                iridescenceThicknessMapUv:
                  ae && v(i.iridescenceThicknessMap.channel),
                sheenColorMapUv: ie && v(i.sheenColorMap.channel),
                sheenRoughnessMapUv: oe && v(i.sheenRoughnessMap.channel),
                specularMapUv: se && v(i.specularMap.channel),
                specularColorMapUv: le && v(i.specularColorMap.channel),
                specularIntensityMapUv: ue && v(i.specularIntensityMap.channel),
                transmissionMapUv: ce && v(i.transmissionMap.channel),
                thicknessMapUv: fe && v(i.thicknessMap.channel),
                alphaMapUv: he && v(i.alphaMap.channel),
                vertexTangents: !!_.attributes.tangent && (G || Y),
                vertexColors: i.vertexColors,
                vertexAlphas:
                  !0 === i.vertexColors &&
                  !!_.attributes.color &&
                  4 === _.attributes.color.itemSize,
                vertexUv1s: ge,
                vertexUv2s: ye,
                vertexUv3s: _e,
                pointsUvs: !0 === g.isPoints && !!_.attributes.uv && (I || he),
                fog: !!y,
                useFog: !0 === i.fog,
                fogExp2: y && y.isFogExp2,
                flatShading: !0 === i.flatShading,
                sizeAttenuation: !0 === i.sizeAttenuation,
                logarithmicDepthBuffer: f,
                skinning: !0 === g.isSkinnedMesh,
                morphTargets: void 0 !== _.morphAttributes.position,
                morphNormals: void 0 !== _.morphAttributes.normal,
                morphColors: void 0 !== _.morphAttributes.color,
                morphTargetsCount: k,
                morphTextureStride: R,
                numDirLights: s.directional.length,
                numPointLights: s.point.length,
                numSpotLights: s.spot.length,
                numSpotLightMaps: s.spotLightMap.length,
                numRectAreaLights: s.rectArea.length,
                numHemiLights: s.hemi.length,
                numDirLightShadows: s.directionalShadowMap.length,
                numPointLightShadows: s.pointShadowMap.length,
                numSpotLightShadows: s.spotShadowMap.length,
                numSpotLightShadowsWithMaps: s.numSpotLightShadowsWithMaps,
                numLightProbes: s.numLightProbes,
                numClippingPlanes: o.numPlanes,
                numClipIntersection: o.numIntersection,
                dithering: i.dithering,
                shadowMapEnabled: e.shadowMap.enabled && u.length > 0,
                shadowMapType: e.shadowMap.type,
                toneMapping: be,
                useLegacyLights: e._useLegacyLights,
                decodeVideoTexture:
                  I &&
                  !0 === i.map.isVideoTexture &&
                  ct.getTransfer(i.map.colorSpace) === Pe,
                premultipliedAlpha: i.premultipliedAlpha,
                doubleSided: 2 === i.side,
                flipSided: i.side === U,
                useDepthPacking: i.depthPacking >= 0,
                depthPacking: i.depthPacking || 0,
                index0AttributeName: i.index0AttributeName,
                extensionDerivatives: me && !0 === i.extensions.derivatives,
                extensionFragDepth: me && !0 === i.extensions.fragDepth,
                extensionDrawBuffers: me && !0 === i.extensions.drawBuffers,
                extensionShaderTextureLOD:
                  me && !0 === i.extensions.shaderTextureLOD,
                rendererExtensionFragDepth: c || r.has("EXT_frag_depth"),
                rendererExtensionDrawBuffers: c || r.has("WEBGL_draw_buffers"),
                rendererExtensionShaderTextureLod:
                  c || r.has("EXT_shader_texture_lod"),
                rendererExtensionParallelShaderCompile: r.has(
                  "KHR_parallel_shader_compile"
                ),
                customProgramCacheKey: i.customProgramCacheKey(),
              }
            );
          },
          getProgramCacheKey: function (t) {
            var n = [];
            if (
              (t.shaderID
                ? n.push(t.shaderID)
                : (n.push(t.customVertexShaderID),
                  n.push(t.customFragmentShaderID)),
              void 0 !== t.defines)
            )
              for (var r in t.defines) n.push(r), n.push(t.defines[r]);
            return (
              !1 === t.isRawShaderMaterial &&
                (!(function (e, t) {
                  e.push(t.precision),
                    e.push(t.outputColorSpace),
                    e.push(t.envMapMode),
                    e.push(t.envMapCubeUVHeight),
                    e.push(t.mapUv),
                    e.push(t.alphaMapUv),
                    e.push(t.lightMapUv),
                    e.push(t.aoMapUv),
                    e.push(t.bumpMapUv),
                    e.push(t.normalMapUv),
                    e.push(t.displacementMapUv),
                    e.push(t.emissiveMapUv),
                    e.push(t.metalnessMapUv),
                    e.push(t.roughnessMapUv),
                    e.push(t.anisotropyMapUv),
                    e.push(t.clearcoatMapUv),
                    e.push(t.clearcoatNormalMapUv),
                    e.push(t.clearcoatRoughnessMapUv),
                    e.push(t.iridescenceMapUv),
                    e.push(t.iridescenceThicknessMapUv),
                    e.push(t.sheenColorMapUv),
                    e.push(t.sheenRoughnessMapUv),
                    e.push(t.specularMapUv),
                    e.push(t.specularColorMapUv),
                    e.push(t.specularIntensityMapUv),
                    e.push(t.transmissionMapUv),
                    e.push(t.thicknessMapUv),
                    e.push(t.combine),
                    e.push(t.fogExp2),
                    e.push(t.sizeAttenuation),
                    e.push(t.morphTargetsCount),
                    e.push(t.morphAttributeCount),
                    e.push(t.numDirLights),
                    e.push(t.numPointLights),
                    e.push(t.numSpotLights),
                    e.push(t.numSpotLightMaps),
                    e.push(t.numHemiLights),
                    e.push(t.numRectAreaLights),
                    e.push(t.numDirLightShadows),
                    e.push(t.numPointLightShadows),
                    e.push(t.numSpotLightShadows),
                    e.push(t.numSpotLightShadowsWithMaps),
                    e.push(t.numLightProbes),
                    e.push(t.shadowMapType),
                    e.push(t.toneMapping),
                    e.push(t.numClippingPlanes),
                    e.push(t.numClipIntersection),
                    e.push(t.depthPacking);
                })(n, t),
                (function (e, t) {
                  s.disableAll(), t.isWebGL2 && s.enable(0);
                  t.supportsVertexTextures && s.enable(1);
                  t.instancing && s.enable(2);
                  t.instancingColor && s.enable(3);
                  t.matcap && s.enable(4);
                  t.envMap && s.enable(5);
                  t.normalMapObjectSpace && s.enable(6);
                  t.normalMapTangentSpace && s.enable(7);
                  t.clearcoat && s.enable(8);
                  t.iridescence && s.enable(9);
                  t.alphaTest && s.enable(10);
                  t.vertexColors && s.enable(11);
                  t.vertexAlphas && s.enable(12);
                  t.vertexUv1s && s.enable(13);
                  t.vertexUv2s && s.enable(14);
                  t.vertexUv3s && s.enable(15);
                  t.vertexTangents && s.enable(16);
                  t.anisotropy && s.enable(17);
                  t.alphaHash && s.enable(18);
                  e.push(s.mask), s.disableAll(), t.fog && s.enable(0);
                  t.useFog && s.enable(1);
                  t.flatShading && s.enable(2);
                  t.logarithmicDepthBuffer && s.enable(3);
                  t.skinning && s.enable(4);
                  t.morphTargets && s.enable(5);
                  t.morphNormals && s.enable(6);
                  t.morphColors && s.enable(7);
                  t.premultipliedAlpha && s.enable(8);
                  t.shadowMapEnabled && s.enable(9);
                  t.useLegacyLights && s.enable(10);
                  t.doubleSided && s.enable(11);
                  t.flipSided && s.enable(12);
                  t.useDepthPacking && s.enable(13);
                  t.dithering && s.enable(14);
                  t.transmission && s.enable(15);
                  t.sheen && s.enable(16);
                  t.opaque && s.enable(17);
                  t.pointsUvs && s.enable(18);
                  t.decodeVideoTexture && s.enable(19);
                  e.push(s.mask);
                })(n, t),
                n.push(e.outputColorSpace)),
              n.push(t.customProgramCacheKey),
              n.join()
            );
          },
          getUniforms: function (e) {
            var t,
              n = p[e.type];
            if (n) {
              var r = Jr[n];
              t = Ur.clone(r.uniforms);
            } else t = e.uniforms;
            return t;
          },
          acquireProgram: function (t, n) {
            for (var r, a = 0, o = u.length; a < o; a++) {
              var s = u[a];
              if (s.cacheKey === n) {
                ++(r = s).usedTimes;
                break;
              }
            }
            return void 0 === r && ((r = new Ji(e, n, t, i)), u.push(r)), r;
          },
          releaseProgram: function (e) {
            if (0 === --e.usedTimes) {
              var t = u.indexOf(e);
              (u[t] = u[u.length - 1]), u.pop(), e.destroy();
            }
          },
          releaseShaderCache: function (e) {
            l.remove(e);
          },
          programs: u,
          dispose: function () {
            l.dispose();
          },
        };
      }
      function ro() {
        var e = new WeakMap();
        return {
          get: function (t) {
            var n = e.get(t);
            return void 0 === n && ((n = {}), e.set(t, n)), n;
          },
          remove: function (t) {
            e.delete(t);
          },
          update: function (t, n, r) {
            e.get(t)[n] = r;
          },
          dispose: function () {
            e = new WeakMap();
          },
        };
      }
      function ao(e, t) {
        return e.groupOrder !== t.groupOrder
          ? e.groupOrder - t.groupOrder
          : e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.material.id !== t.material.id
          ? e.material.id - t.material.id
          : e.z !== t.z
          ? e.z - t.z
          : e.id - t.id;
      }
      function io(e, t) {
        return e.groupOrder !== t.groupOrder
          ? e.groupOrder - t.groupOrder
          : e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.z !== t.z
          ? t.z - e.z
          : e.id - t.id;
      }
      function oo() {
        var e = [],
          t = 0,
          n = [],
          r = [],
          a = [];
        function i(n, r, a, i, o, s) {
          var l = e[t];
          return (
            void 0 === l
              ? ((l = {
                  id: n.id,
                  object: n,
                  geometry: r,
                  material: a,
                  groupOrder: i,
                  renderOrder: n.renderOrder,
                  z: o,
                  group: s,
                }),
                (e[t] = l))
              : ((l.id = n.id),
                (l.object = n),
                (l.geometry = r),
                (l.material = a),
                (l.groupOrder = i),
                (l.renderOrder = n.renderOrder),
                (l.z = o),
                (l.group = s)),
            t++,
            l
          );
        }
        return {
          opaque: n,
          transmissive: r,
          transparent: a,
          init: function () {
            (t = 0), (n.length = 0), (r.length = 0), (a.length = 0);
          },
          push: function (e, t, o, s, l, u) {
            var c = i(e, t, o, s, l, u);
            o.transmission > 0
              ? r.push(c)
              : !0 === o.transparent
              ? a.push(c)
              : n.push(c);
          },
          unshift: function (e, t, o, s, l, u) {
            var c = i(e, t, o, s, l, u);
            o.transmission > 0
              ? r.unshift(c)
              : !0 === o.transparent
              ? a.unshift(c)
              : n.unshift(c);
          },
          finish: function () {
            for (var n = t, r = e.length; n < r; n++) {
              var a = e[n];
              if (null === a.id) break;
              (a.id = null),
                (a.object = null),
                (a.geometry = null),
                (a.material = null),
                (a.group = null);
            }
          },
          sort: function (e, t) {
            n.length > 1 && n.sort(e || ao),
              r.length > 1 && r.sort(t || io),
              a.length > 1 && a.sort(t || io);
          },
        };
      }
      function so() {
        var e = new WeakMap();
        return {
          get: function (t, n) {
            var r,
              a = e.get(t);
            return (
              void 0 === a
                ? ((r = new oo()), e.set(t, [r]))
                : n >= a.length
                ? ((r = new oo()), a.push(r))
                : (r = a[n]),
              r
            );
          },
          dispose: function () {
            e = new WeakMap();
          },
        };
      }
      function lo() {
        var e = {};
        return {
          get: function (t) {
            if (void 0 !== e[t.id]) return e[t.id];
            var n;
            switch (t.type) {
              case "DirectionalLight":
                n = { direction: new Tt(), color: new Wn() };
                break;
              case "SpotLight":
                n = {
                  position: new Tt(),
                  direction: new Tt(),
                  color: new Wn(),
                  distance: 0,
                  coneCos: 0,
                  penumbraCos: 0,
                  decay: 0,
                };
                break;
              case "PointLight":
                n = {
                  position: new Tt(),
                  color: new Wn(),
                  distance: 0,
                  decay: 0,
                };
                break;
              case "HemisphereLight":
                n = {
                  direction: new Tt(),
                  skyColor: new Wn(),
                  groundColor: new Wn(),
                };
                break;
              case "RectAreaLight":
                n = {
                  color: new Wn(),
                  position: new Tt(),
                  halfWidth: new Tt(),
                  halfHeight: new Tt(),
                };
            }
            return (e[t.id] = n), n;
          },
        };
      }
      var uo = 0;
      function co(e, t) {
        return (
          (t.castShadow ? 2 : 0) -
          (e.castShadow ? 2 : 0) +
          (t.map ? 1 : 0) -
          (e.map ? 1 : 0)
        );
      }
      function fo(e, t) {
        for (
          var n = new lo(),
            r = (function () {
              var e = {};
              return {
                get: function (t) {
                  if (void 0 !== e[t.id]) return e[t.id];
                  var n;
                  switch (t.type) {
                    case "DirectionalLight":
                    case "SpotLight":
                      n = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new Je(),
                      };
                      break;
                    case "PointLight":
                      n = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new Je(),
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3,
                      };
                  }
                  return (e[t.id] = n), n;
                },
              };
            })(),
            a = {
              version: 0,
              hash: {
                directionalLength: -1,
                pointLength: -1,
                spotLength: -1,
                rectAreaLength: -1,
                hemiLength: -1,
                numDirectionalShadows: -1,
                numPointShadows: -1,
                numSpotShadows: -1,
                numSpotMaps: -1,
                numLightProbes: -1,
              },
              ambient: [0, 0, 0],
              probe: [],
              directional: [],
              directionalShadow: [],
              directionalShadowMap: [],
              directionalShadowMatrix: [],
              spot: [],
              spotLightMap: [],
              spotShadow: [],
              spotShadowMap: [],
              spotLightMatrix: [],
              rectArea: [],
              rectAreaLTC1: null,
              rectAreaLTC2: null,
              point: [],
              pointShadow: [],
              pointShadowMap: [],
              pointShadowMatrix: [],
              hemi: [],
              numSpotLightShadowsWithMaps: 0,
              numLightProbes: 0,
            },
            i = 0;
          i < 9;
          i++
        )
          a.probe.push(new Tt());
        var o = new Tt(),
          s = new tn(),
          l = new tn();
        return {
          setup: function (i, o) {
            for (var s = 0, l = 0, u = 0, c = 0; c < 9; c++)
              a.probe[c].set(0, 0, 0);
            var f = 0,
              d = 0,
              h = 0,
              p = 0,
              v = 0,
              m = 0,
              g = 0,
              y = 0,
              _ = 0,
              b = 0,
              x = 0;
            i.sort(co);
            for (
              var S = !0 === o ? Math.PI : 1, E = 0, w = i.length;
              E < w;
              E++
            ) {
              var T = i[E],
                M = T.color,
                A = T.intensity,
                C = T.distance,
                k = T.shadow && T.shadow.map ? T.shadow.map.texture : null;
              if (T.isAmbientLight)
                (s += M.r * A * S), (l += M.g * A * S), (u += M.b * A * S);
              else if (T.isLightProbe) {
                for (var R = 0; R < 9; R++)
                  a.probe[R].addScaledVector(T.sh.coefficients[R], A);
                x++;
              } else if (T.isDirectionalLight) {
                var P = n.get(T);
                if (
                  (P.color.copy(T.color).multiplyScalar(T.intensity * S),
                  T.castShadow)
                ) {
                  var U = T.shadow,
                    L = r.get(T);
                  (L.shadowBias = U.bias),
                    (L.shadowNormalBias = U.normalBias),
                    (L.shadowRadius = U.radius),
                    (L.shadowMapSize = U.mapSize),
                    (a.directionalShadow[f] = L),
                    (a.directionalShadowMap[f] = k),
                    (a.directionalShadowMatrix[f] = T.shadow.matrix),
                    m++;
                }
                (a.directional[f] = P), f++;
              } else if (T.isSpotLight) {
                var D = n.get(T);
                D.position.setFromMatrixPosition(T.matrixWorld),
                  D.color.copy(M).multiplyScalar(A * S),
                  (D.distance = C),
                  (D.coneCos = Math.cos(T.angle)),
                  (D.penumbraCos = Math.cos(T.angle * (1 - T.penumbra))),
                  (D.decay = T.decay),
                  (a.spot[h] = D);
                var I = T.shadow;
                if (
                  (T.map &&
                    ((a.spotLightMap[_] = T.map),
                    _++,
                    I.updateMatrices(T),
                    T.castShadow && b++),
                  (a.spotLightMatrix[h] = I.matrix),
                  T.castShadow)
                ) {
                  var O = r.get(T);
                  (O.shadowBias = I.bias),
                    (O.shadowNormalBias = I.normalBias),
                    (O.shadowRadius = I.radius),
                    (O.shadowMapSize = I.mapSize),
                    (a.spotShadow[h] = O),
                    (a.spotShadowMap[h] = k),
                    y++;
                }
                h++;
              } else if (T.isRectAreaLight) {
                var N = n.get(T);
                N.color.copy(M).multiplyScalar(A),
                  N.halfWidth.set(0.5 * T.width, 0, 0),
                  N.halfHeight.set(0, 0.5 * T.height, 0),
                  (a.rectArea[p] = N),
                  p++;
              } else if (T.isPointLight) {
                var F = n.get(T);
                if (
                  (F.color.copy(T.color).multiplyScalar(T.intensity * S),
                  (F.distance = T.distance),
                  (F.decay = T.decay),
                  T.castShadow)
                ) {
                  var z = T.shadow,
                    B = r.get(T);
                  (B.shadowBias = z.bias),
                    (B.shadowNormalBias = z.normalBias),
                    (B.shadowRadius = z.radius),
                    (B.shadowMapSize = z.mapSize),
                    (B.shadowCameraNear = z.camera.near),
                    (B.shadowCameraFar = z.camera.far),
                    (a.pointShadow[d] = B),
                    (a.pointShadowMap[d] = k),
                    (a.pointShadowMatrix[d] = T.shadow.matrix),
                    g++;
                }
                (a.point[d] = F), d++;
              } else if (T.isHemisphereLight) {
                var H = n.get(T);
                H.skyColor.copy(T.color).multiplyScalar(A * S),
                  H.groundColor.copy(T.groundColor).multiplyScalar(A * S),
                  (a.hemi[v] = H),
                  v++;
              }
            }
            p > 0 &&
              (t.isWebGL2 || !0 === e.has("OES_texture_float_linear")
                ? ((a.rectAreaLTC1 = Zr.LTC_FLOAT_1),
                  (a.rectAreaLTC2 = Zr.LTC_FLOAT_2))
                : !0 === e.has("OES_texture_half_float_linear")
                ? ((a.rectAreaLTC1 = Zr.LTC_HALF_1),
                  (a.rectAreaLTC2 = Zr.LTC_HALF_2))
                : console.error(
                    "THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions."
                  )),
              (a.ambient[0] = s),
              (a.ambient[1] = l),
              (a.ambient[2] = u);
            var G = a.hash;
            (G.directionalLength === f &&
              G.pointLength === d &&
              G.spotLength === h &&
              G.rectAreaLength === p &&
              G.hemiLength === v &&
              G.numDirectionalShadows === m &&
              G.numPointShadows === g &&
              G.numSpotShadows === y &&
              G.numSpotMaps === _ &&
              G.numLightProbes === x) ||
              ((a.directional.length = f),
              (a.spot.length = h),
              (a.rectArea.length = p),
              (a.point.length = d),
              (a.hemi.length = v),
              (a.directionalShadow.length = m),
              (a.directionalShadowMap.length = m),
              (a.pointShadow.length = g),
              (a.pointShadowMap.length = g),
              (a.spotShadow.length = y),
              (a.spotShadowMap.length = y),
              (a.directionalShadowMatrix.length = m),
              (a.pointShadowMatrix.length = g),
              (a.spotLightMatrix.length = y + _ - b),
              (a.spotLightMap.length = _),
              (a.numSpotLightShadowsWithMaps = b),
              (a.numLightProbes = x),
              (G.directionalLength = f),
              (G.pointLength = d),
              (G.spotLength = h),
              (G.rectAreaLength = p),
              (G.hemiLength = v),
              (G.numDirectionalShadows = m),
              (G.numPointShadows = g),
              (G.numSpotShadows = y),
              (G.numSpotMaps = _),
              (G.numLightProbes = x),
              (a.version = uo++));
          },
          setupView: function (e, t) {
            for (
              var n = 0,
                r = 0,
                i = 0,
                u = 0,
                c = 0,
                f = t.matrixWorldInverse,
                d = 0,
                h = e.length;
              d < h;
              d++
            ) {
              var p = e[d];
              if (p.isDirectionalLight) {
                var v = a.directional[n];
                v.direction.setFromMatrixPosition(p.matrixWorld),
                  o.setFromMatrixPosition(p.target.matrixWorld),
                  v.direction.sub(o),
                  v.direction.transformDirection(f),
                  n++;
              } else if (p.isSpotLight) {
                var m = a.spot[i];
                m.position.setFromMatrixPosition(p.matrixWorld),
                  m.position.applyMatrix4(f),
                  m.direction.setFromMatrixPosition(p.matrixWorld),
                  o.setFromMatrixPosition(p.target.matrixWorld),
                  m.direction.sub(o),
                  m.direction.transformDirection(f),
                  i++;
              } else if (p.isRectAreaLight) {
                var g = a.rectArea[u];
                g.position.setFromMatrixPosition(p.matrixWorld),
                  g.position.applyMatrix4(f),
                  l.identity(),
                  s.copy(p.matrixWorld),
                  s.premultiply(f),
                  l.extractRotation(s),
                  g.halfWidth.set(0.5 * p.width, 0, 0),
                  g.halfHeight.set(0, 0.5 * p.height, 0),
                  g.halfWidth.applyMatrix4(l),
                  g.halfHeight.applyMatrix4(l),
                  u++;
              } else if (p.isPointLight) {
                var y = a.point[r];
                y.position.setFromMatrixPosition(p.matrixWorld),
                  y.position.applyMatrix4(f),
                  r++;
              } else if (p.isHemisphereLight) {
                var _ = a.hemi[c];
                _.direction.setFromMatrixPosition(p.matrixWorld),
                  _.direction.transformDirection(f),
                  c++;
              }
            }
          },
          state: a,
        };
      }
      function ho(e, t) {
        var n = new fo(e, t),
          r = [],
          a = [];
        return {
          init: function () {
            (r.length = 0), (a.length = 0);
          },
          state: { lightsArray: r, shadowsArray: a, lights: n },
          setupLights: function (e) {
            n.setup(r, e);
          },
          setupLightsView: function (e) {
            n.setupView(r, e);
          },
          pushLight: function (e) {
            r.push(e);
          },
          pushShadow: function (e) {
            a.push(e);
          },
        };
      }
      function po(e, t) {
        var n = new WeakMap();
        return {
          get: function (r) {
            var a,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              o = n.get(r);
            return (
              void 0 === o
                ? ((a = new ho(e, t)), n.set(r, [a]))
                : i >= o.length
                ? ((a = new ho(e, t)), o.push(a))
                : (a = o[i]),
              a
            );
          },
          dispose: function () {
            n = new WeakMap();
          },
        };
      }
      var vo = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e) {
            var r;
            return (
              w(this, n),
              ((r = t.call(this)).isMeshDepthMaterial = !0),
              (r.type = "MeshDepthMaterial"),
              (r.depthPacking = 3200),
              (r.map = null),
              (r.alphaMap = null),
              (r.displacementMap = null),
              (r.displacementScale = 1),
              (r.displacementBias = 0),
              (r.wireframe = !1),
              (r.wireframeLinewidth = 1),
              r.setValues(e),
              r
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e),
                    (this.depthPacking = e.depthPacking),
                    (this.map = e.map),
                    (this.alphaMap = e.alphaMap),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    (this.wireframe = e.wireframe),
                    (this.wireframeLinewidth = e.wireframeLinewidth),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(qn),
        mo = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e) {
            var r;
            return (
              w(this, n),
              ((r = t.call(this)).isMeshDistanceMaterial = !0),
              (r.type = "MeshDistanceMaterial"),
              (r.map = null),
              (r.alphaMap = null),
              (r.displacementMap = null),
              (r.displacementScale = 1),
              (r.displacementBias = 0),
              r.setValues(e),
              r
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e),
                    (this.map = e.map),
                    (this.alphaMap = e.alphaMap),
                    (this.displacementMap = e.displacementMap),
                    (this.displacementScale = e.displacementScale),
                    (this.displacementBias = e.displacementBias),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(qn);
      function go(e, t, n) {
        var r,
          a = new Xr(),
          i = new Je(),
          o = new Je(),
          s = new _t(),
          l = new vo({ depthPacking: we }),
          u = new mo(),
          c = {},
          f = n.maxTextureSize,
          d = (S((r = {}), P, U), S(r, U, P), S(r, 2, 2), r),
          h = new Lr({
            defines: { VSM_SAMPLES: 8 },
            uniforms: {
              shadow_pass: { value: null },
              resolution: { value: new Je() },
              radius: { value: 4 },
            },
            vertexShader:
              "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",
            fragmentShader:
              "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",
          }),
          p = h.clone();
        p.defines.HORIZONTAL_PASS = 1;
        var v = new lr();
        v.setAttribute(
          "position",
          new Zn(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3)
        );
        var m = new Mr(v, h),
          g = this;
        (this.enabled = !1),
          (this.autoUpdate = !0),
          (this.needsUpdate = !1),
          (this.type = C);
        var y = this.type;
        function _(n, r) {
          var a = t.update(m);
          h.defines.VSM_SAMPLES !== n.blurSamples &&
            ((h.defines.VSM_SAMPLES = n.blurSamples),
            (p.defines.VSM_SAMPLES = n.blurSamples),
            (h.needsUpdate = !0),
            (p.needsUpdate = !0)),
            null === n.mapPass && (n.mapPass = new xt(i.x, i.y)),
            (h.uniforms.shadow_pass.value = n.map.texture),
            (h.uniforms.resolution.value = n.mapSize),
            (h.uniforms.radius.value = n.radius),
            e.setRenderTarget(n.mapPass),
            e.clear(),
            e.renderBufferDirect(r, null, a, h, m, null),
            (p.uniforms.shadow_pass.value = n.mapPass.texture),
            (p.uniforms.resolution.value = n.mapSize),
            (p.uniforms.radius.value = n.radius),
            e.setRenderTarget(n.map),
            e.clear(),
            e.renderBufferDirect(r, null, a, p, m, null);
        }
        function b(t, n, r, a) {
          var i = null,
            o =
              !0 === r.isPointLight
                ? t.customDistanceMaterial
                : t.customDepthMaterial;
          if (void 0 !== o) i = o;
          else if (
            ((i = !0 === r.isPointLight ? u : l),
            (e.localClippingEnabled &&
              !0 === n.clipShadows &&
              Array.isArray(n.clippingPlanes) &&
              0 !== n.clippingPlanes.length) ||
              (n.displacementMap && 0 !== n.displacementScale) ||
              (n.alphaMap && n.alphaTest > 0) ||
              (n.map && n.alphaTest > 0))
          ) {
            var s = i.uuid,
              f = n.uuid,
              h = c[s];
            void 0 === h && ((h = {}), (c[s] = h));
            var p = h[f];
            void 0 === p && ((p = i.clone()), (h[f] = p)), (i = p);
          }
          ((i.visible = n.visible),
          (i.wireframe = n.wireframe),
          (i.side =
            a === R
              ? null !== n.shadowSide
                ? n.shadowSide
                : n.side
              : null !== n.shadowSide
              ? n.shadowSide
              : d[n.side]),
          (i.alphaMap = n.alphaMap),
          (i.alphaTest = n.alphaTest),
          (i.map = n.map),
          (i.clipShadows = n.clipShadows),
          (i.clippingPlanes = n.clippingPlanes),
          (i.clipIntersection = n.clipIntersection),
          (i.displacementMap = n.displacementMap),
          (i.displacementScale = n.displacementScale),
          (i.displacementBias = n.displacementBias),
          (i.wireframeLinewidth = n.wireframeLinewidth),
          (i.linewidth = n.linewidth),
          !0 === r.isPointLight && !0 === i.isMeshDistanceMaterial) &&
            (e.properties.get(i).light = r);
          return i;
        }
        function x(n, r, i, o, s) {
          if (!1 !== n.visible) {
            if (
              n.layers.test(r.layers) &&
              (n.isMesh || n.isLine || n.isPoints) &&
              (n.castShadow || (n.receiveShadow && s === R)) &&
              (!n.frustumCulled || a.intersectsObject(n))
            ) {
              n.modelViewMatrix.multiplyMatrices(
                i.matrixWorldInverse,
                n.matrixWorld
              );
              var l = t.update(n),
                u = n.material;
              if (Array.isArray(u))
                for (var c = l.groups, f = 0, d = c.length; f < d; f++) {
                  var h = c[f],
                    p = u[h.materialIndex];
                  if (p && p.visible) {
                    var v = b(n, p, o, s);
                    e.renderBufferDirect(i, null, l, v, n, h);
                  }
                }
              else if (u.visible) {
                var m = b(n, u, o, s);
                e.renderBufferDirect(i, null, l, m, n, null);
              }
            }
            for (var g = n.children, y = 0, _ = g.length; y < _; y++)
              x(g[y], r, i, o, s);
          }
        }
        this.render = function (t, n, r) {
          if (
            !1 !== g.enabled &&
            (!1 !== g.autoUpdate || !1 !== g.needsUpdate) &&
            0 !== t.length
          ) {
            var l = e.getRenderTarget(),
              u = e.getActiveCubeFace(),
              c = e.getActiveMipmapLevel(),
              d = e.state;
            d.setBlending(0),
              d.buffers.color.setClear(1, 1, 1, 1),
              d.buffers.depth.setTest(!0),
              d.setScissorTest(!1);
            for (
              var h = y !== R && this.type === R,
                p = y === R && this.type !== R,
                v = 0,
                m = t.length;
              v < m;
              v++
            ) {
              var b = t[v],
                S = b.shadow;
              if (void 0 !== S) {
                if (!1 !== S.autoUpdate || !1 !== S.needsUpdate) {
                  i.copy(S.mapSize);
                  var E = S.getFrameExtents();
                  if (
                    (i.multiply(E),
                    o.copy(S.mapSize),
                    (i.x > f || i.y > f) &&
                      (i.x > f &&
                        ((o.x = Math.floor(f / E.x)),
                        (i.x = o.x * E.x),
                        (S.mapSize.x = o.x)),
                      i.y > f &&
                        ((o.y = Math.floor(f / E.y)),
                        (i.y = o.y * E.y),
                        (S.mapSize.y = o.y))),
                    null === S.map || !0 === h || !0 === p)
                  ) {
                    var w =
                      this.type !== R ? { minFilter: Z, magFilter: Z } : {};
                    null !== S.map && S.map.dispose(),
                      (S.map = new xt(i.x, i.y, w)),
                      (S.map.texture.name = b.name + ".shadowMap"),
                      S.camera.updateProjectionMatrix();
                  }
                  e.setRenderTarget(S.map), e.clear();
                  for (var T = S.getViewportCount(), M = 0; M < T; M++) {
                    var A = S.getViewport(M);
                    s.set(o.x * A.x, o.y * A.y, o.x * A.z, o.y * A.w),
                      d.viewport(s),
                      S.updateMatrices(b, M),
                      (a = S.getFrustum()),
                      x(n, r, S.camera, b, this.type);
                  }
                  !0 !== S.isPointLightShadow && this.type === R && _(S, r),
                    (S.needsUpdate = !1);
                }
              } else console.warn("THREE.WebGLShadowMap:", b, "has no shadow.");
            }
            (y = this.type), (g.needsUpdate = !1), e.setRenderTarget(l, u, c);
          }
        };
      }
      function yo(e, t, n) {
        var r,
          a,
          i = n.isWebGL2;
        var o = new (function () {
            var t = !1,
              n = new _t(),
              r = null,
              a = new _t(0, 0, 0, 0);
            return {
              setMask: function (n) {
                r === n || t || (e.colorMask(n, n, n, n), (r = n));
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t, r, i, o, s) {
                !0 === s && ((t *= o), (r *= o), (i *= o)),
                  n.set(t, r, i, o),
                  !1 === a.equals(n) && (e.clearColor(t, r, i, o), a.copy(n));
              },
              reset: function () {
                (t = !1), (r = null), a.set(-1, 0, 0, 0);
              },
            };
          })(),
          s = new (function () {
            var t = !1,
              n = null,
              r = null,
              a = null;
            return {
              setTest: function (t) {
                t ? q(e.DEPTH_TEST) : Y(e.DEPTH_TEST);
              },
              setMask: function (r) {
                n === r || t || (e.depthMask(r), (n = r));
              },
              setFunc: function (t) {
                if (r !== t) {
                  switch (t) {
                    case 0:
                      e.depthFunc(e.NEVER);
                      break;
                    case 1:
                      e.depthFunc(e.ALWAYS);
                      break;
                    case 2:
                      e.depthFunc(e.LESS);
                      break;
                    case 3:
                    default:
                      e.depthFunc(e.LEQUAL);
                      break;
                    case 4:
                      e.depthFunc(e.EQUAL);
                      break;
                    case 5:
                      e.depthFunc(e.GEQUAL);
                      break;
                    case 6:
                      e.depthFunc(e.GREATER);
                      break;
                    case 7:
                      e.depthFunc(e.NOTEQUAL);
                  }
                  r = t;
                }
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t) {
                a !== t && (e.clearDepth(t), (a = t));
              },
              reset: function () {
                (t = !1), (n = null), (r = null), (a = null);
              },
            };
          })(),
          l = new (function () {
            var t = !1,
              n = null,
              r = null,
              a = null,
              i = null,
              o = null,
              s = null,
              l = null,
              u = null;
            return {
              setTest: function (n) {
                t || (n ? q(e.STENCIL_TEST) : Y(e.STENCIL_TEST));
              },
              setMask: function (r) {
                n === r || t || (e.stencilMask(r), (n = r));
              },
              setFunc: function (t, n, o) {
                (r === t && a === n && i === o) ||
                  (e.stencilFunc(t, n, o), (r = t), (a = n), (i = o));
              },
              setOp: function (t, n, r) {
                (o === t && s === n && l === r) ||
                  (e.stencilOp(t, n, r), (o = t), (s = n), (l = r));
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (t) {
                u !== t && (e.clearStencil(t), (u = t));
              },
              reset: function () {
                (t = !1),
                  (n = null),
                  (r = null),
                  (a = null),
                  (i = null),
                  (o = null),
                  (s = null),
                  (l = null),
                  (u = null);
              },
            };
          })(),
          u = new WeakMap(),
          c = new WeakMap(),
          f = {},
          d = {},
          h = new WeakMap(),
          p = [],
          v = null,
          m = !1,
          g = null,
          y = null,
          _ = null,
          b = null,
          x = null,
          E = null,
          w = null,
          T = new Wn(0, 0, 0),
          M = 0,
          A = !1,
          C = null,
          k = null,
          R = null,
          P = null,
          D = null,
          I = e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),
          O = !1,
          N = 0,
          F = e.getParameter(e.VERSION);
        -1 !== F.indexOf("WebGL")
          ? ((N = parseFloat(/^WebGL (\d)/.exec(F)[1])), (O = N >= 1))
          : -1 !== F.indexOf("OpenGL ES") &&
            ((N = parseFloat(/^OpenGL ES (\d)/.exec(F)[1])), (O = N >= 2));
        var z = null,
          B = {},
          H = e.getParameter(e.SCISSOR_BOX),
          G = e.getParameter(e.VIEWPORT),
          V = new _t().fromArray(H),
          W = new _t().fromArray(G);
        function j(t, n, r, a) {
          var o = new Uint8Array(4),
            s = e.createTexture();
          e.bindTexture(t, s),
            e.texParameteri(t, e.TEXTURE_MIN_FILTER, e.NEAREST),
            e.texParameteri(t, e.TEXTURE_MAG_FILTER, e.NEAREST);
          for (var l = 0; l < r; l++)
            !i || (t !== e.TEXTURE_3D && t !== e.TEXTURE_2D_ARRAY)
              ? e.texImage2D(
                  n + l,
                  0,
                  e.RGBA,
                  1,
                  1,
                  0,
                  e.RGBA,
                  e.UNSIGNED_BYTE,
                  o
                )
              : e.texImage3D(
                  n,
                  0,
                  e.RGBA,
                  1,
                  1,
                  a,
                  0,
                  e.RGBA,
                  e.UNSIGNED_BYTE,
                  o
                );
          return s;
        }
        var X = {};
        function q(t) {
          !0 !== f[t] && (e.enable(t), (f[t] = !0));
        }
        function Y(t) {
          !1 !== f[t] && (e.disable(t), (f[t] = !1));
        }
        (X[e.TEXTURE_2D] = j(e.TEXTURE_2D, e.TEXTURE_2D, 1)),
          (X[e.TEXTURE_CUBE_MAP] = j(
            e.TEXTURE_CUBE_MAP,
            e.TEXTURE_CUBE_MAP_POSITIVE_X,
            6
          )),
          i &&
            ((X[e.TEXTURE_2D_ARRAY] = j(
              e.TEXTURE_2D_ARRAY,
              e.TEXTURE_2D_ARRAY,
              1,
              1
            )),
            (X[e.TEXTURE_3D] = j(e.TEXTURE_3D, e.TEXTURE_3D, 1, 1))),
          o.setClear(0, 0, 0, 1),
          s.setClear(1),
          l.setClear(0),
          q(e.DEPTH_TEST),
          s.setFunc(3),
          Q(!1),
          ee(1),
          q(e.CULL_FACE),
          J(0);
        var K =
          (S((r = {}), L, e.FUNC_ADD),
          S(r, 101, e.FUNC_SUBTRACT),
          S(r, 102, e.FUNC_REVERSE_SUBTRACT),
          r);
        if (i) (K[103] = e.MIN), (K[104] = e.MAX);
        else {
          var $ = t.get("EXT_blend_minmax");
          null !== $ && ((K[103] = $.MIN_EXT), (K[104] = $.MAX_EXT));
        }
        var Z =
          (S((a = {}), 200, e.ZERO),
          S(a, 201, e.ONE),
          S(a, 202, e.SRC_COLOR),
          S(a, 204, e.SRC_ALPHA),
          S(a, 210, e.SRC_ALPHA_SATURATE),
          S(a, 208, e.DST_COLOR),
          S(a, 206, e.DST_ALPHA),
          S(a, 203, e.ONE_MINUS_SRC_COLOR),
          S(a, 205, e.ONE_MINUS_SRC_ALPHA),
          S(a, 209, e.ONE_MINUS_DST_COLOR),
          S(a, 207, e.ONE_MINUS_DST_ALPHA),
          S(a, 211, e.CONSTANT_COLOR),
          S(a, 212, e.ONE_MINUS_CONSTANT_COLOR),
          S(a, 213, e.CONSTANT_ALPHA),
          S(a, 214, e.ONE_MINUS_CONSTANT_ALPHA),
          a);
        function J(t, n, r, a, i, o, s, l, u, c) {
          if (0 !== t) {
            if ((!1 === m && (q(e.BLEND), (m = !0)), 5 === t))
              (i = i || n),
                (o = o || r),
                (s = s || a),
                (n === y && i === x) ||
                  (e.blendEquationSeparate(K[n], K[i]), (y = n), (x = i)),
                (r === _ && a === b && o === E && s === w) ||
                  (e.blendFuncSeparate(Z[r], Z[a], Z[o], Z[s]),
                  (_ = r),
                  (b = a),
                  (E = o),
                  (w = s)),
                (!1 !== l.equals(T) && u === M) ||
                  (e.blendColor(l.r, l.g, l.b, u), T.copy(l), (M = u)),
                (g = t),
                (A = !1);
            else if (t !== g || c !== A) {
              if (
                ((y === L && x === L) ||
                  (e.blendEquation(e.FUNC_ADD), (y = L), (x = L)),
                c)
              )
                switch (t) {
                  case 1:
                    e.blendFuncSeparate(
                      e.ONE,
                      e.ONE_MINUS_SRC_ALPHA,
                      e.ONE,
                      e.ONE_MINUS_SRC_ALPHA
                    );
                    break;
                  case 2:
                    e.blendFunc(e.ONE, e.ONE);
                    break;
                  case 3:
                    e.blendFuncSeparate(
                      e.ZERO,
                      e.ONE_MINUS_SRC_COLOR,
                      e.ZERO,
                      e.ONE
                    );
                    break;
                  case 4:
                    e.blendFuncSeparate(
                      e.ZERO,
                      e.SRC_COLOR,
                      e.ZERO,
                      e.SRC_ALPHA
                    );
                    break;
                  default:
                    console.error("THREE.WebGLState: Invalid blending: ", t);
                }
              else
                switch (t) {
                  case 1:
                    e.blendFuncSeparate(
                      e.SRC_ALPHA,
                      e.ONE_MINUS_SRC_ALPHA,
                      e.ONE,
                      e.ONE_MINUS_SRC_ALPHA
                    );
                    break;
                  case 2:
                    e.blendFunc(e.SRC_ALPHA, e.ONE);
                    break;
                  case 3:
                    e.blendFuncSeparate(
                      e.ZERO,
                      e.ONE_MINUS_SRC_COLOR,
                      e.ZERO,
                      e.ONE
                    );
                    break;
                  case 4:
                    e.blendFunc(e.ZERO, e.SRC_COLOR);
                    break;
                  default:
                    console.error("THREE.WebGLState: Invalid blending: ", t);
                }
              (_ = null),
                (b = null),
                (E = null),
                (w = null),
                T.set(0, 0, 0),
                (M = 0),
                (g = t),
                (A = c);
            }
          } else !0 === m && (Y(e.BLEND), (m = !1));
        }
        function Q(t) {
          C !== t && (t ? e.frontFace(e.CW) : e.frontFace(e.CCW), (C = t));
        }
        function ee(t) {
          0 !== t
            ? (q(e.CULL_FACE),
              t !== k &&
                (1 === t
                  ? e.cullFace(e.BACK)
                  : 2 === t
                  ? e.cullFace(e.FRONT)
                  : e.cullFace(e.FRONT_AND_BACK)))
            : Y(e.CULL_FACE),
            (k = t);
        }
        function te(t, n, r) {
          t
            ? (q(e.POLYGON_OFFSET_FILL),
              (P === n && D === r) || (e.polygonOffset(n, r), (P = n), (D = r)))
            : Y(e.POLYGON_OFFSET_FILL);
        }
        return {
          buffers: { color: o, depth: s, stencil: l },
          enable: q,
          disable: Y,
          bindFramebuffer: function (t, n) {
            return (
              d[t] !== n &&
              (e.bindFramebuffer(t, n),
              (d[t] = n),
              i &&
                (t === e.DRAW_FRAMEBUFFER && (d[e.FRAMEBUFFER] = n),
                t === e.FRAMEBUFFER && (d[e.DRAW_FRAMEBUFFER] = n)),
              !0)
            );
          },
          drawBuffers: function (r, a) {
            var i = p,
              o = !1;
            if (r)
              if (
                (void 0 === (i = h.get(a)) && ((i = []), h.set(a, i)),
                r.isWebGLMultipleRenderTargets)
              ) {
                var s = r.texture;
                if (i.length !== s.length || i[0] !== e.COLOR_ATTACHMENT0) {
                  for (var l = 0, u = s.length; l < u; l++)
                    i[l] = e.COLOR_ATTACHMENT0 + l;
                  (i.length = s.length), (o = !0);
                }
              } else
                i[0] !== e.COLOR_ATTACHMENT0 &&
                  ((i[0] = e.COLOR_ATTACHMENT0), (o = !0));
            else i[0] !== e.BACK && ((i[0] = e.BACK), (o = !0));
            o &&
              (n.isWebGL2
                ? e.drawBuffers(i)
                : t.get("WEBGL_draw_buffers").drawBuffersWEBGL(i));
          },
          useProgram: function (t) {
            return v !== t && (e.useProgram(t), (v = t), !0);
          },
          setBlending: J,
          setMaterial: function (t, n) {
            2 === t.side ? Y(e.CULL_FACE) : q(e.CULL_FACE);
            var r = t.side === U;
            n && (r = !r),
              Q(r),
              1 === t.blending && !1 === t.transparent
                ? J(0)
                : J(
                    t.blending,
                    t.blendEquation,
                    t.blendSrc,
                    t.blendDst,
                    t.blendEquationAlpha,
                    t.blendSrcAlpha,
                    t.blendDstAlpha,
                    t.blendColor,
                    t.blendAlpha,
                    t.premultipliedAlpha
                  ),
              s.setFunc(t.depthFunc),
              s.setTest(t.depthTest),
              s.setMask(t.depthWrite),
              o.setMask(t.colorWrite);
            var a = t.stencilWrite;
            l.setTest(a),
              a &&
                (l.setMask(t.stencilWriteMask),
                l.setFunc(t.stencilFunc, t.stencilRef, t.stencilFuncMask),
                l.setOp(t.stencilFail, t.stencilZFail, t.stencilZPass)),
              te(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits),
              !0 === t.alphaToCoverage
                ? q(e.SAMPLE_ALPHA_TO_COVERAGE)
                : Y(e.SAMPLE_ALPHA_TO_COVERAGE);
          },
          setFlipSided: Q,
          setCullFace: ee,
          setLineWidth: function (t) {
            t !== R && (O && e.lineWidth(t), (R = t));
          },
          setPolygonOffset: te,
          setScissorTest: function (t) {
            t ? q(e.SCISSOR_TEST) : Y(e.SCISSOR_TEST);
          },
          activeTexture: function (t) {
            void 0 === t && (t = e.TEXTURE0 + I - 1),
              z !== t && (e.activeTexture(t), (z = t));
          },
          bindTexture: function (t, n, r) {
            void 0 === r && (r = null === z ? e.TEXTURE0 + I - 1 : z);
            var a = B[r];
            void 0 === a &&
              ((a = { type: void 0, texture: void 0 }), (B[r] = a)),
              (a.type === t && a.texture === n) ||
                (z !== r && (e.activeTexture(r), (z = r)),
                e.bindTexture(t, n || X[t]),
                (a.type = t),
                (a.texture = n));
          },
          unbindTexture: function () {
            var t = B[z];
            void 0 !== t &&
              void 0 !== t.type &&
              (e.bindTexture(t.type, null),
              (t.type = void 0),
              (t.texture = void 0));
          },
          compressedTexImage2D: function () {
            try {
              e.compressedTexImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          compressedTexImage3D: function () {
            try {
              e.compressedTexImage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texImage2D: function () {
            try {
              e.texImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texImage3D: function () {
            try {
              e.texImage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          updateUBOMapping: function (t, n) {
            var r = c.get(n);
            void 0 === r && ((r = new WeakMap()), c.set(n, r));
            var a = r.get(t);
            void 0 === a &&
              ((a = e.getUniformBlockIndex(n, t.name)), r.set(t, a));
          },
          uniformBlockBinding: function (t, n) {
            var r = c.get(n).get(t);
            u.get(n) !== r &&
              (e.uniformBlockBinding(n, r, t.__bindingPointIndex), u.set(n, r));
          },
          texStorage2D: function () {
            try {
              e.texStorage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texStorage3D: function () {
            try {
              e.texStorage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texSubImage2D: function () {
            try {
              e.texSubImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          texSubImage3D: function () {
            try {
              e.texSubImage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          compressedTexSubImage2D: function () {
            try {
              e.compressedTexSubImage2D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          compressedTexSubImage3D: function () {
            try {
              e.compressedTexSubImage3D.apply(e, arguments);
            } catch (t) {
              console.error("THREE.WebGLState:", t);
            }
          },
          scissor: function (t) {
            !1 === V.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), V.copy(t));
          },
          viewport: function (t) {
            !1 === W.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), W.copy(t));
          },
          reset: function () {
            e.disable(e.BLEND),
              e.disable(e.CULL_FACE),
              e.disable(e.DEPTH_TEST),
              e.disable(e.POLYGON_OFFSET_FILL),
              e.disable(e.SCISSOR_TEST),
              e.disable(e.STENCIL_TEST),
              e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),
              e.blendEquation(e.FUNC_ADD),
              e.blendFunc(e.ONE, e.ZERO),
              e.blendFuncSeparate(e.ONE, e.ZERO, e.ONE, e.ZERO),
              e.blendColor(0, 0, 0, 0),
              e.colorMask(!0, !0, !0, !0),
              e.clearColor(0, 0, 0, 0),
              e.depthMask(!0),
              e.depthFunc(e.LESS),
              e.clearDepth(1),
              e.stencilMask(4294967295),
              e.stencilFunc(e.ALWAYS, 0, 4294967295),
              e.stencilOp(e.KEEP, e.KEEP, e.KEEP),
              e.clearStencil(0),
              e.cullFace(e.BACK),
              e.frontFace(e.CCW),
              e.polygonOffset(0, 0),
              e.activeTexture(e.TEXTURE0),
              e.bindFramebuffer(e.FRAMEBUFFER, null),
              !0 === i &&
                (e.bindFramebuffer(e.DRAW_FRAMEBUFFER, null),
                e.bindFramebuffer(e.READ_FRAMEBUFFER, null)),
              e.useProgram(null),
              e.lineWidth(1),
              e.scissor(0, 0, e.canvas.width, e.canvas.height),
              e.viewport(0, 0, e.canvas.width, e.canvas.height),
              (f = {}),
              (z = null),
              (B = {}),
              (d = {}),
              (h = new WeakMap()),
              (p = []),
              (v = null),
              (m = !1),
              (g = null),
              (y = null),
              (_ = null),
              (b = null),
              (x = null),
              (E = null),
              (w = null),
              (T = new Wn(0, 0, 0)),
              (M = 0),
              (A = !1),
              (C = null),
              (k = null),
              (R = null),
              (P = null),
              (D = null),
              V.set(0, 0, e.canvas.width, e.canvas.height),
              W.set(0, 0, e.canvas.width, e.canvas.height),
              o.reset(),
              s.reset(),
              l.reset();
          },
        };
      }
      function _o(e, t, n, r, a, i, o) {
        var s,
          l,
          u,
          c,
          f = a.isWebGL2,
          d = a.maxTextures,
          h = a.maxCubemapSize,
          p = a.maxTextureSize,
          v = a.maxSamples,
          m = t.has("WEBGL_multisampled_render_to_texture")
            ? t.get("WEBGL_multisampled_render_to_texture")
            : null,
          g =
            "undefined" !== typeof navigator &&
            /OculusBrowser/g.test(navigator.userAgent),
          y = new WeakMap(),
          _ = new WeakMap(),
          b = !1;
        try {
          b =
            "undefined" !== typeof OffscreenCanvas &&
            null !== new OffscreenCanvas(1, 1).getContext("2d");
        } catch (q) {}
        function x(e, t) {
          return b ? new OffscreenCanvas(e, t) : nt("canvas");
        }
        function E(e, t, n, r) {
          var a = 1;
          if (
            ((e.width > r || e.height > r) &&
              (a = r / Math.max(e.width, e.height)),
            a < 1 || !0 === t)
          ) {
            if (
              ("undefined" !== typeof HTMLImageElement &&
                e instanceof HTMLImageElement) ||
              ("undefined" !== typeof HTMLCanvasElement &&
                e instanceof HTMLCanvasElement) ||
              ("undefined" !== typeof ImageBitmap && e instanceof ImageBitmap)
            ) {
              var i = t ? Ke : Math.floor,
                o = i(a * e.width),
                s = i(a * e.height);
              void 0 === c && (c = x(o, s));
              var l = n ? x(o, s) : c;
              return (
                (l.width = o),
                (l.height = s),
                l.getContext("2d").drawImage(e, 0, 0, o, s),
                console.warn(
                  "THREE.WebGLRenderer: Texture has been resized from (" +
                    e.width +
                    "x" +
                    e.height +
                    ") to (" +
                    o +
                    "x" +
                    s +
                    ")."
                ),
                l
              );
            }
            return (
              "data" in e &&
                console.warn(
                  "THREE.WebGLRenderer: Image in DataTexture is too big (" +
                    e.width +
                    "x" +
                    e.height +
                    ")."
                ),
              e
            );
          }
          return e;
        }
        function w(e) {
          return Ye(e.width) && Ye(e.height);
        }
        function T(e, t) {
          return (
            e.generateMipmaps && t && e.minFilter !== Z && e.minFilter !== ee
          );
        }
        function M(t) {
          e.generateMipmap(t);
        }
        function A(n, r, a, i) {
          var o =
            arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
          if (!1 === f) return r;
          if (null !== n) {
            if (void 0 !== e[n]) return e[n];
            console.warn(
              "THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" +
                n +
                "'"
            );
          }
          var s = r;
          if (
            (r === e.RED &&
              (a === e.FLOAT && (s = e.R32F),
              a === e.HALF_FLOAT && (s = e.R16F),
              a === e.UNSIGNED_BYTE && (s = e.R8)),
            r === e.RED_INTEGER &&
              (a === e.UNSIGNED_BYTE && (s = e.R8UI),
              a === e.UNSIGNED_SHORT && (s = e.R16UI),
              a === e.UNSIGNED_INT && (s = e.R32UI),
              a === e.BYTE && (s = e.R8I),
              a === e.SHORT && (s = e.R16I),
              a === e.INT && (s = e.R32I)),
            r === e.RG &&
              (a === e.FLOAT && (s = e.RG32F),
              a === e.HALF_FLOAT && (s = e.RG16F),
              a === e.UNSIGNED_BYTE && (s = e.RG8)),
            r === e.RGBA)
          ) {
            var l = o ? Re : ct.getTransfer(i);
            a === e.FLOAT && (s = e.RGBA32F),
              a === e.HALF_FLOAT && (s = e.RGBA16F),
              a === e.UNSIGNED_BYTE &&
                (s = l === Pe ? e.SRGB8_ALPHA8 : e.RGBA8),
              a === e.UNSIGNED_SHORT_4_4_4_4 && (s = e.RGBA4),
              a === e.UNSIGNED_SHORT_5_5_5_1 && (s = e.RGB5_A1);
          }
          return (
            (s !== e.R16F &&
              s !== e.R32F &&
              s !== e.RG16F &&
              s !== e.RG32F &&
              s !== e.RGBA16F &&
              s !== e.RGBA32F) ||
              t.get("EXT_color_buffer_float"),
            s
          );
        }
        function C(e, t, n) {
          return !0 === T(e, n) ||
            (e.isFramebufferTexture && e.minFilter !== Z && e.minFilter !== ee)
            ? Math.log2(Math.max(t.width, t.height)) + 1
            : void 0 !== e.mipmaps && e.mipmaps.length > 0
            ? e.mipmaps.length
            : e.isCompressedTexture && Array.isArray(e.image)
            ? t.mipmaps.length
            : 1;
        }
        function k(t) {
          return t === Z || t === J || t === Q ? e.NEAREST : e.LINEAR;
        }
        function R(e) {
          var t = e.target;
          t.removeEventListener("dispose", R),
            (function (e) {
              var t = r.get(e);
              if (void 0 === t.__webglInit) return;
              var n = e.source,
                a = _.get(n);
              if (a) {
                var i = a[t.__cacheKey];
                i.usedTimes--,
                  0 === i.usedTimes && U(e),
                  0 === Object.keys(a).length && _.delete(n);
              }
              r.remove(e);
            })(t),
            t.isVideoTexture && y.delete(t);
        }
        function P(t) {
          var n = t.target;
          n.removeEventListener("dispose", P),
            (function (t) {
              var n = t.texture,
                a = r.get(t),
                i = r.get(n);
              void 0 !== i.__webglTexture &&
                (e.deleteTexture(i.__webglTexture), o.memory.textures--);
              t.depthTexture && t.depthTexture.dispose();
              if (t.isWebGLCubeRenderTarget)
                for (var s = 0; s < 6; s++) {
                  if (Array.isArray(a.__webglFramebuffer[s]))
                    for (var l = 0; l < a.__webglFramebuffer[s].length; l++)
                      e.deleteFramebuffer(a.__webglFramebuffer[s][l]);
                  else e.deleteFramebuffer(a.__webglFramebuffer[s]);
                  a.__webglDepthbuffer &&
                    e.deleteRenderbuffer(a.__webglDepthbuffer[s]);
                }
              else {
                if (Array.isArray(a.__webglFramebuffer))
                  for (var u = 0; u < a.__webglFramebuffer.length; u++)
                    e.deleteFramebuffer(a.__webglFramebuffer[u]);
                else e.deleteFramebuffer(a.__webglFramebuffer);
                if (
                  (a.__webglDepthbuffer &&
                    e.deleteRenderbuffer(a.__webglDepthbuffer),
                  a.__webglMultisampledFramebuffer &&
                    e.deleteFramebuffer(a.__webglMultisampledFramebuffer),
                  a.__webglColorRenderbuffer)
                )
                  for (var c = 0; c < a.__webglColorRenderbuffer.length; c++)
                    a.__webglColorRenderbuffer[c] &&
                      e.deleteRenderbuffer(a.__webglColorRenderbuffer[c]);
                a.__webglDepthRenderbuffer &&
                  e.deleteRenderbuffer(a.__webglDepthRenderbuffer);
              }
              if (t.isWebGLMultipleRenderTargets)
                for (var f = 0, d = n.length; f < d; f++) {
                  var h = r.get(n[f]);
                  h.__webglTexture &&
                    (e.deleteTexture(h.__webglTexture), o.memory.textures--),
                    r.remove(n[f]);
                }
              r.remove(n), r.remove(t);
            })(n);
        }
        function U(t) {
          var n = r.get(t);
          e.deleteTexture(n.__webglTexture);
          var a = t.source;
          delete _.get(a)[n.__cacheKey], o.memory.textures--;
        }
        var L = 0;
        function D(t, a) {
          var i = r.get(t);
          if (
            (t.isVideoTexture &&
              (function (e) {
                var t = o.render.frame;
                y.get(e) !== t && (y.set(e, t), e.update());
              })(t),
            !1 === t.isRenderTargetTexture &&
              t.version > 0 &&
              i.__version !== t.version)
          ) {
            var s = t.image;
            if (null === s)
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but no image data found."
              );
            else {
              if (!1 !== s.complete) return void B(i, t, a);
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but image is incomplete"
              );
            }
          }
          n.bindTexture(e.TEXTURE_2D, i.__webglTexture, e.TEXTURE0 + a);
        }
        var I =
            (S((s = {}), Y, e.REPEAT),
            S(s, K, e.CLAMP_TO_EDGE),
            S(s, $, e.MIRRORED_REPEAT),
            s),
          O =
            (S((l = {}), Z, e.NEAREST),
            S(l, J, e.NEAREST_MIPMAP_NEAREST),
            S(l, Q, e.NEAREST_MIPMAP_LINEAR),
            S(l, ee, e.LINEAR),
            S(l, 1007, e.LINEAR_MIPMAP_NEAREST),
            S(l, te, e.LINEAR_MIPMAP_LINEAR),
            l),
          N =
            (S((u = {}), 512, e.NEVER),
            S(u, 519, e.ALWAYS),
            S(u, 513, e.LESS),
            S(u, 515, e.LEQUAL),
            S(u, 514, e.EQUAL),
            S(u, 518, e.GEQUAL),
            S(u, 516, e.GREATER),
            S(u, 517, e.NOTEQUAL),
            u);
        function F(n, i, o) {
          if (
            (o
              ? (e.texParameteri(n, e.TEXTURE_WRAP_S, I[i.wrapS]),
                e.texParameteri(n, e.TEXTURE_WRAP_T, I[i.wrapT]),
                (n !== e.TEXTURE_3D && n !== e.TEXTURE_2D_ARRAY) ||
                  e.texParameteri(n, e.TEXTURE_WRAP_R, I[i.wrapR]),
                e.texParameteri(n, e.TEXTURE_MAG_FILTER, O[i.magFilter]),
                e.texParameteri(n, e.TEXTURE_MIN_FILTER, O[i.minFilter]))
              : (e.texParameteri(n, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
                e.texParameteri(n, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE),
                (n !== e.TEXTURE_3D && n !== e.TEXTURE_2D_ARRAY) ||
                  e.texParameteri(n, e.TEXTURE_WRAP_R, e.CLAMP_TO_EDGE),
                (i.wrapS === K && i.wrapT === K) ||
                  console.warn(
                    "THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."
                  ),
                e.texParameteri(n, e.TEXTURE_MAG_FILTER, k(i.magFilter)),
                e.texParameteri(n, e.TEXTURE_MIN_FILTER, k(i.minFilter)),
                i.minFilter !== Z &&
                  i.minFilter !== ee &&
                  console.warn(
                    "THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."
                  )),
            i.compareFunction &&
              (e.texParameteri(
                n,
                e.TEXTURE_COMPARE_MODE,
                e.COMPARE_REF_TO_TEXTURE
              ),
              e.texParameteri(n, e.TEXTURE_COMPARE_FUNC, N[i.compareFunction])),
            !0 === t.has("EXT_texture_filter_anisotropic"))
          ) {
            var s = t.get("EXT_texture_filter_anisotropic");
            if (i.magFilter === Z) return;
            if (i.minFilter !== Q && i.minFilter !== te) return;
            if (i.type === oe && !1 === t.has("OES_texture_float_linear"))
              return;
            if (
              !1 === f &&
              i.type === se &&
              !1 === t.has("OES_texture_half_float_linear")
            )
              return;
            (i.anisotropy > 1 || r.get(i).__currentAnisotropy) &&
              (e.texParameterf(
                n,
                s.TEXTURE_MAX_ANISOTROPY_EXT,
                Math.min(i.anisotropy, a.getMaxAnisotropy())
              ),
              (r.get(i).__currentAnisotropy = i.anisotropy));
          }
        }
        function z(t, n) {
          var r = !1;
          void 0 === t.__webglInit &&
            ((t.__webglInit = !0), n.addEventListener("dispose", R));
          var a = n.source,
            i = _.get(a);
          void 0 === i && ((i = {}), _.set(a, i));
          var s = (function (e) {
            var t = [];
            return (
              t.push(e.wrapS),
              t.push(e.wrapT),
              t.push(e.wrapR || 0),
              t.push(e.magFilter),
              t.push(e.minFilter),
              t.push(e.anisotropy),
              t.push(e.internalFormat),
              t.push(e.format),
              t.push(e.type),
              t.push(e.generateMipmaps),
              t.push(e.premultiplyAlpha),
              t.push(e.flipY),
              t.push(e.unpackAlignment),
              t.push(e.colorSpace),
              t.join()
            );
          })(n);
          if (s !== t.__cacheKey) {
            void 0 === i[s] &&
              ((i[s] = { texture: e.createTexture(), usedTimes: 0 }),
              o.memory.textures++,
              (r = !0)),
              i[s].usedTimes++;
            var l = i[t.__cacheKey];
            void 0 !== l &&
              (i[t.__cacheKey].usedTimes--, 0 === l.usedTimes && U(n)),
              (t.__cacheKey = s),
              (t.__webglTexture = i[s].texture);
          }
          return r;
        }
        function B(t, a, o) {
          var s = e.TEXTURE_2D;
          (a.isDataArrayTexture || a.isCompressedArrayTexture) &&
            (s = e.TEXTURE_2D_ARRAY),
            a.isData3DTexture && (s = e.TEXTURE_3D);
          var l = z(t, a),
            u = a.source;
          n.bindTexture(s, t.__webglTexture, e.TEXTURE0 + o);
          var c = r.get(u);
          if (u.version !== c.__version || !0 === l) {
            n.activeTexture(e.TEXTURE0 + o);
            var d = ct.getPrimaries(ct.workingColorSpace),
              h = a.colorSpace === Te ? null : ct.getPrimaries(a.colorSpace),
              v =
                a.colorSpace === Te || d === h
                  ? e.NONE
                  : e.BROWSER_DEFAULT_WEBGL;
            e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, a.flipY),
              e.pixelStorei(
                e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                a.premultiplyAlpha
              ),
              e.pixelStorei(e.UNPACK_ALIGNMENT, a.unpackAlignment),
              e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL, v);
            var m,
              g =
                (function (e) {
                  return (
                    !f &&
                    (e.wrapS !== K ||
                      e.wrapT !== K ||
                      (e.minFilter !== Z && e.minFilter !== ee))
                  );
                })(a) && !1 === w(a.image),
              y = E(a.image, g, !1, p),
              _ = w((y = X(a, y))) || f,
              b = i.convert(a.format, a.colorSpace),
              x = i.convert(a.type),
              S = A(a.internalFormat, b, x, a.colorSpace, a.isVideoTexture);
            F(s, a, _);
            var k = a.mipmaps,
              R = f && !0 !== a.isVideoTexture,
              P = void 0 === c.__version || !0 === l,
              U = C(a, y, _);
            if (a.isDepthTexture)
              (S = e.DEPTH_COMPONENT),
                f
                  ? (S =
                      a.type === oe
                        ? e.DEPTH_COMPONENT32F
                        : a.type === ie
                        ? e.DEPTH_COMPONENT24
                        : a.type === le
                        ? e.DEPTH24_STENCIL8
                        : e.DEPTH_COMPONENT16)
                  : a.type === oe &&
                    console.error(
                      "WebGLRenderer: Floating point depth texture requires WebGL2."
                    ),
                a.format === ce &&
                  S === e.DEPTH_COMPONENT &&
                  a.type !== re &&
                  a.type !== ie &&
                  (console.warn(
                    "THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."
                  ),
                  (a.type = ie),
                  (x = i.convert(a.type))),
                a.format === fe &&
                  S === e.DEPTH_COMPONENT &&
                  ((S = e.DEPTH_STENCIL),
                  a.type !== le &&
                    (console.warn(
                      "THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."
                    ),
                    (a.type = le),
                    (x = i.convert(a.type)))),
                P &&
                  (R
                    ? n.texStorage2D(e.TEXTURE_2D, 1, S, y.width, y.height)
                    : n.texImage2D(
                        e.TEXTURE_2D,
                        0,
                        S,
                        y.width,
                        y.height,
                        0,
                        b,
                        x,
                        null
                      ));
            else if (a.isDataTexture)
              if (k.length > 0 && _) {
                R &&
                  P &&
                  n.texStorage2D(e.TEXTURE_2D, U, S, k[0].width, k[0].height);
                for (var L = 0, D = k.length; L < D; L++)
                  (m = k[L]),
                    R
                      ? n.texSubImage2D(
                          e.TEXTURE_2D,
                          L,
                          0,
                          0,
                          m.width,
                          m.height,
                          b,
                          x,
                          m.data
                        )
                      : n.texImage2D(
                          e.TEXTURE_2D,
                          L,
                          S,
                          m.width,
                          m.height,
                          0,
                          b,
                          x,
                          m.data
                        );
                a.generateMipmaps = !1;
              } else
                R
                  ? (P && n.texStorage2D(e.TEXTURE_2D, U, S, y.width, y.height),
                    n.texSubImage2D(
                      e.TEXTURE_2D,
                      0,
                      0,
                      0,
                      y.width,
                      y.height,
                      b,
                      x,
                      y.data
                    ))
                  : n.texImage2D(
                      e.TEXTURE_2D,
                      0,
                      S,
                      y.width,
                      y.height,
                      0,
                      b,
                      x,
                      y.data
                    );
            else if (a.isCompressedTexture)
              if (a.isCompressedArrayTexture) {
                R &&
                  P &&
                  n.texStorage3D(
                    e.TEXTURE_2D_ARRAY,
                    U,
                    S,
                    k[0].width,
                    k[0].height,
                    y.depth
                  );
                for (var I = 0, O = k.length; I < O; I++)
                  (m = k[I]),
                    a.format !== ue
                      ? null !== b
                        ? R
                          ? n.compressedTexSubImage3D(
                              e.TEXTURE_2D_ARRAY,
                              I,
                              0,
                              0,
                              0,
                              m.width,
                              m.height,
                              y.depth,
                              b,
                              m.data,
                              0,
                              0
                            )
                          : n.compressedTexImage3D(
                              e.TEXTURE_2D_ARRAY,
                              I,
                              S,
                              m.width,
                              m.height,
                              y.depth,
                              0,
                              m.data,
                              0,
                              0
                            )
                        : console.warn(
                            "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                          )
                      : R
                      ? n.texSubImage3D(
                          e.TEXTURE_2D_ARRAY,
                          I,
                          0,
                          0,
                          0,
                          m.width,
                          m.height,
                          y.depth,
                          b,
                          x,
                          m.data
                        )
                      : n.texImage3D(
                          e.TEXTURE_2D_ARRAY,
                          I,
                          S,
                          m.width,
                          m.height,
                          y.depth,
                          0,
                          b,
                          x,
                          m.data
                        );
              } else {
                R &&
                  P &&
                  n.texStorage2D(e.TEXTURE_2D, U, S, k[0].width, k[0].height);
                for (var N = 0, B = k.length; N < B; N++)
                  (m = k[N]),
                    a.format !== ue
                      ? null !== b
                        ? R
                          ? n.compressedTexSubImage2D(
                              e.TEXTURE_2D,
                              N,
                              0,
                              0,
                              m.width,
                              m.height,
                              b,
                              m.data
                            )
                          : n.compressedTexImage2D(
                              e.TEXTURE_2D,
                              N,
                              S,
                              m.width,
                              m.height,
                              0,
                              m.data
                            )
                        : console.warn(
                            "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                          )
                      : R
                      ? n.texSubImage2D(
                          e.TEXTURE_2D,
                          N,
                          0,
                          0,
                          m.width,
                          m.height,
                          b,
                          x,
                          m.data
                        )
                      : n.texImage2D(
                          e.TEXTURE_2D,
                          N,
                          S,
                          m.width,
                          m.height,
                          0,
                          b,
                          x,
                          m.data
                        );
              }
            else if (a.isDataArrayTexture)
              R
                ? (P &&
                    n.texStorage3D(
                      e.TEXTURE_2D_ARRAY,
                      U,
                      S,
                      y.width,
                      y.height,
                      y.depth
                    ),
                  n.texSubImage3D(
                    e.TEXTURE_2D_ARRAY,
                    0,
                    0,
                    0,
                    0,
                    y.width,
                    y.height,
                    y.depth,
                    b,
                    x,
                    y.data
                  ))
                : n.texImage3D(
                    e.TEXTURE_2D_ARRAY,
                    0,
                    S,
                    y.width,
                    y.height,
                    y.depth,
                    0,
                    b,
                    x,
                    y.data
                  );
            else if (a.isData3DTexture)
              R
                ? (P &&
                    n.texStorage3D(
                      e.TEXTURE_3D,
                      U,
                      S,
                      y.width,
                      y.height,
                      y.depth
                    ),
                  n.texSubImage3D(
                    e.TEXTURE_3D,
                    0,
                    0,
                    0,
                    0,
                    y.width,
                    y.height,
                    y.depth,
                    b,
                    x,
                    y.data
                  ))
                : n.texImage3D(
                    e.TEXTURE_3D,
                    0,
                    S,
                    y.width,
                    y.height,
                    y.depth,
                    0,
                    b,
                    x,
                    y.data
                  );
            else if (a.isFramebufferTexture) {
              if (P)
                if (R) n.texStorage2D(e.TEXTURE_2D, U, S, y.width, y.height);
                else
                  for (var H = y.width, G = y.height, V = 0; V < U; V++)
                    n.texImage2D(e.TEXTURE_2D, V, S, H, G, 0, b, x, null),
                      (H >>= 1),
                      (G >>= 1);
            } else if (k.length > 0 && _) {
              R &&
                P &&
                n.texStorage2D(e.TEXTURE_2D, U, S, k[0].width, k[0].height);
              for (var W = 0, j = k.length; W < j; W++)
                (m = k[W]),
                  R
                    ? n.texSubImage2D(e.TEXTURE_2D, W, 0, 0, b, x, m)
                    : n.texImage2D(e.TEXTURE_2D, W, S, b, x, m);
              a.generateMipmaps = !1;
            } else
              R
                ? (P && n.texStorage2D(e.TEXTURE_2D, U, S, y.width, y.height),
                  n.texSubImage2D(e.TEXTURE_2D, 0, 0, 0, b, x, y))
                : n.texImage2D(e.TEXTURE_2D, 0, S, b, x, y);
            T(a, _) && M(s),
              (c.__version = u.version),
              a.onUpdate && a.onUpdate(a);
          }
          t.__version = a.version;
        }
        function H(t, a, o, s, l, u) {
          var c = i.convert(o.format, o.colorSpace),
            f = i.convert(o.type),
            d = A(o.internalFormat, c, f, o.colorSpace);
          if (!r.get(a).__hasExternalTextures) {
            var h = Math.max(1, a.width >> u),
              p = Math.max(1, a.height >> u);
            l === e.TEXTURE_3D || l === e.TEXTURE_2D_ARRAY
              ? n.texImage3D(l, u, d, h, p, a.depth, 0, c, f, null)
              : n.texImage2D(l, u, d, h, p, 0, c, f, null);
          }
          n.bindFramebuffer(e.FRAMEBUFFER, t),
            j(a)
              ? m.framebufferTexture2DMultisampleEXT(
                  e.FRAMEBUFFER,
                  s,
                  l,
                  r.get(o).__webglTexture,
                  0,
                  W(a)
                )
              : (l === e.TEXTURE_2D ||
                  (l >= e.TEXTURE_CUBE_MAP_POSITIVE_X &&
                    l <= e.TEXTURE_CUBE_MAP_NEGATIVE_Z)) &&
                e.framebufferTexture2D(
                  e.FRAMEBUFFER,
                  s,
                  l,
                  r.get(o).__webglTexture,
                  u
                ),
            n.bindFramebuffer(e.FRAMEBUFFER, null);
        }
        function G(t, n, r) {
          if (
            (e.bindRenderbuffer(e.RENDERBUFFER, t),
            n.depthBuffer && !n.stencilBuffer)
          ) {
            var a = !0 === f ? e.DEPTH_COMPONENT24 : e.DEPTH_COMPONENT16;
            if (r || j(n)) {
              var o = n.depthTexture;
              o &&
                o.isDepthTexture &&
                (o.type === oe
                  ? (a = e.DEPTH_COMPONENT32F)
                  : o.type === ie && (a = e.DEPTH_COMPONENT24));
              var s = W(n);
              j(n)
                ? m.renderbufferStorageMultisampleEXT(
                    e.RENDERBUFFER,
                    s,
                    a,
                    n.width,
                    n.height
                  )
                : e.renderbufferStorageMultisample(
                    e.RENDERBUFFER,
                    s,
                    a,
                    n.width,
                    n.height
                  );
            } else e.renderbufferStorage(e.RENDERBUFFER, a, n.width, n.height);
            e.framebufferRenderbuffer(
              e.FRAMEBUFFER,
              e.DEPTH_ATTACHMENT,
              e.RENDERBUFFER,
              t
            );
          } else if (n.depthBuffer && n.stencilBuffer) {
            var l = W(n);
            r && !1 === j(n)
              ? e.renderbufferStorageMultisample(
                  e.RENDERBUFFER,
                  l,
                  e.DEPTH24_STENCIL8,
                  n.width,
                  n.height
                )
              : j(n)
              ? m.renderbufferStorageMultisampleEXT(
                  e.RENDERBUFFER,
                  l,
                  e.DEPTH24_STENCIL8,
                  n.width,
                  n.height
                )
              : e.renderbufferStorage(
                  e.RENDERBUFFER,
                  e.DEPTH_STENCIL,
                  n.width,
                  n.height
                ),
              e.framebufferRenderbuffer(
                e.FRAMEBUFFER,
                e.DEPTH_STENCIL_ATTACHMENT,
                e.RENDERBUFFER,
                t
              );
          } else
            for (
              var u =
                  !0 === n.isWebGLMultipleRenderTargets
                    ? n.texture
                    : [n.texture],
                c = 0;
              c < u.length;
              c++
            ) {
              var d = u[c],
                h = i.convert(d.format, d.colorSpace),
                p = i.convert(d.type),
                v = A(d.internalFormat, h, p, d.colorSpace),
                g = W(n);
              r && !1 === j(n)
                ? e.renderbufferStorageMultisample(
                    e.RENDERBUFFER,
                    g,
                    v,
                    n.width,
                    n.height
                  )
                : j(n)
                ? m.renderbufferStorageMultisampleEXT(
                    e.RENDERBUFFER,
                    g,
                    v,
                    n.width,
                    n.height
                  )
                : e.renderbufferStorage(e.RENDERBUFFER, v, n.width, n.height);
            }
          e.bindRenderbuffer(e.RENDERBUFFER, null);
        }
        function V(t) {
          var a = r.get(t),
            i = !0 === t.isWebGLCubeRenderTarget;
          if (t.depthTexture && !a.__autoAllocateDepthBuffer) {
            if (i)
              throw new Error(
                "target.depthTexture not supported in Cube render targets"
              );
            !(function (t, a) {
              if (a && a.isWebGLCubeRenderTarget)
                throw new Error(
                  "Depth Texture with cube render targets is not supported"
                );
              if (
                (n.bindFramebuffer(e.FRAMEBUFFER, t),
                !a.depthTexture || !a.depthTexture.isDepthTexture)
              )
                throw new Error(
                  "renderTarget.depthTexture must be an instance of THREE.DepthTexture"
                );
              (r.get(a.depthTexture).__webglTexture &&
                a.depthTexture.image.width === a.width &&
                a.depthTexture.image.height === a.height) ||
                ((a.depthTexture.image.width = a.width),
                (a.depthTexture.image.height = a.height),
                (a.depthTexture.needsUpdate = !0)),
                D(a.depthTexture, 0);
              var i = r.get(a.depthTexture).__webglTexture,
                o = W(a);
              if (a.depthTexture.format === ce)
                j(a)
                  ? m.framebufferTexture2DMultisampleEXT(
                      e.FRAMEBUFFER,
                      e.DEPTH_ATTACHMENT,
                      e.TEXTURE_2D,
                      i,
                      0,
                      o
                    )
                  : e.framebufferTexture2D(
                      e.FRAMEBUFFER,
                      e.DEPTH_ATTACHMENT,
                      e.TEXTURE_2D,
                      i,
                      0
                    );
              else {
                if (a.depthTexture.format !== fe)
                  throw new Error("Unknown depthTexture format");
                j(a)
                  ? m.framebufferTexture2DMultisampleEXT(
                      e.FRAMEBUFFER,
                      e.DEPTH_STENCIL_ATTACHMENT,
                      e.TEXTURE_2D,
                      i,
                      0,
                      o
                    )
                  : e.framebufferTexture2D(
                      e.FRAMEBUFFER,
                      e.DEPTH_STENCIL_ATTACHMENT,
                      e.TEXTURE_2D,
                      i,
                      0
                    );
              }
            })(a.__webglFramebuffer, t);
          } else if (i) {
            a.__webglDepthbuffer = [];
            for (var o = 0; o < 6; o++)
              n.bindFramebuffer(e.FRAMEBUFFER, a.__webglFramebuffer[o]),
                (a.__webglDepthbuffer[o] = e.createRenderbuffer()),
                G(a.__webglDepthbuffer[o], t, !1);
          } else
            n.bindFramebuffer(e.FRAMEBUFFER, a.__webglFramebuffer),
              (a.__webglDepthbuffer = e.createRenderbuffer()),
              G(a.__webglDepthbuffer, t, !1);
          n.bindFramebuffer(e.FRAMEBUFFER, null);
        }
        function W(e) {
          return Math.min(v, e.samples);
        }
        function j(e) {
          var n = r.get(e);
          return (
            f &&
            e.samples > 0 &&
            !0 === t.has("WEBGL_multisampled_render_to_texture") &&
            !1 !== n.__useRenderToTexture
          );
        }
        function X(e, n) {
          var r = e.colorSpace,
            a = e.format,
            i = e.type;
          return (
            !0 === e.isCompressedTexture ||
              !0 === e.isVideoTexture ||
              e.format === Ne ||
              (r !== Ae &&
                r !== Te &&
                (ct.getTransfer(r) === Pe
                  ? !1 === f
                    ? !0 === t.has("EXT_sRGB") && a === ue
                      ? ((e.format = Ne),
                        (e.minFilter = ee),
                        (e.generateMipmaps = !1))
                      : (n = ht.sRGBToLinear(n))
                    : (a === ue && i === ne) ||
                      console.warn(
                        "THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."
                      )
                  : console.error(
                      "THREE.WebGLTextures: Unsupported texture color space:",
                      r
                    ))),
            n
          );
        }
        (this.allocateTextureUnit = function () {
          var e = L;
          return (
            e >= d &&
              console.warn(
                "THREE.WebGLTextures: Trying to use " +
                  e +
                  " texture units while this GPU supports only " +
                  d
              ),
            (L += 1),
            e
          );
        }),
          (this.resetTextureUnits = function () {
            L = 0;
          }),
          (this.setTexture2D = D),
          (this.setTexture2DArray = function (t, a) {
            var i = r.get(t);
            t.version > 0 && i.__version !== t.version
              ? B(i, t, a)
              : n.bindTexture(
                  e.TEXTURE_2D_ARRAY,
                  i.__webglTexture,
                  e.TEXTURE0 + a
                );
          }),
          (this.setTexture3D = function (t, a) {
            var i = r.get(t);
            t.version > 0 && i.__version !== t.version
              ? B(i, t, a)
              : n.bindTexture(e.TEXTURE_3D, i.__webglTexture, e.TEXTURE0 + a);
          }),
          (this.setTextureCube = function (t, a) {
            var o = r.get(t);
            t.version > 0 && o.__version !== t.version
              ? (function (t, a, o) {
                  if (6 !== a.image.length) return;
                  var s = z(t, a),
                    l = a.source;
                  n.bindTexture(
                    e.TEXTURE_CUBE_MAP,
                    t.__webglTexture,
                    e.TEXTURE0 + o
                  );
                  var u = r.get(l);
                  if (l.version !== u.__version || !0 === s) {
                    n.activeTexture(e.TEXTURE0 + o);
                    var c = ct.getPrimaries(ct.workingColorSpace),
                      d =
                        a.colorSpace === Te
                          ? null
                          : ct.getPrimaries(a.colorSpace),
                      p =
                        a.colorSpace === Te || c === d
                          ? e.NONE
                          : e.BROWSER_DEFAULT_WEBGL;
                    e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, a.flipY),
                      e.pixelStorei(
                        e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                        a.premultiplyAlpha
                      ),
                      e.pixelStorei(e.UNPACK_ALIGNMENT, a.unpackAlignment),
                      e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL, p);
                    for (
                      var v =
                          a.isCompressedTexture ||
                          a.image[0].isCompressedTexture,
                        m = a.image[0] && a.image[0].isDataTexture,
                        g = [],
                        y = 0;
                      y < 6;
                      y++
                    )
                      (g[y] =
                        v || m
                          ? m
                            ? a.image[y].image
                            : a.image[y]
                          : E(a.image[y], !1, !0, h)),
                        (g[y] = X(a, g[y]));
                    var _,
                      b = g[0],
                      x = w(b) || f,
                      S = i.convert(a.format, a.colorSpace),
                      k = i.convert(a.type),
                      R = A(a.internalFormat, S, k, a.colorSpace),
                      P = f && !0 !== a.isVideoTexture,
                      U = void 0 === u.__version || !0 === s,
                      L = C(a, b, x);
                    if ((F(e.TEXTURE_CUBE_MAP, a, x), v)) {
                      P &&
                        U &&
                        n.texStorage2D(
                          e.TEXTURE_CUBE_MAP,
                          L,
                          R,
                          b.width,
                          b.height
                        );
                      for (var D = 0; D < 6; D++) {
                        _ = g[D].mipmaps;
                        for (var I = 0; I < _.length; I++) {
                          var O = _[I];
                          a.format !== ue
                            ? null !== S
                              ? P
                                ? n.compressedTexSubImage2D(
                                    e.TEXTURE_CUBE_MAP_POSITIVE_X + D,
                                    I,
                                    0,
                                    0,
                                    O.width,
                                    O.height,
                                    S,
                                    O.data
                                  )
                                : n.compressedTexImage2D(
                                    e.TEXTURE_CUBE_MAP_POSITIVE_X + D,
                                    I,
                                    R,
                                    O.width,
                                    O.height,
                                    0,
                                    O.data
                                  )
                              : console.warn(
                                  "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"
                                )
                            : P
                            ? n.texSubImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + D,
                                I,
                                0,
                                0,
                                O.width,
                                O.height,
                                S,
                                k,
                                O.data
                              )
                            : n.texImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + D,
                                I,
                                R,
                                O.width,
                                O.height,
                                0,
                                S,
                                k,
                                O.data
                              );
                        }
                      }
                    } else {
                      (_ = a.mipmaps),
                        P &&
                          U &&
                          (_.length > 0 && L++,
                          n.texStorage2D(
                            e.TEXTURE_CUBE_MAP,
                            L,
                            R,
                            g[0].width,
                            g[0].height
                          ));
                      for (var N = 0; N < 6; N++)
                        if (m) {
                          P
                            ? n.texSubImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                0,
                                0,
                                0,
                                g[N].width,
                                g[N].height,
                                S,
                                k,
                                g[N].data
                              )
                            : n.texImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                0,
                                R,
                                g[N].width,
                                g[N].height,
                                0,
                                S,
                                k,
                                g[N].data
                              );
                          for (var B = 0; B < _.length; B++) {
                            var H = _[B].image[N].image;
                            P
                              ? n.texSubImage2D(
                                  e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                  B + 1,
                                  0,
                                  0,
                                  H.width,
                                  H.height,
                                  S,
                                  k,
                                  H.data
                                )
                              : n.texImage2D(
                                  e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                  B + 1,
                                  R,
                                  H.width,
                                  H.height,
                                  0,
                                  S,
                                  k,
                                  H.data
                                );
                          }
                        } else {
                          P
                            ? n.texSubImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                0,
                                0,
                                0,
                                S,
                                k,
                                g[N]
                              )
                            : n.texImage2D(
                                e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                0,
                                R,
                                S,
                                k,
                                g[N]
                              );
                          for (var G = 0; G < _.length; G++) {
                            var V = _[G];
                            P
                              ? n.texSubImage2D(
                                  e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                  G + 1,
                                  0,
                                  0,
                                  S,
                                  k,
                                  V.image[N]
                                )
                              : n.texImage2D(
                                  e.TEXTURE_CUBE_MAP_POSITIVE_X + N,
                                  G + 1,
                                  R,
                                  S,
                                  k,
                                  V.image[N]
                                );
                          }
                        }
                    }
                    T(a, x) && M(e.TEXTURE_CUBE_MAP),
                      (u.__version = l.version),
                      a.onUpdate && a.onUpdate(a);
                  }
                  t.__version = a.version;
                })(o, t, a)
              : n.bindTexture(
                  e.TEXTURE_CUBE_MAP,
                  o.__webglTexture,
                  e.TEXTURE0 + a
                );
          }),
          (this.rebindTextures = function (t, n, a) {
            var i = r.get(t);
            void 0 !== n &&
              H(
                i.__webglFramebuffer,
                t,
                t.texture,
                e.COLOR_ATTACHMENT0,
                e.TEXTURE_2D,
                0
              ),
              void 0 !== a && V(t);
          }),
          (this.setupRenderTarget = function (t) {
            var s = t.texture,
              l = r.get(t),
              u = r.get(s);
            t.addEventListener("dispose", P),
              !0 !== t.isWebGLMultipleRenderTargets &&
                (void 0 === u.__webglTexture &&
                  (u.__webglTexture = e.createTexture()),
                (u.__version = s.version),
                o.memory.textures++);
            var c = !0 === t.isWebGLCubeRenderTarget,
              d = !0 === t.isWebGLMultipleRenderTargets,
              h = w(t) || f;
            if (c) {
              l.__webglFramebuffer = [];
              for (var p = 0; p < 6; p++)
                if (f && s.mipmaps && s.mipmaps.length > 0) {
                  l.__webglFramebuffer[p] = [];
                  for (var v = 0; v < s.mipmaps.length; v++)
                    l.__webglFramebuffer[p][v] = e.createFramebuffer();
                } else l.__webglFramebuffer[p] = e.createFramebuffer();
            } else {
              if (f && s.mipmaps && s.mipmaps.length > 0) {
                l.__webglFramebuffer = [];
                for (var m = 0; m < s.mipmaps.length; m++)
                  l.__webglFramebuffer[m] = e.createFramebuffer();
              } else l.__webglFramebuffer = e.createFramebuffer();
              if (d)
                if (a.drawBuffers)
                  for (var g = t.texture, y = 0, _ = g.length; y < _; y++) {
                    var b = r.get(g[y]);
                    void 0 === b.__webglTexture &&
                      ((b.__webglTexture = e.createTexture()),
                      o.memory.textures++);
                  }
                else
                  console.warn(
                    "THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension."
                  );
              if (f && t.samples > 0 && !1 === j(t)) {
                var x = d ? s : [s];
                (l.__webglMultisampledFramebuffer = e.createFramebuffer()),
                  (l.__webglColorRenderbuffer = []),
                  n.bindFramebuffer(
                    e.FRAMEBUFFER,
                    l.__webglMultisampledFramebuffer
                  );
                for (var S = 0; S < x.length; S++) {
                  var E = x[S];
                  (l.__webglColorRenderbuffer[S] = e.createRenderbuffer()),
                    e.bindRenderbuffer(
                      e.RENDERBUFFER,
                      l.__webglColorRenderbuffer[S]
                    );
                  var C = i.convert(E.format, E.colorSpace),
                    k = i.convert(E.type),
                    R = A(
                      E.internalFormat,
                      C,
                      k,
                      E.colorSpace,
                      !0 === t.isXRRenderTarget
                    ),
                    U = W(t);
                  e.renderbufferStorageMultisample(
                    e.RENDERBUFFER,
                    U,
                    R,
                    t.width,
                    t.height
                  ),
                    e.framebufferRenderbuffer(
                      e.FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + S,
                      e.RENDERBUFFER,
                      l.__webglColorRenderbuffer[S]
                    );
                }
                e.bindRenderbuffer(e.RENDERBUFFER, null),
                  t.depthBuffer &&
                    ((l.__webglDepthRenderbuffer = e.createRenderbuffer()),
                    G(l.__webglDepthRenderbuffer, t, !0)),
                  n.bindFramebuffer(e.FRAMEBUFFER, null);
              }
            }
            if (c) {
              n.bindTexture(e.TEXTURE_CUBE_MAP, u.__webglTexture),
                F(e.TEXTURE_CUBE_MAP, s, h);
              for (var L = 0; L < 6; L++)
                if (f && s.mipmaps && s.mipmaps.length > 0)
                  for (var D = 0; D < s.mipmaps.length; D++)
                    H(
                      l.__webglFramebuffer[L][D],
                      t,
                      s,
                      e.COLOR_ATTACHMENT0,
                      e.TEXTURE_CUBE_MAP_POSITIVE_X + L,
                      D
                    );
                else
                  H(
                    l.__webglFramebuffer[L],
                    t,
                    s,
                    e.COLOR_ATTACHMENT0,
                    e.TEXTURE_CUBE_MAP_POSITIVE_X + L,
                    0
                  );
              T(s, h) && M(e.TEXTURE_CUBE_MAP), n.unbindTexture();
            } else if (d) {
              for (var I = t.texture, O = 0, N = I.length; O < N; O++) {
                var z = I[O],
                  B = r.get(z);
                n.bindTexture(e.TEXTURE_2D, B.__webglTexture),
                  F(e.TEXTURE_2D, z, h),
                  H(
                    l.__webglFramebuffer,
                    t,
                    z,
                    e.COLOR_ATTACHMENT0 + O,
                    e.TEXTURE_2D,
                    0
                  ),
                  T(z, h) && M(e.TEXTURE_2D);
              }
              n.unbindTexture();
            } else {
              var X = e.TEXTURE_2D;
              if (
                ((t.isWebGL3DRenderTarget || t.isWebGLArrayRenderTarget) &&
                  (f
                    ? (X = t.isWebGL3DRenderTarget
                        ? e.TEXTURE_3D
                        : e.TEXTURE_2D_ARRAY)
                    : console.error(
                        "THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2."
                      )),
                n.bindTexture(X, u.__webglTexture),
                F(X, s, h),
                f && s.mipmaps && s.mipmaps.length > 0)
              )
                for (var q = 0; q < s.mipmaps.length; q++)
                  H(l.__webglFramebuffer[q], t, s, e.COLOR_ATTACHMENT0, X, q);
              else H(l.__webglFramebuffer, t, s, e.COLOR_ATTACHMENT0, X, 0);
              T(s, h) && M(X), n.unbindTexture();
            }
            t.depthBuffer && V(t);
          }),
          (this.updateRenderTargetMipmap = function (t) {
            for (
              var a = w(t) || f,
                i =
                  !0 === t.isWebGLMultipleRenderTargets
                    ? t.texture
                    : [t.texture],
                o = 0,
                s = i.length;
              o < s;
              o++
            ) {
              var l = i[o];
              if (T(l, a)) {
                var u = t.isWebGLCubeRenderTarget
                    ? e.TEXTURE_CUBE_MAP
                    : e.TEXTURE_2D,
                  c = r.get(l).__webglTexture;
                n.bindTexture(u, c), M(u), n.unbindTexture();
              }
            }
          }),
          (this.updateMultisampleRenderTarget = function (t) {
            if (f && t.samples > 0 && !1 === j(t)) {
              var a = t.isWebGLMultipleRenderTargets ? t.texture : [t.texture],
                i = t.width,
                o = t.height,
                s = e.COLOR_BUFFER_BIT,
                l = [],
                u = t.stencilBuffer
                  ? e.DEPTH_STENCIL_ATTACHMENT
                  : e.DEPTH_ATTACHMENT,
                c = r.get(t),
                d = !0 === t.isWebGLMultipleRenderTargets;
              if (d)
                for (var h = 0; h < a.length; h++)
                  n.bindFramebuffer(
                    e.FRAMEBUFFER,
                    c.__webglMultisampledFramebuffer
                  ),
                    e.framebufferRenderbuffer(
                      e.FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + h,
                      e.RENDERBUFFER,
                      null
                    ),
                    n.bindFramebuffer(e.FRAMEBUFFER, c.__webglFramebuffer),
                    e.framebufferTexture2D(
                      e.DRAW_FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + h,
                      e.TEXTURE_2D,
                      null,
                      0
                    );
              n.bindFramebuffer(
                e.READ_FRAMEBUFFER,
                c.__webglMultisampledFramebuffer
              ),
                n.bindFramebuffer(e.DRAW_FRAMEBUFFER, c.__webglFramebuffer);
              for (var p = 0; p < a.length; p++) {
                l.push(e.COLOR_ATTACHMENT0 + p), t.depthBuffer && l.push(u);
                var v =
                  void 0 !== c.__ignoreDepthValues && c.__ignoreDepthValues;
                if (
                  (!1 === v &&
                    (t.depthBuffer && (s |= e.DEPTH_BUFFER_BIT),
                    t.stencilBuffer && (s |= e.STENCIL_BUFFER_BIT)),
                  d &&
                    e.framebufferRenderbuffer(
                      e.READ_FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0,
                      e.RENDERBUFFER,
                      c.__webglColorRenderbuffer[p]
                    ),
                  !0 === v &&
                    (e.invalidateFramebuffer(e.READ_FRAMEBUFFER, [u]),
                    e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER, [u])),
                  d)
                ) {
                  var m = r.get(a[p]).__webglTexture;
                  e.framebufferTexture2D(
                    e.DRAW_FRAMEBUFFER,
                    e.COLOR_ATTACHMENT0,
                    e.TEXTURE_2D,
                    m,
                    0
                  );
                }
                e.blitFramebuffer(0, 0, i, o, 0, 0, i, o, s, e.NEAREST),
                  g && e.invalidateFramebuffer(e.READ_FRAMEBUFFER, l);
              }
              if (
                (n.bindFramebuffer(e.READ_FRAMEBUFFER, null),
                n.bindFramebuffer(e.DRAW_FRAMEBUFFER, null),
                d)
              )
                for (var y = 0; y < a.length; y++) {
                  n.bindFramebuffer(
                    e.FRAMEBUFFER,
                    c.__webglMultisampledFramebuffer
                  ),
                    e.framebufferRenderbuffer(
                      e.FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + y,
                      e.RENDERBUFFER,
                      c.__webglColorRenderbuffer[y]
                    );
                  var _ = r.get(a[y]).__webglTexture;
                  n.bindFramebuffer(e.FRAMEBUFFER, c.__webglFramebuffer),
                    e.framebufferTexture2D(
                      e.DRAW_FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0 + y,
                      e.TEXTURE_2D,
                      _,
                      0
                    );
                }
              n.bindFramebuffer(
                e.DRAW_FRAMEBUFFER,
                c.__webglMultisampledFramebuffer
              );
            }
          }),
          (this.setupDepthRenderbuffer = V),
          (this.setupFrameBufferTexture = H),
          (this.useMultisampledRTT = j);
      }
      function bo(e, t, n) {
        var r = n.isWebGL2;
        return {
          convert: function (n) {
            var a,
              i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : Te,
              o = ct.getTransfer(i);
            if (n === ne) return e.UNSIGNED_BYTE;
            if (1017 === n) return e.UNSIGNED_SHORT_4_4_4_4;
            if (1018 === n) return e.UNSIGNED_SHORT_5_5_5_1;
            if (1010 === n) return e.BYTE;
            if (1011 === n) return e.SHORT;
            if (n === re) return e.UNSIGNED_SHORT;
            if (n === ae) return e.INT;
            if (n === ie) return e.UNSIGNED_INT;
            if (n === oe) return e.FLOAT;
            if (n === se)
              return r
                ? e.HALF_FLOAT
                : null !== (a = t.get("OES_texture_half_float"))
                ? a.HALF_FLOAT_OES
                : null;
            if (1021 === n) return e.ALPHA;
            if (n === ue) return e.RGBA;
            if (1024 === n) return e.LUMINANCE;
            if (1025 === n) return e.LUMINANCE_ALPHA;
            if (n === ce) return e.DEPTH_COMPONENT;
            if (n === fe) return e.DEPTH_STENCIL;
            if (n === Ne)
              return null !== (a = t.get("EXT_sRGB")) ? a.SRGB_ALPHA_EXT : null;
            if (1028 === n) return e.RED;
            if (1029 === n) return e.RED_INTEGER;
            if (1030 === n) return e.RG;
            if (1031 === n) return e.RG_INTEGER;
            if (1033 === n) return e.RGBA_INTEGER;
            if (n === de || n === he || n === pe || n === ve)
              if (o === Pe) {
                if (null === (a = t.get("WEBGL_compressed_texture_s3tc_srgb")))
                  return null;
                if (n === de) return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;
                if (n === he) return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
                if (n === pe) return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
                if (n === ve) return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
              } else {
                if (null === (a = t.get("WEBGL_compressed_texture_s3tc")))
                  return null;
                if (n === de) return a.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (n === he) return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (n === pe) return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (n === ve) return a.COMPRESSED_RGBA_S3TC_DXT5_EXT;
              }
            if (35840 === n || 35841 === n || 35842 === n || 35843 === n) {
              if (null === (a = t.get("WEBGL_compressed_texture_pvrtc")))
                return null;
              if (35840 === n) return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
              if (35841 === n) return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
              if (35842 === n) return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
              if (35843 === n) return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
            }
            if (36196 === n)
              return null !== (a = t.get("WEBGL_compressed_texture_etc1"))
                ? a.COMPRESSED_RGB_ETC1_WEBGL
                : null;
            if (37492 === n || 37496 === n) {
              if (null === (a = t.get("WEBGL_compressed_texture_etc")))
                return null;
              if (37492 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ETC2
                  : a.COMPRESSED_RGB8_ETC2;
              if (37496 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
                  : a.COMPRESSED_RGBA8_ETC2_EAC;
            }
            if (
              37808 === n ||
              37809 === n ||
              37810 === n ||
              37811 === n ||
              37812 === n ||
              37813 === n ||
              37814 === n ||
              37815 === n ||
              37816 === n ||
              37817 === n ||
              37818 === n ||
              37819 === n ||
              37820 === n ||
              37821 === n
            ) {
              if (null === (a = t.get("WEBGL_compressed_texture_astc")))
                return null;
              if (37808 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
                  : a.COMPRESSED_RGBA_ASTC_4x4_KHR;
              if (37809 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
                  : a.COMPRESSED_RGBA_ASTC_5x4_KHR;
              if (37810 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
                  : a.COMPRESSED_RGBA_ASTC_5x5_KHR;
              if (37811 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
                  : a.COMPRESSED_RGBA_ASTC_6x5_KHR;
              if (37812 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
                  : a.COMPRESSED_RGBA_ASTC_6x6_KHR;
              if (37813 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
                  : a.COMPRESSED_RGBA_ASTC_8x5_KHR;
              if (37814 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
                  : a.COMPRESSED_RGBA_ASTC_8x6_KHR;
              if (37815 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
                  : a.COMPRESSED_RGBA_ASTC_8x8_KHR;
              if (37816 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
                  : a.COMPRESSED_RGBA_ASTC_10x5_KHR;
              if (37817 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
                  : a.COMPRESSED_RGBA_ASTC_10x6_KHR;
              if (37818 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
                  : a.COMPRESSED_RGBA_ASTC_10x8_KHR;
              if (37819 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
                  : a.COMPRESSED_RGBA_ASTC_10x10_KHR;
              if (37820 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
                  : a.COMPRESSED_RGBA_ASTC_12x10_KHR;
              if (37821 === n)
                return o === Pe
                  ? a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
                  : a.COMPRESSED_RGBA_ASTC_12x12_KHR;
            }
            if (n === me || 36494 === n || 36495 === n) {
              if (null === (a = t.get("EXT_texture_compression_bptc")))
                return null;
              if (n === me)
                return o === Pe
                  ? a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT
                  : a.COMPRESSED_RGBA_BPTC_UNORM_EXT;
              if (36494 === n) return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
              if (36495 === n) return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;
            }
            if (36283 === n || 36284 === n || 36285 === n || 36286 === n) {
              if (null === (a = t.get("EXT_texture_compression_rgtc")))
                return null;
              if (n === me) return a.COMPRESSED_RED_RGTC1_EXT;
              if (36284 === n) return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;
              if (36285 === n) return a.COMPRESSED_RED_GREEN_RGTC2_EXT;
              if (36286 === n) return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
            }
            return n === le
              ? r
                ? e.UNSIGNED_INT_24_8
                : null !== (a = t.get("WEBGL_depth_texture"))
                ? a.UNSIGNED_INT_24_8_WEBGL
                : null
              : void 0 !== e[n]
              ? e[n]
              : null;
          },
        };
      }
      var xo = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [];
            return (
              w(this, n),
              ((e = t.call(this)).isArrayCamera = !0),
              (e.cameras = r),
              e
            );
          }
          return M(n);
        })(Ir),
        So = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e;
            return (
              w(this, n),
              ((e = t.call(this)).isGroup = !0),
              (e.type = "Group"),
              e
            );
          }
          return M(n);
        })(An),
        Eo = { type: "move" },
        wo = (function () {
          function e() {
            w(this, e),
              (this._targetRay = null),
              (this._grip = null),
              (this._hand = null);
          }
          return (
            M(e, [
              {
                key: "getHandSpace",
                value: function () {
                  return (
                    null === this._hand &&
                      ((this._hand = new So()),
                      (this._hand.matrixAutoUpdate = !1),
                      (this._hand.visible = !1),
                      (this._hand.joints = {}),
                      (this._hand.inputState = { pinching: !1 })),
                    this._hand
                  );
                },
              },
              {
                key: "getTargetRaySpace",
                value: function () {
                  return (
                    null === this._targetRay &&
                      ((this._targetRay = new So()),
                      (this._targetRay.matrixAutoUpdate = !1),
                      (this._targetRay.visible = !1),
                      (this._targetRay.hasLinearVelocity = !1),
                      (this._targetRay.linearVelocity = new Tt()),
                      (this._targetRay.hasAngularVelocity = !1),
                      (this._targetRay.angularVelocity = new Tt())),
                    this._targetRay
                  );
                },
              },
              {
                key: "getGripSpace",
                value: function () {
                  return (
                    null === this._grip &&
                      ((this._grip = new So()),
                      (this._grip.matrixAutoUpdate = !1),
                      (this._grip.visible = !1),
                      (this._grip.hasLinearVelocity = !1),
                      (this._grip.linearVelocity = new Tt()),
                      (this._grip.hasAngularVelocity = !1),
                      (this._grip.angularVelocity = new Tt())),
                    this._grip
                  );
                },
              },
              {
                key: "dispatchEvent",
                value: function (e) {
                  return (
                    null !== this._targetRay &&
                      this._targetRay.dispatchEvent(e),
                    null !== this._grip && this._grip.dispatchEvent(e),
                    null !== this._hand && this._hand.dispatchEvent(e),
                    this
                  );
                },
              },
              {
                key: "connect",
                value: function (e) {
                  if (e && e.hand) {
                    var t = this._hand;
                    if (t) {
                      var n,
                        r = h(e.hand.values());
                      try {
                        for (r.s(); !(n = r.n()).done; ) {
                          var a = n.value;
                          this._getHandJoint(t, a);
                        }
                      } catch (i) {
                        r.e(i);
                      } finally {
                        r.f();
                      }
                    }
                  }
                  return (
                    this.dispatchEvent({ type: "connected", data: e }), this
                  );
                },
              },
              {
                key: "disconnect",
                value: function (e) {
                  return (
                    this.dispatchEvent({ type: "disconnected", data: e }),
                    null !== this._targetRay && (this._targetRay.visible = !1),
                    null !== this._grip && (this._grip.visible = !1),
                    null !== this._hand && (this._hand.visible = !1),
                    this
                  );
                },
              },
              {
                key: "update",
                value: function (e, t, n) {
                  var r = null,
                    a = null,
                    i = null,
                    o = this._targetRay,
                    s = this._grip,
                    l = this._hand;
                  if (e && "visible-blurred" !== t.session.visibilityState) {
                    if (l && e.hand) {
                      i = !0;
                      var u,
                        c = h(e.hand.values());
                      try {
                        for (c.s(); !(u = c.n()).done; ) {
                          var f = u.value,
                            d = t.getJointPose(f, n),
                            p = this._getHandJoint(l, f);
                          null !== d &&
                            (p.matrix.fromArray(d.transform.matrix),
                            p.matrix.decompose(p.position, p.rotation, p.scale),
                            (p.matrixWorldNeedsUpdate = !0),
                            (p.jointRadius = d.radius)),
                            (p.visible = null !== d);
                        }
                      } catch (y) {
                        c.e(y);
                      } finally {
                        c.f();
                      }
                      var v = l.joints["index-finger-tip"],
                        m = l.joints["thumb-tip"],
                        g = v.position.distanceTo(m.position);
                      l.inputState.pinching && g > 0.025
                        ? ((l.inputState.pinching = !1),
                          this.dispatchEvent({
                            type: "pinchend",
                            handedness: e.handedness,
                            target: this,
                          }))
                        : !l.inputState.pinching &&
                          g <= 0.015 &&
                          ((l.inputState.pinching = !0),
                          this.dispatchEvent({
                            type: "pinchstart",
                            handedness: e.handedness,
                            target: this,
                          }));
                    } else
                      null !== s &&
                        e.gripSpace &&
                        null !== (a = t.getPose(e.gripSpace, n)) &&
                        (s.matrix.fromArray(a.transform.matrix),
                        s.matrix.decompose(s.position, s.rotation, s.scale),
                        (s.matrixWorldNeedsUpdate = !0),
                        a.linearVelocity
                          ? ((s.hasLinearVelocity = !0),
                            s.linearVelocity.copy(a.linearVelocity))
                          : (s.hasLinearVelocity = !1),
                        a.angularVelocity
                          ? ((s.hasAngularVelocity = !0),
                            s.angularVelocity.copy(a.angularVelocity))
                          : (s.hasAngularVelocity = !1));
                    null !== o &&
                      (null === (r = t.getPose(e.targetRaySpace, n)) &&
                        null !== a &&
                        (r = a),
                      null !== r &&
                        (o.matrix.fromArray(r.transform.matrix),
                        o.matrix.decompose(o.position, o.rotation, o.scale),
                        (o.matrixWorldNeedsUpdate = !0),
                        r.linearVelocity
                          ? ((o.hasLinearVelocity = !0),
                            o.linearVelocity.copy(r.linearVelocity))
                          : (o.hasLinearVelocity = !1),
                        r.angularVelocity
                          ? ((o.hasAngularVelocity = !0),
                            o.angularVelocity.copy(r.angularVelocity))
                          : (o.hasAngularVelocity = !1),
                        this.dispatchEvent(Eo)));
                  }
                  return (
                    null !== o && (o.visible = null !== r),
                    null !== s && (s.visible = null !== a),
                    null !== l && (l.visible = null !== i),
                    this
                  );
                },
              },
              {
                key: "_getHandJoint",
                value: function (e, t) {
                  if (void 0 === e.joints[t.jointName]) {
                    var n = new So();
                    (n.matrixAutoUpdate = !1),
                      (n.visible = !1),
                      (e.joints[t.jointName] = n),
                      e.add(n);
                  }
                  return e.joints[t.jointName];
                },
              },
            ]),
            e
          );
        })(),
        To = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e, r, a, i, o, s, l, u, c, f) {
            var d;
            if ((w(this, n), (f = void 0 !== f ? f : ce) !== ce && f !== fe))
              throw new Error(
                "DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat"
              );
            return (
              void 0 === a && f === ce && (a = ie),
              void 0 === a && f === fe && (a = le),
              ((d = t.call(this, null, i, o, s, l, u, f, a, c)).isDepthTexture =
                !0),
              (d.image = { width: e, height: r }),
              (d.magFilter = void 0 !== l ? l : Z),
              (d.minFilter = void 0 !== u ? u : Z),
              (d.flipY = !1),
              (d.generateMipmaps = !1),
              (d.compareFunction = null),
              d
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e),
                    (this.compareFunction = e.compareFunction),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function (e) {
                  var t = v(p(n.prototype), "toJSON", this).call(this, e);
                  return (
                    null !== this.compareFunction &&
                      (t.compareFunction = this.compareFunction),
                    t
                  );
                },
              },
            ]),
            n
          );
        })(yt),
        Mo = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e, r) {
            var a;
            w(this, n);
            var i = m((a = t.call(this))),
              o = null,
              s = 1,
              l = null,
              u = "local-floor",
              c = 1,
              f = null,
              h = null,
              p = null,
              v = null,
              g = null,
              y = null,
              _ = r.getContextAttributes(),
              b = null,
              x = null,
              S = [],
              T = [],
              M = new Ir();
            M.layers.enable(1), (M.viewport = new _t());
            var A = new Ir();
            A.layers.enable(2), (A.viewport = new _t());
            var C = [M, A],
              k = new xo();
            k.layers.enable(1), k.layers.enable(2);
            var R = null,
              P = null;
            function U(e) {
              var t = T.indexOf(e.inputSource);
              if (-1 !== t) {
                var n = S[t];
                void 0 !== n &&
                  (n.update(e.inputSource, e.frame, f || l),
                  n.dispatchEvent({ type: e.type, data: e.inputSource }));
              }
            }
            function L() {
              o.removeEventListener("select", U),
                o.removeEventListener("selectstart", U),
                o.removeEventListener("selectend", U),
                o.removeEventListener("squeeze", U),
                o.removeEventListener("squeezestart", U),
                o.removeEventListener("squeezeend", U),
                o.removeEventListener("end", L),
                o.removeEventListener("inputsourceschange", D);
              for (var t = 0; t < S.length; t++) {
                var n = T[t];
                null !== n && ((T[t] = null), S[t].disconnect(n));
              }
              (R = null),
                (P = null),
                e.setRenderTarget(b),
                (g = null),
                (v = null),
                (p = null),
                (o = null),
                (x = null),
                z.stop(),
                (i.isPresenting = !1),
                i.dispatchEvent({ type: "sessionend" });
            }
            function D(e) {
              for (var t = 0; t < e.removed.length; t++) {
                var n = e.removed[t],
                  r = T.indexOf(n);
                r >= 0 && ((T[r] = null), S[r].disconnect(n));
              }
              for (var a = 0; a < e.added.length; a++) {
                var i = e.added[a],
                  o = T.indexOf(i);
                if (-1 === o) {
                  for (var s = 0; s < S.length; s++) {
                    if (s >= T.length) {
                      T.push(i), (o = s);
                      break;
                    }
                    if (null === T[s]) {
                      (T[s] = i), (o = s);
                      break;
                    }
                  }
                  if (-1 === o) break;
                }
                var l = S[o];
                l && l.connect(i);
              }
            }
            (a.cameraAutoUpdate = !0),
              (a.enabled = !1),
              (a.isPresenting = !1),
              (a.getController = function (e) {
                var t = S[e];
                return (
                  void 0 === t && ((t = new wo()), (S[e] = t)),
                  t.getTargetRaySpace()
                );
              }),
              (a.getControllerGrip = function (e) {
                var t = S[e];
                return (
                  void 0 === t && ((t = new wo()), (S[e] = t)), t.getGripSpace()
                );
              }),
              (a.getHand = function (e) {
                var t = S[e];
                return (
                  void 0 === t && ((t = new wo()), (S[e] = t)), t.getHandSpace()
                );
              }),
              (a.setFramebufferScaleFactor = function (e) {
                (s = e),
                  !0 === i.isPresenting &&
                    console.warn(
                      "THREE.WebXRManager: Cannot change framebuffer scale while presenting."
                    );
              }),
              (a.setReferenceSpaceType = function (e) {
                (u = e),
                  !0 === i.isPresenting &&
                    console.warn(
                      "THREE.WebXRManager: Cannot change reference space type while presenting."
                    );
              }),
              (a.getReferenceSpace = function () {
                return f || l;
              }),
              (a.setReferenceSpace = function (e) {
                f = e;
              }),
              (a.getBaseLayer = function () {
                return null !== v ? v : g;
              }),
              (a.getBinding = function () {
                return p;
              }),
              (a.getFrame = function () {
                return y;
              }),
              (a.getSession = function () {
                return o;
              }),
              (a.setSession = (function () {
                var t,
                  n =
                    ((t = E().mark(function t(n) {
                      var a, d, h, m, y;
                      return E().wrap(
                        function (t) {
                          for (;;)
                            switch ((t.prev = t.next)) {
                              case 0:
                                if (null === (o = n)) {
                                  t.next = 25;
                                  break;
                                }
                                if (
                                  ((b = e.getRenderTarget()),
                                  o.addEventListener("select", U),
                                  o.addEventListener("selectstart", U),
                                  o.addEventListener("selectend", U),
                                  o.addEventListener("squeeze", U),
                                  o.addEventListener("squeezestart", U),
                                  o.addEventListener("squeezeend", U),
                                  o.addEventListener("end", L),
                                  o.addEventListener("inputsourceschange", D),
                                  !0 === _.xrCompatible)
                                ) {
                                  t.next = 14;
                                  break;
                                }
                                return (t.next = 14), r.makeXRCompatible();
                              case 14:
                                return (
                                  void 0 === o.renderState.layers ||
                                  !1 === e.capabilities.isWebGL2
                                    ? ((a = {
                                        antialias:
                                          void 0 !== o.renderState.layers ||
                                          _.antialias,
                                        alpha: !0,
                                        depth: _.depth,
                                        stencil: _.stencil,
                                        framebufferScaleFactor: s,
                                      }),
                                      (g = new XRWebGLLayer(o, r, a)),
                                      o.updateRenderState({ baseLayer: g }),
                                      (x = new xt(
                                        g.framebufferWidth,
                                        g.framebufferHeight,
                                        {
                                          format: ue,
                                          type: ne,
                                          colorSpace: e.outputColorSpace,
                                          stencilBuffer: _.stencil,
                                        }
                                      )))
                                    : ((d = null),
                                      (h = null),
                                      (m = null),
                                      _.depth &&
                                        ((m = _.stencil
                                          ? r.DEPTH24_STENCIL8
                                          : r.DEPTH_COMPONENT24),
                                        (d = _.stencil ? fe : ce),
                                        (h = _.stencil ? le : ie)),
                                      (y = {
                                        colorFormat: r.RGBA8,
                                        depthFormat: m,
                                        scaleFactor: s,
                                      }),
                                      (p = new XRWebGLBinding(o, r)),
                                      (v = p.createProjectionLayer(y)),
                                      o.updateRenderState({ layers: [v] }),
                                      (x = new xt(
                                        v.textureWidth,
                                        v.textureHeight,
                                        {
                                          format: ue,
                                          type: ne,
                                          depthTexture: new To(
                                            v.textureWidth,
                                            v.textureHeight,
                                            h,
                                            void 0,
                                            void 0,
                                            void 0,
                                            void 0,
                                            void 0,
                                            void 0,
                                            d
                                          ),
                                          stencilBuffer: _.stencil,
                                          colorSpace: e.outputColorSpace,
                                          samples: _.antialias ? 4 : 0,
                                        }
                                      )),
                                      (e.properties.get(x).__ignoreDepthValues =
                                        v.ignoreDepthValues)),
                                  (x.isXRRenderTarget = !0),
                                  this.setFoveation(c),
                                  (f = null),
                                  (t.next = 20),
                                  o.requestReferenceSpace(u)
                                );
                              case 20:
                                (l = t.sent),
                                  z.setContext(o),
                                  z.start(),
                                  (i.isPresenting = !0),
                                  i.dispatchEvent({ type: "sessionstart" });
                              case 25:
                              case "end":
                                return t.stop();
                            }
                        },
                        t,
                        this
                      );
                    })),
                    function () {
                      var e = this,
                        n = arguments;
                      return new Promise(function (r, a) {
                        var i = t.apply(e, n);
                        function o(e) {
                          d(i, r, a, o, s, "next", e);
                        }
                        function s(e) {
                          d(i, r, a, o, s, "throw", e);
                        }
                        o(void 0);
                      });
                    });
                return function (e) {
                  return n.apply(this, arguments);
                };
              })()),
              (a.getEnvironmentBlendMode = function () {
                if (null !== o) return o.environmentBlendMode;
              });
            var I = new Tt(),
              O = new Tt();
            function N(e, t) {
              null === t
                ? e.matrixWorld.copy(e.matrix)
                : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix),
                e.matrixWorldInverse.copy(e.matrixWorld).invert();
            }
            (a.updateCamera = function (e) {
              if (null !== o) {
                (k.near = A.near = M.near = e.near),
                  (k.far = A.far = M.far = e.far),
                  (R === k.near && P === k.far) ||
                    (o.updateRenderState({
                      depthNear: k.near,
                      depthFar: k.far,
                    }),
                    (R = k.near),
                    (P = k.far));
                var t = e.parent,
                  n = k.cameras;
                N(k, t);
                for (var r = 0; r < n.length; r++) N(n[r], t);
                2 === n.length
                  ? (function (e, t, n) {
                      I.setFromMatrixPosition(t.matrixWorld),
                        O.setFromMatrixPosition(n.matrixWorld);
                      var r = I.distanceTo(O),
                        a = t.projectionMatrix.elements,
                        i = n.projectionMatrix.elements,
                        o = a[14] / (a[10] - 1),
                        s = a[14] / (a[10] + 1),
                        l = (a[9] + 1) / a[5],
                        u = (a[9] - 1) / a[5],
                        c = (a[8] - 1) / a[0],
                        f = (i[8] + 1) / i[0],
                        d = o * c,
                        h = o * f,
                        p = r / (-c + f),
                        v = p * -c;
                      t.matrixWorld.decompose(
                        e.position,
                        e.quaternion,
                        e.scale
                      ),
                        e.translateX(v),
                        e.translateZ(p),
                        e.matrixWorld.compose(
                          e.position,
                          e.quaternion,
                          e.scale
                        ),
                        e.matrixWorldInverse.copy(e.matrixWorld).invert();
                      var m = o + p,
                        g = s + p,
                        y = d - v,
                        _ = h + (r - v),
                        b = ((l * s) / g) * m,
                        x = ((u * s) / g) * m;
                      e.projectionMatrix.makePerspective(y, _, b, x, m, g),
                        e.projectionMatrixInverse
                          .copy(e.projectionMatrix)
                          .invert();
                    })(k, M, A)
                  : k.projectionMatrix.copy(M.projectionMatrix),
                  (function (e, t, n) {
                    null === n
                      ? e.matrix.copy(t.matrixWorld)
                      : (e.matrix.copy(n.matrixWorld),
                        e.matrix.invert(),
                        e.matrix.multiply(t.matrixWorld));
                    e.matrix.decompose(e.position, e.quaternion, e.scale),
                      e.updateMatrixWorld(!0),
                      e.projectionMatrix.copy(t.projectionMatrix),
                      e.projectionMatrixInverse.copy(t.projectionMatrixInverse),
                      e.isPerspectiveCamera &&
                        ((e.fov =
                          2 *
                          Ve *
                          Math.atan(1 / e.projectionMatrix.elements[5])),
                        (e.zoom = 1));
                  })(e, k, t);
              }
            }),
              (a.getCamera = function () {
                return k;
              }),
              (a.getFoveation = function () {
                if (null !== v || null !== g) return c;
              }),
              (a.setFoveation = function (e) {
                (c = e),
                  null !== v && (v.fixedFoveation = e),
                  null !== g &&
                    void 0 !== g.fixedFoveation &&
                    (g.fixedFoveation = e);
              });
            var F = null;
            var z = new qr();
            return (
              z.setAnimationLoop(function (t, n) {
                if (((h = n.getViewerPose(f || l)), (y = n), null !== h)) {
                  var r = h.views;
                  null !== g &&
                    (e.setRenderTargetFramebuffer(x, g.framebuffer),
                    e.setRenderTarget(x));
                  var a = !1;
                  r.length !== k.cameras.length &&
                    ((k.cameras.length = 0), (a = !0));
                  for (var o = 0; o < r.length; o++) {
                    var s = r[o],
                      u = null;
                    if (null !== g) u = g.getViewport(s);
                    else {
                      var c = p.getViewSubImage(v, s);
                      (u = c.viewport),
                        0 === o &&
                          (e.setRenderTargetTextures(
                            x,
                            c.colorTexture,
                            v.ignoreDepthValues ? void 0 : c.depthStencilTexture
                          ),
                          e.setRenderTarget(x));
                    }
                    var d = C[o];
                    void 0 === d &&
                      ((d = new Ir()).layers.enable(o),
                      (d.viewport = new _t()),
                      (C[o] = d)),
                      d.matrix.fromArray(s.transform.matrix),
                      d.matrix.decompose(d.position, d.quaternion, d.scale),
                      d.projectionMatrix.fromArray(s.projectionMatrix),
                      d.projectionMatrixInverse
                        .copy(d.projectionMatrix)
                        .invert(),
                      d.viewport.set(u.x, u.y, u.width, u.height),
                      0 === o &&
                        (k.matrix.copy(d.matrix),
                        k.matrix.decompose(k.position, k.quaternion, k.scale)),
                      !0 === a && k.cameras.push(d);
                  }
                }
                for (var m = 0; m < S.length; m++) {
                  var _ = T[m],
                    b = S[m];
                  null !== _ && void 0 !== b && b.update(_, n, f || l);
                }
                F && F(t, n),
                  n.detectedPlanes &&
                    i.dispatchEvent({ type: "planesdetected", data: n }),
                  (y = null);
              }),
              (a.setAnimationLoop = function (e) {
                F = e;
              }),
              (a.dispose = function () {}),
              a
            );
          }
          return M(n);
        })(Be);
      function Ao(e, t) {
        function n(e, t) {
          !0 === e.matrixAutoUpdate && e.updateMatrix(), t.value.copy(e.matrix);
        }
        function r(r, a) {
          (r.opacity.value = a.opacity),
            a.color && r.diffuse.value.copy(a.color),
            a.emissive &&
              r.emissive.value
                .copy(a.emissive)
                .multiplyScalar(a.emissiveIntensity),
            a.map && ((r.map.value = a.map), n(a.map, r.mapTransform)),
            a.alphaMap &&
              ((r.alphaMap.value = a.alphaMap),
              n(a.alphaMap, r.alphaMapTransform)),
            a.bumpMap &&
              ((r.bumpMap.value = a.bumpMap),
              n(a.bumpMap, r.bumpMapTransform),
              (r.bumpScale.value = a.bumpScale),
              a.side === U && (r.bumpScale.value *= -1)),
            a.normalMap &&
              ((r.normalMap.value = a.normalMap),
              n(a.normalMap, r.normalMapTransform),
              r.normalScale.value.copy(a.normalScale),
              a.side === U && r.normalScale.value.negate()),
            a.displacementMap &&
              ((r.displacementMap.value = a.displacementMap),
              n(a.displacementMap, r.displacementMapTransform),
              (r.displacementScale.value = a.displacementScale),
              (r.displacementBias.value = a.displacementBias)),
            a.emissiveMap &&
              ((r.emissiveMap.value = a.emissiveMap),
              n(a.emissiveMap, r.emissiveMapTransform)),
            a.specularMap &&
              ((r.specularMap.value = a.specularMap),
              n(a.specularMap, r.specularMapTransform)),
            a.alphaTest > 0 && (r.alphaTest.value = a.alphaTest);
          var i = t.get(a).envMap;
          if (
            (i &&
              ((r.envMap.value = i),
              (r.flipEnvMap.value =
                i.isCubeTexture && !1 === i.isRenderTargetTexture ? -1 : 1),
              (r.reflectivity.value = a.reflectivity),
              (r.ior.value = a.ior),
              (r.refractionRatio.value = a.refractionRatio)),
            a.lightMap)
          ) {
            r.lightMap.value = a.lightMap;
            var o = !0 === e._useLegacyLights ? Math.PI : 1;
            (r.lightMapIntensity.value = a.lightMapIntensity * o),
              n(a.lightMap, r.lightMapTransform);
          }
          a.aoMap &&
            ((r.aoMap.value = a.aoMap),
            (r.aoMapIntensity.value = a.aoMapIntensity),
            n(a.aoMap, r.aoMapTransform));
        }
        return {
          refreshFogUniforms: function (t, n) {
            n.color.getRGB(t.fogColor.value, Pr(e)),
              n.isFog
                ? ((t.fogNear.value = n.near), (t.fogFar.value = n.far))
                : n.isFogExp2 && (t.fogDensity.value = n.density);
          },
          refreshMaterialUniforms: function (e, a, i, o, s) {
            a.isMeshBasicMaterial || a.isMeshLambertMaterial
              ? r(e, a)
              : a.isMeshToonMaterial
              ? (r(e, a),
                (function (e, t) {
                  t.gradientMap && (e.gradientMap.value = t.gradientMap);
                })(e, a))
              : a.isMeshPhongMaterial
              ? (r(e, a),
                (function (e, t) {
                  e.specular.value.copy(t.specular),
                    (e.shininess.value = Math.max(t.shininess, 1e-4));
                })(e, a))
              : a.isMeshStandardMaterial
              ? (r(e, a),
                (function (e, r) {
                  (e.metalness.value = r.metalness),
                    r.metalnessMap &&
                      ((e.metalnessMap.value = r.metalnessMap),
                      n(r.metalnessMap, e.metalnessMapTransform));
                  (e.roughness.value = r.roughness),
                    r.roughnessMap &&
                      ((e.roughnessMap.value = r.roughnessMap),
                      n(r.roughnessMap, e.roughnessMapTransform));
                  var a = t.get(r).envMap;
                  a && (e.envMapIntensity.value = r.envMapIntensity);
                })(e, a),
                a.isMeshPhysicalMaterial &&
                  (function (e, t, r) {
                    (e.ior.value = t.ior),
                      t.sheen > 0 &&
                        (e.sheenColor.value
                          .copy(t.sheenColor)
                          .multiplyScalar(t.sheen),
                        (e.sheenRoughness.value = t.sheenRoughness),
                        t.sheenColorMap &&
                          ((e.sheenColorMap.value = t.sheenColorMap),
                          n(t.sheenColorMap, e.sheenColorMapTransform)),
                        t.sheenRoughnessMap &&
                          ((e.sheenRoughnessMap.value = t.sheenRoughnessMap),
                          n(
                            t.sheenRoughnessMap,
                            e.sheenRoughnessMapTransform
                          )));
                    t.clearcoat > 0 &&
                      ((e.clearcoat.value = t.clearcoat),
                      (e.clearcoatRoughness.value = t.clearcoatRoughness),
                      t.clearcoatMap &&
                        ((e.clearcoatMap.value = t.clearcoatMap),
                        n(t.clearcoatMap, e.clearcoatMapTransform)),
                      t.clearcoatRoughnessMap &&
                        ((e.clearcoatRoughnessMap.value =
                          t.clearcoatRoughnessMap),
                        n(
                          t.clearcoatRoughnessMap,
                          e.clearcoatRoughnessMapTransform
                        )),
                      t.clearcoatNormalMap &&
                        ((e.clearcoatNormalMap.value = t.clearcoatNormalMap),
                        n(t.clearcoatNormalMap, e.clearcoatNormalMapTransform),
                        e.clearcoatNormalScale.value.copy(
                          t.clearcoatNormalScale
                        ),
                        t.side === U && e.clearcoatNormalScale.value.negate()));
                    t.iridescence > 0 &&
                      ((e.iridescence.value = t.iridescence),
                      (e.iridescenceIOR.value = t.iridescenceIOR),
                      (e.iridescenceThicknessMinimum.value =
                        t.iridescenceThicknessRange[0]),
                      (e.iridescenceThicknessMaximum.value =
                        t.iridescenceThicknessRange[1]),
                      t.iridescenceMap &&
                        ((e.iridescenceMap.value = t.iridescenceMap),
                        n(t.iridescenceMap, e.iridescenceMapTransform)),
                      t.iridescenceThicknessMap &&
                        ((e.iridescenceThicknessMap.value =
                          t.iridescenceThicknessMap),
                        n(
                          t.iridescenceThicknessMap,
                          e.iridescenceThicknessMapTransform
                        )));
                    t.transmission > 0 &&
                      ((e.transmission.value = t.transmission),
                      (e.transmissionSamplerMap.value = r.texture),
                      e.transmissionSamplerSize.value.set(r.width, r.height),
                      t.transmissionMap &&
                        ((e.transmissionMap.value = t.transmissionMap),
                        n(t.transmissionMap, e.transmissionMapTransform)),
                      (e.thickness.value = t.thickness),
                      t.thicknessMap &&
                        ((e.thicknessMap.value = t.thicknessMap),
                        n(t.thicknessMap, e.thicknessMapTransform)),
                      (e.attenuationDistance.value = t.attenuationDistance),
                      e.attenuationColor.value.copy(t.attenuationColor));
                    t.anisotropy > 0 &&
                      (e.anisotropyVector.value.set(
                        t.anisotropy * Math.cos(t.anisotropyRotation),
                        t.anisotropy * Math.sin(t.anisotropyRotation)
                      ),
                      t.anisotropyMap &&
                        ((e.anisotropyMap.value = t.anisotropyMap),
                        n(t.anisotropyMap, e.anisotropyMapTransform)));
                    (e.specularIntensity.value = t.specularIntensity),
                      e.specularColor.value.copy(t.specularColor),
                      t.specularColorMap &&
                        ((e.specularColorMap.value = t.specularColorMap),
                        n(t.specularColorMap, e.specularColorMapTransform));
                    t.specularIntensityMap &&
                      ((e.specularIntensityMap.value = t.specularIntensityMap),
                      n(
                        t.specularIntensityMap,
                        e.specularIntensityMapTransform
                      ));
                  })(e, a, s))
              : a.isMeshMatcapMaterial
              ? (r(e, a),
                (function (e, t) {
                  t.matcap && (e.matcap.value = t.matcap);
                })(e, a))
              : a.isMeshDepthMaterial
              ? r(e, a)
              : a.isMeshDistanceMaterial
              ? (r(e, a),
                (function (e, n) {
                  var r = t.get(n).light;
                  e.referencePosition.value.setFromMatrixPosition(
                    r.matrixWorld
                  ),
                    (e.nearDistance.value = r.shadow.camera.near),
                    (e.farDistance.value = r.shadow.camera.far);
                })(e, a))
              : a.isMeshNormalMaterial
              ? r(e, a)
              : a.isLineBasicMaterial
              ? ((function (e, t) {
                  e.diffuse.value.copy(t.color),
                    (e.opacity.value = t.opacity),
                    t.map && ((e.map.value = t.map), n(t.map, e.mapTransform));
                })(e, a),
                a.isLineDashedMaterial &&
                  (function (e, t) {
                    (e.dashSize.value = t.dashSize),
                      (e.totalSize.value = t.dashSize + t.gapSize),
                      (e.scale.value = t.scale);
                  })(e, a))
              : a.isPointsMaterial
              ? (function (e, t, r, a) {
                  e.diffuse.value.copy(t.color),
                    (e.opacity.value = t.opacity),
                    (e.size.value = t.size * r),
                    (e.scale.value = 0.5 * a),
                    t.map && ((e.map.value = t.map), n(t.map, e.uvTransform));
                  t.alphaMap &&
                    ((e.alphaMap.value = t.alphaMap),
                    n(t.alphaMap, e.alphaMapTransform));
                  t.alphaTest > 0 && (e.alphaTest.value = t.alphaTest);
                })(e, a, i, o)
              : a.isSpriteMaterial
              ? (function (e, t) {
                  e.diffuse.value.copy(t.color),
                    (e.opacity.value = t.opacity),
                    (e.rotation.value = t.rotation),
                    t.map && ((e.map.value = t.map), n(t.map, e.mapTransform));
                  t.alphaMap &&
                    ((e.alphaMap.value = t.alphaMap),
                    n(t.alphaMap, e.alphaMapTransform));
                  t.alphaTest > 0 && (e.alphaTest.value = t.alphaTest);
                })(e, a)
              : a.isShadowMaterial
              ? (e.color.value.copy(a.color), (e.opacity.value = a.opacity))
              : a.isShaderMaterial && (a.uniformsNeedUpdate = !1);
          },
        };
      }
      function Co(e, t, n, r) {
        var a = {},
          i = {},
          o = [],
          s = n.isWebGL2 ? e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS) : 0;
        function l(e, t, n) {
          var r = e.value;
          if (void 0 === n[t]) {
            if ("number" === typeof r) n[t] = r;
            else {
              for (
                var a = Array.isArray(r) ? r : [r], i = [], o = 0;
                o < a.length;
                o++
              )
                i.push(a[o].clone());
              n[t] = i;
            }
            return !0;
          }
          if ("number" === typeof r) {
            if (n[t] !== r) return (n[t] = r), !0;
          } else
            for (
              var s = Array.isArray(n[t]) ? n[t] : [n[t]],
                l = Array.isArray(r) ? r : [r],
                u = 0;
              u < s.length;
              u++
            ) {
              var c = s[u];
              if (!1 === c.equals(l[u])) return c.copy(l[u]), !0;
            }
          return !1;
        }
        function u(e) {
          var t = { boundary: 0, storage: 0 };
          return (
            "number" === typeof e
              ? ((t.boundary = 4), (t.storage = 4))
              : e.isVector2
              ? ((t.boundary = 8), (t.storage = 8))
              : e.isVector3 || e.isColor
              ? ((t.boundary = 16), (t.storage = 12))
              : e.isVector4
              ? ((t.boundary = 16), (t.storage = 16))
              : e.isMatrix3
              ? ((t.boundary = 48), (t.storage = 48))
              : e.isMatrix4
              ? ((t.boundary = 64), (t.storage = 64))
              : e.isTexture
              ? console.warn(
                  "THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."
                )
              : console.warn(
                  "THREE.WebGLRenderer: Unsupported uniform value type.",
                  e
                ),
            t
          );
        }
        function c(t) {
          var n = t.target;
          n.removeEventListener("dispose", c);
          var r = o.indexOf(n.__bindingPointIndex);
          o.splice(r, 1),
            e.deleteBuffer(a[n.id]),
            delete a[n.id],
            delete i[n.id];
        }
        return {
          bind: function (e, t) {
            var n = t.program;
            r.uniformBlockBinding(e, n);
          },
          update: function (n, f) {
            var d = a[n.id];
            void 0 === d &&
              (!(function (e) {
                for (
                  var t = e.uniforms, n = 0, r = 16, a = 0, i = 0, o = t.length;
                  i < o;
                  i++
                ) {
                  for (
                    var s = t[i],
                      l = { boundary: 0, storage: 0 },
                      c = Array.isArray(s.value) ? s.value : [s.value],
                      f = 0,
                      d = c.length;
                    f < d;
                    f++
                  ) {
                    var h = u(c[f]);
                    (l.boundary += h.boundary), (l.storage += h.storage);
                  }
                  if (
                    ((s.__data = new Float32Array(
                      l.storage / Float32Array.BYTES_PER_ELEMENT
                    )),
                    (s.__offset = n),
                    i > 0)
                  )
                    0 !== (a = n % r) &&
                      r - a - l.boundary < 0 &&
                      ((n += r - a), (s.__offset = n));
                  n += l.storage;
                }
                (a = n % r) > 0 && (n += r - a);
                (e.__size = n), (e.__cache = {});
              })(n),
              (d = (function (t) {
                var n = (function () {
                  for (var e = 0; e < s; e++)
                    if (-1 === o.indexOf(e)) return o.push(e), e;
                  return (
                    console.error(
                      "THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."
                    ),
                    0
                  );
                })();
                t.__bindingPointIndex = n;
                var r = e.createBuffer(),
                  a = t.__size,
                  i = t.usage;
                return (
                  e.bindBuffer(e.UNIFORM_BUFFER, r),
                  e.bufferData(e.UNIFORM_BUFFER, a, i),
                  e.bindBuffer(e.UNIFORM_BUFFER, null),
                  e.bindBufferBase(e.UNIFORM_BUFFER, n, r),
                  r
                );
              })(n)),
              (a[n.id] = d),
              n.addEventListener("dispose", c));
            var h = f.program;
            r.updateUBOMapping(n, h);
            var p = t.render.frame;
            i[n.id] !== p &&
              (!(function (t) {
                var n = a[t.id],
                  r = t.uniforms,
                  i = t.__cache;
                e.bindBuffer(e.UNIFORM_BUFFER, n);
                for (var o = 0, s = r.length; o < s; o++) {
                  var c = r[o];
                  if (!0 === l(c, o, i)) {
                    for (
                      var f = c.__offset,
                        d = Array.isArray(c.value) ? c.value : [c.value],
                        h = 0,
                        p = 0;
                      p < d.length;
                      p++
                    ) {
                      var v = d[p],
                        m = u(v);
                      "number" === typeof v
                        ? ((c.__data[0] = v),
                          e.bufferSubData(e.UNIFORM_BUFFER, f + h, c.__data))
                        : v.isMatrix3
                        ? ((c.__data[0] = v.elements[0]),
                          (c.__data[1] = v.elements[1]),
                          (c.__data[2] = v.elements[2]),
                          (c.__data[3] = v.elements[0]),
                          (c.__data[4] = v.elements[3]),
                          (c.__data[5] = v.elements[4]),
                          (c.__data[6] = v.elements[5]),
                          (c.__data[7] = v.elements[0]),
                          (c.__data[8] = v.elements[6]),
                          (c.__data[9] = v.elements[7]),
                          (c.__data[10] = v.elements[8]),
                          (c.__data[11] = v.elements[0]))
                        : (v.toArray(c.__data, h),
                          (h += m.storage / Float32Array.BYTES_PER_ELEMENT));
                    }
                    e.bufferSubData(e.UNIFORM_BUFFER, f, c.__data);
                  }
                }
                e.bindBuffer(e.UNIFORM_BUFFER, null);
              })(n),
              (i[n.id] = p));
          },
          dispose: function () {
            for (var t in a) e.deleteBuffer(a[t]);
            (o = []), (a = {}), (i = {});
          },
        };
      }
      var ko = (function () {
          function e() {
            var t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {};
            w(this, e);
            var n,
              r = t.canvas,
              a =
                void 0 === r
                  ? (function () {
                      var e = nt("canvas");
                      return (e.style.display = "block"), e;
                    })()
                  : r,
              i = t.context,
              o = void 0 === i ? null : i,
              s = t.depth,
              l = void 0 === s || s,
              u = t.stencil,
              c = void 0 === u || u,
              f = t.alpha,
              d = void 0 !== f && f,
              h = t.antialias,
              p = void 0 !== h && h,
              v = t.premultipliedAlpha,
              m = void 0 === v || v,
              g = t.preserveDrawingBuffer,
              y = void 0 !== g && g,
              _ = t.powerPreference,
              b = void 0 === _ ? "default" : _,
              x = t.failIfMajorPerformanceCaveat,
              S = void 0 !== x && x;
            (this.isWebGLRenderer = !0),
              (n = null !== o ? o.getContextAttributes().alpha : d);
            var E = new Uint32Array(4),
              T = new Int32Array(4),
              M = null,
              C = null,
              k = [],
              R = [];
            (this.domElement = a),
              (this.debug = { checkShaderErrors: !0, onShaderError: null }),
              (this.autoClear = !0),
              (this.autoClearColor = !0),
              (this.autoClearDepth = !0),
              (this.autoClearStencil = !0),
              (this.sortObjects = !0),
              (this.clippingPlanes = []),
              (this.localClippingEnabled = !1),
              (this._outputColorSpace = Me),
              (this._useLegacyLights = !1),
              (this.toneMapping = N),
              (this.toneMappingExposure = 1);
            var L = this,
              D = !1,
              I = 0,
              O = 0,
              F = null,
              z = -1,
              B = null,
              H = new _t(),
              G = new _t(),
              V = null,
              W = new Wn(0),
              j = 0,
              X = a.width,
              q = a.height,
              Y = 1,
              K = null,
              $ = null,
              Z = new _t(0, 0, X, q),
              J = new _t(0, 0, X, q),
              Q = !1,
              ee = new Xr(),
              ae = !1,
              ce = !1,
              fe = null,
              de = new tn(),
              he = new Je(),
              pe = new Tt(),
              ve = {
                background: null,
                fog: null,
                environment: null,
                overrideMaterial: null,
                isScene: !0,
              };
            function me() {
              return null === F ? Y : 1;
            }
            var ge,
              ye,
              _e,
              be,
              xe,
              Se,
              Ee,
              we,
              Te,
              Ce,
              ke,
              Re,
              Pe,
              Ue,
              Le,
              De,
              Ie,
              Oe,
              Ne,
              Fe,
              ze,
              Be,
              He,
              Ge,
              Ve = o;
            function We(e, t) {
              for (var n = 0; n < e.length; n++) {
                var r = e[n],
                  i = a.getContext(r, t);
                if (null !== i) return i;
              }
              return null;
            }
            try {
              var je = {
                alpha: !0,
                depth: l,
                stencil: c,
                antialias: p,
                premultipliedAlpha: m,
                preserveDrawingBuffer: y,
                powerPreference: b,
                failIfMajorPerformanceCaveat: S,
              };
              if (
                ("setAttribute" in a &&
                  a.setAttribute("data-engine", "three.js r".concat(A)),
                a.addEventListener("webglcontextlost", $e, !1),
                a.addEventListener("webglcontextrestored", Ze, !1),
                a.addEventListener("webglcontextcreationerror", Qe, !1),
                null === Ve)
              ) {
                var Xe = ["webgl2", "webgl", "experimental-webgl"];
                if (
                  (!0 === L.isWebGL1Renderer && Xe.shift(),
                  null === (Ve = We(Xe, je)))
                )
                  throw We(Xe)
                    ? new Error(
                        "Error creating WebGL context with your selected attributes."
                      )
                    : new Error("Error creating WebGL context.");
              }
              "undefined" !== typeof WebGLRenderingContext &&
                Ve instanceof WebGLRenderingContext &&
                console.warn(
                  "THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."
                ),
                void 0 === Ve.getShaderPrecisionFormat &&
                  (Ve.getShaderPrecisionFormat = function () {
                    return { rangeMin: 1, rangeMax: 1, precision: 1 };
                  });
            } catch (pt) {
              throw (console.error("THREE.WebGLRenderer: " + pt.message), pt);
            }
            function qe() {
              (ge = new Ea(Ve)),
                (ye = new ra(Ve, ge, t)),
                ge.init(ye),
                (Be = new bo(Ve, ge, ye)),
                (_e = new yo(Ve, ge, ye)),
                (be = new Ma(Ve)),
                (xe = new ro()),
                (Se = new _o(Ve, ge, _e, xe, ye, Be, be)),
                (Ee = new ia(L)),
                (we = new Sa(L)),
                (Te = new Yr(Ve, ye)),
                (He = new ta(Ve, ge, Te, ye)),
                (Ce = new wa(Ve, Te, be, He)),
                (ke = new Ra(Ve, Ce, Te, be)),
                (Ne = new ka(Ve, ye, Se)),
                (De = new aa(xe)),
                (Re = new no(L, Ee, we, ge, ye, He, De)),
                (Pe = new Ao(L, xe)),
                (Ue = new so()),
                (Le = new po(ge, ye)),
                (Oe = new ea(L, Ee, we, _e, ke, n, m)),
                (Ie = new go(L, ke, ye)),
                (Ge = new Co(Ve, be, ye, _e)),
                (Fe = new na(Ve, ge, be, ye)),
                (ze = new Ta(Ve, ge, be, ye)),
                (be.programs = Re.programs),
                (L.capabilities = ye),
                (L.extensions = ge),
                (L.properties = xe),
                (L.renderLists = Ue),
                (L.shadowMap = Ie),
                (L.state = _e),
                (L.info = be);
            }
            qe();
            var Ye = new Mo(L, Ve);
            function $e(e) {
              e.preventDefault(),
                console.log("THREE.WebGLRenderer: Context Lost."),
                (D = !0);
            }
            function Ze() {
              console.log("THREE.WebGLRenderer: Context Restored."), (D = !1);
              var e = be.autoReset,
                t = Ie.enabled,
                n = Ie.autoUpdate,
                r = Ie.needsUpdate,
                a = Ie.type;
              qe(),
                (be.autoReset = e),
                (Ie.enabled = t),
                (Ie.autoUpdate = n),
                (Ie.needsUpdate = r),
                (Ie.type = a);
            }
            function Qe(e) {
              console.error(
                "THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",
                e.statusMessage
              );
            }
            function et(e) {
              var t = e.target;
              t.removeEventListener("dispose", et),
                (function (e) {
                  (function (e) {
                    var t = xe.get(e).programs;
                    void 0 !== t &&
                      (t.forEach(function (e) {
                        Re.releaseProgram(e);
                      }),
                      e.isShaderMaterial && Re.releaseShaderCache(e));
                  })(e),
                    xe.remove(e);
                })(t);
            }
            function tt(e, t, n) {
              !0 === e.transparent && 2 === e.side && !1 === e.forceSinglePass
                ? ((e.side = U),
                  (e.needsUpdate = !0),
                  ft(e, t, n),
                  (e.side = P),
                  (e.needsUpdate = !0),
                  ft(e, t, n),
                  (e.side = 2))
                : ft(e, t, n);
            }
            (this.xr = Ye),
              (this.getContext = function () {
                return Ve;
              }),
              (this.getContextAttributes = function () {
                return Ve.getContextAttributes();
              }),
              (this.forceContextLoss = function () {
                var e = ge.get("WEBGL_lose_context");
                e && e.loseContext();
              }),
              (this.forceContextRestore = function () {
                var e = ge.get("WEBGL_lose_context");
                e && e.restoreContext();
              }),
              (this.getPixelRatio = function () {
                return Y;
              }),
              (this.setPixelRatio = function (e) {
                void 0 !== e && ((Y = e), this.setSize(X, q, !1));
              }),
              (this.getSize = function (e) {
                return e.set(X, q);
              }),
              (this.setSize = function (e, t) {
                var n =
                  !(arguments.length > 2 && void 0 !== arguments[2]) ||
                  arguments[2];
                Ye.isPresenting
                  ? console.warn(
                      "THREE.WebGLRenderer: Can't change size while VR device is presenting."
                    )
                  : ((X = e),
                    (q = t),
                    (a.width = Math.floor(e * Y)),
                    (a.height = Math.floor(t * Y)),
                    !0 === n &&
                      ((a.style.width = e + "px"), (a.style.height = t + "px")),
                    this.setViewport(0, 0, e, t));
              }),
              (this.getDrawingBufferSize = function (e) {
                return e.set(X * Y, q * Y).floor();
              }),
              (this.setDrawingBufferSize = function (e, t, n) {
                (X = e),
                  (q = t),
                  (Y = n),
                  (a.width = Math.floor(e * n)),
                  (a.height = Math.floor(t * n)),
                  this.setViewport(0, 0, e, t);
              }),
              (this.getCurrentViewport = function (e) {
                return e.copy(H);
              }),
              (this.getViewport = function (e) {
                return e.copy(Z);
              }),
              (this.setViewport = function (e, t, n, r) {
                e.isVector4 ? Z.set(e.x, e.y, e.z, e.w) : Z.set(e, t, n, r),
                  _e.viewport(H.copy(Z).multiplyScalar(Y).floor());
              }),
              (this.getScissor = function (e) {
                return e.copy(J);
              }),
              (this.setScissor = function (e, t, n, r) {
                e.isVector4 ? J.set(e.x, e.y, e.z, e.w) : J.set(e, t, n, r),
                  _e.scissor(G.copy(J).multiplyScalar(Y).floor());
              }),
              (this.getScissorTest = function () {
                return Q;
              }),
              (this.setScissorTest = function (e) {
                _e.setScissorTest((Q = e));
              }),
              (this.setOpaqueSort = function (e) {
                K = e;
              }),
              (this.setTransparentSort = function (e) {
                $ = e;
              }),
              (this.getClearColor = function (e) {
                return e.copy(Oe.getClearColor());
              }),
              (this.setClearColor = function () {
                Oe.setClearColor.apply(Oe, arguments);
              }),
              (this.getClearAlpha = function () {
                return Oe.getClearAlpha();
              }),
              (this.setClearAlpha = function () {
                Oe.setClearAlpha.apply(Oe, arguments);
              }),
              (this.clear = function () {
                var e =
                    !(arguments.length > 1 && void 0 !== arguments[1]) ||
                    arguments[1],
                  t =
                    !(arguments.length > 2 && void 0 !== arguments[2]) ||
                    arguments[2],
                  n = 0;
                if (
                  !(arguments.length > 0 && void 0 !== arguments[0]) ||
                  arguments[0]
                ) {
                  var r = !1;
                  if (null !== F) {
                    var a = F.texture.format;
                    r = 1033 === a || 1031 === a || 1029 === a;
                  }
                  if (r) {
                    var i = F.texture.type,
                      o =
                        i === ne ||
                        i === ie ||
                        i === re ||
                        i === le ||
                        1017 === i ||
                        1018 === i,
                      s = Oe.getClearColor(),
                      l = Oe.getClearAlpha(),
                      u = s.r,
                      c = s.g,
                      f = s.b;
                    o
                      ? ((E[0] = u),
                        (E[1] = c),
                        (E[2] = f),
                        (E[3] = l),
                        Ve.clearBufferuiv(Ve.COLOR, 0, E))
                      : ((T[0] = u),
                        (T[1] = c),
                        (T[2] = f),
                        (T[3] = l),
                        Ve.clearBufferiv(Ve.COLOR, 0, T));
                  } else n |= Ve.COLOR_BUFFER_BIT;
                }
                e && (n |= Ve.DEPTH_BUFFER_BIT),
                  t &&
                    ((n |= Ve.STENCIL_BUFFER_BIT),
                    this.state.buffers.stencil.setMask(4294967295)),
                  Ve.clear(n);
              }),
              (this.clearColor = function () {
                this.clear(!0, !1, !1);
              }),
              (this.clearDepth = function () {
                this.clear(!1, !0, !1);
              }),
              (this.clearStencil = function () {
                this.clear(!1, !1, !0);
              }),
              (this.dispose = function () {
                a.removeEventListener("webglcontextlost", $e, !1),
                  a.removeEventListener("webglcontextrestored", Ze, !1),
                  a.removeEventListener("webglcontextcreationerror", Qe, !1),
                  Ue.dispose(),
                  Le.dispose(),
                  xe.dispose(),
                  Ee.dispose(),
                  we.dispose(),
                  ke.dispose(),
                  He.dispose(),
                  Ge.dispose(),
                  Re.dispose(),
                  Ye.dispose(),
                  Ye.removeEventListener("sessionstart", at),
                  Ye.removeEventListener("sessionend", it),
                  fe && (fe.dispose(), (fe = null)),
                  ot.stop();
              }),
              (this.renderBufferDirect = function (e, t, n, r, a, i) {
                null === t && (t = ve);
                var o = a.isMesh && a.matrixWorld.determinant() < 0,
                  s = (function (e, t, n, r, a) {
                    !0 !== t.isScene && (t = ve);
                    Se.resetTextureUnits();
                    var i = t.fog,
                      o = r.isMeshStandardMaterial ? t.environment : null,
                      s =
                        null === F
                          ? L.outputColorSpace
                          : !0 === F.isXRRenderTarget
                          ? F.texture.colorSpace
                          : Ae,
                      l = (r.isMeshStandardMaterial ? we : Ee).get(
                        r.envMap || o
                      ),
                      u =
                        !0 === r.vertexColors &&
                        !!n.attributes.color &&
                        4 === n.attributes.color.itemSize,
                      c =
                        !!n.attributes.tangent &&
                        (!!r.normalMap || r.anisotropy > 0),
                      f = !!n.morphAttributes.position,
                      d = !!n.morphAttributes.normal,
                      h = !!n.morphAttributes.color,
                      p = N;
                    r.toneMapped &&
                      ((null !== F && !0 !== F.isXRRenderTarget) ||
                        (p = L.toneMapping));
                    var v =
                        n.morphAttributes.position ||
                        n.morphAttributes.normal ||
                        n.morphAttributes.color,
                      m = void 0 !== v ? v.length : 0,
                      g = xe.get(r),
                      y = C.state.lights;
                    if (!0 === ae && (!0 === ce || e !== B)) {
                      var _ = e === B && r.id === z;
                      De.setState(r, e, _);
                    }
                    var b = !1;
                    r.version === g.__version
                      ? (g.needsLights &&
                          g.lightsStateVersion !== y.state.version) ||
                        g.outputColorSpace !== s ||
                        (a.isInstancedMesh && !1 === g.instancing)
                        ? (b = !0)
                        : a.isInstancedMesh || !0 !== g.instancing
                        ? a.isSkinnedMesh && !1 === g.skinning
                          ? (b = !0)
                          : a.isSkinnedMesh || !0 !== g.skinning
                          ? (a.isInstancedMesh &&
                              !0 === g.instancingColor &&
                              null === a.instanceColor) ||
                            (a.isInstancedMesh &&
                              !1 === g.instancingColor &&
                              null !== a.instanceColor) ||
                            g.envMap !== l ||
                            (!0 === r.fog && g.fog !== i)
                            ? (b = !0)
                            : void 0 === g.numClippingPlanes ||
                              (g.numClippingPlanes === De.numPlanes &&
                                g.numIntersection === De.numIntersection)
                            ? (g.vertexAlphas !== u ||
                                g.vertexTangents !== c ||
                                g.morphTargets !== f ||
                                g.morphNormals !== d ||
                                g.morphColors !== h ||
                                g.toneMapping !== p ||
                                (!0 === ye.isWebGL2 &&
                                  g.morphTargetsCount !== m)) &&
                              (b = !0)
                            : (b = !0)
                          : (b = !0)
                        : (b = !0)
                      : ((b = !0), (g.__version = r.version));
                    var x = g.currentProgram;
                    !0 === b && (x = ft(r, t, a));
                    var S = !1,
                      E = !1,
                      w = !1,
                      T = x.getUniforms(),
                      M = g.uniforms;
                    _e.useProgram(x.program) && ((S = !0), (E = !0), (w = !0));
                    r.id !== z && ((z = r.id), (E = !0));
                    if (S || B !== e) {
                      T.setValue(Ve, "projectionMatrix", e.projectionMatrix),
                        T.setValue(Ve, "viewMatrix", e.matrixWorldInverse);
                      var A = T.map.cameraPosition;
                      void 0 !== A &&
                        A.setValue(Ve, pe.setFromMatrixPosition(e.matrixWorld)),
                        ye.logarithmicDepthBuffer &&
                          T.setValue(
                            Ve,
                            "logDepthBufFC",
                            2 / (Math.log(e.far + 1) / Math.LN2)
                          ),
                        (r.isMeshPhongMaterial ||
                          r.isMeshToonMaterial ||
                          r.isMeshLambertMaterial ||
                          r.isMeshBasicMaterial ||
                          r.isMeshStandardMaterial ||
                          r.isShaderMaterial) &&
                          T.setValue(
                            Ve,
                            "isOrthographic",
                            !0 === e.isOrthographicCamera
                          ),
                        B !== e && ((B = e), (E = !0), (w = !0));
                    }
                    if (a.isSkinnedMesh) {
                      T.setOptional(Ve, a, "bindMatrix"),
                        T.setOptional(Ve, a, "bindMatrixInverse");
                      var k = a.skeleton;
                      k &&
                        (ye.floatVertexTextures
                          ? (null === k.boneTexture && k.computeBoneTexture(),
                            T.setValue(Ve, "boneTexture", k.boneTexture, Se),
                            T.setValue(
                              Ve,
                              "boneTextureSize",
                              k.boneTextureSize
                            ))
                          : console.warn(
                              "THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."
                            ));
                    }
                    var R = n.morphAttributes;
                    (void 0 !== R.position ||
                      void 0 !== R.normal ||
                      (void 0 !== R.color && !0 === ye.isWebGL2)) &&
                      Ne.update(a, n, x);
                    (E || g.receiveShadow !== a.receiveShadow) &&
                      ((g.receiveShadow = a.receiveShadow),
                      T.setValue(Ve, "receiveShadow", a.receiveShadow));
                    r.isMeshGouraudMaterial &&
                      null !== r.envMap &&
                      ((M.envMap.value = l),
                      (M.flipEnvMap.value =
                        l.isCubeTexture && !1 === l.isRenderTargetTexture
                          ? -1
                          : 1));
                    E &&
                      (T.setValue(
                        Ve,
                        "toneMappingExposure",
                        L.toneMappingExposure
                      ),
                      g.needsLights &&
                        ((U = w),
                        ((P = M).ambientLightColor.needsUpdate = U),
                        (P.lightProbe.needsUpdate = U),
                        (P.directionalLights.needsUpdate = U),
                        (P.directionalLightShadows.needsUpdate = U),
                        (P.pointLights.needsUpdate = U),
                        (P.pointLightShadows.needsUpdate = U),
                        (P.spotLights.needsUpdate = U),
                        (P.spotLightShadows.needsUpdate = U),
                        (P.rectAreaLights.needsUpdate = U),
                        (P.hemisphereLights.needsUpdate = U)),
                      i && !0 === r.fog && Pe.refreshFogUniforms(M, i),
                      Pe.refreshMaterialUniforms(M, r, Y, q, fe),
                      Di.upload(Ve, dt(g), M, Se));
                    var P, U;
                    r.isShaderMaterial &&
                      !0 === r.uniformsNeedUpdate &&
                      (Di.upload(Ve, dt(g), M, Se),
                      (r.uniformsNeedUpdate = !1));
                    r.isSpriteMaterial && T.setValue(Ve, "center", a.center);
                    if (
                      (T.setValue(Ve, "modelViewMatrix", a.modelViewMatrix),
                      T.setValue(Ve, "normalMatrix", a.normalMatrix),
                      T.setValue(Ve, "modelMatrix", a.matrixWorld),
                      r.isShaderMaterial || r.isRawShaderMaterial)
                    )
                      for (
                        var D = r.uniformsGroups, I = 0, O = D.length;
                        I < O;
                        I++
                      )
                        if (ye.isWebGL2) {
                          var H = D[I];
                          Ge.update(H, x), Ge.bind(H, x);
                        } else
                          console.warn(
                            "THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2."
                          );
                    return x;
                  })(e, t, n, r, a);
                _e.setMaterial(r, o);
                var l = n.index,
                  u = 1;
                if (!0 === r.wireframe) {
                  if (void 0 === (l = Ce.getWireframeAttribute(n))) return;
                  u = 2;
                }
                var c = n.drawRange,
                  f = n.attributes.position,
                  d = c.start * u,
                  h = (c.start + c.count) * u;
                null !== i &&
                  ((d = Math.max(d, i.start * u)),
                  (h = Math.min(h, (i.start + i.count) * u))),
                  null !== l
                    ? ((d = Math.max(d, 0)), (h = Math.min(h, l.count)))
                    : void 0 !== f &&
                      null !== f &&
                      ((d = Math.max(d, 0)), (h = Math.min(h, f.count)));
                var p = h - d;
                if (!(p < 0 || p === 1 / 0)) {
                  var v;
                  He.setup(a, r, s, n, l);
                  var m = Fe;
                  if (
                    (null !== l && ((v = Te.get(l)), (m = ze).setIndex(v)),
                    a.isMesh)
                  )
                    !0 === r.wireframe
                      ? (_e.setLineWidth(r.wireframeLinewidth * me()),
                        m.setMode(Ve.LINES))
                      : m.setMode(Ve.TRIANGLES);
                  else if (a.isLine) {
                    var g = r.linewidth;
                    void 0 === g && (g = 1),
                      _e.setLineWidth(g * me()),
                      a.isLineSegments
                        ? m.setMode(Ve.LINES)
                        : a.isLineLoop
                        ? m.setMode(Ve.LINE_LOOP)
                        : m.setMode(Ve.LINE_STRIP);
                  } else
                    a.isPoints
                      ? m.setMode(Ve.POINTS)
                      : a.isSprite && m.setMode(Ve.TRIANGLES);
                  if (a.isInstancedMesh) m.renderInstances(d, p, a.count);
                  else if (n.isInstancedBufferGeometry) {
                    var y =
                        void 0 !== n._maxInstanceCount
                          ? n._maxInstanceCount
                          : 1 / 0,
                      _ = Math.min(n.instanceCount, y);
                    m.renderInstances(d, p, _);
                  } else m.render(d, p);
                }
              }),
              (this.compile = function (e, t) {
                var n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : null;
                null === n && (n = e),
                  (C = Le.get(n)).init(),
                  R.push(C),
                  n.traverseVisible(function (e) {
                    e.isLight &&
                      e.layers.test(t.layers) &&
                      (C.pushLight(e), e.castShadow && C.pushShadow(e));
                  }),
                  e !== n &&
                    e.traverseVisible(function (e) {
                      e.isLight &&
                        e.layers.test(t.layers) &&
                        (C.pushLight(e), e.castShadow && C.pushShadow(e));
                    }),
                  C.setupLights(L._useLegacyLights);
                var r = new Set();
                return (
                  e.traverse(function (e) {
                    var t = e.material;
                    if (t)
                      if (Array.isArray(t))
                        for (var a = 0; a < t.length; a++) {
                          var i = t[a];
                          tt(i, n, e), r.add(i);
                        }
                      else tt(t, n, e), r.add(t);
                  }),
                  R.pop(),
                  (C = null),
                  r
                );
              }),
              (this.compileAsync = function (e, t) {
                var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : null,
                  r = this.compile(e, t, n);
                return new Promise(function (t) {
                  function n() {
                    r.forEach(function (e) {
                      xe.get(e).currentProgram.isReady() && r.delete(e);
                    }),
                      0 !== r.size ? setTimeout(n, 10) : t(e);
                  }
                  null !== ge.get("KHR_parallel_shader_compile")
                    ? n()
                    : setTimeout(n, 10);
                });
              });
            var rt = null;
            function at() {
              ot.stop();
            }
            function it() {
              ot.start();
            }
            var ot = new qr();
            function st(e, t, n, r) {
              if (!1 !== e.visible) {
                if (e.layers.test(t.layers))
                  if (e.isGroup) n = e.renderOrder;
                  else if (e.isLOD) !0 === e.autoUpdate && e.update(t);
                  else if (e.isLight)
                    C.pushLight(e), e.castShadow && C.pushShadow(e);
                  else if (e.isSprite) {
                    if (!e.frustumCulled || ee.intersectsSprite(e)) {
                      r &&
                        pe
                          .setFromMatrixPosition(e.matrixWorld)
                          .applyMatrix4(de);
                      var a = ke.update(e),
                        i = e.material;
                      i.visible && M.push(e, a, i, n, pe.z, null);
                    }
                  } else if (
                    (e.isMesh || e.isLine || e.isPoints) &&
                    (!e.frustumCulled || ee.intersectsObject(e))
                  ) {
                    var o = ke.update(e),
                      s = e.material;
                    if (
                      (r &&
                        (void 0 !== e.boundingSphere
                          ? (null === e.boundingSphere &&
                              e.computeBoundingSphere(),
                            pe.copy(e.boundingSphere.center))
                          : (null === o.boundingSphere &&
                              o.computeBoundingSphere(),
                            pe.copy(o.boundingSphere.center)),
                        pe.applyMatrix4(e.matrixWorld).applyMatrix4(de)),
                      Array.isArray(s))
                    )
                      for (var l = o.groups, u = 0, c = l.length; u < c; u++) {
                        var f = l[u],
                          d = s[f.materialIndex];
                        d && d.visible && M.push(e, o, d, n, pe.z, f);
                      }
                    else s.visible && M.push(e, o, s, n, pe.z, null);
                  }
                for (var h = e.children, p = 0, v = h.length; p < v; p++)
                  st(h[p], t, n, r);
              }
            }
            function lt(e, t, n, r) {
              var a = e.opaque,
                i = e.transmissive,
                o = e.transparent;
              C.setupLightsView(n),
                !0 === ae && De.setGlobalState(L.clippingPlanes, n),
                i.length > 0 &&
                  (function (e, t, n, r) {
                    var a = !0 === n.isScene ? n.overrideMaterial : null;
                    if (null !== a) return;
                    var i = ye.isWebGL2;
                    null === fe &&
                      (fe = new xt(1, 1, {
                        generateMipmaps: !0,
                        type: ge.has("EXT_color_buffer_half_float") ? se : ne,
                        minFilter: te,
                        samples: i ? 4 : 0,
                      }));
                    L.getDrawingBufferSize(he),
                      i
                        ? fe.setSize(he.x, he.y)
                        : fe.setSize(Ke(he.x), Ke(he.y));
                    var o = L.getRenderTarget();
                    L.setRenderTarget(fe),
                      L.getClearColor(W),
                      (j = L.getClearAlpha()) < 1 &&
                        L.setClearColor(16777215, 0.5);
                    L.clear();
                    var s = L.toneMapping;
                    (L.toneMapping = N),
                      ut(e, n, r),
                      Se.updateMultisampleRenderTarget(fe),
                      Se.updateRenderTargetMipmap(fe);
                    for (var l = !1, u = 0, c = t.length; u < c; u++) {
                      var f = t[u],
                        d = f.object,
                        h = f.geometry,
                        p = f.material,
                        v = f.group;
                      if (2 === p.side && d.layers.test(r.layers)) {
                        var m = p.side;
                        (p.side = U),
                          (p.needsUpdate = !0),
                          ct(d, n, r, h, p, v),
                          (p.side = m),
                          (p.needsUpdate = !0),
                          (l = !0);
                      }
                    }
                    !0 === l &&
                      (Se.updateMultisampleRenderTarget(fe),
                      Se.updateRenderTargetMipmap(fe));
                    L.setRenderTarget(o),
                      L.setClearColor(W, j),
                      (L.toneMapping = s);
                  })(a, i, t, n),
                r && _e.viewport(H.copy(r)),
                a.length > 0 && ut(a, t, n),
                i.length > 0 && ut(i, t, n),
                o.length > 0 && ut(o, t, n),
                _e.buffers.depth.setTest(!0),
                _e.buffers.depth.setMask(!0),
                _e.buffers.color.setMask(!0),
                _e.setPolygonOffset(!1);
            }
            function ut(e, t, n) {
              for (
                var r = !0 === t.isScene ? t.overrideMaterial : null,
                  a = 0,
                  i = e.length;
                a < i;
                a++
              ) {
                var o = e[a],
                  s = o.object,
                  l = o.geometry,
                  u = null === r ? o.material : r,
                  c = o.group;
                s.layers.test(n.layers) && ct(s, t, n, l, u, c);
              }
            }
            function ct(e, t, n, r, a, i) {
              e.onBeforeRender(L, t, n, r, a, i),
                e.modelViewMatrix.multiplyMatrices(
                  n.matrixWorldInverse,
                  e.matrixWorld
                ),
                e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
                a.onBeforeRender(L, t, n, r, e, i),
                !0 === a.transparent && 2 === a.side && !1 === a.forceSinglePass
                  ? ((a.side = U),
                    (a.needsUpdate = !0),
                    L.renderBufferDirect(n, t, r, a, e, i),
                    (a.side = P),
                    (a.needsUpdate = !0),
                    L.renderBufferDirect(n, t, r, a, e, i),
                    (a.side = 2))
                  : L.renderBufferDirect(n, t, r, a, e, i),
                e.onAfterRender(L, t, n, r, a, i);
            }
            function ft(e, t, n) {
              !0 !== t.isScene && (t = ve);
              var r = xe.get(e),
                a = C.state.lights,
                i = C.state.shadowsArray,
                o = a.state.version,
                s = Re.getParameters(e, a.state, i, t, n),
                l = Re.getProgramCacheKey(s),
                u = r.programs;
              (r.environment = e.isMeshStandardMaterial ? t.environment : null),
                (r.fog = t.fog),
                (r.envMap = (e.isMeshStandardMaterial ? we : Ee).get(
                  e.envMap || r.environment
                )),
                void 0 === u &&
                  (e.addEventListener("dispose", et),
                  (u = new Map()),
                  (r.programs = u));
              var c = u.get(l);
              if (void 0 !== c) {
                if (r.currentProgram === c && r.lightsStateVersion === o)
                  return ht(e, s), c;
              } else
                (s.uniforms = Re.getUniforms(e)),
                  e.onBuild(n, s, L),
                  e.onBeforeCompile(s, L),
                  (c = Re.acquireProgram(s, l)),
                  u.set(l, c),
                  (r.uniforms = s.uniforms);
              var f = r.uniforms;
              return (
                ((e.isShaderMaterial || e.isRawShaderMaterial) &&
                  !0 !== e.clipping) ||
                  (f.clippingPlanes = De.uniform),
                ht(e, s),
                (r.needsLights = (function (e) {
                  return (
                    e.isMeshLambertMaterial ||
                    e.isMeshToonMaterial ||
                    e.isMeshPhongMaterial ||
                    e.isMeshStandardMaterial ||
                    e.isShadowMaterial ||
                    (e.isShaderMaterial && !0 === e.lights)
                  );
                })(e)),
                (r.lightsStateVersion = o),
                r.needsLights &&
                  ((f.ambientLightColor.value = a.state.ambient),
                  (f.lightProbe.value = a.state.probe),
                  (f.directionalLights.value = a.state.directional),
                  (f.directionalLightShadows.value = a.state.directionalShadow),
                  (f.spotLights.value = a.state.spot),
                  (f.spotLightShadows.value = a.state.spotShadow),
                  (f.rectAreaLights.value = a.state.rectArea),
                  (f.ltc_1.value = a.state.rectAreaLTC1),
                  (f.ltc_2.value = a.state.rectAreaLTC2),
                  (f.pointLights.value = a.state.point),
                  (f.pointLightShadows.value = a.state.pointShadow),
                  (f.hemisphereLights.value = a.state.hemi),
                  (f.directionalShadowMap.value = a.state.directionalShadowMap),
                  (f.directionalShadowMatrix.value =
                    a.state.directionalShadowMatrix),
                  (f.spotShadowMap.value = a.state.spotShadowMap),
                  (f.spotLightMatrix.value = a.state.spotLightMatrix),
                  (f.spotLightMap.value = a.state.spotLightMap),
                  (f.pointShadowMap.value = a.state.pointShadowMap),
                  (f.pointShadowMatrix.value = a.state.pointShadowMatrix)),
                (r.currentProgram = c),
                (r.uniformsList = null),
                c
              );
            }
            function dt(e) {
              if (null === e.uniformsList) {
                var t = e.currentProgram.getUniforms();
                e.uniformsList = Di.seqWithValue(t.seq, e.uniforms);
              }
              return e.uniformsList;
            }
            function ht(e, t) {
              var n = xe.get(e);
              (n.outputColorSpace = t.outputColorSpace),
                (n.instancing = t.instancing),
                (n.instancingColor = t.instancingColor),
                (n.skinning = t.skinning),
                (n.morphTargets = t.morphTargets),
                (n.morphNormals = t.morphNormals),
                (n.morphColors = t.morphColors),
                (n.morphTargetsCount = t.morphTargetsCount),
                (n.numClippingPlanes = t.numClippingPlanes),
                (n.numIntersection = t.numClipIntersection),
                (n.vertexAlphas = t.vertexAlphas),
                (n.vertexTangents = t.vertexTangents),
                (n.toneMapping = t.toneMapping);
            }
            ot.setAnimationLoop(function (e) {
              rt && rt(e);
            }),
              "undefined" !== typeof self && ot.setContext(self),
              (this.setAnimationLoop = function (e) {
                (rt = e),
                  Ye.setAnimationLoop(e),
                  null === e ? ot.stop() : ot.start();
              }),
              Ye.addEventListener("sessionstart", at),
              Ye.addEventListener("sessionend", it),
              (this.render = function (e, t) {
                if (void 0 === t || !0 === t.isCamera) {
                  if (!0 !== D) {
                    !0 === e.matrixWorldAutoUpdate && e.updateMatrixWorld(),
                      null === t.parent &&
                        !0 === t.matrixWorldAutoUpdate &&
                        t.updateMatrixWorld(),
                      !0 === Ye.enabled &&
                        !0 === Ye.isPresenting &&
                        (!0 === Ye.cameraAutoUpdate && Ye.updateCamera(t),
                        (t = Ye.getCamera())),
                      !0 === e.isScene && e.onBeforeRender(L, e, t, F),
                      (C = Le.get(e, R.length)).init(),
                      R.push(C),
                      de.multiplyMatrices(
                        t.projectionMatrix,
                        t.matrixWorldInverse
                      ),
                      ee.setFromProjectionMatrix(de),
                      (ce = this.localClippingEnabled),
                      (ae = De.init(this.clippingPlanes, ce)),
                      (M = Ue.get(e, k.length)).init(),
                      k.push(M),
                      st(e, t, 0, L.sortObjects),
                      M.finish(),
                      !0 === L.sortObjects && M.sort(K, $),
                      this.info.render.frame++,
                      !0 === ae && De.beginShadows();
                    var n = C.state.shadowsArray;
                    if (
                      (Ie.render(n, e, t),
                      !0 === ae && De.endShadows(),
                      !0 === this.info.autoReset && this.info.reset(),
                      Oe.render(M, e),
                      C.setupLights(L._useLegacyLights),
                      t.isArrayCamera)
                    )
                      for (var r = t.cameras, a = 0, i = r.length; a < i; a++) {
                        var o = r[a];
                        lt(M, e, o, o.viewport);
                      }
                    else lt(M, e, t);
                    null !== F &&
                      (Se.updateMultisampleRenderTarget(F),
                      Se.updateRenderTargetMipmap(F)),
                      !0 === e.isScene && e.onAfterRender(L, e, t),
                      He.resetDefaultState(),
                      (z = -1),
                      (B = null),
                      R.pop(),
                      (C = R.length > 0 ? R[R.length - 1] : null),
                      k.pop(),
                      (M = k.length > 0 ? k[k.length - 1] : null);
                  }
                } else
                  console.error(
                    "THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."
                  );
              }),
              (this.getActiveCubeFace = function () {
                return I;
              }),
              (this.getActiveMipmapLevel = function () {
                return O;
              }),
              (this.getRenderTarget = function () {
                return F;
              }),
              (this.setRenderTargetTextures = function (e, t, n) {
                (xe.get(e.texture).__webglTexture = t),
                  (xe.get(e.depthTexture).__webglTexture = n);
                var r = xe.get(e);
                (r.__hasExternalTextures = !0),
                  r.__hasExternalTextures &&
                    ((r.__autoAllocateDepthBuffer = void 0 === n),
                    r.__autoAllocateDepthBuffer ||
                      (!0 === ge.has("WEBGL_multisampled_render_to_texture") &&
                        (console.warn(
                          "THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"
                        ),
                        (r.__useRenderToTexture = !1))));
              }),
              (this.setRenderTargetFramebuffer = function (e, t) {
                var n = xe.get(e);
                (n.__webglFramebuffer = t),
                  (n.__useDefaultFramebuffer = void 0 === t);
              }),
              (this.setRenderTarget = function (e) {
                var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0,
                  n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 0;
                (F = e), (I = t), (O = n);
                var r = !0,
                  a = null,
                  i = !1,
                  o = !1;
                if (e) {
                  var s = xe.get(e);
                  void 0 !== s.__useDefaultFramebuffer
                    ? (_e.bindFramebuffer(Ve.FRAMEBUFFER, null), (r = !1))
                    : void 0 === s.__webglFramebuffer
                    ? Se.setupRenderTarget(e)
                    : s.__hasExternalTextures &&
                      Se.rebindTextures(
                        e,
                        xe.get(e.texture).__webglTexture,
                        xe.get(e.depthTexture).__webglTexture
                      );
                  var l = e.texture;
                  (l.isData3DTexture ||
                    l.isDataArrayTexture ||
                    l.isCompressedArrayTexture) &&
                    (o = !0);
                  var u = xe.get(e).__webglFramebuffer;
                  e.isWebGLCubeRenderTarget
                    ? ((a = Array.isArray(u[t]) ? u[t][n] : u[t]), (i = !0))
                    : (a =
                        ye.isWebGL2 &&
                        e.samples > 0 &&
                        !1 === Se.useMultisampledRTT(e)
                          ? xe.get(e).__webglMultisampledFramebuffer
                          : Array.isArray(u)
                          ? u[n]
                          : u),
                    H.copy(e.viewport),
                    G.copy(e.scissor),
                    (V = e.scissorTest);
                } else
                  H.copy(Z).multiplyScalar(Y).floor(),
                    G.copy(J).multiplyScalar(Y).floor(),
                    (V = Q);
                if (
                  (_e.bindFramebuffer(Ve.FRAMEBUFFER, a) &&
                    ye.drawBuffers &&
                    r &&
                    _e.drawBuffers(e, a),
                  _e.viewport(H),
                  _e.scissor(G),
                  _e.setScissorTest(V),
                  i)
                ) {
                  var c = xe.get(e.texture);
                  Ve.framebufferTexture2D(
                    Ve.FRAMEBUFFER,
                    Ve.COLOR_ATTACHMENT0,
                    Ve.TEXTURE_CUBE_MAP_POSITIVE_X + t,
                    c.__webglTexture,
                    n
                  );
                } else if (o) {
                  var f = xe.get(e.texture),
                    d = t || 0;
                  Ve.framebufferTextureLayer(
                    Ve.FRAMEBUFFER,
                    Ve.COLOR_ATTACHMENT0,
                    f.__webglTexture,
                    n || 0,
                    d
                  );
                }
                z = -1;
              }),
              (this.readRenderTargetPixels = function (e, t, n, r, a, i, o) {
                if (e && e.isWebGLRenderTarget) {
                  var s = xe.get(e).__webglFramebuffer;
                  if (
                    (e.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]), s)
                  ) {
                    _e.bindFramebuffer(Ve.FRAMEBUFFER, s);
                    try {
                      var l = e.texture,
                        u = l.format,
                        c = l.type;
                      if (
                        u !== ue &&
                        Be.convert(u) !==
                          Ve.getParameter(Ve.IMPLEMENTATION_COLOR_READ_FORMAT)
                      )
                        return void console.error(
                          "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."
                        );
                      var f =
                        c === se &&
                        (ge.has("EXT_color_buffer_half_float") ||
                          (ye.isWebGL2 && ge.has("EXT_color_buffer_float")));
                      if (
                        c !== ne &&
                        Be.convert(c) !==
                          Ve.getParameter(Ve.IMPLEMENTATION_COLOR_READ_TYPE) &&
                        (c !== oe ||
                          !(
                            ye.isWebGL2 ||
                            ge.has("OES_texture_float") ||
                            ge.has("WEBGL_color_buffer_float")
                          )) &&
                        !f
                      )
                        return void console.error(
                          "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."
                        );
                      t >= 0 &&
                        t <= e.width - r &&
                        n >= 0 &&
                        n <= e.height - a &&
                        Ve.readPixels(
                          t,
                          n,
                          r,
                          a,
                          Be.convert(u),
                          Be.convert(c),
                          i
                        );
                    } finally {
                      var d = null !== F ? xe.get(F).__webglFramebuffer : null;
                      _e.bindFramebuffer(Ve.FRAMEBUFFER, d);
                    }
                  }
                } else
                  console.error(
                    "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget."
                  );
              }),
              (this.copyFramebufferToTexture = function (e, t) {
                var n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 0,
                  r = Math.pow(2, -n),
                  a = Math.floor(t.image.width * r),
                  i = Math.floor(t.image.height * r);
                Se.setTexture2D(t, 0),
                  Ve.copyTexSubImage2D(Ve.TEXTURE_2D, n, 0, 0, e.x, e.y, a, i),
                  _e.unbindTexture();
              }),
              (this.copyTextureToTexture = function (e, t, n) {
                var r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : 0,
                  a = t.image.width,
                  i = t.image.height,
                  o = Be.convert(n.format),
                  s = Be.convert(n.type);
                Se.setTexture2D(n, 0),
                  Ve.pixelStorei(Ve.UNPACK_FLIP_Y_WEBGL, n.flipY),
                  Ve.pixelStorei(
                    Ve.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                    n.premultiplyAlpha
                  ),
                  Ve.pixelStorei(Ve.UNPACK_ALIGNMENT, n.unpackAlignment),
                  t.isDataTexture
                    ? Ve.texSubImage2D(
                        Ve.TEXTURE_2D,
                        r,
                        e.x,
                        e.y,
                        a,
                        i,
                        o,
                        s,
                        t.image.data
                      )
                    : t.isCompressedTexture
                    ? Ve.compressedTexSubImage2D(
                        Ve.TEXTURE_2D,
                        r,
                        e.x,
                        e.y,
                        t.mipmaps[0].width,
                        t.mipmaps[0].height,
                        o,
                        t.mipmaps[0].data
                      )
                    : Ve.texSubImage2D(
                        Ve.TEXTURE_2D,
                        r,
                        e.x,
                        e.y,
                        o,
                        s,
                        t.image
                      ),
                  0 === r &&
                    n.generateMipmaps &&
                    Ve.generateMipmap(Ve.TEXTURE_2D),
                  _e.unbindTexture();
              }),
              (this.copyTextureToTexture3D = function (e, t, n, r) {
                var a =
                  arguments.length > 4 && void 0 !== arguments[4]
                    ? arguments[4]
                    : 0;
                if (L.isWebGL1Renderer)
                  console.warn(
                    "THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2."
                  );
                else {
                  var i,
                    o = e.max.x - e.min.x + 1,
                    s = e.max.y - e.min.y + 1,
                    l = e.max.z - e.min.z + 1,
                    u = Be.convert(r.format),
                    c = Be.convert(r.type);
                  if (r.isData3DTexture)
                    Se.setTexture3D(r, 0), (i = Ve.TEXTURE_3D);
                  else {
                    if (!r.isDataArrayTexture)
                      return void console.warn(
                        "THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray."
                      );
                    Se.setTexture2DArray(r, 0), (i = Ve.TEXTURE_2D_ARRAY);
                  }
                  Ve.pixelStorei(Ve.UNPACK_FLIP_Y_WEBGL, r.flipY),
                    Ve.pixelStorei(
                      Ve.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                      r.premultiplyAlpha
                    ),
                    Ve.pixelStorei(Ve.UNPACK_ALIGNMENT, r.unpackAlignment);
                  var f = Ve.getParameter(Ve.UNPACK_ROW_LENGTH),
                    d = Ve.getParameter(Ve.UNPACK_IMAGE_HEIGHT),
                    h = Ve.getParameter(Ve.UNPACK_SKIP_PIXELS),
                    p = Ve.getParameter(Ve.UNPACK_SKIP_ROWS),
                    v = Ve.getParameter(Ve.UNPACK_SKIP_IMAGES),
                    m = n.isCompressedTexture ? n.mipmaps[0] : n.image;
                  Ve.pixelStorei(Ve.UNPACK_ROW_LENGTH, m.width),
                    Ve.pixelStorei(Ve.UNPACK_IMAGE_HEIGHT, m.height),
                    Ve.pixelStorei(Ve.UNPACK_SKIP_PIXELS, e.min.x),
                    Ve.pixelStorei(Ve.UNPACK_SKIP_ROWS, e.min.y),
                    Ve.pixelStorei(Ve.UNPACK_SKIP_IMAGES, e.min.z),
                    n.isDataTexture || n.isData3DTexture
                      ? Ve.texSubImage3D(
                          i,
                          a,
                          t.x,
                          t.y,
                          t.z,
                          o,
                          s,
                          l,
                          u,
                          c,
                          m.data
                        )
                      : n.isCompressedArrayTexture
                      ? (console.warn(
                          "THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."
                        ),
                        Ve.compressedTexSubImage3D(
                          i,
                          a,
                          t.x,
                          t.y,
                          t.z,
                          o,
                          s,
                          l,
                          u,
                          m.data
                        ))
                      : Ve.texSubImage3D(i, a, t.x, t.y, t.z, o, s, l, u, c, m),
                    Ve.pixelStorei(Ve.UNPACK_ROW_LENGTH, f),
                    Ve.pixelStorei(Ve.UNPACK_IMAGE_HEIGHT, d),
                    Ve.pixelStorei(Ve.UNPACK_SKIP_PIXELS, h),
                    Ve.pixelStorei(Ve.UNPACK_SKIP_ROWS, p),
                    Ve.pixelStorei(Ve.UNPACK_SKIP_IMAGES, v),
                    0 === a && r.generateMipmaps && Ve.generateMipmap(i),
                    _e.unbindTexture();
                }
              }),
              (this.initTexture = function (e) {
                e.isCubeTexture
                  ? Se.setTextureCube(e, 0)
                  : e.isData3DTexture
                  ? Se.setTexture3D(e, 0)
                  : e.isDataArrayTexture || e.isCompressedArrayTexture
                  ? Se.setTexture2DArray(e, 0)
                  : Se.setTexture2D(e, 0),
                  _e.unbindTexture();
              }),
              (this.resetState = function () {
                (I = 0), (O = 0), (F = null), _e.reset(), He.reset();
              }),
              "undefined" !== typeof __THREE_DEVTOOLS__ &&
                __THREE_DEVTOOLS__.dispatchEvent(
                  new CustomEvent("observe", { detail: this })
                );
          }
          return (
            M(e, [
              {
                key: "coordinateSystem",
                get: function () {
                  return Fe;
                },
              },
              {
                key: "outputColorSpace",
                get: function () {
                  return this._outputColorSpace;
                },
                set: function (e) {
                  this._outputColorSpace = e;
                  var t = this.getContext();
                  (t.drawingBufferColorSpace =
                    e === Ce ? "display-p3" : "srgb"),
                    (t.unpackColorSpace =
                      ct.workingColorSpace === ke ? "display-p3" : "srgb");
                },
              },
              {
                key: "physicallyCorrectLights",
                get: function () {
                  return (
                    console.warn(
                      "THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."
                    ),
                    !this.useLegacyLights
                  );
                },
                set: function (e) {
                  console.warn(
                    "THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."
                  ),
                    (this.useLegacyLights = !e);
                },
              },
              {
                key: "outputEncoding",
                get: function () {
                  return (
                    console.warn(
                      "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."
                    ),
                    this.outputColorSpace === Me ? Ee : 3e3
                  );
                },
                set: function (e) {
                  console.warn(
                    "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."
                  ),
                    (this.outputColorSpace = e === Ee ? Me : Ae);
                },
              },
              {
                key: "useLegacyLights",
                get: function () {
                  return (
                    console.warn(
                      "THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."
                    ),
                    this._useLegacyLights
                  );
                },
                set: function (e) {
                  console.warn(
                    "THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."
                  ),
                    (this._useLegacyLights = e);
                },
              },
            ]),
            e
          );
        })(),
        Ro = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            return w(this, n), t.apply(this, arguments);
          }
          return M(n);
        })(ko);
      Ro.prototype.isWebGL1Renderer = !0;
      var Po = (function (e) {
        y(n, e);
        var t = b(n);
        function n() {
          var e;
          return (
            w(this, n),
            ((e = t.call(this)).isScene = !0),
            (e.type = "Scene"),
            (e.background = null),
            (e.environment = null),
            (e.fog = null),
            (e.backgroundBlurriness = 0),
            (e.backgroundIntensity = 1),
            (e.overrideMaterial = null),
            "undefined" !== typeof __THREE_DEVTOOLS__ &&
              __THREE_DEVTOOLS__.dispatchEvent(
                new CustomEvent("observe", { detail: m(e) })
              ),
            e
          );
        }
        return (
          M(n, [
            {
              key: "copy",
              value: function (e, t) {
                return (
                  v(p(n.prototype), "copy", this).call(this, e, t),
                  null !== e.background &&
                    (this.background = e.background.clone()),
                  null !== e.environment &&
                    (this.environment = e.environment.clone()),
                  null !== e.fog && (this.fog = e.fog.clone()),
                  (this.backgroundBlurriness = e.backgroundBlurriness),
                  (this.backgroundIntensity = e.backgroundIntensity),
                  null !== e.overrideMaterial &&
                    (this.overrideMaterial = e.overrideMaterial.clone()),
                  (this.matrixAutoUpdate = e.matrixAutoUpdate),
                  this
                );
              },
            },
            {
              key: "toJSON",
              value: function (e) {
                var t = v(p(n.prototype), "toJSON", this).call(this, e);
                return (
                  null !== this.fog && (t.object.fog = this.fog.toJSON()),
                  this.backgroundBlurriness > 0 &&
                    (t.object.backgroundBlurriness = this.backgroundBlurriness),
                  1 !== this.backgroundIntensity &&
                    (t.object.backgroundIntensity = this.backgroundIntensity),
                  t
                );
              },
            },
          ]),
          n
        );
      })(An);
      var Uo = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e, r, a) {
            var i,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1;
            return (
              w(this, n),
              ((i = t.call(this, e, r, a)).isInstancedBufferAttribute = !0),
              (i.meshPerAttribute = o),
              i
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e),
                    (this.meshPerAttribute = e.meshPerAttribute),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = v(p(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.meshPerAttribute = this.meshPerAttribute),
                    (e.isInstancedBufferAttribute = !0),
                    e
                  );
                },
              },
            ]),
            n
          );
        })(Zn),
        Lo = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e) {
            var r;
            return (
              w(this, n),
              ((r = t.call(this)).isLineBasicMaterial = !0),
              (r.type = "LineBasicMaterial"),
              (r.color = new Wn(16777215)),
              (r.map = null),
              (r.linewidth = 1),
              (r.linecap = "round"),
              (r.linejoin = "round"),
              (r.fog = !0),
              r.setValues(e),
              r
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    (this.map = e.map),
                    (this.linewidth = e.linewidth),
                    (this.linecap = e.linecap),
                    (this.linejoin = e.linejoin),
                    (this.fog = e.fog),
                    this
                  );
                },
              },
            ]),
            n
          );
        })(qn),
        Do = new Tt(),
        Io = new Tt(),
        Oo = new tn(),
        No = new en(),
        Fo = new Xt(),
        zo = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : new lr(),
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : new Lo();
            return (
              w(this, n),
              ((e = t.call(this)).isLine = !0),
              (e.type = "Line"),
              (e.geometry = r),
              (e.material = a),
              e.updateMorphTargets(),
              e
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e, t) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e, t),
                    (this.material = Array.isArray(e.material)
                      ? e.material.slice()
                      : e.material),
                    (this.geometry = e.geometry),
                    this
                  );
                },
              },
              {
                key: "computeLineDistances",
                value: function () {
                  var e = this.geometry;
                  if (null === e.index) {
                    for (
                      var t = e.attributes.position,
                        n = [0],
                        r = 1,
                        a = t.count;
                      r < a;
                      r++
                    )
                      Do.fromBufferAttribute(t, r - 1),
                        Io.fromBufferAttribute(t, r),
                        (n[r] = n[r - 1]),
                        (n[r] += Do.distanceTo(Io));
                    e.setAttribute("lineDistance", new er(n, 1));
                  } else
                    console.warn(
                      "THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
                    );
                  return this;
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.geometry,
                    r = this.matrixWorld,
                    a = e.params.Line.threshold,
                    i = n.drawRange;
                  if (
                    (null === n.boundingSphere && n.computeBoundingSphere(),
                    Fo.copy(n.boundingSphere),
                    Fo.applyMatrix4(r),
                    (Fo.radius += a),
                    !1 !== e.ray.intersectsSphere(Fo))
                  ) {
                    Oo.copy(r).invert(), No.copy(e.ray).applyMatrix4(Oo);
                    var o =
                        a / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                      s = o * o,
                      l = new Tt(),
                      u = new Tt(),
                      c = new Tt(),
                      f = new Tt(),
                      d = this.isLineSegments ? 2 : 1,
                      h = n.index,
                      p = n.attributes.position;
                    if (null !== h)
                      for (
                        var v = Math.max(0, i.start),
                          m = Math.min(h.count, i.start + i.count) - 1;
                        v < m;
                        v += d
                      ) {
                        var g = h.getX(v),
                          y = h.getX(v + 1);
                        if (
                          (l.fromBufferAttribute(p, g),
                          u.fromBufferAttribute(p, y),
                          !(No.distanceSqToSegment(l, u, f, c) > s))
                        ) {
                          f.applyMatrix4(this.matrixWorld);
                          var _ = e.ray.origin.distanceTo(f);
                          _ < e.near ||
                            _ > e.far ||
                            t.push({
                              distance: _,
                              point: c.clone().applyMatrix4(this.matrixWorld),
                              index: v,
                              face: null,
                              faceIndex: null,
                              object: this,
                            });
                        }
                      }
                    else
                      for (
                        var b = Math.max(0, i.start),
                          x = Math.min(p.count, i.start + i.count) - 1;
                        b < x;
                        b += d
                      ) {
                        if (
                          (l.fromBufferAttribute(p, b),
                          u.fromBufferAttribute(p, b + 1),
                          !(No.distanceSqToSegment(l, u, f, c) > s))
                        ) {
                          f.applyMatrix4(this.matrixWorld);
                          var S = e.ray.origin.distanceTo(f);
                          S < e.near ||
                            S > e.far ||
                            t.push({
                              distance: S,
                              point: c.clone().applyMatrix4(this.matrixWorld),
                              index: b,
                              face: null,
                              faceIndex: null,
                              object: this,
                            });
                        }
                      }
                  }
                },
              },
              {
                key: "updateMorphTargets",
                value: function () {
                  var e = this.geometry.morphAttributes,
                    t = Object.keys(e);
                  if (t.length > 0) {
                    var n = e[t[0]];
                    if (void 0 !== n) {
                      (this.morphTargetInfluences = []),
                        (this.morphTargetDictionary = {});
                      for (var r = 0, a = n.length; r < a; r++) {
                        var i = n[r].name || String(r);
                        this.morphTargetInfluences.push(0),
                          (this.morphTargetDictionary[i] = r);
                      }
                    }
                  }
                },
              },
            ]),
            n
          );
        })(An);
      var Bo = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 32,
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2 * Math.PI;
            w(this, n),
              ((e = t.call(this)).type = "CircleGeometry"),
              (e.parameters = {
                radius: r,
                segments: a,
                thetaStart: i,
                thetaLength: o,
              }),
              (a = Math.max(3, a));
            var s = [],
              l = [],
              u = [],
              c = [],
              f = new Tt(),
              d = new Je();
            l.push(0, 0, 0), u.push(0, 0, 1), c.push(0.5, 0.5);
            for (var h = 0, p = 3; h <= a; h++, p += 3) {
              var v = i + (h / a) * o;
              (f.x = r * Math.cos(v)),
                (f.y = r * Math.sin(v)),
                l.push(f.x, f.y, f.z),
                u.push(0, 0, 1),
                (d.x = (l[p] / r + 1) / 2),
                (d.y = (l[p + 1] / r + 1) / 2),
                c.push(d.x, d.y);
            }
            for (var m = 1; m <= a; m++) s.push(m, m + 1, 0);
            return (
              e.setIndex(s),
              e.setAttribute("position", new er(l, 3)),
              e.setAttribute("normal", new er(u, 3)),
              e.setAttribute("uv", new er(c, 2)),
              e
            );
          }
          return (
            M(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      v(p(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(
                      e.radius,
                      e.segments,
                      e.thetaStart,
                      e.thetaLength
                    );
                  },
                },
              ]
            ),
            n
          );
        })(lr),
        Ho = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 1,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 32,
              s =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : 1,
              l =
                arguments.length > 5 && void 0 !== arguments[5] && arguments[5],
              u =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : 0,
              c =
                arguments.length > 7 && void 0 !== arguments[7]
                  ? arguments[7]
                  : 2 * Math.PI;
            w(this, n),
              ((e = t.call(this)).type = "CylinderGeometry"),
              (e.parameters = {
                radiusTop: r,
                radiusBottom: a,
                height: i,
                radialSegments: o,
                heightSegments: s,
                openEnded: l,
                thetaStart: u,
                thetaLength: c,
              });
            var f = m(e);
            (o = Math.floor(o)), (s = Math.floor(s));
            var d = [],
              h = [],
              p = [],
              v = [],
              g = 0,
              y = [],
              _ = i / 2,
              b = 0;
            function x(e) {
              for (
                var t = g,
                  n = new Je(),
                  i = new Tt(),
                  s = 0,
                  l = !0 === e ? r : a,
                  m = !0 === e ? 1 : -1,
                  y = 1;
                y <= o;
                y++
              )
                h.push(0, _ * m, 0), p.push(0, m, 0), v.push(0.5, 0.5), g++;
              for (var x = g, S = 0; S <= o; S++) {
                var E = (S / o) * c + u,
                  w = Math.cos(E),
                  T = Math.sin(E);
                (i.x = l * T),
                  (i.y = _ * m),
                  (i.z = l * w),
                  h.push(i.x, i.y, i.z),
                  p.push(0, m, 0),
                  (n.x = 0.5 * w + 0.5),
                  (n.y = 0.5 * T * m + 0.5),
                  v.push(n.x, n.y),
                  g++;
              }
              for (var M = 0; M < o; M++) {
                var A = t + M,
                  C = x + M;
                !0 === e ? d.push(C, C + 1, A) : d.push(C + 1, C, A), (s += 3);
              }
              f.addGroup(b, s, !0 === e ? 1 : 2), (b += s);
            }
            return (
              (function () {
                for (
                  var e = new Tt(), t = new Tt(), n = 0, l = (a - r) / i, m = 0;
                  m <= s;
                  m++
                ) {
                  for (
                    var x = [], S = m / s, E = S * (a - r) + r, w = 0;
                    w <= o;
                    w++
                  ) {
                    var T = w / o,
                      M = T * c + u,
                      A = Math.sin(M),
                      C = Math.cos(M);
                    (t.x = E * A),
                      (t.y = -S * i + _),
                      (t.z = E * C),
                      h.push(t.x, t.y, t.z),
                      e.set(A, l, C).normalize(),
                      p.push(e.x, e.y, e.z),
                      v.push(T, 1 - S),
                      x.push(g++);
                  }
                  y.push(x);
                }
                for (var k = 0; k < o; k++)
                  for (var R = 0; R < s; R++) {
                    var P = y[R][k],
                      U = y[R + 1][k],
                      L = y[R + 1][k + 1],
                      D = y[R][k + 1];
                    d.push(P, U, D), d.push(U, L, D), (n += 6);
                  }
                f.addGroup(b, n, 0), (b += n);
              })(),
              !1 === l && (r > 0 && x(!0), a > 0 && x(!1)),
              e.setIndex(d),
              e.setAttribute("position", new er(h, 3)),
              e.setAttribute("normal", new er(p, 3)),
              e.setAttribute("uv", new er(v, 2)),
              e
            );
          }
          return (
            M(
              n,
              [
                {
                  key: "copy",
                  value: function (e) {
                    return (
                      v(p(n.prototype), "copy", this).call(this, e),
                      (this.parameters = Object.assign({}, e.parameters)),
                      this
                    );
                  },
                },
              ],
              [
                {
                  key: "fromJSON",
                  value: function (e) {
                    return new n(
                      e.radiusTop,
                      e.radiusBottom,
                      e.height,
                      e.radialSegments,
                      e.heightSegments,
                      e.openEnded,
                      e.thetaStart,
                      e.thetaLength
                    );
                  },
                },
              ]
            ),
            n
          );
        })(lr),
        Go = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e,
              r =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 1,
              a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 1,
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 32,
              o =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 1,
              s =
                arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
              l =
                arguments.length > 5 && void 0 !== arguments[5]
                  ? arguments[5]
                  : 0,
              u =
                arguments.length > 6 && void 0 !== arguments[6]
                  ? arguments[6]
                  : 2 * Math.PI;
            return (
              w(this, n),
              ((e = t.call(this, 0, r, a, i, o, s, l, u)).type =
                "ConeGeometry"),
              (e.parameters = {
                radius: r,
                height: a,
                radialSegments: i,
                heightSegments: o,
                openEnded: s,
                thetaStart: l,
                thetaLength: u,
              }),
              e
            );
          }
          return (
            M(n, null, [
              {
                key: "fromJSON",
                value: function (e) {
                  return new n(
                    e.radius,
                    e.height,
                    e.radialSegments,
                    e.heightSegments,
                    e.openEnded,
                    e.thetaStart,
                    e.thetaLength
                  );
                },
              },
            ]),
            n
          );
        })(Ho);
      function Vo(e, t, n) {
        return !e || (!n && e.constructor === t)
          ? e
          : "number" === typeof t.BYTES_PER_ELEMENT
          ? new t(e)
          : Array.prototype.slice.call(e);
      }
      function Wo(e) {
        return ArrayBuffer.isView(e) && !(e instanceof DataView);
      }
      var jo = (function () {
          function e(t, n, r, a) {
            w(this, e),
              (this.parameterPositions = t),
              (this._cachedIndex = 0),
              (this.resultBuffer = void 0 !== a ? a : new n.constructor(r)),
              (this.sampleValues = n),
              (this.valueSize = r),
              (this.settings = null),
              (this.DefaultSettings_ = {});
          }
          return (
            M(e, [
              {
                key: "evaluate",
                value: function (e) {
                  var t = this.parameterPositions,
                    n = this._cachedIndex,
                    r = t[n],
                    a = t[n - 1];
                  e: {
                    t: {
                      var i;
                      n: {
                        r: if (!(e < r)) {
                          for (var o = n + 2; ; ) {
                            if (void 0 === r) {
                              if (e < a) break r;
                              return (
                                (n = t.length),
                                (this._cachedIndex = n),
                                this.copySampleValue_(n - 1)
                              );
                            }
                            if (n === o) break;
                            if (((a = r), e < (r = t[++n]))) break t;
                          }
                          i = t.length;
                          break n;
                        }
                        if (e >= a) break e;
                        var s = t[1];
                        e < s && ((n = 2), (a = s));
                        for (var l = n - 2; ; ) {
                          if (void 0 === a)
                            return (
                              (this._cachedIndex = 0), this.copySampleValue_(0)
                            );
                          if (n === l) break;
                          if (((r = a), e >= (a = t[--n - 1]))) break t;
                        }
                        (i = n), (n = 0);
                      }
                      for (; n < i; ) {
                        var u = (n + i) >>> 1;
                        e < t[u] ? (i = u) : (n = u + 1);
                      }
                      if (((r = t[n]), void 0 === (a = t[n - 1])))
                        return (
                          (this._cachedIndex = 0), this.copySampleValue_(0)
                        );
                      if (void 0 === r)
                        return (
                          (n = t.length),
                          (this._cachedIndex = n),
                          this.copySampleValue_(n - 1)
                        );
                    }
                    (this._cachedIndex = n), this.intervalChanged_(n, a, r);
                  }
                  return this.interpolate_(n, a, e, r);
                },
              },
              {
                key: "getSettings_",
                value: function () {
                  return this.settings || this.DefaultSettings_;
                },
              },
              {
                key: "copySampleValue_",
                value: function (e) {
                  for (
                    var t = this.resultBuffer,
                      n = this.sampleValues,
                      r = this.valueSize,
                      a = e * r,
                      i = 0;
                    i !== r;
                    ++i
                  )
                    t[i] = n[a + i];
                  return t;
                },
              },
              {
                key: "interpolate_",
                value: function () {
                  throw new Error("call to abstract method");
                },
              },
              { key: "intervalChanged_", value: function () {} },
            ]),
            e
          );
        })(),
        Xo = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e, r, a, i) {
            var o;
            return (
              w(this, n),
              ((o = t.call(this, e, r, a, i))._weightPrev = -0),
              (o._offsetPrev = -0),
              (o._weightNext = -0),
              (o._offsetNext = -0),
              (o.DefaultSettings_ = { endingStart: be, endingEnd: be }),
              o
            );
          }
          return (
            M(n, [
              {
                key: "intervalChanged_",
                value: function (e, t, n) {
                  var r = this.parameterPositions,
                    a = e - 2,
                    i = e + 1,
                    o = r[a],
                    s = r[i];
                  if (void 0 === o)
                    switch (this.getSettings_().endingStart) {
                      case xe:
                        (a = e), (o = 2 * t - n);
                        break;
                      case Se:
                        o = t + r[(a = r.length - 2)] - r[a + 1];
                        break;
                      default:
                        (a = e), (o = n);
                    }
                  if (void 0 === s)
                    switch (this.getSettings_().endingEnd) {
                      case xe:
                        (i = e), (s = 2 * n - t);
                        break;
                      case Se:
                        (i = 1), (s = n + r[1] - r[0]);
                        break;
                      default:
                        (i = e - 1), (s = t);
                    }
                  var l = 0.5 * (n - t),
                    u = this.valueSize;
                  (this._weightPrev = l / (t - o)),
                    (this._weightNext = l / (s - n)),
                    (this._offsetPrev = a * u),
                    (this._offsetNext = i * u);
                },
              },
              {
                key: "interpolate_",
                value: function (e, t, n, r) {
                  for (
                    var a = this.resultBuffer,
                      i = this.sampleValues,
                      o = this.valueSize,
                      s = e * o,
                      l = s - o,
                      u = this._offsetPrev,
                      c = this._offsetNext,
                      f = this._weightPrev,
                      d = this._weightNext,
                      h = (n - t) / (r - t),
                      p = h * h,
                      v = p * h,
                      m = -f * v + 2 * f * p - f * h,
                      g = (1 + f) * v + (-1.5 - 2 * f) * p + (-0.5 + f) * h + 1,
                      y = (-1 - d) * v + (1.5 + d) * p + 0.5 * h,
                      _ = d * v - d * p,
                      b = 0;
                    b !== o;
                    ++b
                  )
                    a[b] =
                      m * i[u + b] + g * i[l + b] + y * i[s + b] + _ * i[c + b];
                  return a;
                },
              },
            ]),
            n
          );
        })(jo),
        qo = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e, r, a, i) {
            return w(this, n), t.call(this, e, r, a, i);
          }
          return (
            M(n, [
              {
                key: "interpolate_",
                value: function (e, t, n, r) {
                  for (
                    var a = this.resultBuffer,
                      i = this.sampleValues,
                      o = this.valueSize,
                      s = e * o,
                      l = s - o,
                      u = (n - t) / (r - t),
                      c = 1 - u,
                      f = 0;
                    f !== o;
                    ++f
                  )
                    a[f] = i[l + f] * c + i[s + f] * u;
                  return a;
                },
              },
            ]),
            n
          );
        })(jo),
        Yo = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e, r, a, i) {
            return w(this, n), t.call(this, e, r, a, i);
          }
          return (
            M(n, [
              {
                key: "interpolate_",
                value: function (e) {
                  return this.copySampleValue_(e - 1);
                },
              },
            ]),
            n
          );
        })(jo),
        Ko = (function () {
          function e(t, n, r, a) {
            if ((w(this, e), void 0 === t))
              throw new Error("THREE.KeyframeTrack: track name is undefined");
            if (void 0 === n || 0 === n.length)
              throw new Error(
                "THREE.KeyframeTrack: no keyframes in track named " + t
              );
            (this.name = t),
              (this.times = Vo(n, this.TimeBufferType)),
              (this.values = Vo(r, this.ValueBufferType)),
              this.setInterpolation(a || this.DefaultInterpolation);
          }
          return (
            M(
              e,
              [
                {
                  key: "InterpolantFactoryMethodDiscrete",
                  value: function (e) {
                    return new Yo(
                      this.times,
                      this.values,
                      this.getValueSize(),
                      e
                    );
                  },
                },
                {
                  key: "InterpolantFactoryMethodLinear",
                  value: function (e) {
                    return new qo(
                      this.times,
                      this.values,
                      this.getValueSize(),
                      e
                    );
                  },
                },
                {
                  key: "InterpolantFactoryMethodSmooth",
                  value: function (e) {
                    return new Xo(
                      this.times,
                      this.values,
                      this.getValueSize(),
                      e
                    );
                  },
                },
                {
                  key: "setInterpolation",
                  value: function (e) {
                    var t;
                    switch (e) {
                      case ge:
                        t = this.InterpolantFactoryMethodDiscrete;
                        break;
                      case ye:
                        t = this.InterpolantFactoryMethodLinear;
                        break;
                      case _e:
                        t = this.InterpolantFactoryMethodSmooth;
                    }
                    if (void 0 === t) {
                      var n =
                        "unsupported interpolation for " +
                        this.ValueTypeName +
                        " keyframe track named " +
                        this.name;
                      if (void 0 === this.createInterpolant) {
                        if (e === this.DefaultInterpolation) throw new Error(n);
                        this.setInterpolation(this.DefaultInterpolation);
                      }
                      return console.warn("THREE.KeyframeTrack:", n), this;
                    }
                    return (this.createInterpolant = t), this;
                  },
                },
                {
                  key: "getInterpolation",
                  value: function () {
                    switch (this.createInterpolant) {
                      case this.InterpolantFactoryMethodDiscrete:
                        return ge;
                      case this.InterpolantFactoryMethodLinear:
                        return ye;
                      case this.InterpolantFactoryMethodSmooth:
                        return _e;
                    }
                  },
                },
                {
                  key: "getValueSize",
                  value: function () {
                    return this.values.length / this.times.length;
                  },
                },
                {
                  key: "shift",
                  value: function (e) {
                    if (0 !== e)
                      for (
                        var t = this.times, n = 0, r = t.length;
                        n !== r;
                        ++n
                      )
                        t[n] += e;
                    return this;
                  },
                },
                {
                  key: "scale",
                  value: function (e) {
                    if (1 !== e)
                      for (
                        var t = this.times, n = 0, r = t.length;
                        n !== r;
                        ++n
                      )
                        t[n] *= e;
                    return this;
                  },
                },
                {
                  key: "trim",
                  value: function (e, t) {
                    for (
                      var n = this.times, r = n.length, a = 0, i = r - 1;
                      a !== r && n[a] < e;

                    )
                      ++a;
                    for (; -1 !== i && n[i] > t; ) --i;
                    if ((++i, 0 !== a || i !== r)) {
                      a >= i && (a = (i = Math.max(i, 1)) - 1);
                      var o = this.getValueSize();
                      (this.times = n.slice(a, i)),
                        (this.values = this.values.slice(a * o, i * o));
                    }
                    return this;
                  },
                },
                {
                  key: "validate",
                  value: function () {
                    var e = !0,
                      t = this.getValueSize();
                    t - Math.floor(t) !== 0 &&
                      (console.error(
                        "THREE.KeyframeTrack: Invalid value size in track.",
                        this
                      ),
                      (e = !1));
                    var n = this.times,
                      r = this.values,
                      a = n.length;
                    0 === a &&
                      (console.error(
                        "THREE.KeyframeTrack: Track is empty.",
                        this
                      ),
                      (e = !1));
                    for (var i = null, o = 0; o !== a; o++) {
                      var s = n[o];
                      if ("number" === typeof s && isNaN(s)) {
                        console.error(
                          "THREE.KeyframeTrack: Time is not a valid number.",
                          this,
                          o,
                          s
                        ),
                          (e = !1);
                        break;
                      }
                      if (null !== i && i > s) {
                        console.error(
                          "THREE.KeyframeTrack: Out of order keys.",
                          this,
                          o,
                          s,
                          i
                        ),
                          (e = !1);
                        break;
                      }
                      i = s;
                    }
                    if (void 0 !== r && Wo(r))
                      for (var l = 0, u = r.length; l !== u; ++l) {
                        var c = r[l];
                        if (isNaN(c)) {
                          console.error(
                            "THREE.KeyframeTrack: Value is not a valid number.",
                            this,
                            l,
                            c
                          ),
                            (e = !1);
                          break;
                        }
                      }
                    return e;
                  },
                },
                {
                  key: "optimize",
                  value: function () {
                    for (
                      var e = this.times.slice(),
                        t = this.values.slice(),
                        n = this.getValueSize(),
                        r = this.getInterpolation() === _e,
                        a = e.length - 1,
                        i = 1,
                        o = 1;
                      o < a;
                      ++o
                    ) {
                      var s = !1,
                        l = e[o];
                      if (l !== e[o + 1] && (1 !== o || l !== e[0]))
                        if (r) s = !0;
                        else
                          for (
                            var u = o * n, c = u - n, f = u + n, d = 0;
                            d !== n;
                            ++d
                          ) {
                            var h = t[u + d];
                            if (h !== t[c + d] || h !== t[f + d]) {
                              s = !0;
                              break;
                            }
                          }
                      if (s) {
                        if (o !== i) {
                          e[i] = e[o];
                          for (var p = o * n, v = i * n, m = 0; m !== n; ++m)
                            t[v + m] = t[p + m];
                        }
                        ++i;
                      }
                    }
                    if (a > 0) {
                      e[i] = e[a];
                      for (var g = a * n, y = i * n, _ = 0; _ !== n; ++_)
                        t[y + _] = t[g + _];
                      ++i;
                    }
                    return (
                      i !== e.length
                        ? ((this.times = e.slice(0, i)),
                          (this.values = t.slice(0, i * n)))
                        : ((this.times = e), (this.values = t)),
                      this
                    );
                  },
                },
                {
                  key: "clone",
                  value: function () {
                    var e = this.times.slice(),
                      t = this.values.slice(),
                      n = new (0, this.constructor)(this.name, e, t);
                    return (n.createInterpolant = this.createInterpolant), n;
                  },
                },
              ],
              [
                {
                  key: "toJSON",
                  value: function (e) {
                    var t,
                      n = e.constructor;
                    if (n.toJSON !== this.toJSON) t = n.toJSON(e);
                    else {
                      t = {
                        name: e.name,
                        times: Vo(e.times, Array),
                        values: Vo(e.values, Array),
                      };
                      var r = e.getInterpolation();
                      r !== e.DefaultInterpolation && (t.interpolation = r);
                    }
                    return (t.type = e.ValueTypeName), t;
                  },
                },
              ]
            ),
            e
          );
        })();
      (Ko.prototype.TimeBufferType = Float32Array),
        (Ko.prototype.ValueBufferType = Float32Array),
        (Ko.prototype.DefaultInterpolation = ye);
      var $o = (function (e) {
        y(n, e);
        var t = b(n);
        function n() {
          return w(this, n), t.apply(this, arguments);
        }
        return M(n);
      })(Ko);
      ($o.prototype.ValueTypeName = "bool"),
        ($o.prototype.ValueBufferType = Array),
        ($o.prototype.DefaultInterpolation = ge),
        ($o.prototype.InterpolantFactoryMethodLinear = void 0),
        ($o.prototype.InterpolantFactoryMethodSmooth = void 0);
      var Zo = (function (e) {
        y(n, e);
        var t = b(n);
        function n() {
          return w(this, n), t.apply(this, arguments);
        }
        return M(n);
      })(Ko);
      Zo.prototype.ValueTypeName = "color";
      var Jo = (function (e) {
        y(n, e);
        var t = b(n);
        function n() {
          return w(this, n), t.apply(this, arguments);
        }
        return M(n);
      })(Ko);
      Jo.prototype.ValueTypeName = "number";
      var Qo = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e, r, a, i) {
            return w(this, n), t.call(this, e, r, a, i);
          }
          return (
            M(n, [
              {
                key: "interpolate_",
                value: function (e, t, n, r) {
                  for (
                    var a = this.resultBuffer,
                      i = this.sampleValues,
                      o = this.valueSize,
                      s = (n - t) / (r - t),
                      l = e * o,
                      u = l + o;
                    l !== u;
                    l += 4
                  )
                    wt.slerpFlat(a, 0, i, l - o, i, l, s);
                  return a;
                },
              },
            ]),
            n
          );
        })(jo),
        es = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            return w(this, n), t.apply(this, arguments);
          }
          return (
            M(n, [
              {
                key: "InterpolantFactoryMethodLinear",
                value: function (e) {
                  return new Qo(
                    this.times,
                    this.values,
                    this.getValueSize(),
                    e
                  );
                },
              },
            ]),
            n
          );
        })(Ko);
      (es.prototype.ValueTypeName = "quaternion"),
        (es.prototype.DefaultInterpolation = ye),
        (es.prototype.InterpolantFactoryMethodSmooth = void 0);
      var ts = (function (e) {
        y(n, e);
        var t = b(n);
        function n() {
          return w(this, n), t.apply(this, arguments);
        }
        return M(n);
      })(Ko);
      (ts.prototype.ValueTypeName = "string"),
        (ts.prototype.ValueBufferType = Array),
        (ts.prototype.DefaultInterpolation = ge),
        (ts.prototype.InterpolantFactoryMethodLinear = void 0),
        (ts.prototype.InterpolantFactoryMethodSmooth = void 0);
      var ns = (function (e) {
        y(n, e);
        var t = b(n);
        function n() {
          return w(this, n), t.apply(this, arguments);
        }
        return M(n);
      })(Ko);
      ns.prototype.ValueTypeName = "vector";
      var rs = {
          enabled: !1,
          files: {},
          add: function (e, t) {
            !1 !== this.enabled && (this.files[e] = t);
          },
          get: function (e) {
            if (!1 !== this.enabled) return this.files[e];
          },
          remove: function (e) {
            delete this.files[e];
          },
          clear: function () {
            this.files = {};
          },
        },
        as = M(function e(t, n, r) {
          w(this, e);
          var a = this,
            i = !1,
            o = 0,
            s = 0,
            l = void 0,
            u = [];
          (this.onStart = void 0),
            (this.onLoad = t),
            (this.onProgress = n),
            (this.onError = r),
            (this.itemStart = function (e) {
              s++,
                !1 === i && void 0 !== a.onStart && a.onStart(e, o, s),
                (i = !0);
            }),
            (this.itemEnd = function (e) {
              o++,
                void 0 !== a.onProgress && a.onProgress(e, o, s),
                o === s && ((i = !1), void 0 !== a.onLoad && a.onLoad());
            }),
            (this.itemError = function (e) {
              void 0 !== a.onError && a.onError(e);
            }),
            (this.resolveURL = function (e) {
              return l ? l(e) : e;
            }),
            (this.setURLModifier = function (e) {
              return (l = e), this;
            }),
            (this.addHandler = function (e, t) {
              return u.push(e, t), this;
            }),
            (this.removeHandler = function (e) {
              var t = u.indexOf(e);
              return -1 !== t && u.splice(t, 2), this;
            }),
            (this.getHandler = function (e) {
              for (var t = 0, n = u.length; t < n; t += 2) {
                var r = u[t],
                  a = u[t + 1];
                if ((r.global && (r.lastIndex = 0), r.test(e))) return a;
              }
              return null;
            });
        }),
        is = new as(),
        os = (function () {
          function e(t) {
            w(this, e),
              (this.manager = void 0 !== t ? t : is),
              (this.crossOrigin = "anonymous"),
              (this.withCredentials = !1),
              (this.path = ""),
              (this.resourcePath = ""),
              (this.requestHeader = {});
          }
          return (
            M(e, [
              { key: "load", value: function () {} },
              {
                key: "loadAsync",
                value: function (e, t) {
                  var n = this;
                  return new Promise(function (r, a) {
                    n.load(e, r, t, a);
                  });
                },
              },
              { key: "parse", value: function () {} },
              {
                key: "setCrossOrigin",
                value: function (e) {
                  return (this.crossOrigin = e), this;
                },
              },
              {
                key: "setWithCredentials",
                value: function (e) {
                  return (this.withCredentials = e), this;
                },
              },
              {
                key: "setPath",
                value: function (e) {
                  return (this.path = e), this;
                },
              },
              {
                key: "setResourcePath",
                value: function (e) {
                  return (this.resourcePath = e), this;
                },
              },
              {
                key: "setRequestHeader",
                value: function (e) {
                  return (this.requestHeader = e), this;
                },
              },
            ]),
            e
          );
        })();
      os.DEFAULT_MATERIAL_NAME = "__DEFAULT";
      var ss = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e) {
            return w(this, n), t.call(this, e);
          }
          return (
            M(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  void 0 !== this.path && (e = this.path + e),
                    (e = this.manager.resolveURL(e));
                  var a = this,
                    i = rs.get(e);
                  if (void 0 !== i)
                    return (
                      a.manager.itemStart(e),
                      setTimeout(function () {
                        t && t(i), a.manager.itemEnd(e);
                      }, 0),
                      i
                    );
                  var o = nt("img");
                  function s() {
                    u(), rs.add(e, this), t && t(this), a.manager.itemEnd(e);
                  }
                  function l(t) {
                    u(),
                      r && r(t),
                      a.manager.itemError(e),
                      a.manager.itemEnd(e);
                  }
                  function u() {
                    o.removeEventListener("load", s, !1),
                      o.removeEventListener("error", l, !1);
                  }
                  return (
                    o.addEventListener("load", s, !1),
                    o.addEventListener("error", l, !1),
                    "data:" !== e.slice(0, 5) &&
                      void 0 !== this.crossOrigin &&
                      (o.crossOrigin = this.crossOrigin),
                    a.manager.itemStart(e),
                    (o.src = e),
                    o
                  );
                },
              },
            ]),
            n
          );
        })(os),
        ls = (function (e) {
          y(n, e);
          var t = b(n);
          function n(e) {
            return w(this, n), t.call(this, e);
          }
          return (
            M(n, [
              {
                key: "load",
                value: function (e, t, n, r) {
                  var a = new yt(),
                    i = new ss(this.manager);
                  return (
                    i.setCrossOrigin(this.crossOrigin),
                    i.setPath(this.path),
                    i.load(
                      e,
                      function (e) {
                        (a.image = e),
                          (a.needsUpdate = !0),
                          void 0 !== t && t(a);
                      },
                      n,
                      r
                    ),
                    a
                  );
                },
              },
            ]),
            n
          );
        })(os),
        us = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e;
            return (
              w(this, n),
              ((e = t.call(this)).isInstancedBufferGeometry = !0),
              (e.type = "InstancedBufferGeometry"),
              (e.instanceCount = 1 / 0),
              e
            );
          }
          return (
            M(n, [
              {
                key: "copy",
                value: function (e) {
                  return (
                    v(p(n.prototype), "copy", this).call(this, e),
                    (this.instanceCount = e.instanceCount),
                    this
                  );
                },
              },
              {
                key: "toJSON",
                value: function () {
                  var e = v(p(n.prototype), "toJSON", this).call(this);
                  return (
                    (e.instanceCount = this.instanceCount),
                    (e.isInstancedBufferGeometry = !0),
                    e
                  );
                },
              },
            ]),
            n
          );
        })(lr);
      var cs = "\\[\\]\\.:\\/",
        fs = new RegExp("[" + cs + "]", "g"),
        ds = "[^" + cs + "]",
        hs = "[^" + cs.replace("\\.", "") + "]",
        ps = new RegExp(
          "^" +
            /((?:WC+[\/:])*)/.source.replace("WC", ds) +
            /(WCOD+)?/.source.replace("WCOD", hs) +
            /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", ds) +
            /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", ds) +
            "$"
        ),
        vs = ["material", "materials", "bones", "map"],
        ms = (function () {
          function e(t, n, r) {
            w(this, e);
            var a = r || gs.parseTrackName(n);
            (this._targetGroup = t), (this._bindings = t.subscribe_(n, a));
          }
          return (
            M(e, [
              {
                key: "getValue",
                value: function (e, t) {
                  this.bind();
                  var n = this._targetGroup.nCachedObjects_,
                    r = this._bindings[n];
                  void 0 !== r && r.getValue(e, t);
                },
              },
              {
                key: "setValue",
                value: function (e, t) {
                  for (
                    var n = this._bindings,
                      r = this._targetGroup.nCachedObjects_,
                      a = n.length;
                    r !== a;
                    ++r
                  )
                    n[r].setValue(e, t);
                },
              },
              {
                key: "bind",
                value: function () {
                  for (
                    var e = this._bindings,
                      t = this._targetGroup.nCachedObjects_,
                      n = e.length;
                    t !== n;
                    ++t
                  )
                    e[t].bind();
                },
              },
              {
                key: "unbind",
                value: function () {
                  for (
                    var e = this._bindings,
                      t = this._targetGroup.nCachedObjects_,
                      n = e.length;
                    t !== n;
                    ++t
                  )
                    e[t].unbind();
                },
              },
            ]),
            e
          );
        })(),
        gs = (function () {
          function e(t, n, r) {
            w(this, e),
              (this.path = n),
              (this.parsedPath = r || e.parseTrackName(n)),
              (this.node = e.findNode(t, this.parsedPath.nodeName)),
              (this.rootNode = t),
              (this.getValue = this._getValue_unbound),
              (this.setValue = this._setValue_unbound);
          }
          return (
            M(
              e,
              [
                { key: "_getValue_unavailable", value: function () {} },
                { key: "_setValue_unavailable", value: function () {} },
                {
                  key: "_getValue_direct",
                  value: function (e, t) {
                    e[t] = this.targetObject[this.propertyName];
                  },
                },
                {
                  key: "_getValue_array",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, a = n.length;
                      r !== a;
                      ++r
                    )
                      e[t++] = n[r];
                  },
                },
                {
                  key: "_getValue_arrayElement",
                  value: function (e, t) {
                    e[t] = this.resolvedProperty[this.propertyIndex];
                  },
                },
                {
                  key: "_getValue_toArray",
                  value: function (e, t) {
                    this.resolvedProperty.toArray(e, t);
                  },
                },
                {
                  key: "_setValue_direct",
                  value: function (e, t) {
                    this.targetObject[this.propertyName] = e[t];
                  },
                },
                {
                  key: "_setValue_direct_setNeedsUpdate",
                  value: function (e, t) {
                    (this.targetObject[this.propertyName] = e[t]),
                      (this.targetObject.needsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_direct_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    (this.targetObject[this.propertyName] = e[t]),
                      (this.targetObject.matrixWorldNeedsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_array",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, a = n.length;
                      r !== a;
                      ++r
                    )
                      n[r] = e[t++];
                  },
                },
                {
                  key: "_setValue_array_setNeedsUpdate",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, a = n.length;
                      r !== a;
                      ++r
                    )
                      n[r] = e[t++];
                    this.targetObject.needsUpdate = !0;
                  },
                },
                {
                  key: "_setValue_array_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    for (
                      var n = this.resolvedProperty, r = 0, a = n.length;
                      r !== a;
                      ++r
                    )
                      n[r] = e[t++];
                    this.targetObject.matrixWorldNeedsUpdate = !0;
                  },
                },
                {
                  key: "_setValue_arrayElement",
                  value: function (e, t) {
                    this.resolvedProperty[this.propertyIndex] = e[t];
                  },
                },
                {
                  key: "_setValue_arrayElement_setNeedsUpdate",
                  value: function (e, t) {
                    (this.resolvedProperty[this.propertyIndex] = e[t]),
                      (this.targetObject.needsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_arrayElement_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    (this.resolvedProperty[this.propertyIndex] = e[t]),
                      (this.targetObject.matrixWorldNeedsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_fromArray",
                  value: function (e, t) {
                    this.resolvedProperty.fromArray(e, t);
                  },
                },
                {
                  key: "_setValue_fromArray_setNeedsUpdate",
                  value: function (e, t) {
                    this.resolvedProperty.fromArray(e, t),
                      (this.targetObject.needsUpdate = !0);
                  },
                },
                {
                  key: "_setValue_fromArray_setMatrixWorldNeedsUpdate",
                  value: function (e, t) {
                    this.resolvedProperty.fromArray(e, t),
                      (this.targetObject.matrixWorldNeedsUpdate = !0);
                  },
                },
                {
                  key: "_getValue_unbound",
                  value: function (e, t) {
                    this.bind(), this.getValue(e, t);
                  },
                },
                {
                  key: "_setValue_unbound",
                  value: function (e, t) {
                    this.bind(), this.setValue(e, t);
                  },
                },
                {
                  key: "bind",
                  value: function () {
                    var t = this.node,
                      n = this.parsedPath,
                      r = n.objectName,
                      a = n.propertyName,
                      i = n.propertyIndex;
                    if (
                      (t ||
                        ((t = e.findNode(this.rootNode, n.nodeName)),
                        (this.node = t)),
                      (this.getValue = this._getValue_unavailable),
                      (this.setValue = this._setValue_unavailable),
                      t)
                    ) {
                      if (r) {
                        var o = n.objectIndex;
                        switch (r) {
                          case "materials":
                            if (!t.material)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
                                this
                              );
                            if (!t.material.materials)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",
                                this
                              );
                            t = t.material.materials;
                            break;
                          case "bones":
                            if (!t.skeleton)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",
                                this
                              );
                            t = t.skeleton.bones;
                            for (var s = 0; s < t.length; s++)
                              if (t[s].name === o) {
                                o = s;
                                break;
                              }
                            break;
                          case "map":
                            if ("map" in t) {
                              t = t.map;
                              break;
                            }
                            if (!t.material)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
                                this
                              );
                            if (!t.material.map)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",
                                this
                              );
                            t = t.material.map;
                            break;
                          default:
                            if (void 0 === t[r])
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to objectName of node undefined.",
                                this
                              );
                            t = t[r];
                        }
                        if (void 0 !== o) {
                          if (void 0 === t[o])
                            return void console.error(
                              "THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",
                              this,
                              t
                            );
                          t = t[o];
                        }
                      }
                      var l = t[a];
                      if (void 0 !== l) {
                        var u = this.Versioning.None;
                        (this.targetObject = t),
                          void 0 !== t.needsUpdate
                            ? (u = this.Versioning.NeedsUpdate)
                            : void 0 !== t.matrixWorldNeedsUpdate &&
                              (u = this.Versioning.MatrixWorldNeedsUpdate);
                        var c = this.BindingType.Direct;
                        if (void 0 !== i) {
                          if ("morphTargetInfluences" === a) {
                            if (!t.geometry)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",
                                this
                              );
                            if (!t.geometry.morphAttributes)
                              return void console.error(
                                "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",
                                this
                              );
                            void 0 !== t.morphTargetDictionary[i] &&
                              (i = t.morphTargetDictionary[i]);
                          }
                          (c = this.BindingType.ArrayElement),
                            (this.resolvedProperty = l),
                            (this.propertyIndex = i);
                        } else
                          void 0 !== l.fromArray && void 0 !== l.toArray
                            ? ((c = this.BindingType.HasFromToArray),
                              (this.resolvedProperty = l))
                            : Array.isArray(l)
                            ? ((c = this.BindingType.EntireArray),
                              (this.resolvedProperty = l))
                            : (this.propertyName = a);
                        (this.getValue = this.GetterByBindingType[c]),
                          (this.setValue =
                            this.SetterByBindingTypeAndVersioning[c][u]);
                      } else {
                        var f = n.nodeName;
                        console.error(
                          "THREE.PropertyBinding: Trying to update property for track: " +
                            f +
                            "." +
                            a +
                            " but it wasn't found.",
                          t
                        );
                      }
                    } else
                      console.warn(
                        "THREE.PropertyBinding: No target node found for track: " +
                          this.path +
                          "."
                      );
                  },
                },
                {
                  key: "unbind",
                  value: function () {
                    (this.node = null),
                      (this.getValue = this._getValue_unbound),
                      (this.setValue = this._setValue_unbound);
                  },
                },
              ],
              [
                {
                  key: "create",
                  value: function (t, n, r) {
                    return t && t.isAnimationObjectGroup
                      ? new e.Composite(t, n, r)
                      : new e(t, n, r);
                  },
                },
                {
                  key: "sanitizeNodeName",
                  value: function (e) {
                    return e.replace(/\s/g, "_").replace(fs, "");
                  },
                },
                {
                  key: "parseTrackName",
                  value: function (e) {
                    var t = ps.exec(e);
                    if (null === t)
                      throw new Error(
                        "PropertyBinding: Cannot parse trackName: " + e
                      );
                    var n = {
                        nodeName: t[2],
                        objectName: t[3],
                        objectIndex: t[4],
                        propertyName: t[5],
                        propertyIndex: t[6],
                      },
                      r = n.nodeName && n.nodeName.lastIndexOf(".");
                    if (void 0 !== r && -1 !== r) {
                      var a = n.nodeName.substring(r + 1);
                      -1 !== vs.indexOf(a) &&
                        ((n.nodeName = n.nodeName.substring(0, r)),
                        (n.objectName = a));
                    }
                    if (null === n.propertyName || 0 === n.propertyName.length)
                      throw new Error(
                        "PropertyBinding: can not parse propertyName from trackName: " +
                          e
                      );
                    return n;
                  },
                },
                {
                  key: "findNode",
                  value: function (e, t) {
                    if (
                      void 0 === t ||
                      "" === t ||
                      "." === t ||
                      -1 === t ||
                      t === e.name ||
                      t === e.uuid
                    )
                      return e;
                    if (e.skeleton) {
                      var n = e.skeleton.getBoneByName(t);
                      if (void 0 !== n) return n;
                    }
                    if (e.children) {
                      var r = (function e(n) {
                        for (var r = 0; r < n.length; r++) {
                          var a = n[r];
                          if (a.name === t || a.uuid === t) return a;
                          var i = e(a.children);
                          if (i) return i;
                        }
                        return null;
                      })(e.children);
                      if (r) return r;
                    }
                    return null;
                  },
                },
              ]
            ),
            e
          );
        })();
      (gs.Composite = ms),
        (gs.prototype.BindingType = {
          Direct: 0,
          EntireArray: 1,
          ArrayElement: 2,
          HasFromToArray: 3,
        }),
        (gs.prototype.Versioning = {
          None: 0,
          NeedsUpdate: 1,
          MatrixWorldNeedsUpdate: 2,
        }),
        (gs.prototype.GetterByBindingType = [
          gs.prototype._getValue_direct,
          gs.prototype._getValue_array,
          gs.prototype._getValue_arrayElement,
          gs.prototype._getValue_toArray,
        ]),
        (gs.prototype.SetterByBindingTypeAndVersioning = [
          [
            gs.prototype._setValue_direct,
            gs.prototype._setValue_direct_setNeedsUpdate,
            gs.prototype._setValue_direct_setMatrixWorldNeedsUpdate,
          ],
          [
            gs.prototype._setValue_array,
            gs.prototype._setValue_array_setNeedsUpdate,
            gs.prototype._setValue_array_setMatrixWorldNeedsUpdate,
          ],
          [
            gs.prototype._setValue_arrayElement,
            gs.prototype._setValue_arrayElement_setNeedsUpdate,
            gs.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,
          ],
          [
            gs.prototype._setValue_fromArray,
            gs.prototype._setValue_fromArray_setNeedsUpdate,
            gs.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,
          ],
        ]);
      new Float32Array(1);
      function ys(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var r = Object.getOwnPropertySymbols(e);
          t &&
            (r = r.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            n.push.apply(n, r);
        }
        return n;
      }
      function _s(e) {
        for (var t = 1; t < arguments.length; t++) {
          var n = null != arguments[t] ? arguments[t] : {};
          t % 2
            ? ys(Object(n), !0).forEach(function (t) {
                S(e, t, n[t]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
            : ys(Object(n)).forEach(function (t) {
                Object.defineProperty(
                  e,
                  t,
                  Object.getOwnPropertyDescriptor(n, t)
                );
              });
        }
        return e;
      }
      function bs() {
        var e = Object.create(null);
        function t(r, a) {
          var i = r.id,
            o = r.name,
            s = r.dependencies;
          void 0 === s && (s = []);
          var l = r.init;
          void 0 === l && (l = function () {});
          var u = r.getTransferables;
          if ((void 0 === u && (u = null), !e[i]))
            try {
              (s = s.map(function (n) {
                return (
                  n &&
                    n.isWorkerModule &&
                    (t(n, function (e) {
                      if (e instanceof Error) throw e;
                    }),
                    (n = e[n.id].value)),
                  n
                );
              })),
                (l = n("<" + o + ">.init", l)),
                u && (u = n("<" + o + ">.getTransferables", u));
              var c = null;
              "function" === typeof l
                ? (c = l.apply(void 0, s))
                : console.error(
                    "worker module init function failed to rehydrate"
                  ),
                (e[i] = { id: i, value: c, getTransferables: u }),
                a(c);
            } catch (f) {
              (f && f.noLog) || console.error(f), a(f);
            }
        }
        function n(e, t) {
          var n = void 0;
          self.troikaDefine = function (e) {
            return (n = e);
          };
          var r = URL.createObjectURL(
            new Blob(
              [
                "/** " +
                  e.replace(/\*/g, "") +
                  " **/\n\ntroikaDefine(\n" +
                  t +
                  "\n)",
              ],
              { type: "application/javascript" }
            )
          );
          try {
            importScripts(r);
          } catch (a) {
            console.error(a);
          }
          return URL.revokeObjectURL(r), delete self.troikaDefine, n;
        }
        self.addEventListener("message", function (n) {
          var r = n.data,
            a = r.messageId,
            i = r.action,
            o = r.data;
          try {
            "registerModule" === i &&
              t(o, function (e) {
                e instanceof Error
                  ? postMessage({ messageId: a, success: !1, error: e.message })
                  : postMessage({
                      messageId: a,
                      success: !0,
                      result: { isCallable: "function" === typeof e },
                    });
              }),
              "callModule" === i &&
                (function (t, n) {
                  var r,
                    a = t.id,
                    i = t.args;
                  (e[a] && "function" === typeof e[a].value) ||
                    n(
                      new Error(
                        "Worker module " +
                          a +
                          ": not found or its 'init' did not return a function"
                      )
                    );
                  try {
                    var o = (r = e[a]).value.apply(r, i);
                    o && "function" === typeof o.then
                      ? o.then(s, function (e) {
                          return n(e instanceof Error ? e : new Error("" + e));
                        })
                      : s(o);
                  } catch (l) {
                    n(l);
                  }
                  function s(t) {
                    try {
                      var r = e[a].getTransferables && e[a].getTransferables(t);
                      (r && Array.isArray(r) && r.length) || (r = void 0),
                        n(t, r);
                    } catch (l) {
                      console.error(l), n(l);
                    }
                  }
                })(o, function (e, t) {
                  e instanceof Error
                    ? postMessage({
                        messageId: a,
                        success: !1,
                        error: e.message,
                      })
                    : postMessage(
                        { messageId: a, success: !0, result: e },
                        t || void 0
                      );
                });
          } catch (s) {
            postMessage({ messageId: a, success: !1, error: s.stack });
          }
        });
      }
      "undefined" !== typeof __THREE_DEVTOOLS__ &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("register", { detail: { revision: A } })
        ),
        "undefined" !== typeof window &&
          (window.__THREE__
            ? console.warn(
                "WARNING: Multiple instances of Three.js being imported."
              )
            : (window.__THREE__ = A));
      var xs = function () {
          var e = !1;
          if (
            "undefined" !== typeof window &&
            "undefined" !== typeof window.document
          )
            try {
              new Worker(
                URL.createObjectURL(
                  new Blob([""], { type: "application/javascript" })
                )
              ).terminate(),
                (e = !0);
            } catch (t) {
              console.log(
                "Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [" +
                  t.message +
                  "]"
              );
            }
          return (
            (xs = function () {
              return e;
            }),
            e
          );
        },
        Ss = 0,
        Es = 0,
        ws = !1,
        Ts = Object.create(null),
        Ms = Object.create(null),
        As = Object.create(null);
      function Cs(e) {
        if ((!e || "function" !== typeof e.init) && !ws)
          throw new Error("requires `options.init` function");
        var t = e.dependencies,
          n = e.init,
          r = e.getTransferables,
          a = e.workerId;
        if (!xs())
          return (function (e) {
            var t = function e() {
              for (var t = [], n = arguments.length; n--; ) t[n] = arguments[n];
              return e._getInitResult().then(function (e) {
                if ("function" === typeof e) return e.apply(void 0, t);
                throw new Error(
                  "Worker module function was called but `init` did not return a callable function"
                );
              });
            };
            return (
              (t._getInitResult = function () {
                var n = e.dependencies,
                  r = e.init;
                n = Array.isArray(n)
                  ? n.map(function (e) {
                      return e && e._getInitResult ? e._getInitResult() : e;
                    })
                  : [];
                var a = Promise.all(n).then(function (e) {
                  return r.apply(null, e);
                });
                return (
                  (t._getInitResult = function () {
                    return a;
                  }),
                  a
                );
              }),
              t
            );
          })(e);
        null == a && (a = "#default");
        var i = "workerModule" + ++Ss,
          o = e.name || i,
          s = null;
        function l() {
          for (var e = [], t = arguments.length; t--; ) e[t] = arguments[t];
          if (!s) {
            s = Rs(a, "registerModule", l.workerModuleData);
            (Ms[a] || (Ms[a] = new Set())).add(function e() {
              (s = null), Ms[a].delete(e);
            });
          }
          return s.then(function (t) {
            if (t.isCallable) return Rs(a, "callModule", { id: i, args: e });
            throw new Error(
              "Worker module function was called but `init` did not return a callable function"
            );
          });
        }
        return (
          (t =
            t &&
            t.map(function (e) {
              return (
                "function" !== typeof e ||
                  e.workerModuleData ||
                  ((ws = !0),
                  (e = Cs({
                    workerId: a,
                    name: "<" + o + "> function dependency: " + e.name,
                    init: "function(){return (\n" + ks(e) + "\n)}",
                  })),
                  (ws = !1)),
                e && e.workerModuleData && (e = e.workerModuleData),
                e
              );
            })),
          (l.workerModuleData = {
            isWorkerModule: !0,
            id: i,
            name: o,
            dependencies: t,
            init: ks(n),
            getTransferables: r && ks(r),
          }),
          l
        );
      }
      function ks(e) {
        var t = e.toString();
        return (
          !/^function/.test(t) && /^\w+\s*\(/.test(t) && (t = "function " + t),
          t
        );
      }
      function Rs(e, t, n) {
        return new Promise(function (r, a) {
          var i = ++Es;
          (As[i] = function (e) {
            e.success
              ? r(e.result)
              : a(new Error("Error in worker " + t + " call: " + e.error));
          }),
            (function (e) {
              var t = Ts[e];
              if (!t) {
                var n = ks(bs);
                (t = Ts[e] =
                  new Worker(
                    URL.createObjectURL(
                      new Blob(
                        [
                          "/** Worker Module Bootstrap: " +
                            e.replace(/\*/g, "") +
                            " **/\n\n;(" +
                            n +
                            ")()",
                        ],
                        { type: "application/javascript" }
                      )
                    )
                  )).onmessage = function (e) {
                  var t = e.data,
                    n = t.messageId,
                    r = As[n];
                  if (!r)
                    throw new Error(
                      "WorkerModule response with empty or unknown messageId"
                    );
                  delete As[n], r(t);
                };
              }
              return t;
            })(e).postMessage({ messageId: i, action: t, data: n });
        });
      }
      function Ps() {
        var e = (function (e) {
          function t(e, t, n, r, a, i, o, s) {
            var l = 1 - o;
            (s.x = l * l * e + 2 * l * o * n + o * o * a),
              (s.y = l * l * t + 2 * l * o * r + o * o * i);
          }
          function n(e, t, n, r, a, i, o, s, l, u) {
            var c = 1 - l;
            (u.x =
              c * c * c * e +
              3 * c * c * l * n +
              3 * c * l * l * a +
              l * l * l * o),
              (u.y =
                c * c * c * t +
                3 * c * c * l * r +
                3 * c * l * l * i +
                l * l * l * s);
          }
          function r(e, t) {
            for (
              var n, r, a, i, o, s = /([MLQCZ])([^MLQCZ]*)/g;
              (n = s.exec(e));

            ) {
              var l = n[2]
                .replace(/^\s*|\s*$/g, "")
                .split(/[,\s]+/)
                .map(function (e) {
                  return parseFloat(e);
                });
              switch (n[1]) {
                case "M":
                  (i = r = l[0]), (o = a = l[1]);
                  break;
                case "L":
                  (l[0] === i && l[1] === o) ||
                    t("L", i, o, (i = l[0]), (o = l[1]));
                  break;
                case "Q":
                  t("Q", i, o, (i = l[2]), (o = l[3]), l[0], l[1]);
                  break;
                case "C":
                  t("C", i, o, (i = l[4]), (o = l[5]), l[0], l[1], l[2], l[3]);
                  break;
                case "Z":
                  (i === r && o === a) || t("L", i, o, r, a);
              }
            }
          }
          function a(e, a, i) {
            void 0 === i && (i = 16);
            var o = { x: 0, y: 0 };
            r(e, function (e, r, s, l, u, c, f, d, h) {
              switch (e) {
                case "L":
                  a(r, s, l, u);
                  break;
                case "Q":
                  for (var p = r, v = s, m = 1; m < i; m++)
                    t(r, s, c, f, l, u, m / (i - 1), o),
                      a(p, v, o.x, o.y),
                      (p = o.x),
                      (v = o.y);
                  break;
                case "C":
                  for (var g = r, y = s, _ = 1; _ < i; _++)
                    n(r, s, c, f, d, h, l, u, _ / (i - 1), o),
                      a(g, y, o.x, o.y),
                      (g = o.x),
                      (y = o.y);
              }
            });
          }
          var i =
              "precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",
            o =
              "precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",
            s = new WeakMap(),
            l = {
              premultipliedAlpha: !1,
              preserveDrawingBuffer: !0,
              antialias: !1,
              depth: !1,
            };
          function u(e, t) {
            var n = e.getContext ? e.getContext("webgl", l) : e,
              r = s.get(n);
            if (!r) {
              var a = function (e) {
                  var t = c[e];
                  if (!t && !(t = c[e] = n.getExtension(e)))
                    throw new Error(e + " not supported");
                  return t;
                },
                i = function (e, t) {
                  var r = n.createShader(t);
                  return n.shaderSource(r, e), n.compileShader(r), r;
                },
                o = function () {
                  (c = {}), (f = {}), (d = {}), (h = -1), (p.length = 0);
                },
                u =
                  "undefined" !== typeof WebGL2RenderingContext &&
                  n instanceof WebGL2RenderingContext,
                c = {},
                f = {},
                d = {},
                h = -1,
                p = [];
              n.canvas.addEventListener(
                "webglcontextlost",
                function (e) {
                  o(), e.preventDefault();
                },
                !1
              ),
                s.set(
                  n,
                  (r = {
                    gl: n,
                    isWebGL2: u,
                    getExtension: a,
                    withProgram: function (e, t, r, o) {
                      if (!f[e]) {
                        var s = {},
                          l = {},
                          c = n.createProgram();
                        n.attachShader(c, i(t, n.VERTEX_SHADER)),
                          n.attachShader(c, i(r, n.FRAGMENT_SHADER)),
                          n.linkProgram(c),
                          (f[e] = {
                            program: c,
                            transaction: function (e) {
                              n.useProgram(c),
                                e({
                                  setUniform: function (e, t) {
                                    for (
                                      var r = [], a = arguments.length - 2;
                                      a-- > 0;

                                    )
                                      r[a] = arguments[a + 2];
                                    var i =
                                      l[t] ||
                                      (l[t] = n.getUniformLocation(c, t));
                                    n["uniform" + e].apply(n, [i].concat(r));
                                  },
                                  setAttribute: function (e, t, r, i, o) {
                                    var l = s[e];
                                    l ||
                                      (l = s[e] =
                                        {
                                          buf: n.createBuffer(),
                                          loc: n.getAttribLocation(c, e),
                                          data: null,
                                        }),
                                      n.bindBuffer(n.ARRAY_BUFFER, l.buf),
                                      n.vertexAttribPointer(
                                        l.loc,
                                        t,
                                        n.FLOAT,
                                        !1,
                                        0,
                                        0
                                      ),
                                      n.enableVertexAttribArray(l.loc),
                                      u
                                        ? n.vertexAttribDivisor(l.loc, i)
                                        : a(
                                            "ANGLE_instanced_arrays"
                                          ).vertexAttribDivisorANGLE(l.loc, i),
                                      o !== l.data &&
                                        (n.bufferData(n.ARRAY_BUFFER, o, r),
                                        (l.data = o));
                                  },
                                });
                            },
                          });
                      }
                      f[e].transaction(o);
                    },
                    withTexture: function (e, t) {
                      h++;
                      try {
                        n.activeTexture(n.TEXTURE0 + h);
                        var r = d[e];
                        r ||
                          ((r = d[e] = n.createTexture()),
                          n.bindTexture(n.TEXTURE_2D, r),
                          n.texParameteri(
                            n.TEXTURE_2D,
                            n.TEXTURE_MIN_FILTER,
                            n.NEAREST
                          ),
                          n.texParameteri(
                            n.TEXTURE_2D,
                            n.TEXTURE_MAG_FILTER,
                            n.NEAREST
                          )),
                          n.bindTexture(n.TEXTURE_2D, r),
                          t(r, h);
                      } finally {
                        h--;
                      }
                    },
                    withTextureFramebuffer: function (e, t, r) {
                      var a = n.createFramebuffer();
                      p.push(a),
                        n.bindFramebuffer(n.FRAMEBUFFER, a),
                        n.activeTexture(n.TEXTURE0 + t),
                        n.bindTexture(n.TEXTURE_2D, e),
                        n.framebufferTexture2D(
                          n.FRAMEBUFFER,
                          n.COLOR_ATTACHMENT0,
                          n.TEXTURE_2D,
                          e,
                          0
                        );
                      try {
                        r(a);
                      } finally {
                        n.deleteFramebuffer(a),
                          n.bindFramebuffer(
                            n.FRAMEBUFFER,
                            p[--p.length - 1] || null
                          );
                      }
                    },
                    handleContextLoss: o,
                  })
                );
            }
            t(r);
          }
          function c(e, t, n, r, a, s, l, c) {
            void 0 === l && (l = 15),
              void 0 === c && (c = null),
              u(e, function (e) {
                var u = e.gl,
                  f = e.withProgram;
                (0, e.withTexture)("copy", function (e, d) {
                  u.texImage2D(
                    u.TEXTURE_2D,
                    0,
                    u.RGBA,
                    a,
                    s,
                    0,
                    u.RGBA,
                    u.UNSIGNED_BYTE,
                    t
                  ),
                    f("copy", i, o, function (e) {
                      var t = e.setUniform;
                      (0, e.setAttribute)(
                        "aUV",
                        2,
                        u.STATIC_DRAW,
                        0,
                        new Float32Array([0, 0, 2, 0, 0, 2])
                      ),
                        t("1i", "image", d),
                        u.bindFramebuffer(u.FRAMEBUFFER, c || null),
                        u.disable(u.BLEND),
                        u.colorMask(8 & l, 4 & l, 2 & l, 1 & l),
                        u.viewport(n, r, a, s),
                        u.scissor(n, r, a, s),
                        u.drawArrays(u.TRIANGLES, 0, 3);
                    });
                });
              });
          }
          var f = Object.freeze({
            __proto__: null,
            withWebGLContext: u,
            renderImageData: c,
            resizeWebGLCanvasWithoutClearing: function (e, t, n) {
              var r = e.width,
                a = e.height;
              u(e, function (i) {
                var o = i.gl,
                  s = new Uint8Array(r * a * 4);
                o.readPixels(0, 0, r, a, o.RGBA, o.UNSIGNED_BYTE, s),
                  (e.width = t),
                  (e.height = n),
                  c(o, s, 0, 0, r, a);
              });
            },
          });
          function d(e, t, n, r, i, o) {
            void 0 === o && (o = 1);
            var s = new Uint8Array(e * t),
              l = r[2] - r[0],
              u = r[3] - r[1],
              c = [];
            a(n, function (e, t, n, r) {
              c.push({
                x1: e,
                y1: t,
                x2: n,
                y2: r,
                minX: Math.min(e, n),
                minY: Math.min(t, r),
                maxX: Math.max(e, n),
                maxY: Math.max(t, r),
              });
            }),
              c.sort(function (e, t) {
                return e.maxX - t.maxX;
              });
            for (var f = 0; f < e; f++)
              for (var d = 0; d < t; d++) {
                var h = m(
                    r[0] + (l * (f + 0.5)) / e,
                    r[1] + (u * (d + 0.5)) / t
                  ),
                  p = Math.pow(1 - Math.abs(h) / i, o) / 2;
                h < 0 && (p = 1 - p),
                  (p = Math.max(0, Math.min(255, Math.round(255 * p)))),
                  (s[d * e + f] = p);
              }
            return s;
            function m(e, t) {
              for (var n = 1 / 0, r = 1 / 0, a = c.length; a--; ) {
                var i = c[a];
                if (i.maxX + r <= e) break;
                if (e + r > i.minX && t - r < i.maxY && t + r > i.minY) {
                  var o = v(e, t, i.x1, i.y1, i.x2, i.y2);
                  o < n && ((n = o), (r = Math.sqrt(n)));
                }
              }
              return (
                (function (e, t) {
                  for (var n = 0, r = c.length; r--; ) {
                    var a = c[r];
                    if (a.maxX <= e) break;
                    a.y1 > t !== a.y2 > t &&
                      e < ((a.x2 - a.x1) * (t - a.y1)) / (a.y2 - a.y1) + a.x1 &&
                      (n += a.y1 < a.y2 ? 1 : -1);
                  }
                  return 0 !== n;
                })(e, t) && (r = -r),
                r
              );
            }
          }
          function h(e, t, n, r, a, i, o, s, l, u) {
            void 0 === i && (i = 1),
              void 0 === s && (s = 0),
              void 0 === l && (l = 0),
              void 0 === u && (u = 0),
              p(e, t, n, r, a, i, o, null, s, l, u);
          }
          function p(e, t, n, r, a, i, o, s, l, u, f) {
            void 0 === i && (i = 1),
              void 0 === l && (l = 0),
              void 0 === u && (u = 0),
              void 0 === f && (f = 0);
            for (
              var h = d(e, t, n, r, a, i),
                p = new Uint8Array(4 * h.length),
                v = 0;
              v < h.length;
              v++
            )
              p[4 * v + f] = h[v];
            c(o, p, l, u, e, t, 1 << (3 - f), s);
          }
          function v(e, t, n, r, a, i) {
            var o = a - n,
              s = i - r,
              l = o * o + s * s,
              u = l
                ? Math.max(0, Math.min(1, ((e - n) * o + (t - r) * s) / l))
                : 0,
              c = e - (n + u * o),
              f = t - (r + u * s);
            return c * c + f * f;
          }
          var m = Object.freeze({
              __proto__: null,
              generate: d,
              generateIntoCanvas: h,
              generateIntoFramebuffer: p,
            }),
            g =
              "precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",
            y =
              "precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",
            _ =
              "precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",
            b = new Float32Array([0, 0, 2, 0, 0, 2]),
            x = null,
            S = !1,
            E = {},
            w = new WeakMap();
          function T(e) {
            if (!S && !k(e)) throw new Error("WebGL generation not supported");
          }
          function M(e, t, n, r, a, i, o) {
            if (
              (void 0 === i && (i = 1),
              void 0 === o && (o = null),
              !o && !(o = x))
            ) {
              var s =
                "function" === typeof OffscreenCanvas
                  ? new OffscreenCanvas(1, 1)
                  : "undefined" !== typeof document
                  ? document.createElement("canvas")
                  : null;
              if (!s)
                throw new Error("OffscreenCanvas or DOM canvas not supported");
              o = x = s.getContext("webgl", { depth: !1 });
            }
            T(o);
            var l = new Uint8Array(e * t * 4);
            u(o, function (o) {
              var s = o.gl,
                u = o.withTexture,
                c = o.withTextureFramebuffer;
              u("readable", function (o, u) {
                s.texImage2D(
                  s.TEXTURE_2D,
                  0,
                  s.RGBA,
                  e,
                  t,
                  0,
                  s.RGBA,
                  s.UNSIGNED_BYTE,
                  null
                ),
                  c(o, u, function (o) {
                    C(e, t, n, r, a, i, s, o, 0, 0, 0),
                      s.readPixels(0, 0, e, t, s.RGBA, s.UNSIGNED_BYTE, l);
                  });
              });
            });
            for (
              var c = new Uint8Array(e * t), f = 0, d = 0;
              f < l.length;
              f += 4
            )
              c[d++] = l[f];
            return c;
          }
          function A(e, t, n, r, a, i, o, s, l, u) {
            void 0 === i && (i = 1),
              void 0 === s && (s = 0),
              void 0 === l && (l = 0),
              void 0 === u && (u = 0),
              C(e, t, n, r, a, i, o, null, s, l, u);
          }
          function C(e, t, n, r, o, s, l, c, f, d, h) {
            void 0 === s && (s = 1),
              void 0 === f && (f = 0),
              void 0 === d && (d = 0),
              void 0 === h && (h = 0),
              T(l);
            var p = [];
            a(n, function (e, t, n, r) {
              p.push(e, t, n, r);
            }),
              (p = new Float32Array(p)),
              u(l, function (n) {
                var a = n.gl,
                  l = n.isWebGL2,
                  u = n.getExtension,
                  v = n.withProgram,
                  m = n.withTexture,
                  x = n.withTextureFramebuffer,
                  S = n.handleContextLoss;
                if (
                  (m("rawDistances", function (n, m) {
                    (e === n._lastWidth && t === n._lastHeight) ||
                      a.texImage2D(
                        a.TEXTURE_2D,
                        0,
                        a.RGBA,
                        (n._lastWidth = e),
                        (n._lastHeight = t),
                        0,
                        a.RGBA,
                        a.UNSIGNED_BYTE,
                        null
                      ),
                      v("main", g, y, function (i) {
                        var c = i.setAttribute,
                          f = i.setUniform,
                          d = !l && u("ANGLE_instanced_arrays"),
                          h = !l && u("EXT_blend_minmax");
                        c("aUV", 2, a.STATIC_DRAW, 0, b),
                          c("aLineSegment", 4, a.DYNAMIC_DRAW, 1, p),
                          f.apply(void 0, ["4f", "uGlyphBounds"].concat(r)),
                          f("1f", "uMaxDistance", o),
                          f("1f", "uExponent", s),
                          x(n, m, function (n) {
                            a.enable(a.BLEND),
                              a.colorMask(!0, !0, !0, !0),
                              a.viewport(0, 0, e, t),
                              a.scissor(0, 0, e, t),
                              a.blendFunc(a.ONE, a.ONE),
                              a.blendEquationSeparate(
                                a.FUNC_ADD,
                                l ? a.MAX : h.MAX_EXT
                              ),
                              a.clear(a.COLOR_BUFFER_BIT),
                              l
                                ? a.drawArraysInstanced(
                                    a.TRIANGLES,
                                    0,
                                    3,
                                    p.length / 4
                                  )
                                : d.drawArraysInstancedANGLE(
                                    a.TRIANGLES,
                                    0,
                                    3,
                                    p.length / 4
                                  );
                          });
                      }),
                      v("post", i, _, function (n) {
                        n.setAttribute("aUV", 2, a.STATIC_DRAW, 0, b),
                          n.setUniform("1i", "tex", m),
                          a.bindFramebuffer(a.FRAMEBUFFER, c),
                          a.disable(a.BLEND),
                          a.colorMask(0 === h, 1 === h, 2 === h, 3 === h),
                          a.viewport(f, d, e, t),
                          a.scissor(f, d, e, t),
                          a.drawArrays(a.TRIANGLES, 0, 3);
                      });
                  }),
                  a.isContextLost())
                )
                  throw (S(), new Error("webgl context lost"));
              });
          }
          function k(e) {
            var t = e && e !== x ? e.canvas || e : E,
              n = w.get(t);
            if (void 0 === n) {
              S = !0;
              var r = null;
              try {
                var a = [
                    97, 106, 97, 61, 99, 137, 118, 80, 80, 118, 137, 99, 61, 97,
                    106, 97,
                  ],
                  i = M(
                    4,
                    4,
                    "M8,8L16,8L24,24L16,24Z",
                    [0, 0, 32, 32],
                    24,
                    1,
                    e
                  );
                (n =
                  i &&
                  a.length === i.length &&
                  i.every(function (e, t) {
                    return e === a[t];
                  })),
                  n || ((r = "bad trial run results"), console.info(a, i));
              } catch (o) {
                (n = !1), (r = o.message);
              }
              r && console.warn("WebGL SDF generation not supported:", r),
                (S = !1),
                w.set(t, n);
            }
            return n;
          }
          var R = Object.freeze({
            __proto__: null,
            generate: M,
            generateIntoCanvas: A,
            generateIntoFramebuffer: C,
            isSupported: k,
          });
          return (
            (e.forEachPathCommand = r),
            (e.generate = function (e, t, n, r, a, i) {
              void 0 === a && (a = Math.max(r[2] - r[0], r[3] - r[1]) / 2),
                void 0 === i && (i = 1);
              try {
                return M.apply(R, arguments);
              } catch (o) {
                return (
                  console.info(
                    "WebGL SDF generation failed, falling back to JS",
                    o
                  ),
                  d.apply(m, arguments)
                );
              }
            }),
            (e.generateIntoCanvas = function (e, t, n, r, a, i, o, s, l, u) {
              void 0 === a && (a = Math.max(r[2] - r[0], r[3] - r[1]) / 2),
                void 0 === i && (i = 1),
                void 0 === s && (s = 0),
                void 0 === l && (l = 0),
                void 0 === u && (u = 0);
              try {
                return A.apply(R, arguments);
              } catch (c) {
                return (
                  console.info(
                    "WebGL SDF generation failed, falling back to JS",
                    c
                  ),
                  h.apply(m, arguments)
                );
              }
            }),
            (e.javascript = m),
            (e.pathToLineSegments = a),
            (e.webgl = R),
            (e.webglUtils = f),
            Object.defineProperty(e, "__esModule", { value: !0 }),
            e
          );
        })({});
        return e;
      }
      var Us = function () {
          var e = (function (e) {
            var t = {
                R: "13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",
                EN: "1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",
                ES: "17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",
                ET: "z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",
                AN: "16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",
                CS: "18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",
                B: "a,3,f+2,2v,690",
                S: "9,2,k",
                WS: "c,k,4f4,1vk+a,u,1j,335",
                ON: "x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",
                BN: "0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",
                NSM: "lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",
                AL: "16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",
                LRO: "6ct",
                RLO: "6cu",
                LRE: "6cq",
                RLE: "6cr",
                PDF: "6cs",
                LRI: "6ee",
                RLI: "6ef",
                FSI: "6eg",
                PDI: "6eh",
              },
              n = {},
              r = {};
            (n.L = 1),
              (r[1] = "L"),
              Object.keys(t).forEach(function (e, t) {
                (n[e] = 1 << (t + 1)), (r[n[e]] = e);
              }),
              Object.freeze(n);
            var a = n.LRI | n.RLI | n.FSI,
              i = n.L | n.R | n.AL,
              o = n.B | n.S | n.WS | n.ON | n.FSI | n.LRI | n.RLI | n.PDI,
              s = n.BN | n.RLE | n.LRE | n.RLO | n.LRO | n.PDF,
              l = n.S | n.WS | n.B | a | n.PDI | s,
              u = null;
            function c(e) {
              return (
                (function () {
                  if (!u) {
                    u = new Map();
                    var e = function (e) {
                      if (t.hasOwnProperty(e)) {
                        var r = 0;
                        t[e].split(",").forEach(function (t) {
                          var a = t.split("+"),
                            i = a[0],
                            o = a[1];
                          (i = parseInt(i, 36)),
                            (o = o ? parseInt(o, 36) : 0),
                            u.set((r += i), n[e]);
                          for (var s = 0; s < o; s++) u.set(++r, n[e]);
                        });
                      }
                    };
                    for (var r in t) e(r);
                  }
                })(),
                u.get(e.codePointAt(0)) || n.L
              );
            }
            var f,
              d,
              h,
              p = {
                pairs:
                  "14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",
                canonical:
                  "6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye",
              };
            function v(e, t) {
              var n,
                r = 0,
                a = new Map(),
                i = t && new Map();
              return (
                e.split(",").forEach(function e(o) {
                  if (-1 !== o.indexOf("+")) for (var s = +o; s--; ) e(n);
                  else {
                    n = o;
                    var l = o.split(">"),
                      u = l[0],
                      c = l[1];
                    (u = String.fromCodePoint((r += parseInt(u, 36)))),
                      (c = String.fromCodePoint((r += parseInt(c, 36)))),
                      a.set(u, c),
                      t && i.set(c, u);
                  }
                }),
                { map: a, reverseMap: i }
              );
            }
            function m() {
              if (!f) {
                var e = v(p.pairs, !0),
                  t = e.map,
                  n = e.reverseMap;
                (f = t), (d = n), (h = v(p.canonical, !1).map);
              }
            }
            function g(e) {
              return m(), f.get(e) || null;
            }
            function y(e) {
              return m(), d.get(e) || null;
            }
            function _(e) {
              return m(), h.get(e) || null;
            }
            var b = n.L,
              x = n.R,
              S = n.EN,
              E = n.ES,
              w = n.ET,
              T = n.AN,
              M = n.CS,
              A = n.B,
              C = n.S,
              k = n.ON,
              R = n.BN,
              P = n.NSM,
              U = n.AL,
              L = n.LRO,
              D = n.RLO,
              I = n.LRE,
              O = n.RLE,
              N = n.PDF,
              F = n.LRI,
              z = n.RLI,
              B = n.FSI,
              H = n.PDI;
            var G,
              V =
                "14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1";
            function W(e) {
              return (
                (function () {
                  if (!G) {
                    var e = v(V, !0),
                      t = e.map;
                    e.reverseMap.forEach(function (e, n) {
                      t.set(n, e);
                    }),
                      (G = t);
                  }
                })(),
                G.get(e) || null
              );
            }
            function j(e, t, n, r) {
              var a = e.length;
              (n = Math.max(0, null == n ? 0 : +n)),
                (r = Math.min(a - 1, null == r ? a - 1 : +r));
              var i = [];
              return (
                t.paragraphs.forEach(function (a) {
                  var o = Math.max(n, a.start),
                    s = Math.min(r, a.end);
                  if (o < s) {
                    for (
                      var u = t.levels.slice(o, s + 1), f = s;
                      f >= o && c(e[f]) & l;
                      f--
                    )
                      u[f] = a.level;
                    for (var d = a.level, h = 1 / 0, p = 0; p < u.length; p++) {
                      var v = u[p];
                      v > d && (d = v), v < h && (h = 1 | v);
                    }
                    for (var m = d; m >= h; m--)
                      for (var g = 0; g < u.length; g++)
                        if (u[g] >= m) {
                          for (var y = g; g + 1 < u.length && u[g + 1] >= m; )
                            g++;
                          g > y && i.push([y + o, g + o]);
                        }
                  }
                }),
                i
              );
            }
            function X(e, t, n, r) {
              for (var a = j(e, t, n, r), i = [], o = 0; o < e.length; o++)
                i[o] = o;
              return (
                a.forEach(function (e) {
                  for (
                    var t = e[0], n = e[1], r = i.slice(t, n + 1), a = r.length;
                    a--;

                  )
                    i[n - a] = r[a];
                }),
                i
              );
            }
            return (
              (e.closingToOpeningBracket = y),
              (e.getBidiCharType = c),
              (e.getBidiCharTypeName = function (e) {
                return r[c(e)];
              }),
              (e.getCanonicalBracket = _),
              (e.getEmbeddingLevels = function (e, t) {
                for (
                  var n = new Uint32Array(e.length), r = 0;
                  r < e.length;
                  r++
                )
                  n[r] = c(e[r]);
                var u = new Map();
                function f(e, t) {
                  var r = n[e];
                  (n[e] = t),
                    u.set(r, u.get(r) - 1),
                    r & o && u.set(o, u.get(o) - 1),
                    u.set(t, (u.get(t) || 0) + 1),
                    t & o && u.set(o, (u.get(o) || 0) + 1);
                }
                for (
                  var d = new Uint8Array(e.length),
                    h = new Map(),
                    p = [],
                    v = null,
                    m = 0;
                  m < e.length;
                  m++
                )
                  v ||
                    p.push(
                      (v = {
                        start: m,
                        end: e.length - 1,
                        level: "rtl" === t ? 1 : "ltr" === t ? 0 : Ht(m, !1),
                      })
                    ),
                    n[m] & A && ((v.end = m), (v = null));
                for (
                  var G = O | I | D | L | a | H | N | A,
                    V = function (e) {
                      return e + (1 & e ? 1 : 2);
                    },
                    W = function (e) {
                      return e + (1 & e ? 2 : 1);
                    },
                    j = 0;
                  j < p.length;
                  j++
                ) {
                  var X = [
                      { _level: (v = p[j]).level, _override: 0, _isolate: 0 },
                    ],
                    q = void 0,
                    Y = 0,
                    K = 0,
                    $ = 0;
                  u.clear();
                  for (var Z = v.start; Z <= v.end; Z++) {
                    var J = n[Z];
                    if (
                      ((q = X[X.length - 1]),
                      u.set(J, (u.get(J) || 0) + 1),
                      J & o && u.set(o, (u.get(o) || 0) + 1),
                      J & G)
                    )
                      if (J & (O | I)) {
                        d[Z] = q._level;
                        var Q = (J === O ? W : V)(q._level);
                        Q <= 125 && !Y && !K
                          ? X.push({ _level: Q, _override: 0, _isolate: 0 })
                          : Y || K++;
                      } else if (J & (D | L)) {
                        d[Z] = q._level;
                        var ee = (J === D ? W : V)(q._level);
                        ee <= 125 && !Y && !K
                          ? X.push({
                              _level: ee,
                              _override: J & D ? x : b,
                              _isolate: 0,
                            })
                          : Y || K++;
                      } else if (J & a) {
                        J & B && (J = 1 === Ht(Z + 1, !0) ? z : F),
                          (d[Z] = q._level),
                          q._override && f(Z, q._override);
                        var te = (J === z ? W : V)(q._level);
                        te <= 125 && 0 === Y && 0 === K
                          ? ($++,
                            X.push({
                              _level: te,
                              _override: 0,
                              _isolate: 1,
                              _isolInitIndex: Z,
                            }))
                          : Y++;
                      } else if (J & H) {
                        if (Y > 0) Y--;
                        else if ($ > 0) {
                          for (K = 0; !X[X.length - 1]._isolate; ) X.pop();
                          var ne = X[X.length - 1]._isolInitIndex;
                          null != ne && (h.set(ne, Z), h.set(Z, ne)),
                            X.pop(),
                            $--;
                        }
                        (q = X[X.length - 1]),
                          (d[Z] = q._level),
                          q._override && f(Z, q._override);
                      } else
                        J & N
                          ? (0 === Y &&
                              (K > 0
                                ? K--
                                : !q._isolate &&
                                  X.length > 1 &&
                                  (X.pop(), (q = X[X.length - 1]))),
                            (d[Z] = q._level))
                          : J & A && (d[Z] = v.level);
                    else
                      (d[Z] = q._level),
                        q._override && J !== R && f(Z, q._override);
                  }
                  for (
                    var re = [], ae = null, ie = v.start;
                    ie <= v.end;
                    ie++
                  ) {
                    var oe = n[ie];
                    if (!(oe & s)) {
                      var se = d[ie],
                        le = oe & a,
                        ue = oe === H;
                      ae && se === ae._level
                        ? ((ae._end = ie), (ae._endsWithIsolInit = le))
                        : re.push(
                            (ae = {
                              _start: ie,
                              _end: ie,
                              _level: se,
                              _startsWithPDI: ue,
                              _endsWithIsolInit: le,
                            })
                          );
                    }
                  }
                  for (var ce = [], fe = 0; fe < re.length; fe++) {
                    var de = re[fe];
                    if (
                      !de._startsWithPDI ||
                      (de._startsWithPDI && !h.has(de._start))
                    ) {
                      for (
                        var he = [(ae = de)], pe = void 0;
                        ae &&
                        ae._endsWithIsolInit &&
                        null != (pe = h.get(ae._end));

                      )
                        for (var ve = fe + 1; ve < re.length; ve++)
                          if (re[ve]._start === pe) {
                            he.push((ae = re[ve]));
                            break;
                          }
                      for (var me = [], ge = 0; ge < he.length; ge++)
                        for (
                          var ye = he[ge], _e = ye._start;
                          _e <= ye._end;
                          _e++
                        )
                          me.push(_e);
                      for (
                        var be = d[me[0]], xe = v.level, Se = me[0] - 1;
                        Se >= 0;
                        Se--
                      )
                        if (!(n[Se] & s)) {
                          xe = d[Se];
                          break;
                        }
                      var Ee = me[me.length - 1],
                        we = d[Ee],
                        Te = v.level;
                      if (!(n[Ee] & a))
                        for (var Me = Ee + 1; Me <= v.end; Me++)
                          if (!(n[Me] & s)) {
                            Te = d[Me];
                            break;
                          }
                      ce.push({
                        _seqIndices: me,
                        _sosType: Math.max(xe, be) % 2 ? x : b,
                        _eosType: Math.max(Te, we) % 2 ? x : b,
                      });
                    }
                  }
                  for (var Ae = 0; Ae < ce.length; Ae++) {
                    var Ce = ce[Ae],
                      ke = Ce._seqIndices,
                      Re = Ce._sosType,
                      Pe = Ce._eosType,
                      Ue = 1 & d[ke[0]] ? x : b;
                    if (u.get(P))
                      for (var Le = 0; Le < ke.length; Le++) {
                        var De = ke[Le];
                        if (n[De] & P) {
                          for (var Ie = Re, Oe = Le - 1; Oe >= 0; Oe--)
                            if (!(n[ke[Oe]] & s)) {
                              Ie = n[ke[Oe]];
                              break;
                            }
                          f(De, Ie & (a | H) ? k : Ie);
                        }
                      }
                    if (u.get(S))
                      for (var Ne = 0; Ne < ke.length; Ne++) {
                        var Fe = ke[Ne];
                        if (n[Fe] & S)
                          for (var ze = Ne - 1; ze >= -1; ze--) {
                            var Be = -1 === ze ? Re : n[ke[ze]];
                            if (Be & i) {
                              Be === U && f(Fe, T);
                              break;
                            }
                          }
                      }
                    if (u.get(U))
                      for (var He = 0; He < ke.length; He++) {
                        var Ge = ke[He];
                        n[Ge] & U && f(Ge, x);
                      }
                    if (u.get(E) || u.get(M))
                      for (var Ve = 1; Ve < ke.length - 1; Ve++) {
                        var We = ke[Ve];
                        if (n[We] & (E | M)) {
                          for (
                            var je = 0, Xe = 0, qe = Ve - 1;
                            qe >= 0 && (je = n[ke[qe]]) & s;
                            qe--
                          );
                          for (
                            var Ye = Ve + 1;
                            Ye < ke.length && (Xe = n[ke[Ye]]) & s;
                            Ye++
                          );
                          je === Xe &&
                            (n[We] === E ? je === S : je & (S | T)) &&
                            f(We, je);
                        }
                      }
                    if (u.get(S))
                      for (var Ke = 0; Ke < ke.length; Ke++) {
                        var $e = ke[Ke];
                        if (n[$e] & S) {
                          for (
                            var Ze = Ke - 1;
                            Ze >= 0 && n[ke[Ze]] & (w | s);
                            Ze--
                          )
                            f(ke[Ze], S);
                          for (
                            Ke++;
                            Ke < ke.length && n[ke[Ke]] & (w | s | S);
                            Ke++
                          )
                            n[ke[Ke]] !== S && f(ke[Ke], S);
                        }
                      }
                    if (u.get(w) || u.get(E) || u.get(M))
                      for (var Je = 0; Je < ke.length; Je++) {
                        var Qe = ke[Je];
                        if (n[Qe] & (w | E | M)) {
                          f(Qe, k);
                          for (var et = Je - 1; et >= 0 && n[ke[et]] & s; et--)
                            f(ke[et], k);
                          for (
                            var tt = Je + 1;
                            tt < ke.length && n[ke[tt]] & s;
                            tt++
                          )
                            f(ke[tt], k);
                        }
                      }
                    if (u.get(S))
                      for (var nt = 0, rt = Re; nt < ke.length; nt++) {
                        var at = ke[nt],
                          it = n[at];
                        it & S ? rt === b && f(at, b) : it & i && (rt = it);
                      }
                    if (u.get(o)) {
                      for (
                        var ot = x | S | T,
                          st = ot | b,
                          lt = [],
                          ut = [],
                          ct = 0;
                        ct < ke.length;
                        ct++
                      )
                        if (n[ke[ct]] & o) {
                          var ft = e[ke[ct]],
                            dt = void 0;
                          if (null !== g(ft)) {
                            if (!(ut.length < 63)) break;
                            ut.push({ char: ft, seqIndex: ct });
                          } else if (null !== (dt = y(ft)))
                            for (var ht = ut.length - 1; ht >= 0; ht--) {
                              var pt = ut[ht].char;
                              if (
                                pt === dt ||
                                pt === y(_(ft)) ||
                                g(_(pt)) === ft
                              ) {
                                lt.push([ut[ht].seqIndex, ct]),
                                  (ut.length = ht);
                                break;
                              }
                            }
                        }
                      lt.sort(function (e, t) {
                        return e[0] - t[0];
                      });
                      for (var vt = 0; vt < lt.length; vt++) {
                        for (
                          var mt = lt[vt],
                            gt = mt[0],
                            yt = mt[1],
                            _t = !1,
                            bt = 0,
                            xt = gt + 1;
                          xt < yt;
                          xt++
                        ) {
                          var St = ke[xt];
                          if (n[St] & st) {
                            _t = !0;
                            var Et = n[St] & ot ? x : b;
                            if (Et === Ue) {
                              bt = Et;
                              break;
                            }
                          }
                        }
                        if (_t && !bt) {
                          bt = Re;
                          for (var wt = gt - 1; wt >= 0; wt--) {
                            var Tt = ke[wt];
                            if (n[Tt] & st) {
                              var Mt = n[Tt] & ot ? x : b;
                              bt = Mt !== Ue ? Mt : Ue;
                              break;
                            }
                          }
                        }
                        if (bt) {
                          if (((n[ke[gt]] = n[ke[yt]] = bt), bt !== Ue))
                            for (var At = gt + 1; At < ke.length; At++)
                              if (!(n[ke[At]] & s)) {
                                c(e[ke[At]]) & P && (n[ke[At]] = bt);
                                break;
                              }
                          if (bt !== Ue)
                            for (var Ct = yt + 1; Ct < ke.length; Ct++)
                              if (!(n[ke[Ct]] & s)) {
                                c(e[ke[Ct]]) & P && (n[ke[Ct]] = bt);
                                break;
                              }
                        }
                      }
                      for (var kt = 0; kt < ke.length; kt++)
                        if (n[ke[kt]] & o) {
                          for (
                            var Rt = kt, Pt = kt, Ut = Re, Lt = kt - 1;
                            Lt >= 0;
                            Lt--
                          ) {
                            if (!(n[ke[Lt]] & s)) {
                              Ut = n[ke[Lt]] & ot ? x : b;
                              break;
                            }
                            Rt = Lt;
                          }
                          for (var Dt = Pe, It = kt + 1; It < ke.length; It++) {
                            if (!(n[ke[It]] & (o | s))) {
                              Dt = n[ke[It]] & ot ? x : b;
                              break;
                            }
                            Pt = It;
                          }
                          for (var Ot = Rt; Ot <= Pt; Ot++)
                            n[ke[Ot]] = Ut === Dt ? Ut : Ue;
                          kt = Pt;
                        }
                    }
                  }
                  for (var Nt = v.start; Nt <= v.end; Nt++) {
                    var Ft = d[Nt],
                      zt = n[Nt];
                    if (
                      (1 & Ft
                        ? zt & (b | S | T) && d[Nt]++
                        : zt & x
                        ? d[Nt]++
                        : zt & (T | S) && (d[Nt] += 2),
                      zt & s && (d[Nt] = 0 === Nt ? v.level : d[Nt - 1]),
                      Nt === v.end || c(e[Nt]) & (C | A))
                    )
                      for (var Bt = Nt; Bt >= 0 && c(e[Bt]) & l; Bt--)
                        d[Bt] = v.level;
                  }
                }
                return { levels: d, paragraphs: p };
                function Ht(t, r) {
                  for (var i = t; i < e.length; i++) {
                    var o = n[i];
                    if (o & (x | U)) return 1;
                    if (o & (A | b) || (r && o === H)) return 0;
                    if (o & a) {
                      var s = Gt(i);
                      i = -1 === s ? e.length : s;
                    }
                  }
                  return 0;
                }
                function Gt(t) {
                  for (var r = 1, i = t + 1; i < e.length; i++) {
                    var o = n[i];
                    if (o & A) break;
                    if (o & H) {
                      if (0 === --r) return i;
                    } else o & a && r++;
                  }
                  return -1;
                }
              }),
              (e.getMirroredCharacter = W),
              (e.getMirroredCharactersMap = function (e, t, n, r) {
                var a = e.length;
                (n = Math.max(0, null == n ? 0 : +n)),
                  (r = Math.min(a - 1, null == r ? a - 1 : +r));
                for (var i = new Map(), o = n; o <= r; o++)
                  if (1 & t[o]) {
                    var s = W(e[o]);
                    null !== s && i.set(o, s);
                  }
                return i;
              }),
              (e.getReorderSegments = j),
              (e.getReorderedIndices = X),
              (e.getReorderedString = function (e, t, n, r) {
                var a = X(e, t, n, r),
                  i = [].concat(e);
                return (
                  a.forEach(function (n, r) {
                    i[r] = (1 & t.levels[n] ? W(e[n]) : null) || e[n];
                  }),
                  i.join("")
                );
              }),
              (e.openingToClosingBracket = g),
              Object.defineProperty(e, "__esModule", { value: !0 }),
              e
            );
          })({});
          return e;
        },
        Ls = /\bvoid\s+main\s*\(\s*\)\s*{/g;
      function Ds(e) {
        return e.replace(/^[ \t]*#include +<([\w\d./]+)>/gm, function (e, t) {
          var n = $r[t];
          return n ? Ds(n) : e;
        });
      }
      for (var Is = [], Os = 0; Os < 256; Os++)
        Is[Os] = (Os < 16 ? "0" : "") + Os.toString(16);
      var Ns =
          Object.assign ||
          function () {
            for (
              var e = arguments[0], t = 1, n = arguments.length;
              t < n;
              t++
            ) {
              var r = arguments[t];
              if (r)
                for (var a in r)
                  Object.prototype.hasOwnProperty.call(r, a) && (e[a] = r[a]);
            }
            return e;
          },
        Fs = Date.now(),
        zs = new WeakMap(),
        Bs = new Map(),
        Hs = 1e10;
      function Gs(e, t) {
        var n = (function (e) {
            var t = JSON.stringify(e, Ws),
              n = Xs.get(t);
            null == n && Xs.set(t, (n = ++js));
            return n;
          })(t),
          r = zs.get(e);
        if ((r || zs.set(e, (r = Object.create(null))), r[n]))
          return new r[n]();
        var a = "_onBeforeCompile".concat(n),
          i = function (r, i) {
            e.onBeforeCompile.call(this, r, i);
            var o =
                this.customProgramCacheKey() +
                "|" +
                r.vertexShader +
                "|" +
                r.fragmentShader,
              s = Bs[o];
            if (!s) {
              var l = (function (e, t, n, r) {
                var a = t.vertexShader,
                  i = t.fragmentShader,
                  o = n.vertexDefs,
                  s = n.vertexMainIntro,
                  l = n.vertexMainOutro,
                  u = n.vertexTransform,
                  c = n.fragmentDefs,
                  f = n.fragmentMainIntro,
                  d = n.fragmentMainOutro,
                  h = n.fragmentColorTransform,
                  p = n.customRewriter,
                  v = n.timeUniform;
                (o = o || ""),
                  (s = s || ""),
                  (l = l || ""),
                  (c = c || ""),
                  (f = f || ""),
                  (d = d || ""),
                  (u || p) && (a = Ds(a));
                (h || p) &&
                  (i = Ds(
                    (i = i.replace(
                      /^[ \t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,
                      "\n//!BEGIN_POST_CHUNK $1\n$&\n//!END_POST_CHUNK\n"
                    ))
                  ));
                if (p) {
                  var m = p({ vertexShader: a, fragmentShader: i });
                  (a = m.vertexShader), (i = m.fragmentShader);
                }
                if (h) {
                  var g = [];
                  (i = i.replace(
                    /^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,
                    function (e) {
                      return g.push(e), "";
                    }
                  )),
                    (d = ""
                      .concat(h, "\n")
                      .concat(g.join("\n"), "\n")
                      .concat(d));
                }
                if (v) {
                  var y = "\nuniform float ".concat(v, ";\n");
                  (o = y + o), (c = y + c);
                }
                u &&
                  ((a = "vec3 troika_position_"
                    .concat(r, ";\nvec3 troika_normal_")
                    .concat(r, ";\nvec2 troika_uv_")
                    .concat(r, ";\n")
                    .concat(a, "\n")),
                  (o = ""
                    .concat(o, "\nvoid troikaVertexTransform")
                    .concat(
                      r,
                      "(inout vec3 position, inout vec3 normal, inout vec2 uv) {\n  "
                    )
                    .concat(u, "\n}\n")),
                  (s = "\ntroika_position_"
                    .concat(r, " = vec3(position);\ntroika_normal_")
                    .concat(r, " = vec3(normal);\ntroika_uv_")
                    .concat(r, " = vec2(uv);\ntroikaVertexTransform")
                    .concat(r, "(troika_position_")
                    .concat(r, ", troika_normal_")
                    .concat(r, ", troika_uv_")
                    .concat(r, ");\n")
                    .concat(s, "\n")),
                  (a = a.replace(
                    /\b(position|normal|uv)\b/g,
                    function (e, t, n, a) {
                      return /\battribute\s+vec[23]\s+$/.test(a.substr(0, n))
                        ? t
                        : "troika_".concat(t, "_").concat(r);
                    }
                  )),
                  (e.map && e.map.channel > 0) ||
                    (a = a.replace(/\bMAP_UV\b/g, "troika_uv_".concat(r))));
                return (
                  (a = Vs(a, r, o, s, l)),
                  (i = Vs(i, r, c, f, d)),
                  { vertexShader: a, fragmentShader: i }
                );
              })(this, r, t, n);
              s = Bs[o] = l;
            }
            (r.vertexShader = s.vertexShader),
              (r.fragmentShader = s.fragmentShader),
              Ns(r.uniforms, this.uniforms),
              t.timeUniform &&
                (r.uniforms[t.timeUniform] = {
                  get value() {
                    return Date.now() - Fs;
                  },
                }),
              this[a] && this[a](r);
          },
          o = function () {
            return s(t.chained ? e : e.clone());
          },
          s = function (r) {
            var a = Object.create(r, l);
            return (
              Object.defineProperty(a, "baseMaterial", { value: e }),
              Object.defineProperty(a, "id", { value: Hs++ }),
              (a.uuid = (function () {
                var e = (4294967295 * Math.random()) | 0,
                  t = (4294967295 * Math.random()) | 0,
                  n = (4294967295 * Math.random()) | 0,
                  r = (4294967295 * Math.random()) | 0;
                return (
                  Is[255 & e] +
                  Is[(e >> 8) & 255] +
                  Is[(e >> 16) & 255] +
                  Is[(e >> 24) & 255] +
                  "-" +
                  Is[255 & t] +
                  Is[(t >> 8) & 255] +
                  "-" +
                  Is[((t >> 16) & 15) | 64] +
                  Is[(t >> 24) & 255] +
                  "-" +
                  Is[(63 & n) | 128] +
                  Is[(n >> 8) & 255] +
                  "-" +
                  Is[(n >> 16) & 255] +
                  Is[(n >> 24) & 255] +
                  Is[255 & r] +
                  Is[(r >> 8) & 255] +
                  Is[(r >> 16) & 255] +
                  Is[(r >> 24) & 255]
                ).toUpperCase();
              })()),
              (a.uniforms = Ns({}, r.uniforms, t.uniforms)),
              (a.defines = Ns({}, r.defines, t.defines)),
              (a.defines["TROIKA_DERIVED_MATERIAL_".concat(n)] = ""),
              (a.extensions = Ns({}, r.extensions, t.extensions)),
              (a._listeners = void 0),
              a
            );
          },
          l = {
            constructor: { value: o },
            isDerivedMaterial: { value: !0 },
            customProgramCacheKey: {
              writable: !0,
              configurable: !0,
              value: function () {
                return e.customProgramCacheKey() + "|" + n;
              },
            },
            onBeforeCompile: {
              get: function () {
                return i;
              },
              set: function (e) {
                this[a] = e;
              },
            },
            copy: {
              writable: !0,
              configurable: !0,
              value: function (t) {
                return (
                  e.copy.call(this, t),
                  e.isShaderMaterial ||
                    e.isDerivedMaterial ||
                    (Ns(this.extensions, t.extensions),
                    Ns(this.defines, t.defines),
                    Ns(this.uniforms, Ur.clone(t.uniforms))),
                  this
                );
              },
            },
            clone: {
              writable: !0,
              configurable: !0,
              value: function () {
                var t = new e.constructor();
                return s(t).copy(this);
              },
            },
            getDepthMaterial: {
              writable: !0,
              configurable: !0,
              value: function () {
                var n = this._depthMaterial;
                return (
                  n ||
                    (((n = this._depthMaterial =
                      Gs(
                        e.isDerivedMaterial
                          ? e.getDepthMaterial()
                          : new vo({ depthPacking: we }),
                        t
                      )).defines.IS_DEPTH_MATERIAL = ""),
                    (n.uniforms = this.uniforms)),
                  n
                );
              },
            },
            getDistanceMaterial: {
              writable: !0,
              configurable: !0,
              value: function () {
                var n = this._distanceMaterial;
                return (
                  n ||
                    (((n = this._distanceMaterial =
                      Gs(
                        e.isDerivedMaterial
                          ? e.getDistanceMaterial()
                          : new mo(),
                        t
                      )).defines.IS_DISTANCE_MATERIAL = ""),
                    (n.uniforms = this.uniforms)),
                  n
                );
              },
            },
            dispose: {
              writable: !0,
              configurable: !0,
              value: function () {
                var t = this._depthMaterial,
                  n = this._distanceMaterial;
                t && t.dispose(), n && n.dispose(), e.dispose.call(this);
              },
            },
          };
        return (r[n] = o), new o();
      }
      function Vs(e, t, n, r, a) {
        return (
          (r || a || n) &&
            ((e = e.replace(
              Ls,
              "\n".concat(n, "\nvoid troikaOrigMain").concat(t, "() {")
            )),
            (e += "\nvoid main() {\n  "
              .concat(r, "\n  troikaOrigMain")
              .concat(t, "();\n  ")
              .concat(a, "\n}"))),
          e
        );
      }
      function Ws(e, t) {
        return "uniforms" === e
          ? void 0
          : "function" === typeof t
          ? t.toString()
          : t;
      }
      var js = 0,
        Xs = new Map();
      var qs = Cs({
        name: "Typr Font Parser",
        dependencies: [
          function () {
            return (
              "undefined" == typeof window && (self.window = self),
              (function (e) {
                var t = {
                  parse: function (e) {
                    var n = t._bin,
                      r = new Uint8Array(e);
                    if ("ttcf" == n.readASCII(r, 0, 4)) {
                      var a = 4;
                      n.readUshort(r, a),
                        (a += 2),
                        n.readUshort(r, a),
                        (a += 2);
                      var i = n.readUint(r, a);
                      a += 4;
                      for (var o = [], s = 0; s < i; s++) {
                        var l = n.readUint(r, a);
                        (a += 4), o.push(t._readFont(r, l));
                      }
                      return o;
                    }
                    return [t._readFont(r, 0)];
                  },
                  _readFont: function (e, n) {
                    var r = t._bin,
                      a = n;
                    r.readFixed(e, n), (n += 4);
                    var i = r.readUshort(e, n);
                    (n += 2),
                      r.readUshort(e, n),
                      (n += 2),
                      r.readUshort(e, n),
                      (n += 2),
                      r.readUshort(e, n),
                      (n += 2);
                    for (
                      var o = [
                          "cmap",
                          "head",
                          "hhea",
                          "maxp",
                          "hmtx",
                          "name",
                          "OS/2",
                          "post",
                          "loca",
                          "glyf",
                          "kern",
                          "CFF ",
                          "GDEF",
                          "GPOS",
                          "GSUB",
                          "SVG ",
                        ],
                        s = { _data: e, _offset: a },
                        l = {},
                        u = 0;
                      u < i;
                      u++
                    ) {
                      var c = r.readASCII(e, n, 4);
                      (n += 4), r.readUint(e, n), (n += 4);
                      var f = r.readUint(e, n);
                      n += 4;
                      var d = r.readUint(e, n);
                      (n += 4), (l[c] = { offset: f, length: d });
                    }
                    for (u = 0; u < o.length; u++) {
                      var h = o[u];
                      l[h] &&
                        (s[h.trim()] = t[h.trim()].parse(
                          e,
                          l[h].offset,
                          l[h].length,
                          s
                        ));
                    }
                    return s;
                  },
                  _tabOffset: function (e, n, r) {
                    for (
                      var a = t._bin,
                        i = a.readUshort(e, r + 4),
                        o = r + 12,
                        s = 0;
                      s < i;
                      s++
                    ) {
                      var l = a.readASCII(e, o, 4);
                      (o += 4), a.readUint(e, o), (o += 4);
                      var u = a.readUint(e, o);
                      if (((o += 4), a.readUint(e, o), (o += 4), l == n))
                        return u;
                    }
                    return 0;
                  },
                };
                (t._bin = {
                  readFixed: function (e, t) {
                    return (
                      ((e[t] << 8) | e[t + 1]) +
                      ((e[t + 2] << 8) | e[t + 3]) / 65540
                    );
                  },
                  readF2dot14: function (e, n) {
                    return t._bin.readShort(e, n) / 16384;
                  },
                  readInt: function (e, n) {
                    return t._bin._view(e).getInt32(n);
                  },
                  readInt8: function (e, n) {
                    return t._bin._view(e).getInt8(n);
                  },
                  readShort: function (e, n) {
                    return t._bin._view(e).getInt16(n);
                  },
                  readUshort: function (e, n) {
                    return t._bin._view(e).getUint16(n);
                  },
                  readUshorts: function (e, n, r) {
                    for (var a = [], i = 0; i < r; i++)
                      a.push(t._bin.readUshort(e, n + 2 * i));
                    return a;
                  },
                  readUint: function (e, n) {
                    return t._bin._view(e).getUint32(n);
                  },
                  readUint64: function (e, n) {
                    return (
                      4294967296 * t._bin.readUint(e, n) +
                      t._bin.readUint(e, n + 4)
                    );
                  },
                  readASCII: function (e, t, n) {
                    for (var r = "", a = 0; a < n; a++)
                      r += String.fromCharCode(e[t + a]);
                    return r;
                  },
                  readUnicode: function (e, t, n) {
                    for (var r = "", a = 0; a < n; a++) {
                      var i = (e[t++] << 8) | e[t++];
                      r += String.fromCharCode(i);
                    }
                    return r;
                  },
                  _tdec:
                    "undefined" != typeof window && window.TextDecoder
                      ? new window.TextDecoder()
                      : null,
                  readUTF8: function (e, n, r) {
                    var a = t._bin._tdec;
                    return a && 0 == n && r == e.length
                      ? a.decode(e)
                      : t._bin.readASCII(e, n, r);
                  },
                  readBytes: function (e, t, n) {
                    for (var r = [], a = 0; a < n; a++) r.push(e[t + a]);
                    return r;
                  },
                  readASCIIArray: function (e, t, n) {
                    for (var r = [], a = 0; a < n; a++)
                      r.push(String.fromCharCode(e[t + a]));
                    return r;
                  },
                  _view: function (e) {
                    return (
                      e._dataView ||
                      (e._dataView = e.buffer
                        ? new DataView(e.buffer, e.byteOffset, e.byteLength)
                        : new DataView(new Uint8Array(e).buffer))
                    );
                  },
                }),
                  (t._lctf = {}),
                  (t._lctf.parse = function (e, n, r, a, i) {
                    var o = t._bin,
                      s = {},
                      l = n;
                    o.readFixed(e, n), (n += 4);
                    var u = o.readUshort(e, n);
                    n += 2;
                    var c = o.readUshort(e, n);
                    n += 2;
                    var f = o.readUshort(e, n);
                    return (
                      (n += 2),
                      (s.scriptList = t._lctf.readScriptList(e, l + u)),
                      (s.featureList = t._lctf.readFeatureList(e, l + c)),
                      (s.lookupList = t._lctf.readLookupList(e, l + f, i)),
                      s
                    );
                  }),
                  (t._lctf.readLookupList = function (e, n, r) {
                    var a = t._bin,
                      i = n,
                      o = [],
                      s = a.readUshort(e, n);
                    n += 2;
                    for (var l = 0; l < s; l++) {
                      var u = a.readUshort(e, n);
                      n += 2;
                      var c = t._lctf.readLookupTable(e, i + u, r);
                      o.push(c);
                    }
                    return o;
                  }),
                  (t._lctf.readLookupTable = function (e, n, r) {
                    var a = t._bin,
                      i = n,
                      o = { tabs: [] };
                    (o.ltype = a.readUshort(e, n)),
                      (n += 2),
                      (o.flag = a.readUshort(e, n)),
                      (n += 2);
                    var s = a.readUshort(e, n);
                    n += 2;
                    for (var l = o.ltype, u = 0; u < s; u++) {
                      var c = a.readUshort(e, n);
                      n += 2;
                      var f = r(e, l, i + c, o);
                      o.tabs.push(f);
                    }
                    return o;
                  }),
                  (t._lctf.numOfOnes = function (e) {
                    for (var t = 0, n = 0; n < 32; n++)
                      0 != ((e >>> n) & 1) && t++;
                    return t;
                  }),
                  (t._lctf.readClassDef = function (e, n) {
                    var r = t._bin,
                      a = [],
                      i = r.readUshort(e, n);
                    if (((n += 2), 1 == i)) {
                      var o = r.readUshort(e, n);
                      n += 2;
                      var s = r.readUshort(e, n);
                      n += 2;
                      for (var l = 0; l < s; l++)
                        a.push(o + l),
                          a.push(o + l),
                          a.push(r.readUshort(e, n)),
                          (n += 2);
                    }
                    if (2 == i) {
                      var u = r.readUshort(e, n);
                      for (n += 2, l = 0; l < u; l++)
                        a.push(r.readUshort(e, n)),
                          (n += 2),
                          a.push(r.readUshort(e, n)),
                          (n += 2),
                          a.push(r.readUshort(e, n)),
                          (n += 2);
                    }
                    return a;
                  }),
                  (t._lctf.getInterval = function (e, t) {
                    for (var n = 0; n < e.length; n += 3) {
                      var r = e[n],
                        a = e[n + 1];
                      if ((e[n + 2], r <= t && t <= a)) return n;
                    }
                    return -1;
                  }),
                  (t._lctf.readCoverage = function (e, n) {
                    var r = t._bin,
                      a = {};
                    (a.fmt = r.readUshort(e, n)), (n += 2);
                    var i = r.readUshort(e, n);
                    return (
                      (n += 2),
                      1 == a.fmt && (a.tab = r.readUshorts(e, n, i)),
                      2 == a.fmt && (a.tab = r.readUshorts(e, n, 3 * i)),
                      a
                    );
                  }),
                  (t._lctf.coverageIndex = function (e, n) {
                    var r = e.tab;
                    if (1 == e.fmt) return r.indexOf(n);
                    if (2 == e.fmt) {
                      var a = t._lctf.getInterval(r, n);
                      if (-1 != a) return r[a + 2] + (n - r[a]);
                    }
                    return -1;
                  }),
                  (t._lctf.readFeatureList = function (e, n) {
                    var r = t._bin,
                      a = n,
                      i = [],
                      o = r.readUshort(e, n);
                    n += 2;
                    for (var s = 0; s < o; s++) {
                      var l = r.readASCII(e, n, 4);
                      n += 4;
                      var u = r.readUshort(e, n);
                      n += 2;
                      var c = t._lctf.readFeatureTable(e, a + u);
                      (c.tag = l.trim()), i.push(c);
                    }
                    return i;
                  }),
                  (t._lctf.readFeatureTable = function (e, n) {
                    var r = t._bin,
                      a = n,
                      i = {},
                      o = r.readUshort(e, n);
                    (n += 2), o > 0 && (i.featureParams = a + o);
                    var s = r.readUshort(e, n);
                    (n += 2), (i.tab = []);
                    for (var l = 0; l < s; l++)
                      i.tab.push(r.readUshort(e, n + 2 * l));
                    return i;
                  }),
                  (t._lctf.readScriptList = function (e, n) {
                    var r = t._bin,
                      a = n,
                      i = {},
                      o = r.readUshort(e, n);
                    n += 2;
                    for (var s = 0; s < o; s++) {
                      var l = r.readASCII(e, n, 4);
                      n += 4;
                      var u = r.readUshort(e, n);
                      (n += 2),
                        (i[l.trim()] = t._lctf.readScriptTable(e, a + u));
                    }
                    return i;
                  }),
                  (t._lctf.readScriptTable = function (e, n) {
                    var r = t._bin,
                      a = n,
                      i = {},
                      o = r.readUshort(e, n);
                    (n += 2),
                      o > 0 && (i.default = t._lctf.readLangSysTable(e, a + o));
                    var s = r.readUshort(e, n);
                    n += 2;
                    for (var l = 0; l < s; l++) {
                      var u = r.readASCII(e, n, 4);
                      n += 4;
                      var c = r.readUshort(e, n);
                      (n += 2),
                        (i[u.trim()] = t._lctf.readLangSysTable(e, a + c));
                    }
                    return i;
                  }),
                  (t._lctf.readLangSysTable = function (e, n) {
                    var r = t._bin,
                      a = {};
                    r.readUshort(e, n),
                      (n += 2),
                      (a.reqFeature = r.readUshort(e, n)),
                      (n += 2);
                    var i = r.readUshort(e, n);
                    return (n += 2), (a.features = r.readUshorts(e, n, i)), a;
                  }),
                  (t.CFF = {}),
                  (t.CFF.parse = function (e, n, r) {
                    var a = t._bin;
                    (e = new Uint8Array(e.buffer, n, r))[(n = 0)],
                      e[++n],
                      e[++n],
                      e[++n],
                      n++;
                    var i = [];
                    n = t.CFF.readIndex(e, n, i);
                    for (var o = [], s = 0; s < i.length - 1; s++)
                      o.push(a.readASCII(e, n + i[s], i[s + 1] - i[s]));
                    n += i[i.length - 1];
                    var l = [];
                    n = t.CFF.readIndex(e, n, l);
                    var u = [];
                    for (s = 0; s < l.length - 1; s++)
                      u.push(t.CFF.readDict(e, n + l[s], n + l[s + 1]));
                    n += l[l.length - 1];
                    var c = u[0],
                      f = [];
                    n = t.CFF.readIndex(e, n, f);
                    var d = [];
                    for (s = 0; s < f.length - 1; s++)
                      d.push(a.readASCII(e, n + f[s], f[s + 1] - f[s]));
                    if (
                      ((n += f[f.length - 1]),
                      t.CFF.readSubrs(e, n, c),
                      c.CharStrings)
                    ) {
                      (n = c.CharStrings),
                        (f = []),
                        (n = t.CFF.readIndex(e, n, f));
                      var h = [];
                      for (s = 0; s < f.length - 1; s++)
                        h.push(a.readBytes(e, n + f[s], f[s + 1] - f[s]));
                      c.CharStrings = h;
                    }
                    if (c.ROS) {
                      n = c.FDArray;
                      var p = [];
                      for (
                        n = t.CFF.readIndex(e, n, p), c.FDArray = [], s = 0;
                        s < p.length - 1;
                        s++
                      ) {
                        var v = t.CFF.readDict(e, n + p[s], n + p[s + 1]);
                        t.CFF._readFDict(e, v, d), c.FDArray.push(v);
                      }
                      (n += p[p.length - 1]),
                        (n = c.FDSelect),
                        (c.FDSelect = []);
                      var m = e[n];
                      if ((n++, 3 != m)) throw m;
                      var g = a.readUshort(e, n);
                      for (n += 2, s = 0; s < g + 1; s++)
                        c.FDSelect.push(a.readUshort(e, n), e[n + 2]), (n += 3);
                    }
                    return (
                      c.Encoding &&
                        (c.Encoding = t.CFF.readEncoding(
                          e,
                          c.Encoding,
                          c.CharStrings.length
                        )),
                      c.charset &&
                        (c.charset = t.CFF.readCharset(
                          e,
                          c.charset,
                          c.CharStrings.length
                        )),
                      t.CFF._readFDict(e, c, d),
                      c
                    );
                  }),
                  (t.CFF._readFDict = function (e, n, r) {
                    var a;
                    for (var i in (n.Private &&
                      ((a = n.Private[1]),
                      (n.Private = t.CFF.readDict(e, a, a + n.Private[0])),
                      n.Private.Subrs &&
                        t.CFF.readSubrs(e, a + n.Private.Subrs, n.Private)),
                    n))
                      -1 !=
                        [
                          "FamilyName",
                          "FontName",
                          "FullName",
                          "Notice",
                          "version",
                          "Copyright",
                        ].indexOf(i) && (n[i] = r[n[i] - 426 + 35]);
                  }),
                  (t.CFF.readSubrs = function (e, n, r) {
                    var a = t._bin,
                      i = [];
                    n = t.CFF.readIndex(e, n, i);
                    var o,
                      s = i.length;
                    (o = s < 1240 ? 107 : s < 33900 ? 1131 : 32768),
                      (r.Bias = o),
                      (r.Subrs = []);
                    for (var l = 0; l < i.length - 1; l++)
                      r.Subrs.push(a.readBytes(e, n + i[l], i[l + 1] - i[l]));
                  }),
                  (t.CFF.tableSE = [
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8,
                    9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
                    24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
                    39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
                    54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
                    69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
                    84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 97, 98, 99, 100, 101, 102,
                    103, 104, 105, 106, 107, 108, 109, 110, 0, 111, 112, 113,
                    114, 0, 115, 116, 117, 118, 119, 120, 121, 122, 0, 123, 0,
                    124, 125, 126, 127, 128, 129, 130, 131, 0, 132, 133, 0, 134,
                    135, 136, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 138, 0, 139, 0, 0, 0, 0, 140, 141, 142, 143, 0, 0, 0, 0,
                    0, 144, 0, 0, 0, 145, 0, 0, 146, 147, 148, 149, 0, 0, 0, 0,
                  ]),
                  (t.CFF.glyphByUnicode = function (e, t) {
                    for (var n = 0; n < e.charset.length; n++)
                      if (e.charset[n] == t) return n;
                    return -1;
                  }),
                  (t.CFF.glyphBySE = function (e, n) {
                    return n < 0 || n > 255
                      ? -1
                      : t.CFF.glyphByUnicode(e, t.CFF.tableSE[n]);
                  }),
                  (t.CFF.readEncoding = function (e, n, r) {
                    t._bin;
                    var a = [".notdef"],
                      i = e[n];
                    if ((n++, 0 != i))
                      throw "error: unknown encoding format: " + i;
                    var o = e[n];
                    n++;
                    for (var s = 0; s < o; s++) a.push(e[n + s]);
                    return a;
                  }),
                  (t.CFF.readCharset = function (e, n, r) {
                    var a = t._bin,
                      i = [".notdef"],
                      o = e[n];
                    if ((n++, 0 == o))
                      for (var s = 0; s < r; s++) {
                        var l = a.readUshort(e, n);
                        (n += 2), i.push(l);
                      }
                    else {
                      if (1 != o && 2 != o) throw "error: format: " + o;
                      for (; i.length < r; ) {
                        (l = a.readUshort(e, n)), (n += 2);
                        var u = 0;
                        for (
                          1 == o
                            ? ((u = e[n]), n++)
                            : ((u = a.readUshort(e, n)), (n += 2)),
                            s = 0;
                          s <= u;
                          s++
                        )
                          i.push(l), l++;
                      }
                    }
                    return i;
                  }),
                  (t.CFF.readIndex = function (e, n, r) {
                    var a = t._bin,
                      i = a.readUshort(e, n) + 1,
                      o = e[(n += 2)];
                    if ((n++, 1 == o))
                      for (var s = 0; s < i; s++) r.push(e[n + s]);
                    else if (2 == o)
                      for (s = 0; s < i; s++)
                        r.push(a.readUshort(e, n + 2 * s));
                    else if (3 == o)
                      for (s = 0; s < i; s++)
                        r.push(16777215 & a.readUint(e, n + 3 * s - 1));
                    else if (1 != i)
                      throw "unsupported offset size: " + o + ", count: " + i;
                    return (n += i * o) - 1;
                  }),
                  (t.CFF.getCharString = function (e, n, r) {
                    var a = t._bin,
                      i = e[n],
                      o = e[n + 1];
                    e[n + 2], e[n + 3], e[n + 4];
                    var s = 1,
                      l = null,
                      u = null;
                    i <= 20 && ((l = i), (s = 1)),
                      12 == i && ((l = 100 * i + o), (s = 2)),
                      21 <= i && i <= 27 && ((l = i), (s = 1)),
                      28 == i && ((u = a.readShort(e, n + 1)), (s = 3)),
                      29 <= i && i <= 31 && ((l = i), (s = 1)),
                      32 <= i && i <= 246 && ((u = i - 139), (s = 1)),
                      247 <= i &&
                        i <= 250 &&
                        ((u = 256 * (i - 247) + o + 108), (s = 2)),
                      251 <= i &&
                        i <= 254 &&
                        ((u = 256 * -(i - 251) - o - 108), (s = 2)),
                      255 == i && ((u = a.readInt(e, n + 1) / 65535), (s = 5)),
                      (r.val = null != u ? u : "o" + l),
                      (r.size = s);
                  }),
                  (t.CFF.readCharString = function (e, n, r) {
                    for (var a = n + r, i = t._bin, o = []; n < a; ) {
                      var s = e[n],
                        l = e[n + 1];
                      e[n + 2], e[n + 3], e[n + 4];
                      var u = 1,
                        c = null,
                        f = null;
                      s <= 20 && ((c = s), (u = 1)),
                        12 == s && ((c = 100 * s + l), (u = 2)),
                        (19 != s && 20 != s) || ((c = s), (u = 2)),
                        21 <= s && s <= 27 && ((c = s), (u = 1)),
                        28 == s && ((f = i.readShort(e, n + 1)), (u = 3)),
                        29 <= s && s <= 31 && ((c = s), (u = 1)),
                        32 <= s && s <= 246 && ((f = s - 139), (u = 1)),
                        247 <= s &&
                          s <= 250 &&
                          ((f = 256 * (s - 247) + l + 108), (u = 2)),
                        251 <= s &&
                          s <= 254 &&
                          ((f = 256 * -(s - 251) - l - 108), (u = 2)),
                        255 == s &&
                          ((f = i.readInt(e, n + 1) / 65535), (u = 5)),
                        o.push(null != f ? f : "o" + c),
                        (n += u);
                    }
                    return o;
                  }),
                  (t.CFF.readDict = function (e, n, r) {
                    for (var a = t._bin, i = {}, o = []; n < r; ) {
                      var s = e[n],
                        l = e[n + 1];
                      e[n + 2], e[n + 3], e[n + 4];
                      var u = 1,
                        c = null,
                        f = null;
                      if (
                        (28 == s && ((f = a.readShort(e, n + 1)), (u = 3)),
                        29 == s && ((f = a.readInt(e, n + 1)), (u = 5)),
                        32 <= s && s <= 246 && ((f = s - 139), (u = 1)),
                        247 <= s &&
                          s <= 250 &&
                          ((f = 256 * (s - 247) + l + 108), (u = 2)),
                        251 <= s &&
                          s <= 254 &&
                          ((f = 256 * -(s - 251) - l - 108), (u = 2)),
                        255 == s)
                      )
                        throw (
                          ((f = a.readInt(e, n + 1) / 65535),
                          (u = 5),
                          "unknown number")
                        );
                      if (30 == s) {
                        var d = [];
                        for (u = 1; ; ) {
                          var h = e[n + u];
                          u++;
                          var p = h >> 4,
                            v = 15 & h;
                          if (
                            (15 != p && d.push(p),
                            15 != v && d.push(v),
                            15 == v)
                          )
                            break;
                        }
                        for (
                          var m = "",
                            g = [
                              0,
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              ".",
                              "e",
                              "e-",
                              "reserved",
                              "-",
                              "endOfNumber",
                            ],
                            y = 0;
                          y < d.length;
                          y++
                        )
                          m += g[d[y]];
                        f = parseFloat(m);
                      }
                      s <= 21 &&
                        ((c = [
                          "version",
                          "Notice",
                          "FullName",
                          "FamilyName",
                          "Weight",
                          "FontBBox",
                          "BlueValues",
                          "OtherBlues",
                          "FamilyBlues",
                          "FamilyOtherBlues",
                          "StdHW",
                          "StdVW",
                          "escape",
                          "UniqueID",
                          "XUID",
                          "charset",
                          "Encoding",
                          "CharStrings",
                          "Private",
                          "Subrs",
                          "defaultWidthX",
                          "nominalWidthX",
                        ][s]),
                        (u = 1),
                        12 == s &&
                          ((c = [
                            "Copyright",
                            "isFixedPitch",
                            "ItalicAngle",
                            "UnderlinePosition",
                            "UnderlineThickness",
                            "PaintType",
                            "CharstringType",
                            "FontMatrix",
                            "StrokeWidth",
                            "BlueScale",
                            "BlueShift",
                            "BlueFuzz",
                            "StemSnapH",
                            "StemSnapV",
                            "ForceBold",
                            0,
                            0,
                            "LanguageGroup",
                            "ExpansionFactor",
                            "initialRandomSeed",
                            "SyntheticBase",
                            "PostScript",
                            "BaseFontName",
                            "BaseFontBlend",
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            "ROS",
                            "CIDFontVersion",
                            "CIDFontRevision",
                            "CIDFontType",
                            "CIDCount",
                            "UIDBase",
                            "FDArray",
                            "FDSelect",
                            "FontName",
                          ][l]),
                          (u = 2))),
                        null != c
                          ? ((i[c] = 1 == o.length ? o[0] : o), (o = []))
                          : o.push(f),
                        (n += u);
                    }
                    return i;
                  }),
                  (t.cmap = {}),
                  (t.cmap.parse = function (e, n, r) {
                    (e = new Uint8Array(e.buffer, n, r)), (n = 0);
                    var a = t._bin,
                      i = {};
                    a.readUshort(e, n), (n += 2);
                    var o = a.readUshort(e, n);
                    n += 2;
                    var s = [];
                    i.tables = [];
                    for (var l = 0; l < o; l++) {
                      var u = a.readUshort(e, n);
                      n += 2;
                      var c = a.readUshort(e, n);
                      n += 2;
                      var f = a.readUint(e, n);
                      n += 4;
                      var d = "p" + u + "e" + c,
                        h = s.indexOf(f);
                      if (-1 == h) {
                        var p;
                        (h = i.tables.length), s.push(f);
                        var v = a.readUshort(e, f);
                        0 == v
                          ? (p = t.cmap.parse0(e, f))
                          : 4 == v
                          ? (p = t.cmap.parse4(e, f))
                          : 6 == v
                          ? (p = t.cmap.parse6(e, f))
                          : 12 == v
                          ? (p = t.cmap.parse12(e, f))
                          : console.debug("unknown format: " + v, u, c, f),
                          i.tables.push(p);
                      }
                      if (null != i[d])
                        throw "multiple tables for one platform+encoding";
                      i[d] = h;
                    }
                    return i;
                  }),
                  (t.cmap.parse0 = function (e, n) {
                    var r = t._bin,
                      a = {};
                    (a.format = r.readUshort(e, n)), (n += 2);
                    var i = r.readUshort(e, n);
                    (n += 2), r.readUshort(e, n), (n += 2), (a.map = []);
                    for (var o = 0; o < i - 6; o++) a.map.push(e[n + o]);
                    return a;
                  }),
                  (t.cmap.parse4 = function (e, n) {
                    var r = t._bin,
                      a = n,
                      i = {};
                    (i.format = r.readUshort(e, n)), (n += 2);
                    var o = r.readUshort(e, n);
                    (n += 2), r.readUshort(e, n), (n += 2);
                    var s = r.readUshort(e, n);
                    n += 2;
                    var l = s / 2;
                    (i.searchRange = r.readUshort(e, n)),
                      (n += 2),
                      (i.entrySelector = r.readUshort(e, n)),
                      (n += 2),
                      (i.rangeShift = r.readUshort(e, n)),
                      (n += 2),
                      (i.endCount = r.readUshorts(e, n, l)),
                      (n += 2 * l),
                      (n += 2),
                      (i.startCount = r.readUshorts(e, n, l)),
                      (n += 2 * l),
                      (i.idDelta = []);
                    for (var u = 0; u < l; u++)
                      i.idDelta.push(r.readShort(e, n)), (n += 2);
                    for (
                      i.idRangeOffset = r.readUshorts(e, n, l),
                        n += 2 * l,
                        i.glyphIdArray = [];
                      n < a + o;

                    )
                      i.glyphIdArray.push(r.readUshort(e, n)), (n += 2);
                    return i;
                  }),
                  (t.cmap.parse6 = function (e, n) {
                    var r = t._bin,
                      a = {};
                    (a.format = r.readUshort(e, n)),
                      (n += 2),
                      r.readUshort(e, n),
                      (n += 2),
                      r.readUshort(e, n),
                      (n += 2),
                      (a.firstCode = r.readUshort(e, n)),
                      (n += 2);
                    var i = r.readUshort(e, n);
                    (n += 2), (a.glyphIdArray = []);
                    for (var o = 0; o < i; o++)
                      a.glyphIdArray.push(r.readUshort(e, n)), (n += 2);
                    return a;
                  }),
                  (t.cmap.parse12 = function (e, n) {
                    var r = t._bin,
                      a = {};
                    (a.format = r.readUshort(e, n)),
                      (n += 2),
                      (n += 2),
                      r.readUint(e, n),
                      (n += 4),
                      r.readUint(e, n),
                      (n += 4);
                    var i = r.readUint(e, n);
                    (n += 4), (a.groups = []);
                    for (var o = 0; o < i; o++) {
                      var s = n + 12 * o,
                        l = r.readUint(e, s + 0),
                        u = r.readUint(e, s + 4),
                        c = r.readUint(e, s + 8);
                      a.groups.push([l, u, c]);
                    }
                    return a;
                  }),
                  (t.glyf = {}),
                  (t.glyf.parse = function (e, t, n, r) {
                    for (var a = [], i = 0; i < r.maxp.numGlyphs; i++)
                      a.push(null);
                    return a;
                  }),
                  (t.glyf._parseGlyf = function (e, n) {
                    var r = t._bin,
                      a = e._data,
                      i = t._tabOffset(a, "glyf", e._offset) + e.loca[n];
                    if (e.loca[n] == e.loca[n + 1]) return null;
                    var o = {};
                    if (
                      ((o.noc = r.readShort(a, i)),
                      (i += 2),
                      (o.xMin = r.readShort(a, i)),
                      (i += 2),
                      (o.yMin = r.readShort(a, i)),
                      (i += 2),
                      (o.xMax = r.readShort(a, i)),
                      (i += 2),
                      (o.yMax = r.readShort(a, i)),
                      (i += 2),
                      o.xMin >= o.xMax || o.yMin >= o.yMax)
                    )
                      return null;
                    if (o.noc > 0) {
                      o.endPts = [];
                      for (var s = 0; s < o.noc; s++)
                        o.endPts.push(r.readUshort(a, i)), (i += 2);
                      var l = r.readUshort(a, i);
                      if (((i += 2), a.length - i < l)) return null;
                      (o.instructions = r.readBytes(a, i, l)), (i += l);
                      var u = o.endPts[o.noc - 1] + 1;
                      for (o.flags = [], s = 0; s < u; s++) {
                        var c = a[i];
                        if ((i++, o.flags.push(c), 0 != (8 & c))) {
                          var f = a[i];
                          i++;
                          for (var d = 0; d < f; d++) o.flags.push(c), s++;
                        }
                      }
                      for (o.xs = [], s = 0; s < u; s++) {
                        var h = 0 != (2 & o.flags[s]),
                          p = 0 != (16 & o.flags[s]);
                        h
                          ? (o.xs.push(p ? a[i] : -a[i]), i++)
                          : p
                          ? o.xs.push(0)
                          : (o.xs.push(r.readShort(a, i)), (i += 2));
                      }
                      for (o.ys = [], s = 0; s < u; s++)
                        (h = 0 != (4 & o.flags[s])),
                          (p = 0 != (32 & o.flags[s])),
                          h
                            ? (o.ys.push(p ? a[i] : -a[i]), i++)
                            : p
                            ? o.ys.push(0)
                            : (o.ys.push(r.readShort(a, i)), (i += 2));
                      var v = 0,
                        m = 0;
                      for (s = 0; s < u; s++)
                        (v += o.xs[s]),
                          (m += o.ys[s]),
                          (o.xs[s] = v),
                          (o.ys[s] = m);
                    } else {
                      var g;
                      o.parts = [];
                      do {
                        (g = r.readUshort(a, i)), (i += 2);
                        var y = {
                          m: { a: 1, b: 0, c: 0, d: 1, tx: 0, ty: 0 },
                          p1: -1,
                          p2: -1,
                        };
                        if (
                          (o.parts.push(y),
                          (y.glyphIndex = r.readUshort(a, i)),
                          (i += 2),
                          1 & g)
                        ) {
                          var _ = r.readShort(a, i);
                          i += 2;
                          var b = r.readShort(a, i);
                          i += 2;
                        } else
                          (_ = r.readInt8(a, i)),
                            i++,
                            (b = r.readInt8(a, i)),
                            i++;
                        2 & g
                          ? ((y.m.tx = _), (y.m.ty = b))
                          : ((y.p1 = _), (y.p2 = b)),
                          8 & g
                            ? ((y.m.a = y.m.d = r.readF2dot14(a, i)), (i += 2))
                            : 64 & g
                            ? ((y.m.a = r.readF2dot14(a, i)),
                              (i += 2),
                              (y.m.d = r.readF2dot14(a, i)),
                              (i += 2))
                            : 128 & g &&
                              ((y.m.a = r.readF2dot14(a, i)),
                              (i += 2),
                              (y.m.b = r.readF2dot14(a, i)),
                              (i += 2),
                              (y.m.c = r.readF2dot14(a, i)),
                              (i += 2),
                              (y.m.d = r.readF2dot14(a, i)),
                              (i += 2));
                      } while (32 & g);
                      if (256 & g) {
                        var x = r.readUshort(a, i);
                        for (i += 2, o.instr = [], s = 0; s < x; s++)
                          o.instr.push(a[i]), i++;
                      }
                    }
                    return o;
                  }),
                  (t.GDEF = {}),
                  (t.GDEF.parse = function (e, n, r, a) {
                    var i = n;
                    n += 4;
                    var o = t._bin.readUshort(e, n);
                    return {
                      glyphClassDef:
                        0 === o ? null : t._lctf.readClassDef(e, i + o),
                    };
                  }),
                  (t.GPOS = {}),
                  (t.GPOS.parse = function (e, n, r, a) {
                    return t._lctf.parse(e, n, r, a, t.GPOS.subt);
                  }),
                  (t.GPOS.subt = function (e, n, r, a) {
                    var i = t._bin,
                      o = r,
                      s = {};
                    if (
                      ((s.fmt = i.readUshort(e, r)),
                      (r += 2),
                      1 == n ||
                        2 == n ||
                        3 == n ||
                        7 == n ||
                        (8 == n && s.fmt <= 2))
                    ) {
                      var l = i.readUshort(e, r);
                      (r += 2), (s.coverage = t._lctf.readCoverage(e, l + o));
                    }
                    if (1 == n && 1 == s.fmt) {
                      var u = i.readUshort(e, r);
                      (r += 2),
                        0 != u && (s.pos = t.GPOS.readValueRecord(e, r, u));
                    } else if (2 == n && s.fmt >= 1 && s.fmt <= 2) {
                      (u = i.readUshort(e, r)), (r += 2);
                      var c = i.readUshort(e, r);
                      r += 2;
                      var f = t._lctf.numOfOnes(u),
                        d = t._lctf.numOfOnes(c);
                      if (1 == s.fmt) {
                        s.pairsets = [];
                        var h = i.readUshort(e, r);
                        r += 2;
                        for (var p = 0; p < h; p++) {
                          var v = o + i.readUshort(e, r);
                          r += 2;
                          var m = i.readUshort(e, v);
                          v += 2;
                          for (var g = [], y = 0; y < m; y++) {
                            var _ = i.readUshort(e, v);
                            (v += 2),
                              0 != u &&
                                ((T = t.GPOS.readValueRecord(e, v, u)),
                                (v += 2 * f)),
                              0 != c &&
                                ((M = t.GPOS.readValueRecord(e, v, c)),
                                (v += 2 * d)),
                              g.push({ gid2: _, val1: T, val2: M });
                          }
                          s.pairsets.push(g);
                        }
                      }
                      if (2 == s.fmt) {
                        var b = i.readUshort(e, r);
                        r += 2;
                        var x = i.readUshort(e, r);
                        r += 2;
                        var S = i.readUshort(e, r);
                        r += 2;
                        var E = i.readUshort(e, r);
                        for (
                          r += 2,
                            s.classDef1 = t._lctf.readClassDef(e, o + b),
                            s.classDef2 = t._lctf.readClassDef(e, o + x),
                            s.matrix = [],
                            p = 0;
                          p < S;
                          p++
                        ) {
                          var w = [];
                          for (y = 0; y < E; y++) {
                            var T = null,
                              M = null;
                            0 != u &&
                              ((T = t.GPOS.readValueRecord(e, r, u)),
                              (r += 2 * f)),
                              0 != c &&
                                ((M = t.GPOS.readValueRecord(e, r, c)),
                                (r += 2 * d)),
                              w.push({ val1: T, val2: M });
                          }
                          s.matrix.push(w);
                        }
                      }
                    } else if (4 == n && 1 == s.fmt)
                      (s.markCoverage = t._lctf.readCoverage(
                        e,
                        i.readUshort(e, r) + o
                      )),
                        (s.baseCoverage = t._lctf.readCoverage(
                          e,
                          i.readUshort(e, r + 2) + o
                        )),
                        (s.markClassCount = i.readUshort(e, r + 4)),
                        (s.markArray = t.GPOS.readMarkArray(
                          e,
                          i.readUshort(e, r + 6) + o
                        )),
                        (s.baseArray = t.GPOS.readBaseArray(
                          e,
                          i.readUshort(e, r + 8) + o,
                          s.markClassCount
                        ));
                    else if (6 == n && 1 == s.fmt)
                      (s.mark1Coverage = t._lctf.readCoverage(
                        e,
                        i.readUshort(e, r) + o
                      )),
                        (s.mark2Coverage = t._lctf.readCoverage(
                          e,
                          i.readUshort(e, r + 2) + o
                        )),
                        (s.markClassCount = i.readUshort(e, r + 4)),
                        (s.mark1Array = t.GPOS.readMarkArray(
                          e,
                          i.readUshort(e, r + 6) + o
                        )),
                        (s.mark2Array = t.GPOS.readBaseArray(
                          e,
                          i.readUshort(e, r + 8) + o,
                          s.markClassCount
                        ));
                    else {
                      if (9 == n && 1 == s.fmt) {
                        var A = i.readUshort(e, r);
                        r += 2;
                        var C = i.readUint(e, r);
                        if (((r += 4), 9 == a.ltype)) a.ltype = A;
                        else if (a.ltype != A)
                          throw "invalid extension substitution";
                        return t.GPOS.subt(e, a.ltype, o + C);
                      }
                      console.debug(
                        "unsupported GPOS table LookupType",
                        n,
                        "format",
                        s.fmt
                      );
                    }
                    return s;
                  }),
                  (t.GPOS.readValueRecord = function (e, n, r) {
                    var a = t._bin,
                      i = [];
                    return (
                      i.push(1 & r ? a.readShort(e, n) : 0),
                      (n += 1 & r ? 2 : 0),
                      i.push(2 & r ? a.readShort(e, n) : 0),
                      (n += 2 & r ? 2 : 0),
                      i.push(4 & r ? a.readShort(e, n) : 0),
                      (n += 4 & r ? 2 : 0),
                      i.push(8 & r ? a.readShort(e, n) : 0),
                      (n += 8 & r ? 2 : 0),
                      i
                    );
                  }),
                  (t.GPOS.readBaseArray = function (e, n, r) {
                    var a = t._bin,
                      i = [],
                      o = n,
                      s = a.readUshort(e, n);
                    n += 2;
                    for (var l = 0; l < s; l++) {
                      for (var u = [], c = 0; c < r; c++)
                        u.push(
                          t.GPOS.readAnchorRecord(e, o + a.readUshort(e, n))
                        ),
                          (n += 2);
                      i.push(u);
                    }
                    return i;
                  }),
                  (t.GPOS.readMarkArray = function (e, n) {
                    var r = t._bin,
                      a = [],
                      i = n,
                      o = r.readUshort(e, n);
                    n += 2;
                    for (var s = 0; s < o; s++) {
                      var l = t.GPOS.readAnchorRecord(
                        e,
                        r.readUshort(e, n + 2) + i
                      );
                      (l.markClass = r.readUshort(e, n)), a.push(l), (n += 4);
                    }
                    return a;
                  }),
                  (t.GPOS.readAnchorRecord = function (e, n) {
                    var r = t._bin,
                      a = {};
                    return (
                      (a.fmt = r.readUshort(e, n)),
                      (a.x = r.readShort(e, n + 2)),
                      (a.y = r.readShort(e, n + 4)),
                      a
                    );
                  }),
                  (t.GSUB = {}),
                  (t.GSUB.parse = function (e, n, r, a) {
                    return t._lctf.parse(e, n, r, a, t.GSUB.subt);
                  }),
                  (t.GSUB.subt = function (e, n, r, a) {
                    var i = t._bin,
                      o = r,
                      s = {};
                    if (
                      ((s.fmt = i.readUshort(e, r)),
                      (r += 2),
                      1 != n && 2 != n && 4 != n && 5 != n && 6 != n)
                    )
                      return null;
                    if (
                      1 == n ||
                      2 == n ||
                      4 == n ||
                      (5 == n && s.fmt <= 2) ||
                      (6 == n && s.fmt <= 2)
                    ) {
                      var l = i.readUshort(e, r);
                      (r += 2), (s.coverage = t._lctf.readCoverage(e, o + l));
                    }
                    if (1 == n && s.fmt >= 1 && s.fmt <= 2) {
                      if (1 == s.fmt) (s.delta = i.readShort(e, r)), (r += 2);
                      else if (2 == s.fmt) {
                        var u = i.readUshort(e, r);
                        (r += 2),
                          (s.newg = i.readUshorts(e, r, u)),
                          (r += 2 * s.newg.length);
                      }
                    } else if (2 == n && 1 == s.fmt) {
                      (u = i.readUshort(e, r)), (r += 2), (s.seqs = []);
                      for (var c = 0; c < u; c++) {
                        var f = i.readUshort(e, r) + o;
                        r += 2;
                        var d = i.readUshort(e, f);
                        s.seqs.push(i.readUshorts(e, f + 2, d));
                      }
                    } else if (4 == n)
                      for (
                        s.vals = [], u = i.readUshort(e, r), r += 2, c = 0;
                        c < u;
                        c++
                      ) {
                        var h = i.readUshort(e, r);
                        (r += 2), s.vals.push(t.GSUB.readLigatureSet(e, o + h));
                      }
                    else if (5 == n && 2 == s.fmt) {
                      if (2 == s.fmt) {
                        var p = i.readUshort(e, r);
                        (r += 2),
                          (s.cDef = t._lctf.readClassDef(e, o + p)),
                          (s.scset = []);
                        var v = i.readUshort(e, r);
                        for (r += 2, c = 0; c < v; c++) {
                          var m = i.readUshort(e, r);
                          (r += 2),
                            s.scset.push(
                              0 == m ? null : t.GSUB.readSubClassSet(e, o + m)
                            );
                        }
                      }
                    } else if (6 == n && 3 == s.fmt) {
                      if (3 == s.fmt) {
                        for (c = 0; c < 3; c++) {
                          (u = i.readUshort(e, r)), (r += 2);
                          for (var g = [], y = 0; y < u; y++)
                            g.push(
                              t._lctf.readCoverage(
                                e,
                                o + i.readUshort(e, r + 2 * y)
                              )
                            );
                          (r += 2 * u),
                            0 == c && (s.backCvg = g),
                            1 == c && (s.inptCvg = g),
                            2 == c && (s.ahedCvg = g);
                        }
                        (u = i.readUshort(e, r)),
                          (r += 2),
                          (s.lookupRec = t.GSUB.readSubstLookupRecords(
                            e,
                            r,
                            u
                          ));
                      }
                    } else {
                      if (7 == n && 1 == s.fmt) {
                        var _ = i.readUshort(e, r);
                        r += 2;
                        var b = i.readUint(e, r);
                        if (((r += 4), 9 == a.ltype)) a.ltype = _;
                        else if (a.ltype != _)
                          throw "invalid extension substitution";
                        return t.GSUB.subt(e, a.ltype, o + b);
                      }
                      console.debug(
                        "unsupported GSUB table LookupType",
                        n,
                        "format",
                        s.fmt
                      );
                    }
                    return s;
                  }),
                  (t.GSUB.readSubClassSet = function (e, n) {
                    var r = t._bin.readUshort,
                      a = n,
                      i = [],
                      o = r(e, n);
                    n += 2;
                    for (var s = 0; s < o; s++) {
                      var l = r(e, n);
                      (n += 2), i.push(t.GSUB.readSubClassRule(e, a + l));
                    }
                    return i;
                  }),
                  (t.GSUB.readSubClassRule = function (e, n) {
                    var r = t._bin.readUshort,
                      a = {},
                      i = r(e, n),
                      o = r(e, (n += 2));
                    (n += 2), (a.input = []);
                    for (var s = 0; s < i - 1; s++)
                      a.input.push(r(e, n)), (n += 2);
                    return (
                      (a.substLookupRecords = t.GSUB.readSubstLookupRecords(
                        e,
                        n,
                        o
                      )),
                      a
                    );
                  }),
                  (t.GSUB.readSubstLookupRecords = function (e, n, r) {
                    for (var a = t._bin.readUshort, i = [], o = 0; o < r; o++)
                      i.push(a(e, n), a(e, n + 2)), (n += 4);
                    return i;
                  }),
                  (t.GSUB.readChainSubClassSet = function (e, n) {
                    var r = t._bin,
                      a = n,
                      i = [],
                      o = r.readUshort(e, n);
                    n += 2;
                    for (var s = 0; s < o; s++) {
                      var l = r.readUshort(e, n);
                      (n += 2), i.push(t.GSUB.readChainSubClassRule(e, a + l));
                    }
                    return i;
                  }),
                  (t.GSUB.readChainSubClassRule = function (e, n) {
                    for (
                      var r = t._bin,
                        a = {},
                        i = ["backtrack", "input", "lookahead"],
                        o = 0;
                      o < i.length;
                      o++
                    ) {
                      var s = r.readUshort(e, n);
                      (n += 2),
                        1 == o && s--,
                        (a[i[o]] = r.readUshorts(e, n, s)),
                        (n += 2 * a[i[o]].length);
                    }
                    return (
                      (s = r.readUshort(e, n)),
                      (n += 2),
                      (a.subst = r.readUshorts(e, n, 2 * s)),
                      (n += 2 * a.subst.length),
                      a
                    );
                  }),
                  (t.GSUB.readLigatureSet = function (e, n) {
                    var r = t._bin,
                      a = n,
                      i = [],
                      o = r.readUshort(e, n);
                    n += 2;
                    for (var s = 0; s < o; s++) {
                      var l = r.readUshort(e, n);
                      (n += 2), i.push(t.GSUB.readLigature(e, a + l));
                    }
                    return i;
                  }),
                  (t.GSUB.readLigature = function (e, n) {
                    var r = t._bin,
                      a = { chain: [] };
                    (a.nglyph = r.readUshort(e, n)), (n += 2);
                    var i = r.readUshort(e, n);
                    n += 2;
                    for (var o = 0; o < i - 1; o++)
                      a.chain.push(r.readUshort(e, n)), (n += 2);
                    return a;
                  }),
                  (t.head = {}),
                  (t.head.parse = function (e, n, r) {
                    var a = t._bin,
                      i = {};
                    return (
                      a.readFixed(e, n),
                      (n += 4),
                      (i.fontRevision = a.readFixed(e, n)),
                      (n += 4),
                      a.readUint(e, n),
                      (n += 4),
                      a.readUint(e, n),
                      (n += 4),
                      (i.flags = a.readUshort(e, n)),
                      (n += 2),
                      (i.unitsPerEm = a.readUshort(e, n)),
                      (n += 2),
                      (i.created = a.readUint64(e, n)),
                      (n += 8),
                      (i.modified = a.readUint64(e, n)),
                      (n += 8),
                      (i.xMin = a.readShort(e, n)),
                      (n += 2),
                      (i.yMin = a.readShort(e, n)),
                      (n += 2),
                      (i.xMax = a.readShort(e, n)),
                      (n += 2),
                      (i.yMax = a.readShort(e, n)),
                      (n += 2),
                      (i.macStyle = a.readUshort(e, n)),
                      (n += 2),
                      (i.lowestRecPPEM = a.readUshort(e, n)),
                      (n += 2),
                      (i.fontDirectionHint = a.readShort(e, n)),
                      (n += 2),
                      (i.indexToLocFormat = a.readShort(e, n)),
                      (n += 2),
                      (i.glyphDataFormat = a.readShort(e, n)),
                      (n += 2),
                      i
                    );
                  }),
                  (t.hhea = {}),
                  (t.hhea.parse = function (e, n, r) {
                    var a = t._bin,
                      i = {};
                    return (
                      a.readFixed(e, n),
                      (n += 4),
                      (i.ascender = a.readShort(e, n)),
                      (n += 2),
                      (i.descender = a.readShort(e, n)),
                      (n += 2),
                      (i.lineGap = a.readShort(e, n)),
                      (n += 2),
                      (i.advanceWidthMax = a.readUshort(e, n)),
                      (n += 2),
                      (i.minLeftSideBearing = a.readShort(e, n)),
                      (n += 2),
                      (i.minRightSideBearing = a.readShort(e, n)),
                      (n += 2),
                      (i.xMaxExtent = a.readShort(e, n)),
                      (n += 2),
                      (i.caretSlopeRise = a.readShort(e, n)),
                      (n += 2),
                      (i.caretSlopeRun = a.readShort(e, n)),
                      (n += 2),
                      (i.caretOffset = a.readShort(e, n)),
                      (n += 2),
                      (n += 8),
                      (i.metricDataFormat = a.readShort(e, n)),
                      (n += 2),
                      (i.numberOfHMetrics = a.readUshort(e, n)),
                      (n += 2),
                      i
                    );
                  }),
                  (t.hmtx = {}),
                  (t.hmtx.parse = function (e, n, r, a) {
                    for (
                      var i = t._bin,
                        o = { aWidth: [], lsBearing: [] },
                        s = 0,
                        l = 0,
                        u = 0;
                      u < a.maxp.numGlyphs;
                      u++
                    )
                      u < a.hhea.numberOfHMetrics &&
                        ((s = i.readUshort(e, n)),
                        (n += 2),
                        (l = i.readShort(e, n)),
                        (n += 2)),
                        o.aWidth.push(s),
                        o.lsBearing.push(l);
                    return o;
                  }),
                  (t.kern = {}),
                  (t.kern.parse = function (e, n, r, a) {
                    var i = t._bin,
                      o = i.readUshort(e, n);
                    if (((n += 2), 1 == o))
                      return t.kern.parseV1(e, n - 2, r, a);
                    var s = i.readUshort(e, n);
                    n += 2;
                    for (var l = { glyph1: [], rval: [] }, u = 0; u < s; u++) {
                      (n += 2), (r = i.readUshort(e, n)), (n += 2);
                      var c = i.readUshort(e, n);
                      n += 2;
                      var f = c >>> 8;
                      if (0 != (f &= 15))
                        throw "unknown kern table format: " + f;
                      n = t.kern.readFormat0(e, n, l);
                    }
                    return l;
                  }),
                  (t.kern.parseV1 = function (e, n, r, a) {
                    var i = t._bin;
                    i.readFixed(e, n), (n += 4);
                    var o = i.readUint(e, n);
                    n += 4;
                    for (var s = { glyph1: [], rval: [] }, l = 0; l < o; l++) {
                      i.readUint(e, n), (n += 4);
                      var u = i.readUshort(e, n);
                      (n += 2), i.readUshort(e, n), (n += 2);
                      var c = u >>> 8;
                      if (0 != (c &= 15))
                        throw "unknown kern table format: " + c;
                      n = t.kern.readFormat0(e, n, s);
                    }
                    return s;
                  }),
                  (t.kern.readFormat0 = function (e, n, r) {
                    var a = t._bin,
                      i = -1,
                      o = a.readUshort(e, n);
                    (n += 2),
                      a.readUshort(e, n),
                      (n += 2),
                      a.readUshort(e, n),
                      (n += 2),
                      a.readUshort(e, n),
                      (n += 2);
                    for (var s = 0; s < o; s++) {
                      var l = a.readUshort(e, n);
                      n += 2;
                      var u = a.readUshort(e, n);
                      n += 2;
                      var c = a.readShort(e, n);
                      (n += 2),
                        l != i &&
                          (r.glyph1.push(l),
                          r.rval.push({ glyph2: [], vals: [] }));
                      var f = r.rval[r.rval.length - 1];
                      f.glyph2.push(u), f.vals.push(c), (i = l);
                    }
                    return n;
                  }),
                  (t.loca = {}),
                  (t.loca.parse = function (e, n, r, a) {
                    var i = t._bin,
                      o = [],
                      s = a.head.indexToLocFormat,
                      l = a.maxp.numGlyphs + 1;
                    if (0 == s)
                      for (var u = 0; u < l; u++)
                        o.push(i.readUshort(e, n + (u << 1)) << 1);
                    if (1 == s)
                      for (u = 0; u < l; u++)
                        o.push(i.readUint(e, n + (u << 2)));
                    return o;
                  }),
                  (t.maxp = {}),
                  (t.maxp.parse = function (e, n, r) {
                    var a = t._bin,
                      i = {},
                      o = a.readUint(e, n);
                    return (
                      (n += 4),
                      (i.numGlyphs = a.readUshort(e, n)),
                      (n += 2),
                      65536 == o &&
                        ((i.maxPoints = a.readUshort(e, n)),
                        (n += 2),
                        (i.maxContours = a.readUshort(e, n)),
                        (n += 2),
                        (i.maxCompositePoints = a.readUshort(e, n)),
                        (n += 2),
                        (i.maxCompositeContours = a.readUshort(e, n)),
                        (n += 2),
                        (i.maxZones = a.readUshort(e, n)),
                        (n += 2),
                        (i.maxTwilightPoints = a.readUshort(e, n)),
                        (n += 2),
                        (i.maxStorage = a.readUshort(e, n)),
                        (n += 2),
                        (i.maxFunctionDefs = a.readUshort(e, n)),
                        (n += 2),
                        (i.maxInstructionDefs = a.readUshort(e, n)),
                        (n += 2),
                        (i.maxStackElements = a.readUshort(e, n)),
                        (n += 2),
                        (i.maxSizeOfInstructions = a.readUshort(e, n)),
                        (n += 2),
                        (i.maxComponentElements = a.readUshort(e, n)),
                        (n += 2),
                        (i.maxComponentDepth = a.readUshort(e, n)),
                        (n += 2)),
                      i
                    );
                  }),
                  (t.name = {}),
                  (t.name.parse = function (e, n, r) {
                    var a = t._bin,
                      i = {};
                    a.readUshort(e, n), (n += 2);
                    var o = a.readUshort(e, n);
                    (n += 2), a.readUshort(e, n);
                    for (
                      var s,
                        l = [
                          "copyright",
                          "fontFamily",
                          "fontSubfamily",
                          "ID",
                          "fullName",
                          "version",
                          "postScriptName",
                          "trademark",
                          "manufacturer",
                          "designer",
                          "description",
                          "urlVendor",
                          "urlDesigner",
                          "licence",
                          "licenceURL",
                          "---",
                          "typoFamilyName",
                          "typoSubfamilyName",
                          "compatibleFull",
                          "sampleText",
                          "postScriptCID",
                          "wwsFamilyName",
                          "wwsSubfamilyName",
                          "lightPalette",
                          "darkPalette",
                        ],
                        u = (n += 2),
                        c = 0;
                      c < o;
                      c++
                    ) {
                      var f = a.readUshort(e, n);
                      n += 2;
                      var d = a.readUshort(e, n);
                      n += 2;
                      var h = a.readUshort(e, n);
                      n += 2;
                      var p = a.readUshort(e, n);
                      n += 2;
                      var v = a.readUshort(e, n);
                      n += 2;
                      var m = a.readUshort(e, n);
                      n += 2;
                      var g,
                        y = l[p],
                        _ = u + 12 * o + m;
                      if (0 == f) g = a.readUnicode(e, _, v / 2);
                      else if (3 == f && 0 == d) g = a.readUnicode(e, _, v / 2);
                      else if (0 == d) g = a.readASCII(e, _, v);
                      else if (1 == d) g = a.readUnicode(e, _, v / 2);
                      else if (3 == d) g = a.readUnicode(e, _, v / 2);
                      else {
                        if (1 != f)
                          throw "unknown encoding " + d + ", platformID: " + f;
                        (g = a.readASCII(e, _, v)),
                          console.debug(
                            "reading unknown MAC encoding " + d + " as ASCII"
                          );
                      }
                      var b = "p" + f + "," + h.toString(16);
                      null == i[b] && (i[b] = {}),
                        (i[b][void 0 !== y ? y : p] = g),
                        (i[b]._lang = h);
                    }
                    for (var x in i)
                      if (null != i[x].postScriptName && 1033 == i[x]._lang)
                        return i[x];
                    for (var x in i)
                      if (null != i[x].postScriptName && 0 == i[x]._lang)
                        return i[x];
                    for (var x in i)
                      if (null != i[x].postScriptName && 3084 == i[x]._lang)
                        return i[x];
                    for (var x in i)
                      if (null != i[x].postScriptName) return i[x];
                    for (var x in i) {
                      s = x;
                      break;
                    }
                    return (
                      console.debug(
                        "returning name table with languageID " + i[s]._lang
                      ),
                      i[s]
                    );
                  }),
                  (t["OS/2"] = {}),
                  (t["OS/2"].parse = function (e, n, r) {
                    var a = t._bin.readUshort(e, n);
                    n += 2;
                    var i = {};
                    if (0 == a) t["OS/2"].version0(e, n, i);
                    else if (1 == a) t["OS/2"].version1(e, n, i);
                    else if (2 == a || 3 == a || 4 == a)
                      t["OS/2"].version2(e, n, i);
                    else {
                      if (5 != a) throw "unknown OS/2 table version: " + a;
                      t["OS/2"].version5(e, n, i);
                    }
                    return i;
                  }),
                  (t["OS/2"].version0 = function (e, n, r) {
                    var a = t._bin;
                    return (
                      (r.xAvgCharWidth = a.readShort(e, n)),
                      (n += 2),
                      (r.usWeightClass = a.readUshort(e, n)),
                      (n += 2),
                      (r.usWidthClass = a.readUshort(e, n)),
                      (n += 2),
                      (r.fsType = a.readUshort(e, n)),
                      (n += 2),
                      (r.ySubscriptXSize = a.readShort(e, n)),
                      (n += 2),
                      (r.ySubscriptYSize = a.readShort(e, n)),
                      (n += 2),
                      (r.ySubscriptXOffset = a.readShort(e, n)),
                      (n += 2),
                      (r.ySubscriptYOffset = a.readShort(e, n)),
                      (n += 2),
                      (r.ySuperscriptXSize = a.readShort(e, n)),
                      (n += 2),
                      (r.ySuperscriptYSize = a.readShort(e, n)),
                      (n += 2),
                      (r.ySuperscriptXOffset = a.readShort(e, n)),
                      (n += 2),
                      (r.ySuperscriptYOffset = a.readShort(e, n)),
                      (n += 2),
                      (r.yStrikeoutSize = a.readShort(e, n)),
                      (n += 2),
                      (r.yStrikeoutPosition = a.readShort(e, n)),
                      (n += 2),
                      (r.sFamilyClass = a.readShort(e, n)),
                      (n += 2),
                      (r.panose = a.readBytes(e, n, 10)),
                      (n += 10),
                      (r.ulUnicodeRange1 = a.readUint(e, n)),
                      (n += 4),
                      (r.ulUnicodeRange2 = a.readUint(e, n)),
                      (n += 4),
                      (r.ulUnicodeRange3 = a.readUint(e, n)),
                      (n += 4),
                      (r.ulUnicodeRange4 = a.readUint(e, n)),
                      (n += 4),
                      (r.achVendID = [
                        a.readInt8(e, n),
                        a.readInt8(e, n + 1),
                        a.readInt8(e, n + 2),
                        a.readInt8(e, n + 3),
                      ]),
                      (n += 4),
                      (r.fsSelection = a.readUshort(e, n)),
                      (n += 2),
                      (r.usFirstCharIndex = a.readUshort(e, n)),
                      (n += 2),
                      (r.usLastCharIndex = a.readUshort(e, n)),
                      (n += 2),
                      (r.sTypoAscender = a.readShort(e, n)),
                      (n += 2),
                      (r.sTypoDescender = a.readShort(e, n)),
                      (n += 2),
                      (r.sTypoLineGap = a.readShort(e, n)),
                      (n += 2),
                      (r.usWinAscent = a.readUshort(e, n)),
                      (n += 2),
                      (r.usWinDescent = a.readUshort(e, n)),
                      n + 2
                    );
                  }),
                  (t["OS/2"].version1 = function (e, n, r) {
                    var a = t._bin;
                    return (
                      (n = t["OS/2"].version0(e, n, r)),
                      (r.ulCodePageRange1 = a.readUint(e, n)),
                      (n += 4),
                      (r.ulCodePageRange2 = a.readUint(e, n)),
                      n + 4
                    );
                  }),
                  (t["OS/2"].version2 = function (e, n, r) {
                    var a = t._bin;
                    return (
                      (n = t["OS/2"].version1(e, n, r)),
                      (r.sxHeight = a.readShort(e, n)),
                      (n += 2),
                      (r.sCapHeight = a.readShort(e, n)),
                      (n += 2),
                      (r.usDefault = a.readUshort(e, n)),
                      (n += 2),
                      (r.usBreak = a.readUshort(e, n)),
                      (n += 2),
                      (r.usMaxContext = a.readUshort(e, n)),
                      n + 2
                    );
                  }),
                  (t["OS/2"].version5 = function (e, n, r) {
                    var a = t._bin;
                    return (
                      (n = t["OS/2"].version2(e, n, r)),
                      (r.usLowerOpticalPointSize = a.readUshort(e, n)),
                      (n += 2),
                      (r.usUpperOpticalPointSize = a.readUshort(e, n)),
                      n + 2
                    );
                  }),
                  (t.post = {}),
                  (t.post.parse = function (e, n, r) {
                    var a = t._bin,
                      i = {};
                    return (
                      (i.version = a.readFixed(e, n)),
                      (n += 4),
                      (i.italicAngle = a.readFixed(e, n)),
                      (n += 4),
                      (i.underlinePosition = a.readShort(e, n)),
                      (n += 2),
                      (i.underlineThickness = a.readShort(e, n)),
                      (n += 2),
                      i
                    );
                  }),
                  null == t && (t = {}),
                  null == t.U && (t.U = {}),
                  (t.U.codeToGlyph = function (e, t) {
                    var n = e.cmap,
                      r = -1;
                    if (
                      (null != n.p0e4
                        ? (r = n.p0e4)
                        : null != n.p3e1
                        ? (r = n.p3e1)
                        : null != n.p1e0
                        ? (r = n.p1e0)
                        : null != n.p0e3 && (r = n.p0e3),
                      -1 == r)
                    )
                      throw "no familiar platform and encoding!";
                    var a = n.tables[r];
                    if (0 == a.format) return t >= a.map.length ? 0 : a.map[t];
                    if (4 == a.format) {
                      for (var i = -1, o = 0; o < a.endCount.length; o++)
                        if (t <= a.endCount[o]) {
                          i = o;
                          break;
                        }
                      return -1 == i || a.startCount[i] > t
                        ? 0
                        : 65535 &
                            (0 != a.idRangeOffset[i]
                              ? a.glyphIdArray[
                                  t -
                                    a.startCount[i] +
                                    (a.idRangeOffset[i] >> 1) -
                                    (a.idRangeOffset.length - i)
                                ]
                              : t + a.idDelta[i]);
                    }
                    if (12 == a.format) {
                      if (t > a.groups[a.groups.length - 1][1]) return 0;
                      for (o = 0; o < a.groups.length; o++) {
                        var s = a.groups[o];
                        if (s[0] <= t && t <= s[1]) return s[2] + (t - s[0]);
                      }
                      return 0;
                    }
                    throw "unknown cmap table format " + a.format;
                  }),
                  (t.U.glyphToPath = function (e, n) {
                    var r = { cmds: [], crds: [] };
                    if (e.SVG && e.SVG.entries[n]) {
                      var a = e.SVG.entries[n];
                      return null == a
                        ? r
                        : ("string" == typeof a &&
                            ((a = t.SVG.toPath(a)), (e.SVG.entries[n] = a)),
                          a);
                    }
                    if (e.CFF) {
                      var i = {
                          x: 0,
                          y: 0,
                          stack: [],
                          nStems: 0,
                          haveWidth: !1,
                          width: e.CFF.Private
                            ? e.CFF.Private.defaultWidthX
                            : 0,
                          open: !1,
                        },
                        o = e.CFF,
                        s = e.CFF.Private;
                      if (o.ROS) {
                        for (var l = 0; o.FDSelect[l + 2] <= n; ) l += 2;
                        s = o.FDArray[o.FDSelect[l + 1]].Private;
                      }
                      t.U._drawCFF(e.CFF.CharStrings[n], i, o, s, r);
                    } else e.glyf && t.U._drawGlyf(n, e, r);
                    return r;
                  }),
                  (t.U._drawGlyf = function (e, n, r) {
                    var a = n.glyf[e];
                    null == a && (a = n.glyf[e] = t.glyf._parseGlyf(n, e)),
                      null != a &&
                        (a.noc > -1
                          ? t.U._simpleGlyph(a, r)
                          : t.U._compoGlyph(a, n, r));
                  }),
                  (t.U._simpleGlyph = function (e, n) {
                    for (var r = 0; r < e.noc; r++) {
                      for (
                        var a = 0 == r ? 0 : e.endPts[r - 1] + 1,
                          i = e.endPts[r],
                          o = a;
                        o <= i;
                        o++
                      ) {
                        var s = o == a ? i : o - 1,
                          l = o == i ? a : o + 1,
                          u = 1 & e.flags[o],
                          c = 1 & e.flags[s],
                          f = 1 & e.flags[l],
                          d = e.xs[o],
                          h = e.ys[o];
                        if (o == a)
                          if (u) {
                            if (!c) {
                              t.U.P.moveTo(n, d, h);
                              continue;
                            }
                            t.U.P.moveTo(n, e.xs[s], e.ys[s]);
                          } else
                            c
                              ? t.U.P.moveTo(n, e.xs[s], e.ys[s])
                              : t.U.P.moveTo(
                                  n,
                                  (e.xs[s] + d) / 2,
                                  (e.ys[s] + h) / 2
                                );
                        u
                          ? c && t.U.P.lineTo(n, d, h)
                          : f
                          ? t.U.P.qcurveTo(n, d, h, e.xs[l], e.ys[l])
                          : t.U.P.qcurveTo(
                              n,
                              d,
                              h,
                              (d + e.xs[l]) / 2,
                              (h + e.ys[l]) / 2
                            );
                      }
                      t.U.P.closePath(n);
                    }
                  }),
                  (t.U._compoGlyph = function (e, n, r) {
                    for (var a = 0; a < e.parts.length; a++) {
                      var i = { cmds: [], crds: [] },
                        o = e.parts[a];
                      t.U._drawGlyf(o.glyphIndex, n, i);
                      for (var s = o.m, l = 0; l < i.crds.length; l += 2) {
                        var u = i.crds[l],
                          c = i.crds[l + 1];
                        r.crds.push(u * s.a + c * s.b + s.tx),
                          r.crds.push(u * s.c + c * s.d + s.ty);
                      }
                      for (l = 0; l < i.cmds.length; l++)
                        r.cmds.push(i.cmds[l]);
                    }
                  }),
                  (t.U._getGlyphClass = function (e, n) {
                    var r = t._lctf.getInterval(n, e);
                    return -1 == r ? 0 : n[r + 2];
                  }),
                  (t.U._applySubs = function (e, n, r, a) {
                    for (
                      var i = e.length - n - 1, o = 0;
                      o < r.tabs.length;
                      o++
                    )
                      if (null != r.tabs[o]) {
                        var s,
                          l = r.tabs[o];
                        if (
                          !l.coverage ||
                          -1 != (s = t._lctf.coverageIndex(l.coverage, e[n]))
                        )
                          if (1 == r.ltype)
                            e[n],
                              1 == l.fmt
                                ? (e[n] = e[n] + l.delta)
                                : (e[n] = l.newg[s]);
                          else if (4 == r.ltype)
                            for (var u = l.vals[s], c = 0; c < u.length; c++) {
                              var f = u[c],
                                d = f.chain.length;
                              if (!(d > i)) {
                                for (var h = !0, p = 0, v = 0; v < d; v++) {
                                  for (; -1 == e[n + p + (1 + v)]; ) p++;
                                  f.chain[v] != e[n + p + (1 + v)] && (h = !1);
                                }
                                if (h) {
                                  for (e[n] = f.nglyph, v = 0; v < d + p; v++)
                                    e[n + v + 1] = -1;
                                  break;
                                }
                              }
                            }
                          else if (5 == r.ltype && 2 == l.fmt)
                            for (
                              var m = t._lctf.getInterval(l.cDef, e[n]),
                                g = l.cDef[m + 2],
                                y = l.scset[g],
                                _ = 0;
                              _ < y.length;
                              _++
                            ) {
                              var b = y[_],
                                x = b.input;
                              if (!(x.length > i)) {
                                for (h = !0, v = 0; v < x.length; v++) {
                                  var S = t._lctf.getInterval(
                                    l.cDef,
                                    e[n + 1 + v]
                                  );
                                  if (-1 == m && l.cDef[S + 2] != x[v]) {
                                    h = !1;
                                    break;
                                  }
                                }
                                if (h) {
                                  var E = b.substLookupRecords;
                                  for (c = 0; c < E.length; c += 2)
                                    E[c], E[c + 1];
                                }
                              }
                            }
                          else if (6 == r.ltype && 3 == l.fmt) {
                            if (
                              !t.U._glsCovered(
                                e,
                                l.backCvg,
                                n - l.backCvg.length
                              )
                            )
                              continue;
                            if (!t.U._glsCovered(e, l.inptCvg, n)) continue;
                            if (
                              !t.U._glsCovered(
                                e,
                                l.ahedCvg,
                                n + l.inptCvg.length
                              )
                            )
                              continue;
                            var w = l.lookupRec;
                            for (_ = 0; _ < w.length; _ += 2) {
                              m = w[_];
                              var T = a[w[_ + 1]];
                              t.U._applySubs(e, n + m, T, a);
                            }
                          }
                      }
                  }),
                  (t.U._glsCovered = function (e, n, r) {
                    for (var a = 0; a < n.length; a++)
                      if (-1 == t._lctf.coverageIndex(n[a], e[r + a]))
                        return !1;
                    return !0;
                  }),
                  (t.U.glyphsToPath = function (e, n, r) {
                    for (
                      var a = { cmds: [], crds: [] }, i = 0, o = 0;
                      o < n.length;
                      o++
                    ) {
                      var s = n[o];
                      if (-1 != s) {
                        for (
                          var l =
                              o < n.length - 1 && -1 != n[o + 1] ? n[o + 1] : 0,
                            u = t.U.glyphToPath(e, s),
                            c = 0;
                          c < u.crds.length;
                          c += 2
                        )
                          a.crds.push(u.crds[c] + i),
                            a.crds.push(u.crds[c + 1]);
                        for (r && a.cmds.push(r), c = 0; c < u.cmds.length; c++)
                          a.cmds.push(u.cmds[c]);
                        r && a.cmds.push("X"),
                          (i += e.hmtx.aWidth[s]),
                          o < n.length - 1 &&
                            (i += t.U.getPairAdjustment(e, s, l));
                      }
                    }
                    return a;
                  }),
                  (t.U.P = {}),
                  (t.U.P.moveTo = function (e, t, n) {
                    e.cmds.push("M"), e.crds.push(t, n);
                  }),
                  (t.U.P.lineTo = function (e, t, n) {
                    e.cmds.push("L"), e.crds.push(t, n);
                  }),
                  (t.U.P.curveTo = function (e, t, n, r, a, i, o) {
                    e.cmds.push("C"), e.crds.push(t, n, r, a, i, o);
                  }),
                  (t.U.P.qcurveTo = function (e, t, n, r, a) {
                    e.cmds.push("Q"), e.crds.push(t, n, r, a);
                  }),
                  (t.U.P.closePath = function (e) {
                    e.cmds.push("Z");
                  }),
                  (t.U._drawCFF = function (e, n, r, a, i) {
                    for (
                      var o = n.stack,
                        s = n.nStems,
                        l = n.haveWidth,
                        u = n.width,
                        c = n.open,
                        f = 0,
                        d = n.x,
                        h = n.y,
                        p = 0,
                        v = 0,
                        m = 0,
                        g = 0,
                        y = 0,
                        _ = 0,
                        b = 0,
                        x = 0,
                        S = 0,
                        E = 0,
                        w = { val: 0, size: 0 };
                      f < e.length;

                    ) {
                      t.CFF.getCharString(e, f, w);
                      var T = w.val;
                      if (((f += w.size), "o1" == T || "o18" == T))
                        o.length % 2 != 0 &&
                          !l &&
                          (u = o.shift() + a.nominalWidthX),
                          (s += o.length >> 1),
                          (o.length = 0),
                          (l = !0);
                      else if ("o3" == T || "o23" == T)
                        o.length % 2 != 0 &&
                          !l &&
                          (u = o.shift() + a.nominalWidthX),
                          (s += o.length >> 1),
                          (o.length = 0),
                          (l = !0);
                      else if ("o4" == T)
                        o.length > 1 &&
                          !l &&
                          ((u = o.shift() + a.nominalWidthX), (l = !0)),
                          c && t.U.P.closePath(i),
                          (h += o.pop()),
                          t.U.P.moveTo(i, d, h),
                          (c = !0);
                      else if ("o5" == T)
                        for (; o.length > 0; )
                          (d += o.shift()),
                            (h += o.shift()),
                            t.U.P.lineTo(i, d, h);
                      else if ("o6" == T || "o7" == T)
                        for (
                          var M = o.length, A = "o6" == T, C = 0;
                          C < M;
                          C++
                        ) {
                          var k = o.shift();
                          A ? (d += k) : (h += k),
                            (A = !A),
                            t.U.P.lineTo(i, d, h);
                        }
                      else if ("o8" == T || "o24" == T) {
                        M = o.length;
                        for (var R = 0; R + 6 <= M; )
                          (p = d + o.shift()),
                            (v = h + o.shift()),
                            (m = p + o.shift()),
                            (g = v + o.shift()),
                            (d = m + o.shift()),
                            (h = g + o.shift()),
                            t.U.P.curveTo(i, p, v, m, g, d, h),
                            (R += 6);
                        "o24" == T &&
                          ((d += o.shift()),
                          (h += o.shift()),
                          t.U.P.lineTo(i, d, h));
                      } else {
                        if ("o11" == T) break;
                        if (
                          "o1234" == T ||
                          "o1235" == T ||
                          "o1236" == T ||
                          "o1237" == T
                        )
                          "o1234" == T &&
                            ((v = h),
                            (m = (p = d + o.shift()) + o.shift()),
                            (E = g = v + o.shift()),
                            (_ = g),
                            (x = h),
                            (d =
                              (b =
                                (y = (S = m + o.shift()) + o.shift()) +
                                o.shift()) + o.shift()),
                            t.U.P.curveTo(i, p, v, m, g, S, E),
                            t.U.P.curveTo(i, y, _, b, x, d, h)),
                            "o1235" == T &&
                              ((p = d + o.shift()),
                              (v = h + o.shift()),
                              (m = p + o.shift()),
                              (g = v + o.shift()),
                              (S = m + o.shift()),
                              (E = g + o.shift()),
                              (y = S + o.shift()),
                              (_ = E + o.shift()),
                              (b = y + o.shift()),
                              (x = _ + o.shift()),
                              (d = b + o.shift()),
                              (h = x + o.shift()),
                              o.shift(),
                              t.U.P.curveTo(i, p, v, m, g, S, E),
                              t.U.P.curveTo(i, y, _, b, x, d, h)),
                            "o1236" == T &&
                              ((p = d + o.shift()),
                              (v = h + o.shift()),
                              (m = p + o.shift()),
                              (E = g = v + o.shift()),
                              (_ = g),
                              (b =
                                (y = (S = m + o.shift()) + o.shift()) +
                                o.shift()),
                              (x = _ + o.shift()),
                              (d = b + o.shift()),
                              t.U.P.curveTo(i, p, v, m, g, S, E),
                              t.U.P.curveTo(i, y, _, b, x, d, h)),
                            "o1237" == T &&
                              ((p = d + o.shift()),
                              (v = h + o.shift()),
                              (m = p + o.shift()),
                              (g = v + o.shift()),
                              (S = m + o.shift()),
                              (E = g + o.shift()),
                              (y = S + o.shift()),
                              (_ = E + o.shift()),
                              (b = y + o.shift()),
                              (x = _ + o.shift()),
                              Math.abs(b - d) > Math.abs(x - h)
                                ? (d = b + o.shift())
                                : (h = x + o.shift()),
                              t.U.P.curveTo(i, p, v, m, g, S, E),
                              t.U.P.curveTo(i, y, _, b, x, d, h));
                        else if ("o14" == T) {
                          if (
                            (o.length > 0 &&
                              !l &&
                              ((u = o.shift() + r.nominalWidthX), (l = !0)),
                            4 == o.length)
                          ) {
                            var P = o.shift(),
                              U = o.shift(),
                              L = o.shift(),
                              D = o.shift(),
                              I = t.CFF.glyphBySE(r, L),
                              O = t.CFF.glyphBySE(r, D);
                            t.U._drawCFF(r.CharStrings[I], n, r, a, i),
                              (n.x = P),
                              (n.y = U),
                              t.U._drawCFF(r.CharStrings[O], n, r, a, i);
                          }
                          c && (t.U.P.closePath(i), (c = !1));
                        } else if ("o19" == T || "o20" == T)
                          o.length % 2 != 0 &&
                            !l &&
                            (u = o.shift() + a.nominalWidthX),
                            (s += o.length >> 1),
                            (o.length = 0),
                            (l = !0),
                            (f += (s + 7) >> 3);
                        else if ("o21" == T)
                          o.length > 2 &&
                            !l &&
                            ((u = o.shift() + a.nominalWidthX), (l = !0)),
                            (h += o.pop()),
                            (d += o.pop()),
                            c && t.U.P.closePath(i),
                            t.U.P.moveTo(i, d, h),
                            (c = !0);
                        else if ("o22" == T)
                          o.length > 1 &&
                            !l &&
                            ((u = o.shift() + a.nominalWidthX), (l = !0)),
                            (d += o.pop()),
                            c && t.U.P.closePath(i),
                            t.U.P.moveTo(i, d, h),
                            (c = !0);
                        else if ("o25" == T) {
                          for (; o.length > 6; )
                            (d += o.shift()),
                              (h += o.shift()),
                              t.U.P.lineTo(i, d, h);
                          (p = d + o.shift()),
                            (v = h + o.shift()),
                            (m = p + o.shift()),
                            (g = v + o.shift()),
                            (d = m + o.shift()),
                            (h = g + o.shift()),
                            t.U.P.curveTo(i, p, v, m, g, d, h);
                        } else if ("o26" == T)
                          for (o.length % 2 && (d += o.shift()); o.length > 0; )
                            (p = d),
                              (v = h + o.shift()),
                              (d = m = p + o.shift()),
                              (h = (g = v + o.shift()) + o.shift()),
                              t.U.P.curveTo(i, p, v, m, g, d, h);
                        else if ("o27" == T)
                          for (o.length % 2 && (h += o.shift()); o.length > 0; )
                            (v = h),
                              (m = (p = d + o.shift()) + o.shift()),
                              (g = v + o.shift()),
                              (d = m + o.shift()),
                              (h = g),
                              t.U.P.curveTo(i, p, v, m, g, d, h);
                        else if ("o10" == T || "o29" == T) {
                          var N = "o10" == T ? a : r;
                          if (0 == o.length)
                            console.debug("error: empty stack");
                          else {
                            var F = o.pop(),
                              z = N.Subrs[F + N.Bias];
                            (n.x = d),
                              (n.y = h),
                              (n.nStems = s),
                              (n.haveWidth = l),
                              (n.width = u),
                              (n.open = c),
                              t.U._drawCFF(z, n, r, a, i),
                              (d = n.x),
                              (h = n.y),
                              (s = n.nStems),
                              (l = n.haveWidth),
                              (u = n.width),
                              (c = n.open);
                          }
                        } else if ("o30" == T || "o31" == T) {
                          var B = o.length,
                            H = ((R = 0), "o31" == T);
                          for (R += B - (M = -3 & B); R < M; )
                            H
                              ? ((v = h),
                                (m = (p = d + o.shift()) + o.shift()),
                                (h = (g = v + o.shift()) + o.shift()),
                                M - R == 5
                                  ? ((d = m + o.shift()), R++)
                                  : (d = m),
                                (H = !1))
                              : ((p = d),
                                (v = h + o.shift()),
                                (m = p + o.shift()),
                                (g = v + o.shift()),
                                (d = m + o.shift()),
                                M - R == 5
                                  ? ((h = g + o.shift()), R++)
                                  : (h = g),
                                (H = !0)),
                              t.U.P.curveTo(i, p, v, m, g, d, h),
                              (R += 4);
                        } else {
                          if ("o" == (T + "").charAt(0))
                            throw (
                              (console.debug("Unknown operation: " + T, e), T)
                            );
                          o.push(T);
                        }
                      }
                    }
                    (n.x = d),
                      (n.y = h),
                      (n.nStems = s),
                      (n.haveWidth = l),
                      (n.width = u),
                      (n.open = c);
                  });
                var n = t,
                  r = { Typr: n };
                return (
                  (e.Typr = n),
                  (e.default = r),
                  Object.defineProperty(e, "__esModule", { value: !0 }),
                  e
                );
              })({}).Typr
            );
          },
          function () {
            return (function (e) {
              var t = Uint8Array,
                n = Uint16Array,
                r = Uint32Array,
                a = new t([
                  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4,
                  4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0,
                ]),
                i = new t([
                  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9,
                  9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0,
                ]),
                o = new t([
                  16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1,
                  15,
                ]),
                s = function (e, t) {
                  for (var a = new n(31), i = 0; i < 31; ++i)
                    a[i] = t += 1 << e[i - 1];
                  var o = new r(a[30]);
                  for (i = 1; i < 30; ++i)
                    for (var s = a[i]; s < a[i + 1]; ++s)
                      o[s] = ((s - a[i]) << 5) | i;
                  return [a, o];
                },
                l = s(a, 2),
                u = l[0],
                c = l[1];
              (u[28] = 258), (c[258] = 28);
              for (
                var f = s(i, 0)[0], d = new n(32768), h = 0;
                h < 32768;
                ++h
              ) {
                var p = ((43690 & h) >>> 1) | ((21845 & h) << 1);
                (p =
                  ((61680 & (p = ((52428 & p) >>> 2) | ((13107 & p) << 2))) >>>
                    4) |
                  ((3855 & p) << 4)),
                  (d[h] = (((65280 & p) >>> 8) | ((255 & p) << 8)) >>> 1);
              }
              var v = function (e, t, r) {
                  for (var a = e.length, i = 0, o = new n(t); i < a; ++i)
                    ++o[e[i] - 1];
                  var s,
                    l = new n(t);
                  for (i = 0; i < t; ++i) l[i] = (l[i - 1] + o[i - 1]) << 1;
                  if (r) {
                    s = new n(1 << t);
                    var u = 15 - t;
                    for (i = 0; i < a; ++i)
                      if (e[i])
                        for (
                          var c = (i << 4) | e[i],
                            f = t - e[i],
                            h = l[e[i] - 1]++ << f,
                            p = h | ((1 << f) - 1);
                          h <= p;
                          ++h
                        )
                          s[d[h] >>> u] = c;
                  } else
                    for (s = new n(a), i = 0; i < a; ++i)
                      e[i] && (s[i] = d[l[e[i] - 1]++] >>> (15 - e[i]));
                  return s;
                },
                m = new t(288);
              for (h = 0; h < 144; ++h) m[h] = 8;
              for (h = 144; h < 256; ++h) m[h] = 9;
              for (h = 256; h < 280; ++h) m[h] = 7;
              for (h = 280; h < 288; ++h) m[h] = 8;
              var g = new t(32);
              for (h = 0; h < 32; ++h) g[h] = 5;
              var y = v(m, 9, 1),
                _ = v(g, 5, 1),
                b = function (e) {
                  for (var t = e[0], n = 1; n < e.length; ++n)
                    e[n] > t && (t = e[n]);
                  return t;
                },
                x = function (e, t, n) {
                  var r = (t / 8) | 0;
                  return ((e[r] | (e[r + 1] << 8)) >> (7 & t)) & n;
                },
                S = function (e, t) {
                  var n = (t / 8) | 0;
                  return (e[n] | (e[n + 1] << 8) | (e[n + 2] << 16)) >> (7 & t);
                },
                E = [
                  "unexpected EOF",
                  "invalid block type",
                  "invalid length/literal",
                  "invalid distance",
                  "stream finished",
                  "no stream handler",
                  ,
                  "no callback",
                  "invalid UTF-8 data",
                  "extra field too long",
                  "date not in range 1980-2099",
                  "filename too long",
                  "stream finishing",
                  "invalid zip data",
                ],
                w = function e(t, n, r) {
                  var a = new Error(n || E[t]);
                  if (
                    ((a.code = t),
                    Error.captureStackTrace && Error.captureStackTrace(a, e),
                    !r)
                  )
                    throw a;
                  return a;
                },
                T = function (e, s, l) {
                  var c = e.length;
                  if (!c || (l && !l.l && c < 5)) return s || new t(0);
                  var d = !s || l,
                    h = !l || l.i;
                  l || (l = {}), s || (s = new t(3 * c));
                  var p,
                    m = function (e) {
                      var n = s.length;
                      if (e > n) {
                        var r = new t(Math.max(2 * n, e));
                        r.set(s), (s = r);
                      }
                    },
                    g = l.f || 0,
                    E = l.p || 0,
                    T = l.b || 0,
                    M = l.l,
                    A = l.d,
                    C = l.m,
                    k = l.n,
                    R = 8 * c;
                  do {
                    if (!M) {
                      l.f = g = x(e, E, 1);
                      var P = x(e, E + 1, 3);
                      if (((E += 3), !P)) {
                        var U =
                            e[
                              (V = (((p = E) / 8) | 0) + (7 & p && 1) + 4) - 4
                            ] |
                            (e[V - 3] << 8),
                          L = V + U;
                        if (L > c) {
                          h && w(0);
                          break;
                        }
                        d && m(T + U),
                          s.set(e.subarray(V, L), T),
                          (l.b = T += U),
                          (l.p = E = 8 * L);
                        continue;
                      }
                      if (1 == P) (M = y), (A = _), (C = 9), (k = 5);
                      else if (2 == P) {
                        var D = x(e, E, 31) + 257,
                          I = x(e, E + 10, 15) + 4,
                          O = D + x(e, E + 5, 31) + 1;
                        E += 14;
                        for (var N = new t(O), F = new t(19), z = 0; z < I; ++z)
                          F[o[z]] = x(e, E + 3 * z, 7);
                        E += 3 * I;
                        var B = b(F),
                          H = (1 << B) - 1,
                          G = v(F, B, 1);
                        for (z = 0; z < O; ) {
                          var V,
                            W = G[x(e, E, H)];
                          if (((E += 15 & W), (V = W >>> 4) < 16)) N[z++] = V;
                          else {
                            var j = 0,
                              X = 0;
                            for (
                              16 == V
                                ? ((X = 3 + x(e, E, 3)),
                                  (E += 2),
                                  (j = N[z - 1]))
                                : 17 == V
                                ? ((X = 3 + x(e, E, 7)), (E += 3))
                                : 18 == V &&
                                  ((X = 11 + x(e, E, 127)), (E += 7));
                              X--;

                            )
                              N[z++] = j;
                          }
                        }
                        var q = N.subarray(0, D),
                          Y = N.subarray(D);
                        (C = b(q)),
                          (k = b(Y)),
                          (M = v(q, C, 1)),
                          (A = v(Y, k, 1));
                      } else w(1);
                      if (E > R) {
                        h && w(0);
                        break;
                      }
                    }
                    d && m(T + 131072);
                    for (
                      var K = (1 << C) - 1, $ = (1 << k) - 1, Z = E;
                      ;
                      Z = E
                    ) {
                      var J = (j = M[S(e, E) & K]) >>> 4;
                      if ((E += 15 & j) > R) {
                        h && w(0);
                        break;
                      }
                      if ((j || w(2), J < 256)) s[T++] = J;
                      else {
                        if (256 == J) {
                          (Z = E), (M = null);
                          break;
                        }
                        var Q = J - 254;
                        if (J > 264) {
                          var ee = a[(z = J - 257)];
                          (Q = x(e, E, (1 << ee) - 1) + u[z]), (E += ee);
                        }
                        var te = A[S(e, E) & $],
                          ne = te >>> 4;
                        if (
                          (te || w(3),
                          (E += 15 & te),
                          (Y = f[ne]),
                          ne > 3 &&
                            ((ee = i[ne]),
                            (Y += S(e, E) & ((1 << ee) - 1)),
                            (E += ee)),
                          E > R)
                        ) {
                          h && w(0);
                          break;
                        }
                        d && m(T + 131072);
                        for (var re = T + Q; T < re; T += 4)
                          (s[T] = s[T - Y]),
                            (s[T + 1] = s[T + 1 - Y]),
                            (s[T + 2] = s[T + 2 - Y]),
                            (s[T + 3] = s[T + 3 - Y]);
                        T = re;
                      }
                    }
                    (l.l = M),
                      (l.p = Z),
                      (l.b = T),
                      M && ((g = 1), (l.m = C), (l.d = A), (l.n = k));
                  } while (!g);
                  return T == s.length
                    ? s
                    : (function (e, a, i) {
                        (null == a || a < 0) && (a = 0),
                          (null == i || i > e.length) && (i = e.length);
                        var o = new (
                          e instanceof n ? n : e instanceof r ? r : t
                        )(i - a);
                        return o.set(e.subarray(a, i)), o;
                      })(s, 0, T);
                },
                M = new t(0),
                A = "undefined" != typeof TextDecoder && new TextDecoder();
              try {
                A.decode(M, { stream: !0 });
              } catch (e) {}
              return (
                (e.convert_streams = function (e) {
                  var t = new DataView(e),
                    n = 0;
                  function r() {
                    var e = t.getUint16(n);
                    return (n += 2), e;
                  }
                  function a() {
                    var e = t.getUint32(n);
                    return (n += 4), e;
                  }
                  function i(e) {
                    g.setUint16(y, e), (y += 2);
                  }
                  function o(e) {
                    g.setUint32(y, e), (y += 4);
                  }
                  for (
                    var s = {
                        signature: a(),
                        flavor: a(),
                        length: a(),
                        numTables: r(),
                        reserved: r(),
                        totalSfntSize: a(),
                        majorVersion: r(),
                        minorVersion: r(),
                        metaOffset: a(),
                        metaLength: a(),
                        metaOrigLength: a(),
                        privOffset: a(),
                        privLength: a(),
                      },
                      l = 0;
                    Math.pow(2, l) <= s.numTables;

                  )
                    l++;
                  l--;
                  for (
                    var u = 16 * Math.pow(2, l),
                      c = 16 * s.numTables - u,
                      f = 12,
                      d = [],
                      h = 0;
                    h < s.numTables;
                    h++
                  )
                    d.push({
                      tag: a(),
                      offset: a(),
                      compLength: a(),
                      origLength: a(),
                      origChecksum: a(),
                    }),
                      (f += 16);
                  var p,
                    v = new Uint8Array(
                      12 +
                        16 * d.length +
                        d.reduce(function (e, t) {
                          return e + t.origLength + 4;
                        }, 0)
                    ),
                    m = v.buffer,
                    g = new DataView(m),
                    y = 0;
                  return (
                    o(s.flavor),
                    i(s.numTables),
                    i(u),
                    i(l),
                    i(c),
                    d.forEach(function (e) {
                      o(e.tag),
                        o(e.origChecksum),
                        o(f),
                        o(e.origLength),
                        (e.outOffset = f),
                        (f += e.origLength) % 4 != 0 && (f += 4 - (f % 4));
                    }),
                    d.forEach(function (t) {
                      var n,
                        r = e.slice(t.offset, t.offset + t.compLength);
                      if (t.compLength != t.origLength) {
                        var a = new Uint8Array(t.origLength);
                        (n = new Uint8Array(r, 2)), T(n, a);
                      } else a = new Uint8Array(r);
                      v.set(a, t.outOffset);
                      var i = 0;
                      (f = t.outOffset + t.origLength) % 4 != 0 &&
                        (i = 4 - (f % 4)),
                        v.set(
                          new Uint8Array(i).buffer,
                          t.outOffset + t.origLength
                        ),
                        (p = f + i);
                    }),
                    m.slice(0, p)
                  );
                }),
                Object.defineProperty(e, "__esModule", { value: !0 }),
                e
              );
            })({}).convert_streams;
          },
          function (e, t) {
            var n,
              r = { M: 2, L: 2, Q: 4, C: 6, Z: 0 },
              a = {
                C: "18g,ca,368,1kz",
                D: "17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",
                R: "17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",
                L: "x9u,jff,a,fd,jv",
                T: "4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n",
              },
              i = 1,
              s = 2,
              l = 4,
              u = 8,
              c = 16,
              f = 32;
            function d(e) {
              if (!n) {
                var t = { R: s, L: i, D: l, C: c, U: f, T: u };
                n = new Map();
                var r = function (e) {
                  var r = 0;
                  a[e].split(",").forEach(function (a) {
                    var i = o(a.split("+"), 2),
                      s = i[0],
                      l = i[1];
                    (s = parseInt(s, 36)),
                      (l = l ? parseInt(l, 36) : 0),
                      n.set((r += s), t[e]);
                    for (var u = l; u--; ) n.set(++r, t[e]);
                  });
                };
                for (var d in a) r(d);
              }
              return n.get(e) || f;
            }
            var h = 1,
              p = 2,
              v = 3,
              m = 4,
              g = [null, "isol", "init", "fina", "medi"];
            function y(e) {
              for (
                var t = new Uint8Array(e.length), n = f, r = h, a = -1, o = 0;
                o < e.length;
                o++
              ) {
                var g = e.codePointAt(o),
                  y = 0 | d(g),
                  _ = h;
                y & u ||
                  (n & (i | l | c)
                    ? y & (s | l | c)
                      ? ((_ = v), (r !== h && r !== v) || t[a]++)
                      : y & (i | f) && ((r !== p && r !== m) || t[a]--)
                    : n & (s | f) && ((r !== p && r !== m) || t[a]--),
                  (r = t[o] = _),
                  (n = y),
                  (a = o),
                  g > 65535 && o++);
              }
              return t;
            }
            function _(t, n) {
              var r = t.GDEF && t.GDEF.glyphClassDef;
              return r ? e.U._getGlyphClass(n, r) : 0;
            }
            function b() {
              for (
                var e = arguments.length, t = new Array(e), n = 0;
                n < e;
                n++
              )
                t[n] = arguments[n];
              for (var r = 0; r < t.length; r++)
                if ("number" === typeof t[r]) return t[r];
            }
            function x(t) {
              var n = Object.create(null),
                a = t["OS/2"],
                i = t.hhea,
                o = t.head.unitsPerEm,
                s = b(a && a.sTypoAscender, i && i.ascender, o),
                l = {
                  unitsPerEm: o,
                  ascender: s,
                  descender: b(a && a.sTypoDescender, i && i.descender, 0),
                  capHeight: b(a && a.sCapHeight, s),
                  xHeight: b(a && a.sxHeight, s),
                  lineGap: b(a && a.sTypoLineGap, i && i.lineGap),
                  supportsCodePoint: function (n) {
                    return e.U.codeToGlyph(t, n) > 0;
                  },
                  forEachGlyph: function (a, i, o, s) {
                    var u = 0,
                      c = (1 / l.unitsPerEm) * i,
                      f = (function (t, n) {
                        for (var r = [], a = 0; a < n.length; a++) {
                          var i = n.codePointAt(a);
                          i > 65535 && a++, r.push(e.U.codeToGlyph(t, i));
                        }
                        var o = t.GSUB;
                        if (o) {
                          var s,
                            l = o.lookupList,
                            u = o.featureList,
                            c =
                              /^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws|ccmp)$/,
                            f = [];
                          u.forEach(function (t) {
                            if (c.test(t.tag))
                              for (var a = 0; a < t.tab.length; a++)
                                if (!f[t.tab[a]]) {
                                  f[t.tab[a]] = !0;
                                  var i = l[t.tab[a]],
                                    o = /^(isol|init|fina|medi)$/.test(t.tag);
                                  o && !s && (s = y(n));
                                  for (var u = 0; u < r.length; u++)
                                    (s && o && g[s[u]] !== t.tag) ||
                                      e.U._applySubs(r, u, i, l);
                                }
                          });
                        }
                        return r;
                      })(t, a),
                      d = 0,
                      h = (function (t, n) {
                        for (
                          var r = new Int16Array(3 * n.length), a = 0;
                          a < n.length;
                          a++
                        ) {
                          var i = n[a];
                          if (-1 !== i) {
                            r[3 * a + 2] = t.hmtx.aWidth[i];
                            var o = t.GPOS;
                            if (o)
                              for (
                                var s = o.lookupList, l = 0;
                                l < s.length;
                                l++
                              )
                                for (
                                  var u = s[l], c = 0;
                                  c < u.tabs.length;
                                  c++
                                ) {
                                  var f = u.tabs[c];
                                  if (1 === u.ltype) {
                                    if (
                                      -1 !==
                                        e._lctf.coverageIndex(f.coverage, i) &&
                                      f.pos
                                    ) {
                                      O(f.pos, a);
                                      break;
                                    }
                                  } else if (2 === u.ltype) {
                                    var d = null,
                                      h = D();
                                    if (-1 !== h) {
                                      var p = e._lctf.coverageIndex(
                                        f.coverage,
                                        n[h]
                                      );
                                      if (-1 !== p) {
                                        if (1 === f.fmt)
                                          for (
                                            var v = f.pairsets[p], m = 0;
                                            m < v.length;
                                            m++
                                          )
                                            v[m].gid2 === i && (d = v[m]);
                                        else if (2 === f.fmt) {
                                          var g = e.U._getGlyphClass(
                                              n[h],
                                              f.classDef1
                                            ),
                                            y = e.U._getGlyphClass(
                                              i,
                                              f.classDef2
                                            );
                                          d = f.matrix[g][y];
                                        }
                                        if (d) {
                                          d.val1 && O(d.val1, h),
                                            d.val2 && O(d.val2, a);
                                          break;
                                        }
                                      }
                                    }
                                  } else if (4 === u.ltype) {
                                    var b = e._lctf.coverageIndex(
                                      f.markCoverage,
                                      i
                                    );
                                    if (-1 !== b) {
                                      var x = D(I),
                                        S =
                                          -1 === x
                                            ? -1
                                            : e._lctf.coverageIndex(
                                                f.baseCoverage,
                                                n[x]
                                              );
                                      if (-1 !== S) {
                                        var E = f.markArray[b],
                                          w = f.baseArray[S][E.markClass];
                                        (r[3 * a] =
                                          w.x - E.x + r[3 * x] - r[3 * x + 2]),
                                          (r[3 * a + 1] =
                                            w.y - E.y + r[3 * x + 1]);
                                        break;
                                      }
                                    }
                                  } else if (6 === u.ltype) {
                                    var T = e._lctf.coverageIndex(
                                      f.mark1Coverage,
                                      i
                                    );
                                    if (-1 !== T) {
                                      var M = D();
                                      if (-1 !== M) {
                                        var A = n[M];
                                        if (3 === _(t, A)) {
                                          var C = e._lctf.coverageIndex(
                                            f.mark2Coverage,
                                            A
                                          );
                                          if (-1 !== C) {
                                            var k = f.mark1Array[T],
                                              R = f.mark2Array[C][k.markClass];
                                            (r[3 * a] =
                                              R.x -
                                              k.x +
                                              r[3 * M] -
                                              r[3 * M + 2]),
                                              (r[3 * a + 1] =
                                                R.y - k.y + r[3 * M + 1]);
                                            break;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                            else if (t.kern && !t.cff) {
                              var P = D();
                              if (-1 !== P) {
                                var U = t.kern.glyph1.indexOf(n[P]);
                                if (-1 !== U) {
                                  var L = t.kern.rval[U].glyph2.indexOf(i);
                                  -1 !== L &&
                                    (r[3 * P + 2] += t.kern.rval[U].vals[L]);
                                }
                              }
                            }
                          }
                        }
                        return r;
                        function D(e) {
                          for (var t = a - 1; t >= 0; t--)
                            if (-1 !== n[t] && (!e || e(n[t]))) return t;
                          return -1;
                        }
                        function I(e) {
                          return 1 === _(t, e);
                        }
                        function O(e, t) {
                          for (var n = 0; n < 3; n++) r[3 * t + n] += e[n] || 0;
                        }
                      })(t, f);
                    return (
                      f.forEach(function (l, f) {
                        if (-1 !== l) {
                          var p = n[l];
                          if (!p) {
                            for (
                              var v,
                                m,
                                g,
                                y,
                                _ = e.U.glyphToPath(t, l),
                                b = _.cmds,
                                x = _.crds,
                                S = "",
                                E = 0,
                                w = 0,
                                T = b.length;
                              w < T;
                              w++
                            ) {
                              var M = r[b[w]];
                              S += b[w];
                              for (var A = 1; A <= M; A++)
                                S += (A > 1 ? "," : "") + x[E++];
                            }
                            if (x.length) {
                              (v = m = 1 / 0), (g = y = -1 / 0);
                              for (var C = 0, k = x.length; C < k; C += 2) {
                                var R = x[C],
                                  P = x[C + 1];
                                R < v && (v = R),
                                  P < m && (m = P),
                                  R > g && (g = R),
                                  P > y && (y = P);
                              }
                            } else v = g = m = y = 0;
                            p = n[l] = {
                              index: l,
                              advanceWidth: t.hmtx.aWidth[l],
                              xMin: v,
                              yMin: m,
                              xMax: g,
                              yMax: y,
                              path: S,
                            };
                          }
                          s.call(
                            null,
                            p,
                            u + h[3 * f] * c,
                            h[3 * f + 1] * c,
                            d
                          ),
                            (u += h[3 * f + 2] * c),
                            o && (u += o * i);
                        }
                        d += a.codePointAt(d) > 65535 ? 2 : 1;
                      }),
                      u
                    );
                  },
                };
              return l;
            }
            return function (n) {
              var r = new Uint8Array(n, 0, 4),
                a = e._bin.readASCII(r, 0, 4);
              if ("wOFF" === a) n = t(n);
              else if ("wOF2" === a)
                throw new Error("woff2 fonts not supported");
              return x(e.parse(n)[0]);
            };
          },
        ],
        init: function (e, t, n) {
          return n(e(), t());
        },
      });
      var Ys = Cs({
        name: "FontResolver",
        dependencies: [
          function (e, t) {
            var n = Object.create(null),
              r = Object.create(null);
            function a(t, a) {
              var i = n[t];
              i
                ? a(i)
                : r[t]
                ? r[t].push(a)
                : ((r[t] = [a]),
                  (function (t, n) {
                    var r = function (e) {
                      console.error("Failure loading font ".concat(t), e);
                    };
                    try {
                      var a = new XMLHttpRequest();
                      a.open("get", t, !0),
                        (a.responseType = "arraybuffer"),
                        (a.onload = function () {
                          if (a.status >= 400) r(new Error(a.statusText));
                          else if (a.status > 0)
                            try {
                              var i = e(a.response);
                              (i.src = t), n(i);
                            } catch (o) {
                              r(o);
                            }
                        }),
                        (a.onerror = r),
                        a.send();
                    } catch (i) {
                      r(i);
                    }
                  })(t, function (e) {
                    (e.src = t),
                      (n[t] = e),
                      r[t].forEach(function (t) {
                        return t(e);
                      }),
                      delete r[t];
                  }));
            }
            return function (e, r) {
              var i =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : {},
                s = i.lang,
                l = i.fonts,
                u = void 0 === l ? [] : l,
                c = i.style,
                f = void 0 === c ? "normal" : c,
                d = i.weight,
                h = void 0 === d ? "normal" : d,
                p = i.unicodeFontsURL,
                v = new Uint8Array(e.length),
                m = [];
              e.length || x();
              var g = new Map(),
                y = [];
              if (
                ("italic" !== f && (f = "normal"),
                "number" !== typeof h && (h = "bold" === h ? 700 : 400),
                u && !Array.isArray(u) && (u = [u]),
                (u = u
                  .slice()
                  .filter(function (e) {
                    return !e.lang || e.lang.test(s);
                  })
                  .reverse()).length)
              ) {
                var _ = 0;
                !(function t() {
                  for (
                    var r,
                      i = function (r) {
                        var i = e.codePointAt(r);
                        if (
                          (1 === _ && m[v[r - 1]].supportsCodePoint(i)) ||
                          /\s/.test(e[r])
                        )
                          (v[r] = v[r - 1]),
                            2 === _ && (y[y.length - 1][1] = r);
                        else
                          for (var l = v[r], c = u.length; l <= c; l++)
                            if (l === c) {
                              ((2 === _
                                ? y[y.length - 1]
                                : (y[y.length] = [r, r]))[1] = r),
                                (_ = 2);
                            } else {
                              v[r] = l;
                              var f = u[l],
                                d = f.src,
                                h = f.unicodeRange;
                              if (!h || S(i, h)) {
                                var p = n[d];
                                if (!p)
                                  return (
                                    a(d, function () {
                                      t(r);
                                    }),
                                    { v: void 0 }
                                  );
                                if (p.supportsCodePoint(i)) {
                                  var b = g.get(p);
                                  "number" !== typeof b &&
                                    ((b = m.length), m.push(p), g.set(p, b)),
                                    (v[r] = b),
                                    (_ = 1);
                                  break;
                                }
                              }
                            }
                        i > 65535 &&
                          r + 1 < s &&
                          ((v[r + 1] = v[r]),
                          r++,
                          2 === _ && (y[y.length - 1][1] = r)),
                          (o = r);
                      },
                      o =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 0,
                      s = e.length;
                    o < s;
                    o++
                  )
                    if ((r = i(o))) return r.v;
                  b();
                })();
              } else y.push([0, e.length - 1]), b();
              function b() {
                if (y.length) {
                  var n = y
                    .map(function (t) {
                      return e.substring(t[0], t[1] + 1);
                    })
                    .join("\n");
                  t.getFontsForString(n, {
                    lang: s || void 0,
                    style: f,
                    weight: h,
                    dataUrl: p,
                  }).then(function (e) {
                    var t = e.fontUrls,
                      n = e.chars,
                      r = m.length,
                      i = 0;
                    y.forEach(function (e) {
                      for (var t = 0, a = e[1] - e[0]; t <= a; t++)
                        v[e[0] + t] = n[i++] + r;
                      i++;
                    });
                    var o = 0;
                    t.forEach(function (e, n) {
                      a(e, function (e) {
                        (m[n + r] = e), ++o === t.length && x();
                      });
                    });
                  });
                } else x();
              }
              function x() {
                r({ chars: v, fonts: m });
              }
              function S(e, t) {
                for (var n = 0; n < t.length; n++) {
                  var r = o(t[n], 2),
                    a = r[0],
                    i = r[1];
                  if (a <= e && e <= (void 0 === i ? a : i)) return !0;
                }
                return !1;
              }
            };
          },
          qs,
          function () {
            return (function (e) {
              var t = function () {
                this.buckets = new Map();
              };
              (t.prototype.add = function (e) {
                var t = e >> 5;
                this.buckets.set(
                  t,
                  (this.buckets.get(t) || 0) | (1 << (31 & e))
                );
              }),
                (t.prototype.has = function (e) {
                  var t = this.buckets.get(e >> 5);
                  return void 0 !== t && 0 != (t & (1 << (31 & e)));
                }),
                (t.prototype.serialize = function () {
                  var e = [];
                  return (
                    this.buckets.forEach(function (t, n) {
                      e.push((+n).toString(36) + ":" + t.toString(36));
                    }),
                    e.join(",")
                  );
                }),
                (t.prototype.deserialize = function (e) {
                  var t = this;
                  this.buckets.clear(),
                    e.split(",").forEach(function (e) {
                      var n = e.split(":");
                      t.buckets.set(parseInt(n[0], 36), parseInt(n[1], 36));
                    });
                });
              var n = Math.pow(2, 8),
                r = n - 1,
                a = ~r;
              function i(e) {
                var t = (function (e) {
                    return e & a;
                  })(e).toString(16),
                  r = (function (e) {
                    return (e & a) + n - 1;
                  })(e).toString(16);
                return (
                  "codepoint-index/plane" +
                  (e >> 16) +
                  "/" +
                  t +
                  "-" +
                  r +
                  ".json"
                );
              }
              function o(e, t) {
                var n = e & r,
                  a = t.codePointAt((n / 6) | 0);
                return 0 != ((a = (a || 48) - 48) & (1 << n % 6));
              }
              function s(e, t) {
                !(function (e, t) {
                  var n;
                  ((n = e),
                  n
                    .replace(/U\+/gi, "")
                    .replace(/^,+|,+$/g, "")
                    .split(/,+/)
                    .map(function (e) {
                      return e.split("-").map(function (e) {
                        return parseInt(e.trim(), 16);
                      });
                    })).forEach(function (e) {
                    var n = e[0],
                      r = e[1];
                    void 0 === r && (r = n), t(n, r);
                  });
                })(e, function (e, n) {
                  for (var r = e; r <= n; r++) t(r);
                });
              }
              var l = {},
                u = {},
                c = new WeakMap(),
                f =
                  "https://cdn.jsdelivr.net/gh/lojjic/unicode-font-resolver@v1.0.1/packages/data";
              function d(e) {
                var n = c.get(e);
                return (
                  n ||
                    ((n = new t()),
                    s(e.ranges, function (e) {
                      return n.add(e);
                    }),
                    c.set(e, n)),
                  n
                );
              }
              var h,
                p = new Map();
              function v(e, t, n) {
                return e[t]
                  ? t
                  : e[n]
                  ? n
                  : (function (e) {
                      for (var t in e) return t;
                    })(e);
              }
              function m(e, t) {
                var n = t;
                if (!e.includes(n)) {
                  n = 1 / 0;
                  for (var r = 0; r < e.length; r++)
                    Math.abs(e[r] - t) < Math.abs(n - t) && (n = e[r]);
                }
                return n;
              }
              function g(e) {
                return (
                  h ||
                    ((h = new Set()),
                    s(
                      "9-D,20,85,A0,1680,2000-200A,2028-202F,205F,3000",
                      function (e) {
                        h.add(e);
                      }
                    )),
                  h.has(e)
                );
              }
              return (
                (e.CodePointSet = t),
                (e.clearCache = function () {
                  (l = {}), (u = {});
                }),
                (e.getFontsForString = function (e, t) {
                  void 0 === t && (t = {});
                  var n,
                    r = t.lang;
                  void 0 === r &&
                    (r =
                      /[\u1100-\u11FF\u302E\u302F\u3131-\u318E\u3200-\u321E\u3260-\u327E\uA960-\uA97C\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/.test(
                        (n = e)
                      )
                        ? "ko"
                        : /(?:[\u3041-\u3096\u309D-\u309F]|\uD82C[\uDC01-\uDD1F\uDD32\uDD50-\uDD52]|\uD83C\uDE00)|(?:[\u30A1-\u30FA\u30FD-\u30FF\u31F0-\u31FF\u32D0-\u32FE\u3300-\u3357\uFF66-\uFF6F\uFF71-\uFF9D]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00\uDD20-\uDD22\uDD55\uDD64-\uDD67])/.test(
                            n
                          )
                        ? "ja"
                        : "en");
                  var a = t.category;
                  void 0 === a && (a = "sans-serif");
                  var s = t.style;
                  void 0 === s && (s = "normal");
                  var c = t.weight;
                  void 0 === c && (c = 400);
                  var h = (t.dataUrl || f).replace(/\/$/g, ""),
                    y = new Map(),
                    _ = new Uint8Array(e.length),
                    b = {},
                    x = {},
                    S = new Array(e.length),
                    E = new Map(),
                    w = !1;
                  function T(e) {
                    var t = p.get(e);
                    return (
                      t ||
                        ((t = fetch(h + "/" + e)
                          .then(function (e) {
                            if (!e.ok) throw new Error(e.statusText);
                            return e.json().then(function (e) {
                              if (!Array.isArray(e) || 1 !== e[0])
                                throw new Error(
                                  "Incorrect schema version; need 1, got " +
                                    e[0]
                                );
                              return e[1];
                            });
                          })
                          .catch(function (t) {
                            if (h !== f)
                              return (
                                w ||
                                  (console.error(
                                    'unicode-font-resolver: Failed loading from dataUrl "' +
                                      h +
                                      '", trying default CDN. ' +
                                      t.message
                                  ),
                                  (w = !0)),
                                (h = f),
                                p.delete(e),
                                T(e)
                              );
                            throw t;
                          })),
                        p.set(e, t)),
                      t
                    );
                  }
                  for (
                    var M = function (t) {
                        var n = e.codePointAt(t),
                          r = i(n);
                        (S[t] = r),
                          l[r] ||
                            E.has(r) ||
                            E.set(
                              r,
                              T(r).then(function (e) {
                                l[r] = e;
                              })
                            ),
                          n > 65535 && (t++, (A = t));
                      },
                      A = 0;
                    A < e.length;
                    A++
                  )
                    M(A);
                  return Promise.all(E.values())
                    .then(function () {
                      E.clear();
                      for (
                        var t = function (t) {
                            var a = e.codePointAt(t),
                              i = null,
                              s = l[S[t]],
                              c = void 0;
                            for (var f in s) {
                              var d = x[f];
                              if (
                                (void 0 === d &&
                                  (d = x[f] = new RegExp(f).test(r || "en")),
                                d)
                              ) {
                                for (var h in ((c = f), s[f]))
                                  if (o(a, s[f][h])) {
                                    i = h;
                                    break;
                                  }
                                break;
                              }
                            }
                            if (!i)
                              e: for (var p in s)
                                if (p !== c)
                                  for (var v in s[p])
                                    if (o(a, s[p][v])) {
                                      i = v;
                                      break e;
                                    }
                            i ||
                              (console.debug(
                                "No font coverage for U+" + a.toString(16)
                              ),
                              (i = "latin")),
                              (S[t] = i),
                              u[i] ||
                                E.has(i) ||
                                E.set(
                                  i,
                                  T("font-meta/" + i + ".json").then(function (
                                    e
                                  ) {
                                    u[i] = e;
                                  })
                                ),
                              a > 65535 && (t++, (n = t));
                          },
                          n = 0;
                        n < e.length;
                        n++
                      )
                        t(n);
                      return Promise.all(E.values());
                    })
                    .then(function () {
                      for (var t, n = null, r = 0; r < e.length; r++) {
                        var i = e.codePointAt(r);
                        if (n && (g(i) || d(n).has(i))) _[r] = _[r - 1];
                        else {
                          n = u[S[r]];
                          var o = b[n.id];
                          if (!o) {
                            var l = n.typeforms,
                              f = v(l, a, "sans-serif"),
                              p = v(l[f], s, "normal"),
                              x = m(
                                null === (t = l[f]) || void 0 === t
                                  ? void 0
                                  : t[p],
                                c
                              );
                            o = b[n.id] =
                              h +
                              "/font-files/" +
                              n.id +
                              "/" +
                              f +
                              "." +
                              p +
                              "." +
                              x +
                              ".woff";
                          }
                          var E = y.get(o);
                          null == E && ((E = y.size), y.set(o, E)), (_[r] = E);
                        }
                        i > 65535 && (r++, (_[r] = _[r - 1]));
                      }
                      return { fontUrls: Array.from(y.keys()), chars: _ };
                    });
                }),
                Object.defineProperty(e, "__esModule", { value: !0 }),
                e
              );
            })({});
          },
        ],
        init: function (e, t, n) {
          return e(t, n());
        },
      });
      var Ks,
        $s = function () {
          return (self.performance || Date).now();
        },
        Zs = Ps();
      var Js = [],
        Qs = 0;
      function el() {
        for (var e = $s(); Js.length && $s() - e < 5; ) Js.shift()();
        Qs = Js.length ? setTimeout(el, 0) : 0;
      }
      var tl = function () {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return new Promise(function (e, n) {
            Js.push(function () {
              var r = $s();
              try {
                var a;
                (a = Zs.webgl).generateIntoCanvas.apply(a, t),
                  e({ timing: $s() - r });
              } catch (i) {
                n(i);
              }
            }),
              Qs || (Qs = setTimeout(el, 0));
          });
        },
        nl = 4,
        rl = 2e3,
        al = {},
        il = 0;
      function ol(e, t, n, r, a, i, o, s, l, u) {
        var c = "TroikaTextSDFGenerator_JS_" + (il++ % nl),
          f = al[c];
        return (
          f ||
            (f = al[c] =
              {
                workerModule: Cs({
                  name: c,
                  workerId: c,
                  dependencies: [Ps, $s],
                  init: function (e, t) {
                    var n = e().javascript.generate;
                    return function () {
                      var e = t();
                      return {
                        textureData: n.apply(void 0, arguments),
                        timing: t() - e,
                      };
                    };
                  },
                  getTransferables: function (e) {
                    return [e.textureData.buffer];
                  },
                }),
                requests: 0,
                idleTimer: null,
              }),
          f.requests++,
          clearTimeout(f.idleTimer),
          f.workerModule(e, t, n, r, a, i).then(function (n) {
            for (
              var r = n.textureData,
                a = n.timing,
                i = $s(),
                d = new Uint8Array(4 * r.length),
                h = 0;
              h < r.length;
              h++
            )
              d[4 * h + u] = r[h];
            return (
              Zs.webglUtils.renderImageData(o, d, s, l, e, t, 1 << (3 - u)),
              (a += $s() - i),
              0 === --f.requests &&
                (f.idleTimer = setTimeout(function () {
                  !(function (e) {
                    Ms[e] &&
                      Ms[e].forEach(function (e) {
                        e();
                      }),
                      Ts[e] && (Ts[e].terminate(), delete Ts[e]);
                  })(c);
                }, rl)),
              { timing: a }
            );
          })
        );
      }
      var sl = Zs.webglUtils.resizeWebGLCanvasWithoutClearing,
        ll = {
          defaultFontURL: null,
          unicodeFontsURL: null,
          sdfGlyphSize: 64,
          sdfMargin: 1 / 16,
          sdfExponent: 9,
          textureWidth: 2048,
        },
        ul = new Wn();
      function cl() {
        return (self.performance || Date).now();
      }
      var fl,
        dl = Object.create(null);
      function hl(e, t) {
        !0, (e = vl({}, e));
        var n = cl(),
          r = ll.defaultFontURL,
          a = [];
        if (
          (r && a.push({ label: "default", src: ml(r) }),
          e.font && a.push({ label: "user", src: ml(e.font) }),
          (e.font = a),
          (e.text = "" + e.text),
          (e.sdfGlyphSize = e.sdfGlyphSize || ll.sdfGlyphSize),
          (e.unicodeFontsURL = e.unicodeFontsURL || ll.unicodeFontsURL),
          null != e.colorRanges)
        ) {
          var i = {};
          for (var o in e.colorRanges)
            if (e.colorRanges.hasOwnProperty(o)) {
              var s = e.colorRanges[o];
              "number" !== typeof s && (s = ul.set(s).getHex()), (i[o] = s);
            }
          e.colorRanges = i;
        }
        Object.freeze(e);
        var l = ll.textureWidth,
          u = ll.sdfExponent,
          c = e.sdfGlyphSize,
          f = (l / c) * 4,
          d = dl[c];
        if (!d) {
          var h = document.createElement("canvas");
          (h.width = l),
            (h.height = (256 * c) / f),
            ((d = dl[c] =
              {
                glyphCount: 0,
                sdfGlyphSize: c,
                sdfCanvas: h,
                sdfTexture: new yt(h, void 0, void 0, void 0, ee, ee),
                contextLost: !1,
                glyphsByFont: new Map(),
              }).sdfTexture.generateMipmaps = !1),
            (function (e) {
              var t = e.sdfCanvas;
              t.addEventListener("webglcontextlost", function (t) {
                console.log("Context Lost", t),
                  t.preventDefault(),
                  (e.contextLost = !0);
              }),
                t.addEventListener("webglcontextrestored", function (t) {
                  console.log("Context Restored", t), (e.contextLost = !1);
                  var n = [];
                  e.glyphsByFont.forEach(function (t) {
                    t.forEach(function (t) {
                      n.push(pl(t, e, !0));
                    });
                  }),
                    Promise.all(n).then(function () {
                      gl(e), (e.sdfTexture.needsUpdate = !0);
                    });
                });
            })(d);
        }
        var p = d,
          v = p.sdfTexture,
          m = p.sdfCanvas;
        _l(e).then(function (r) {
          var a = r.glyphIds,
            i = r.glyphFontIndices,
            o = r.fontData,
            s = r.glyphPositions,
            h = r.fontSize,
            p = r.timings,
            g = [],
            y = new Float32Array(4 * a.length),
            _ = 0,
            b = 0,
            x = cl(),
            S = o.map(function (e) {
              var t = d.glyphsByFont.get(e.src);
              return t || d.glyphsByFont.set(e.src, (t = new Map())), t;
            });
          a.forEach(function (e, t) {
            var n = i[t],
              l = o[n],
              u = l.src,
              f = l.unitsPerEm,
              p = S[n].get(e);
            if (!p) {
              var v = r.glyphData[u][e],
                m = v.path,
                x = v.pathBounds,
                E =
                  (Math.max(x[2] - x[0], x[3] - x[1]) / c) *
                  (ll.sdfMargin * c + 0.5),
                w = d.glyphCount++,
                T = [x[0] - E, x[1] - E, x[2] + E, x[3] + E];
              S[n].set(e, (p = { path: m, atlasIndex: w, sdfViewBox: T })),
                g.push(p);
            }
            var M = p.sdfViewBox,
              A = s[b++],
              C = s[b++],
              k = h / f;
            (y[_++] = A + M[0] * k),
              (y[_++] = C + M[1] * k),
              (y[_++] = A + M[2] * k),
              (y[_++] = C + M[3] * k),
              (a[t] = p.atlasIndex);
          }),
            (p.quads = (p.quads || 0) + (cl() - x));
          var E = cl();
          p.sdf = {};
          var w = m.height,
            T = Math.ceil(d.glyphCount / f),
            M = Math.pow(2, Math.ceil(Math.log2(T * c)));
          M > w &&
            (console.info(
              "Increasing SDF texture size ".concat(w, "->").concat(M)
            ),
            sl(m, l, M),
            v.dispose()),
            Promise.all(
              g.map(function (t) {
                return pl(t, d, e.gpuAccelerateSDF).then(function (e) {
                  var n = e.timing;
                  p.sdf[t.atlasIndex] = n;
                });
              })
            ).then(function () {
              g.length && !d.contextLost && (gl(d), (v.needsUpdate = !0)),
                (p.sdfTotal = cl() - E),
                (p.total = cl() - n),
                t(
                  Object.freeze({
                    parameters: e,
                    sdfTexture: v,
                    sdfGlyphSize: c,
                    sdfExponent: u,
                    glyphBounds: y,
                    glyphAtlasIndices: a,
                    glyphColors: r.glyphColors,
                    caretPositions: r.caretPositions,
                    chunkedBounds: r.chunkedBounds,
                    ascender: r.ascender,
                    descender: r.descender,
                    lineHeight: r.lineHeight,
                    capHeight: r.capHeight,
                    xHeight: r.xHeight,
                    topBaseline: r.topBaseline,
                    blockBounds: r.blockBounds,
                    visibleBounds: r.visibleBounds,
                    timings: r.timings,
                  })
                );
            });
        }),
          Promise.resolve().then(function () {
            d.contextLost ||
              (function (e) {
                e._warm || (Zs.webgl.isSupported(e), (e._warm = !0));
              })(m);
          });
      }
      function pl(e, t, n) {
        var r = e.path,
          a = e.atlasIndex,
          i = e.sdfViewBox,
          o = t.sdfGlyphSize,
          s = t.sdfCanvas;
        if (t.contextLost) return Promise.resolve({ timing: -1 });
        var l = ll.textureWidth,
          u = ll.sdfExponent,
          c = Math.max(i[2] - i[0], i[3] - i[1]),
          f = Math.floor(a / 4);
        return (function (e, t, n, r, a, i, o, s, l, u) {
          return arguments.length > 10 &&
            void 0 !== arguments[10] &&
            !arguments[10]
            ? ol(e, t, n, r, a, i, o, s, l, u)
            : tl(e, t, n, r, a, i, o, s, l, u).then(null, function (c) {
                return (
                  Ks ||
                    (console.warn(
                      "WebGL SDF generation failed, falling back to JS",
                      c
                    ),
                    (Ks = !0)),
                  ol(e, t, n, r, a, i, o, s, l, u)
                );
              });
        })(
          o,
          o,
          r,
          i,
          c,
          u,
          s,
          (f % (l / o)) * o,
          Math.floor(f / (l / o)) * o,
          a % 4,
          n
        );
      }
      function vl(e, t) {
        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
        return e;
      }
      function ml(e) {
        return (
          fl ||
            (fl =
              "undefined" === typeof document
                ? {}
                : document.createElement("a")),
          (fl.href = e),
          fl.href
        );
      }
      function gl(e) {
        if ("function" !== typeof createImageBitmap) {
          console.info("Safari<15: applying SDF canvas workaround");
          var t = e.sdfCanvas,
            n = e.sdfTexture,
            r = t.width,
            a = t.height,
            i = e.sdfCanvas.getContext("webgl"),
            o = n.image.data;
          (o && o.length === r * a * 4) ||
            ((o = new Uint8Array(r * a * 4)),
            (n.image = { width: r, height: a, data: o }),
            (n.flipY = !1),
            (n.isDataTexture = !0)),
            i.readPixels(0, 0, r, a, i.RGBA, i.UNSIGNED_BYTE, o);
        }
      }
      var yl = Cs({
          name: "Typesetter",
          dependencies: [
            function (e, t) {
              var n = 1 / 0,
                r =
                  /[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,
                a = "[^\\S\\u00A0]",
                i = new RegExp(
                  "".concat(
                    a,
                    "|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]"
                  )
                );
              function s(s, d) {
                var h = s.text,
                  p = void 0 === h ? "" : h,
                  v = s.font,
                  m = s.lang,
                  g = (s.sdfGlyphSize, s.fontSize),
                  y = void 0 === g ? 400 : g,
                  _ = s.fontWeight,
                  b = void 0 === _ ? 1 : _,
                  x = s.fontStyle,
                  S = void 0 === x ? "normal" : x,
                  E = s.letterSpacing,
                  w = void 0 === E ? 0 : E,
                  T = s.lineHeight,
                  M = void 0 === T ? "normal" : T,
                  A = s.maxWidth,
                  C = void 0 === A ? n : A,
                  k = s.direction,
                  R = s.textAlign,
                  P = void 0 === R ? "left" : R,
                  U = s.textIndent,
                  L = void 0 === U ? 0 : U,
                  D = s.whiteSpace,
                  I = void 0 === D ? "normal" : D,
                  O = s.overflowWrap,
                  N = void 0 === O ? "normal" : O,
                  F = s.anchorX,
                  z = void 0 === F ? 0 : F,
                  B = s.anchorY,
                  H = void 0 === B ? 0 : B,
                  G = s.metricsOnly,
                  V = void 0 !== G && G,
                  W = s.unicodeFontsURL,
                  j = s.preResolvedFonts,
                  X = void 0 === j ? null : j,
                  q = s.includeCaretPositions,
                  Y = void 0 !== q && q,
                  K = s.chunkedBoundsSize,
                  $ = void 0 === K ? 8192 : K,
                  Z = s.colorRanges,
                  J = void 0 === Z ? null : Z,
                  Q = c(),
                  ee = { fontLoad: 0, typesetting: 0 };
                p.indexOf("\r") > -1 &&
                  (console.info(
                    "Typesetter: got text with \\r chars; normalizing to \\n"
                  ),
                  (p = p.replace(/\r\n/g, "\n").replace(/\r/g, "\n"))),
                  (y = +y),
                  (w = +w),
                  (C = +C),
                  (M = M || "normal"),
                  (L = +L),
                  (function (t, n) {
                    var r = t.text,
                      a = t.lang,
                      i = t.fonts,
                      o = t.style,
                      s = t.weight,
                      l = t.preResolvedFonts,
                      u = t.unicodeFontsURL,
                      c = function (e) {
                        for (
                          var t, r, a = e.chars, i = e.fonts, o = [], s = 0;
                          s < a.length;
                          s++
                        )
                          a[s] !== r
                            ? ((r = a[s]),
                              o.push(
                                (t = { start: s, end: s, fontObj: i[a[s]] })
                              ))
                            : (t.end = s);
                        n(o);
                      };
                    l
                      ? c(l)
                      : e(r, c, {
                          lang: a,
                          fonts: i,
                          style: o,
                          weight: s,
                          unicodeFontsURL: u,
                        });
                  })(
                    {
                      text: p,
                      lang: m,
                      style: S,
                      weight: b,
                      fonts: "string" === typeof v ? [{ src: v }] : v,
                      unicodeFontsURL: W,
                      preResolvedFonts: X,
                    },
                    function (e) {
                      ee.fontLoad = c() - Q;
                      var s = isFinite(C),
                        h = null,
                        v = null,
                        m = null,
                        g = null,
                        _ = null,
                        b = null,
                        x = null,
                        S = null,
                        E = 0,
                        T = 0,
                        A = "nowrap" !== I,
                        R = new Map(),
                        U = c(),
                        D = L,
                        O = 0,
                        F = new f(),
                        B = [F];
                      e.forEach(function (e) {
                        var t = e.fontObj,
                          n = t.ascender,
                          o = t.descender,
                          l = t.unitsPerEm,
                          u = t.lineGap,
                          c = t.capHeight,
                          d = t.xHeight,
                          h = R.get(t);
                        if (!h) {
                          var v = y / l,
                            m = "normal" === M ? (n - o + u) * v : M * y,
                            g = (m - (n - o) * v) / 2,
                            _ = Math.min(m, (n - o) * v),
                            b = ((n + o) / 2) * v + _ / 2;
                          (h = {
                            index: R.size,
                            src: t.src,
                            fontObj: t,
                            fontSizeMult: v,
                            unitsPerEm: l,
                            ascender: n * v,
                            descender: o * v,
                            capHeight: c * v,
                            xHeight: d * v,
                            lineHeight: m,
                            baseline: -g - n * v,
                            caretTop: ((n + o) / 2) * v + _ / 2,
                            caretBottom: b - _,
                          }),
                            R.set(t, h);
                        }
                        var x,
                          S,
                          k = h.fontSizeMult,
                          P = p.slice(e.start, e.end + 1);
                        t.forEachGlyph(P, y, w, function (t, n, o, l) {
                          (n += O), (l += e.start), (x = n), (S = t);
                          var u,
                            c = p.charAt(l),
                            d = t.advanceWidth * k,
                            v = F.count;
                          if (
                            ("isEmpty" in t ||
                              ((t.isWhitespace = !!c && new RegExp(a).test(c)),
                              (t.canBreakAfter = !!c && i.test(c)),
                              (t.isEmpty =
                                t.xMin === t.xMax ||
                                t.yMin === t.yMax ||
                                r.test(c))),
                            t.isWhitespace || t.isEmpty || T++,
                            A && s && !t.isWhitespace && n + d + D > C && v)
                          ) {
                            if (F.glyphAt(v - 1).glyphObj.canBreakAfter)
                              (u = new f()), (D = -n);
                            else
                              for (var m = v; m--; ) {
                                if (0 === m && "break-word" === N) {
                                  (u = new f()), (D = -n);
                                  break;
                                }
                                if (F.glyphAt(m).glyphObj.canBreakAfter) {
                                  var g = (u = F.splitAt(m + 1)).glyphAt(0).x;
                                  D -= g;
                                  for (var _ = u.count; _--; )
                                    u.glyphAt(_).x -= g;
                                  break;
                                }
                              }
                            u &&
                              ((F.isSoftWrapped = !0),
                              (F = u),
                              B.push(F),
                              (E = C));
                          }
                          var b = F.glyphAt(F.count);
                          (b.glyphObj = t),
                            (b.x = n + D),
                            (b.y = o),
                            (b.width = d),
                            (b.charIndex = l),
                            (b.fontData = h),
                            "\n" === c &&
                              ((F = new f()),
                              B.push(F),
                              (D = -(n + d + w * y) + L));
                        }),
                          (O = x + S.advanceWidth * k + w * y);
                      });
                      var G = 0;
                      B.forEach(function (e) {
                        for (var t = !0, n = e.count; n--; ) {
                          var r = e.glyphAt(n);
                          t &&
                            !r.glyphObj.isWhitespace &&
                            ((e.width = r.x + r.width),
                            e.width > E && (E = e.width),
                            (t = !1));
                          var a = r.fontData,
                            i = a.lineHeight,
                            o = a.capHeight,
                            s = a.xHeight,
                            l = a.baseline;
                          i > e.lineHeight && (e.lineHeight = i);
                          var u = l - e.baseline;
                          u < 0 &&
                            ((e.baseline += u), (e.cap += u), (e.ex += u)),
                            (e.cap = Math.max(e.cap, e.baseline + o)),
                            (e.ex = Math.max(e.ex, e.baseline + s));
                        }
                        (e.baseline -= G),
                          (e.cap -= G),
                          (e.ex -= G),
                          (G += e.lineHeight);
                      });
                      var W = 0,
                        j = 0;
                      if (
                        (z &&
                          ("number" === typeof z
                            ? (W = -z)
                            : "string" === typeof z &&
                              (W =
                                -E *
                                ("left" === z
                                  ? 0
                                  : "center" === z
                                  ? 0.5
                                  : "right" === z
                                  ? 1
                                  : l(z)))),
                        H &&
                          ("number" === typeof H
                            ? (j = -H)
                            : "string" === typeof H &&
                              (j =
                                "top" === H
                                  ? 0
                                  : "top-baseline" === H
                                  ? -B[0].baseline
                                  : "top-cap" === H
                                  ? -B[0].cap
                                  : "top-ex" === H
                                  ? -B[0].ex
                                  : "middle" === H
                                  ? G / 2
                                  : "bottom" === H
                                  ? G
                                  : "bottom-baseline" === H
                                  ? B[B.length - 1].baseline
                                  : l(H) * G)),
                        !V)
                      ) {
                        var X = t.getEmbeddingLevels(p, k);
                        (h = new Uint16Array(T)),
                          (v = new Uint8Array(T)),
                          (m = new Float32Array(2 * T)),
                          (g = {}),
                          (x = [n, n, -n, -n]),
                          (S = []),
                          Y && (b = new Float32Array(4 * p.length)),
                          J && (_ = new Uint8Array(3 * T));
                        var q,
                          K,
                          Z = 0,
                          te = -1,
                          ne = -1;
                        if (
                          (B.forEach(function (e, r) {
                            var a = e.count,
                              i = e.width;
                            if (a > 0) {
                              for (
                                var s = 0, l = a;
                                l-- && e.glyphAt(l).glyphObj.isWhitespace;

                              )
                                s++;
                              var c = 0,
                                f = 0;
                              if ("center" === P) c = (E - i) / 2;
                              else if ("right" === P) c = E - i;
                              else if ("justify" === P && e.isSoftWrapped) {
                                for (var d = 0, y = a - s; y--; )
                                  e.glyphAt(y).glyphObj.isWhitespace && d++;
                                f = (E - i) / d;
                              }
                              if (f || c)
                                for (var w = 0, T = 0; T < a; T++) {
                                  var M = e.glyphAt(T),
                                    A = M.glyphObj;
                                  (M.x += c + w),
                                    0 !== f &&
                                      A.isWhitespace &&
                                      T < a - s &&
                                      ((w += f), (M.width += f));
                                }
                              for (
                                var C,
                                  k = t.getReorderSegments(
                                    p,
                                    X,
                                    e.glyphAt(0).charIndex,
                                    e.glyphAt(e.count - 1).charIndex
                                  ),
                                  R = 0;
                                R < k.length;
                                R++
                              )
                                for (
                                  var U = o(k[R], 2),
                                    L = U[0],
                                    D = U[1],
                                    I = 1 / 0,
                                    O = -1 / 0,
                                    N = 0;
                                  N < a;
                                  N++
                                )
                                  if (e.glyphAt(N).charIndex >= L) {
                                    for (var F = N, z = N; z < a; z++) {
                                      var B = e.glyphAt(z);
                                      if (B.charIndex > D) break;
                                      z < a - s &&
                                        ((I = Math.min(I, B.x)),
                                        (O = Math.max(O, B.x + B.width)));
                                    }
                                    for (var H = F; H < z; H++) {
                                      var G = e.glyphAt(H);
                                      G.x = O - (G.x + G.width - I);
                                    }
                                    break;
                                  }
                              for (
                                var V = function (e) {
                                    return (C = e);
                                  },
                                  Q = 0;
                                Q < a;
                                Q++
                              ) {
                                var ee = e.glyphAt(Q),
                                  re = (C = ee.glyphObj).index,
                                  ae = 1 & X.levels[ee.charIndex];
                                if (ae) {
                                  var ie = t.getMirroredCharacter(
                                    p[ee.charIndex]
                                  );
                                  ie &&
                                    ee.fontData.fontObj.forEachGlyph(
                                      ie,
                                      0,
                                      0,
                                      V
                                    );
                                }
                                if (Y) {
                                  var oe = ee.charIndex,
                                    se = ee.fontData,
                                    le = ee.x + W,
                                    ue = ee.x + ee.width + W;
                                  (b[4 * oe] = ae ? ue : le),
                                    (b[4 * oe + 1] = ae ? le : ue),
                                    (b[4 * oe + 2] =
                                      e.baseline + se.caretBottom + j),
                                    (b[4 * oe + 3] =
                                      e.baseline + se.caretTop + j);
                                  var ce = oe - te;
                                  ce > 1 && u(b, te, ce), (te = oe);
                                }
                                if (J)
                                  for (var fe = ee.charIndex; fe > ne; )
                                    ne++, J.hasOwnProperty(ne) && (K = J[ne]);
                                if (!C.isWhitespace && !C.isEmpty) {
                                  var de = Z++,
                                    he = ee.fontData,
                                    pe = he.fontSizeMult,
                                    ve = he.src,
                                    me = he.index,
                                    ge = g[ve] || (g[ve] = {});
                                  ge[re] ||
                                    (ge[re] = {
                                      path: C.path,
                                      pathBounds: [
                                        C.xMin,
                                        C.yMin,
                                        C.xMax,
                                        C.yMax,
                                      ],
                                    });
                                  var ye = ee.x + W,
                                    _e = ee.y + e.baseline + j;
                                  (m[2 * de] = ye), (m[2 * de + 1] = _e);
                                  var be = ye + C.xMin * pe,
                                    xe = _e + C.yMin * pe,
                                    Se = ye + C.xMax * pe,
                                    Ee = _e + C.yMax * pe;
                                  be < x[0] && (x[0] = be),
                                    xe < x[1] && (x[1] = xe),
                                    Se > x[2] && (x[2] = Se),
                                    Ee > x[3] && (x[3] = Ee),
                                    de % $ === 0 &&
                                      ((q = {
                                        start: de,
                                        end: de,
                                        rect: [n, n, -n, -n],
                                      }),
                                      S.push(q)),
                                    q.end++;
                                  var we = q.rect;
                                  if (
                                    (be < we[0] && (we[0] = be),
                                    xe < we[1] && (we[1] = xe),
                                    Se > we[2] && (we[2] = Se),
                                    Ee > we[3] && (we[3] = Ee),
                                    (h[de] = re),
                                    (v[de] = me),
                                    J)
                                  ) {
                                    var Te = 3 * de;
                                    (_[Te] = (K >> 16) & 255),
                                      (_[Te + 1] = (K >> 8) & 255),
                                      (_[Te + 2] = 255 & K);
                                  }
                                }
                              }
                            }
                          }),
                          b)
                        ) {
                          var re = p.length - te;
                          re > 1 && u(b, te, re);
                        }
                      }
                      var ae = [];
                      R.forEach(function (e) {
                        var t = e.index,
                          n = e.src,
                          r = e.unitsPerEm,
                          a = e.ascender,
                          i = e.descender,
                          o = e.lineHeight,
                          s = e.capHeight,
                          l = e.xHeight;
                        ae[t] = {
                          src: n,
                          unitsPerEm: r,
                          ascender: a,
                          descender: i,
                          lineHeight: o,
                          capHeight: s,
                          xHeight: l,
                        };
                      }),
                        (ee.typesetting = c() - U),
                        d({
                          glyphIds: h,
                          glyphFontIndices: v,
                          glyphPositions: m,
                          glyphData: g,
                          fontData: ae,
                          caretPositions: b,
                          glyphColors: _,
                          chunkedBounds: S,
                          fontSize: y,
                          topBaseline: j + B[0].baseline,
                          blockBounds: [W, j - G, W + E, j],
                          visibleBounds: x,
                          timings: ee,
                        });
                    }
                  );
              }
              function l(e) {
                var t = e.match(/^([\d.]+)%$/),
                  n = t ? parseFloat(t[1]) : NaN;
                return isNaN(n) ? 0 : n / 100;
              }
              function u(e, t, n) {
                for (
                  var r = e[4 * t],
                    a = e[4 * t + 1],
                    i = e[4 * t + 2],
                    o = e[4 * t + 3],
                    s = (a - r) / n,
                    l = 0;
                  l < n;
                  l++
                ) {
                  var u = 4 * (t + l);
                  (e[u] = r + s * l),
                    (e[u + 1] = r + s * (l + 1)),
                    (e[u + 2] = i),
                    (e[u + 3] = o);
                }
              }
              function c() {
                return (self.performance || Date).now();
              }
              function f() {
                this.data = [];
              }
              var d = ["glyphObj", "x", "y", "width", "charIndex", "fontData"];
              return (
                (f.prototype = {
                  width: 0,
                  lineHeight: 0,
                  baseline: 0,
                  cap: 0,
                  ex: 0,
                  isSoftWrapped: !1,
                  get count() {
                    return Math.ceil(this.data.length / d.length);
                  },
                  glyphAt: function (e) {
                    var t = f.flyweight;
                    return (t.data = this.data), (t.index = e), t;
                  },
                  splitAt: function (e) {
                    var t = new f();
                    return (t.data = this.data.splice(e * d.length)), t;
                  },
                }),
                (f.flyweight = d.reduce(
                  function (e, t, n, r) {
                    return (
                      Object.defineProperty(e, t, {
                        get: function () {
                          return this.data[this.index * d.length + n];
                        },
                        set: function (e) {
                          this.data[this.index * d.length + n] = e;
                        },
                      }),
                      e
                    );
                  },
                  { data: null, index: 0 }
                )),
                {
                  typeset: s,
                  measure: function (e, t) {
                    s(_s(_s({}, e), {}, { metricsOnly: !0 }), function (e) {
                      var n = o(e.blockBounds, 4),
                        r = n[0],
                        a = n[1],
                        i = n[2],
                        s = n[3];
                      t({ width: i - r, height: s - a });
                    });
                  },
                }
              );
            },
            Ys,
            Us,
          ],
          init: function (e, t, n) {
            return e(t, n());
          },
        }),
        _l = Cs({
          name: "Typesetter",
          dependencies: [yl],
          init: function (e) {
            return function (t) {
              return new Promise(function (n) {
                e.typeset(t, n);
              });
            };
          },
          getTransferables: function (e) {
            var t = [];
            for (var n in e) e[n] && e[n].buffer && t.push(e[n].buffer);
            return t;
          },
        });
      var bl = {};
      var xl = "aTroikaGlyphIndex",
        Sl = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e;
            return (
              w(this, n),
              ((e = t.call(this)).detail = 1),
              (e.curveRadius = 0),
              (e.groups = [
                { start: 0, count: 1 / 0, materialIndex: 0 },
                { start: 0, count: 1 / 0, materialIndex: 1 },
              ]),
              (e.boundingSphere = new Xt()),
              (e.boundingBox = new Ct()),
              e
            );
          }
          return (
            M(n, [
              { key: "computeBoundingSphere", value: function () {} },
              { key: "computeBoundingBox", value: function () {} },
              {
                key: "setSide",
                value: function (e) {
                  var t = this.getIndex().count;
                  this.setDrawRange(e === U ? t / 2 : 0, 2 === e ? t : t / 2);
                },
              },
              {
                key: "detail",
                get: function () {
                  return this._detail;
                },
                set: function (e) {
                  var t = this;
                  if (e !== this._detail) {
                    (this._detail = e),
                      ("number" !== typeof e || e < 1) && (e = 1);
                    var n = (function (e) {
                      var t = bl[e];
                      if (!t) {
                        for (
                          var n = new Kr(1, 1, e, e),
                            r = n.clone(),
                            a = n.attributes,
                            i = r.attributes,
                            o = new lr(),
                            s = a.uv.count,
                            l = 0;
                          l < s;
                          l++
                        )
                          (i.position.array[3 * l] *= -1),
                            (i.normal.array[3 * l + 2] *= -1);
                        ["position", "normal", "uv"].forEach(function (e) {
                          o.setAttribute(
                            e,
                            new er(
                              [].concat(f(a[e].array), f(i[e].array)),
                              a[e].itemSize
                            )
                          );
                        }),
                          o.setIndex(
                            [].concat(
                              f(n.index.array),
                              f(
                                r.index.array.map(function (e) {
                                  return e + s;
                                })
                              )
                            )
                          ),
                          o.translate(0.5, 0.5, 0),
                          (t = bl[e] = o);
                      }
                      return t;
                    })(e);
                    ["position", "normal", "uv"].forEach(function (e) {
                      t.attributes[e] = n.attributes[e].clone();
                    }),
                      this.setIndex(n.getIndex().clone());
                  }
                },
              },
              {
                key: "curveRadius",
                get: function () {
                  return this._curveRadius;
                },
                set: function (e) {
                  e !== this._curveRadius &&
                    ((this._curveRadius = e), this._updateBounds());
                },
              },
              {
                key: "updateGlyphs",
                value: function (e, t, n, r, a) {
                  El(this, "aTroikaGlyphBounds", e, 4),
                    El(this, xl, t, 1),
                    El(this, "aTroikaGlyphColor", a, 3),
                    (this._blockBounds = n),
                    (this._chunkedBounds = r),
                    (this.instanceCount = t.length),
                    this._updateBounds();
                },
              },
              {
                key: "_updateBounds",
                value: function () {
                  var e = this._blockBounds;
                  if (e) {
                    var t = this.curveRadius,
                      n = this.boundingBox;
                    if (t) {
                      var r = Math.PI,
                        a = Math.floor,
                        i = Math.min,
                        o = Math.max,
                        s = Math.sin,
                        l = Math.cos,
                        u = r / 2,
                        c = 2 * r,
                        f = Math.abs(t),
                        d = e[0] / f,
                        h = e[2] / f,
                        p =
                          a((d + u) / c) !== a((h + u) / c)
                            ? -f
                            : i(s(d) * f, s(h) * f),
                        v =
                          a((d - u) / c) !== a((h - u) / c)
                            ? f
                            : o(s(d) * f, s(h) * f),
                        m =
                          a((d + r) / c) !== a((h + r) / c)
                            ? 2 * f
                            : o(f - l(d) * f, f - l(h) * f);
                      n.min.set(p, e[1], t < 0 ? -m : 0),
                        n.max.set(v, e[3], t < 0 ? 0 : m);
                    } else n.min.set(e[0], e[1], 0), n.max.set(e[2], e[3], 0);
                    n.getBoundingSphere(this.boundingSphere);
                  }
                },
              },
              {
                key: "applyClipRect",
                value: function (e) {
                  var t = this.getAttribute(xl).count,
                    n = this._chunkedBounds;
                  if (n)
                    for (var r = n.length; r--; ) {
                      t = n[r].end;
                      var a = n[r].rect;
                      if (a[1] < e.w && a[3] > e.y && a[0] < e.z && a[2] > e.x)
                        break;
                    }
                  this.instanceCount = t;
                },
              },
            ]),
            n
          );
        })(us);
      function El(e, t, n, r) {
        var a = e.getAttribute(t);
        n
          ? a && a.array.length === n.length
            ? (a.array.set(n), (a.needsUpdate = !0))
            : (e.setAttribute(t, new Uo(n, r)),
              delete e._maxInstanceCount,
              e.dispose())
          : a && e.deleteAttribute(t);
      }
      var wl =
          "\nvec4 bounds = aTroikaGlyphBounds;\nbounds.xz += uTroikaPositionOffset.x;\nbounds.yw -= uTroikaPositionOffset.y;\n\nvec4 outlineBounds = vec4(\n  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,\n  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius\n);\nvec4 clippedBounds = vec4(\n  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\n  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\n);\n\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\n\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\n\nuv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);\n\nfloat rad = uTroikaCurveRadius;\nif (rad != 0.0) {\n  float angle = position.x / rad;\n  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);\n  normal.xz = vec2(sin(angle), cos(angle));\n}\n  \nposition = uTroikaOrient * position;\nnormal = uTroikaOrient * normal;\n\nvTroikaGlyphUV = clippedXY.xy;\nvTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);\n\n".concat(
            "\nfloat txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\nvec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\nvec2 txStartUV = txUvPerSquare * vec2(\n  mod(floor(aTroikaGlyphIndex / 4.0), txCols),\n  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)\n);\nvTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);\nvTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);\n"
          ),
        Tl =
          "\nuniform sampler2D uTroikaSDFTexture;\nuniform vec2 uTroikaSDFTextureSize;\nuniform float uTroikaSDFGlyphSize;\nuniform float uTroikaSDFExponent;\nuniform float uTroikaDistanceOffset;\nuniform float uTroikaFillOpacity;\nuniform float uTroikaOutlineOpacity;\nuniform float uTroikaBlurRadius;\nuniform vec3 uTroikaStrokeColor;\nuniform float uTroikaStrokeWidth;\nuniform float uTroikaStrokeOpacity;\nuniform bool uTroikaSDFDebug;\nvarying vec2 vTroikaGlyphUV;\nvarying vec4 vTroikaTextureUVBounds;\nvarying float vTroikaTextureChannel;\nvarying vec2 vTroikaGlyphDimensions;\n\nfloat troikaSdfValueToSignedDistance(float alpha) {\n  // Inverse of exponential encoding in webgl-sdf-generator\n  ".concat(
            "\n  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);\n  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;\n  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);\n  return signedDist;\n}\n\nfloat troikaGlyphUvToSdfValue(vec2 glyphUV) {\n  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);\n  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);\n  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1\n  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;\n}\n\nfloat troikaGlyphUvToDistance(vec2 uv) {\n  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));\n}\n\nfloat troikaGetAADist() {\n  ",
            "\n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\n  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;\n  #else\n  return vTroikaGlyphDimensions.x / 64.0;\n  #endif\n}\n\nfloat troikaGetFragDistValue() {\n  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);\n  float distance = troikaGlyphUvToDistance(clampedGlyphUV);\n \n  // Extrapolate distance when outside bounds:\n  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : \n    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\n\n  ",
            "\n\n  return distance;\n}\n\nfloat troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\n  float alpha = step(-distanceOffset, -distance);\n  #else\n\n  float alpha = smoothstep(\n    distanceOffset + aaDist,\n    distanceOffset - aaDist,\n    distance\n  );\n  #endif\n\n  return alpha;\n}\n"
          );
      var Ml = new Yn({ color: 16777215, side: 2, transparent: !0 }),
        Al = 8421504,
        Cl = new tn(),
        kl = new Tt(),
        Rl = new Tt(),
        Pl = [],
        Ul = new Tt(),
        Ll = "+x+y";
      function Dl(e) {
        return Array.isArray(e) ? e[0] : e;
      }
      var Il = function () {
          var e = new Mr(new Kr(1, 1), Ml);
          return (
            (Il = function () {
              return e;
            }),
            e
          );
        },
        Ol = function () {
          var e = new Mr(new Kr(1, 1, 32, 1), Ml);
          return (
            (Ol = function () {
              return e;
            }),
            e
          );
        },
        Nl = { type: "syncstart" },
        Fl = { type: "synccomplete" },
        zl = [
          "font",
          "fontSize",
          "fontStyle",
          "fontWeight",
          "lang",
          "letterSpacing",
          "lineHeight",
          "maxWidth",
          "overflowWrap",
          "text",
          "direction",
          "textAlign",
          "textIndent",
          "whiteSpace",
          "anchorX",
          "anchorY",
          "colorRanges",
          "sdfGlyphSize",
        ],
        Bl = zl.concat(
          "material",
          "color",
          "depthOffset",
          "clipRect",
          "curveRadius",
          "orientation",
          "glyphGeometryDetail"
        ),
        Hl = (function (e) {
          y(n, e);
          var t = b(n);
          function n() {
            var e;
            w(this, n);
            var r = new Sl();
            return (
              ((e = t.call(this, r, null)).text = ""),
              (e.anchorX = 0),
              (e.anchorY = 0),
              (e.curveRadius = 0),
              (e.direction = "auto"),
              (e.font = null),
              (e.unicodeFontsURL = null),
              (e.fontSize = 0.1),
              (e.fontWeight = "normal"),
              (e.fontStyle = "normal"),
              (e.lang = null),
              (e.letterSpacing = 0),
              (e.lineHeight = "normal"),
              (e.maxWidth = 1 / 0),
              (e.overflowWrap = "normal"),
              (e.textAlign = "left"),
              (e.textIndent = 0),
              (e.whiteSpace = "normal"),
              (e.material = null),
              (e.color = null),
              (e.colorRanges = null),
              (e.outlineWidth = 0),
              (e.outlineColor = 0),
              (e.outlineOpacity = 1),
              (e.outlineBlur = 0),
              (e.outlineOffsetX = 0),
              (e.outlineOffsetY = 0),
              (e.strokeWidth = 0),
              (e.strokeColor = Al),
              (e.strokeOpacity = 1),
              (e.fillOpacity = 1),
              (e.depthOffset = 0),
              (e.clipRect = null),
              (e.orientation = Ll),
              (e.glyphGeometryDetail = 1),
              (e.sdfGlyphSize = null),
              (e.gpuAccelerateSDF = !0),
              (e.debugSDF = !1),
              e
            );
          }
          return (
            M(n, [
              {
                key: "sync",
                value: function (e) {
                  var t = this;
                  this._needsSync &&
                    ((this._needsSync = !1),
                    this._isSyncing
                      ? (this._queuedSyncs || (this._queuedSyncs = [])).push(e)
                      : ((this._isSyncing = !0),
                        this.dispatchEvent(Nl),
                        hl(
                          {
                            text: this.text,
                            font: this.font,
                            lang: this.lang,
                            fontSize: this.fontSize || 0.1,
                            fontWeight: this.fontWeight || "normal",
                            fontStyle: this.fontStyle || "normal",
                            letterSpacing: this.letterSpacing || 0,
                            lineHeight: this.lineHeight || "normal",
                            maxWidth: this.maxWidth,
                            direction: this.direction || "auto",
                            textAlign: this.textAlign,
                            textIndent: this.textIndent,
                            whiteSpace: this.whiteSpace,
                            overflowWrap: this.overflowWrap,
                            anchorX: this.anchorX,
                            anchorY: this.anchorY,
                            colorRanges: this.colorRanges,
                            includeCaretPositions: !0,
                            sdfGlyphSize: this.sdfGlyphSize,
                            gpuAccelerateSDF: this.gpuAccelerateSDF,
                            unicodeFontsURL: this.unicodeFontsURL,
                          },
                          function (n) {
                            (t._isSyncing = !1),
                              (t._textRenderInfo = n),
                              t.geometry.updateGlyphs(
                                n.glyphBounds,
                                n.glyphAtlasIndices,
                                n.blockBounds,
                                n.chunkedBounds,
                                n.glyphColors
                              );
                            var r = t._queuedSyncs;
                            r &&
                              ((t._queuedSyncs = null),
                              (t._needsSync = !0),
                              t.sync(function () {
                                r.forEach(function (e) {
                                  return e && e();
                                });
                              })),
                              t.dispatchEvent(Fl),
                              e && e();
                          }
                        )));
                },
              },
              {
                key: "onBeforeRender",
                value: function (e, t, n, r, a, i) {
                  this.sync(),
                    a.isTroikaTextMaterial && this._prepareForRender(a),
                    (a._hadOwnSide = a.hasOwnProperty("side")),
                    this.geometry.setSide((a._actualSide = a.side)),
                    (a.side = P);
                },
              },
              {
                key: "onAfterRender",
                value: function (e, t, n, r, a, i) {
                  a._hadOwnSide ? (a.side = a._actualSide) : delete a.side;
                },
              },
              {
                key: "dispose",
                value: function () {
                  this.geometry.dispose();
                },
              },
              {
                key: "textRenderInfo",
                get: function () {
                  return this._textRenderInfo || null;
                },
              },
              {
                key: "material",
                get: function () {
                  var e = this._derivedMaterial,
                    t =
                      this._baseMaterial ||
                      this._defaultMaterial ||
                      (this._defaultMaterial = Ml.clone());
                  if (
                    ((e && e.baseMaterial === t) ||
                      ((e = this._derivedMaterial =
                        (function (e) {
                          var t = Gs(e, {
                            chained: !0,
                            extensions: { derivatives: !0 },
                            uniforms: {
                              uTroikaSDFTexture: { value: null },
                              uTroikaSDFTextureSize: { value: new Je() },
                              uTroikaSDFGlyphSize: { value: 0 },
                              uTroikaSDFExponent: { value: 0 },
                              uTroikaTotalBounds: { value: new _t(0, 0, 0, 0) },
                              uTroikaClipRect: { value: new _t(0, 0, 0, 0) },
                              uTroikaDistanceOffset: { value: 0 },
                              uTroikaOutlineOpacity: { value: 0 },
                              uTroikaFillOpacity: { value: 1 },
                              uTroikaPositionOffset: { value: new Je() },
                              uTroikaCurveRadius: { value: 0 },
                              uTroikaBlurRadius: { value: 0 },
                              uTroikaStrokeWidth: { value: 0 },
                              uTroikaStrokeColor: { value: new Wn() },
                              uTroikaStrokeOpacity: { value: 1 },
                              uTroikaOrient: { value: new Qe() },
                              uTroikaUseGlyphColors: { value: !0 },
                              uTroikaSDFDebug: { value: !1 },
                            },
                            vertexDefs:
                              "\nuniform vec2 uTroikaSDFTextureSize;\nuniform float uTroikaSDFGlyphSize;\nuniform vec4 uTroikaTotalBounds;\nuniform vec4 uTroikaClipRect;\nuniform mat3 uTroikaOrient;\nuniform bool uTroikaUseGlyphColors;\nuniform float uTroikaDistanceOffset;\nuniform float uTroikaBlurRadius;\nuniform vec2 uTroikaPositionOffset;\nuniform float uTroikaCurveRadius;\nattribute vec4 aTroikaGlyphBounds;\nattribute float aTroikaGlyphIndex;\nattribute vec3 aTroikaGlyphColor;\nvarying vec2 vTroikaGlyphUV;\nvarying vec4 vTroikaTextureUVBounds;\nvarying float vTroikaTextureChannel;\nvarying vec3 vTroikaGlyphColor;\nvarying vec2 vTroikaGlyphDimensions;\n",
                            vertexTransform: wl,
                            fragmentDefs: Tl,
                            fragmentColorTransform:
                              "\nfloat aaDist = troikaGetAADist();\nfloat fragDistance = troikaGetFragDistValue();\nfloat edgeAlpha = uTroikaSDFDebug ?\n  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :\n  troikaGetEdgeAlpha(fragDistance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));\n\n#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)\nvec4 fillRGBA = gl_FragColor;\nfillRGBA.a *= uTroikaFillOpacity;\nvec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);\nif (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;\ngl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(\n  -uTroikaStrokeWidth - aaDist,\n  -uTroikaStrokeWidth + aaDist,\n  fragDistance\n));\ngl_FragColor.a *= edgeAlpha;\n#endif\n\nif (edgeAlpha == 0.0) {\n  discard;\n}\n",
                            customRewriter: function (e) {
                              var t = e.vertexShader,
                                n = e.fragmentShader,
                                r = /\buniform\s+vec3\s+diffuse\b/;
                              return (
                                r.test(n) &&
                                  ((n = n
                                    .replace(
                                      r,
                                      "varying vec3 vTroikaGlyphColor"
                                    )
                                    .replace(
                                      /\bdiffuse\b/g,
                                      "vTroikaGlyphColor"
                                    )),
                                  r.test(t) ||
                                    (t = t.replace(
                                      Ls,
                                      "uniform vec3 diffuse;\n$&\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\n"
                                    ))),
                                { vertexShader: t, fragmentShader: n }
                              );
                            },
                          });
                          return (
                            (t.transparent = !0),
                            Object.defineProperties(t, {
                              isTroikaTextMaterial: { value: !0 },
                              shadowSide: {
                                get: function () {
                                  return this.side;
                                },
                                set: function () {},
                              },
                            }),
                            t
                          );
                        })(t)),
                      t.addEventListener("dispose", function n() {
                        t.removeEventListener("dispose", n), e.dispose();
                      })),
                    this.outlineWidth ||
                      this.outlineBlur ||
                      this.outlineOffsetX ||
                      this.outlineOffsetY)
                  ) {
                    var n = e._outlineMtl;
                    return (
                      n ||
                        (((n = e._outlineMtl =
                          Object.create(e, {
                            id: { value: e.id + 0.1 },
                          })).isTextOutlineMaterial = !0),
                        (n.depthWrite = !1),
                        (n.map = null),
                        e.addEventListener("dispose", function t() {
                          e.removeEventListener("dispose", t), n.dispose();
                        })),
                      [n, e]
                    );
                  }
                  return e;
                },
                set: function (e) {
                  e && e.isTroikaTextMaterial
                    ? ((this._derivedMaterial = e),
                      (this._baseMaterial = e.baseMaterial))
                    : (this._baseMaterial = e);
                },
              },
              {
                key: "glyphGeometryDetail",
                get: function () {
                  return this.geometry.detail;
                },
                set: function (e) {
                  this.geometry.detail = e;
                },
              },
              {
                key: "curveRadius",
                get: function () {
                  return this.geometry.curveRadius;
                },
                set: function (e) {
                  this.geometry.curveRadius = e;
                },
              },
              {
                key: "customDepthMaterial",
                get: function () {
                  return Dl(this.material).getDepthMaterial();
                },
              },
              {
                key: "customDistanceMaterial",
                get: function () {
                  return Dl(this.material).getDistanceMaterial();
                },
              },
              {
                key: "_prepareForRender",
                value: function (e) {
                  var t = e.isTextOutlineMaterial,
                    n = e.uniforms,
                    r = this.textRenderInfo;
                  if (r) {
                    var a = r.sdfTexture,
                      i = r.blockBounds;
                    (n.uTroikaSDFTexture.value = a),
                      n.uTroikaSDFTextureSize.value.set(
                        a.image.width,
                        a.image.height
                      ),
                      (n.uTroikaSDFGlyphSize.value = r.sdfGlyphSize),
                      (n.uTroikaSDFExponent.value = r.sdfExponent),
                      n.uTroikaTotalBounds.value.fromArray(i),
                      (n.uTroikaUseGlyphColors.value = !t && !!r.glyphColors);
                    var s,
                      l,
                      u,
                      c = 0,
                      f = 0,
                      d = 0,
                      h = 0,
                      p = 0;
                    if (t) {
                      var v = this.outlineWidth,
                        m = this.outlineOffsetX,
                        g = this.outlineOffsetY,
                        y = this.outlineBlur,
                        _ = this.outlineOpacity;
                      (c = this._parsePercent(v) || 0),
                        (f = Math.max(0, this._parsePercent(y) || 0)),
                        (s = _),
                        (h = this._parsePercent(m) || 0),
                        (p = this._parsePercent(g) || 0);
                    } else
                      (d = Math.max(
                        0,
                        this._parsePercent(this.strokeWidth) || 0
                      )) &&
                        ((u = this.strokeColor),
                        n.uTroikaStrokeColor.value.set(null == u ? Al : u),
                        null == (l = this.strokeOpacity) && (l = 1)),
                        (s = this.fillOpacity);
                    (n.uTroikaDistanceOffset.value = c),
                      n.uTroikaPositionOffset.value.set(h, p),
                      (n.uTroikaBlurRadius.value = f),
                      (n.uTroikaStrokeWidth.value = d),
                      (n.uTroikaStrokeOpacity.value = l),
                      (n.uTroikaFillOpacity.value = null == s ? 1 : s),
                      (n.uTroikaCurveRadius.value = this.curveRadius || 0);
                    var b = this.clipRect;
                    if (b && Array.isArray(b) && 4 === b.length)
                      n.uTroikaClipRect.value.fromArray(b);
                    else {
                      var x = 100 * (this.fontSize || 0.1);
                      n.uTroikaClipRect.value.set(
                        i[0] - x,
                        i[1] - x,
                        i[2] + x,
                        i[3] + x
                      );
                    }
                    this.geometry.applyClipRect(n.uTroikaClipRect.value);
                  }
                  (n.uTroikaSDFDebug.value = !!this.debugSDF),
                    (e.polygonOffset = !!this.depthOffset),
                    (e.polygonOffsetFactor = e.polygonOffsetUnits =
                      this.depthOffset || 0);
                  var S = t ? this.outlineColor || 0 : this.color;
                  if (null == S) delete e.color;
                  else {
                    var E = e.hasOwnProperty("color")
                      ? e.color
                      : (e.color = new Wn());
                    (S === E._input && "object" !== typeof S) ||
                      E.set((E._input = S));
                  }
                  var w = this.orientation || Ll;
                  if (w !== e._orientation) {
                    var T = n.uTroikaOrient.value,
                      M =
                        (w = w.replace(/[^-+xyz]/g, "")) !== Ll &&
                        w.match(/^([-+])([xyz])([-+])([xyz])$/);
                    if (M) {
                      var A = o(M, 5),
                        C = A[1],
                        k = A[2],
                        R = A[3],
                        P = A[4];
                      (kl.set(0, 0, 0)[k] = "-" === C ? 1 : -1),
                        (Rl.set(0, 0, 0)[P] = "-" === R ? -1 : 1),
                        Cl.lookAt(Ul, kl.cross(Rl), Rl),
                        T.setFromMatrix4(Cl);
                    } else T.identity();
                    e._orientation = w;
                  }
                },
              },
              {
                key: "_parsePercent",
                value: function (e) {
                  if ("string" === typeof e) {
                    var t = e.match(/^(-?[\d.]+)%$/),
                      n = t ? parseFloat(t[1]) : NaN;
                    e = (isNaN(n) ? 0 : n / 100) * this.fontSize;
                  }
                  return e;
                },
              },
              {
                key: "localPositionToTextCoords",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : new Je();
                  t.copy(e);
                  var n = this.curveRadius;
                  return (
                    n &&
                      (t.x =
                        Math.atan2(e.x, Math.abs(n) - Math.abs(e.z)) *
                        Math.abs(n)),
                    t
                  );
                },
              },
              {
                key: "worldPositionToTextCoords",
                value: function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : new Je();
                  return (
                    kl.copy(e),
                    this.localPositionToTextCoords(this.worldToLocal(kl), t)
                  );
                },
              },
              {
                key: "raycast",
                value: function (e, t) {
                  var n = this.textRenderInfo,
                    r = this.curveRadius;
                  if (n) {
                    for (
                      var a = n.blockBounds,
                        i = r ? Ol() : Il(),
                        o = i.geometry,
                        s = o.attributes,
                        l = s.position,
                        u = s.uv,
                        c = 0;
                      c < u.count;
                      c++
                    ) {
                      var f = a[0] + u.getX(c) * (a[2] - a[0]),
                        d = a[1] + u.getY(c) * (a[3] - a[1]),
                        h = 0;
                      r &&
                        ((h = r - Math.cos(f / r) * r),
                        (f = Math.sin(f / r) * r)),
                        l.setXYZ(c, f, d, h);
                    }
                    (o.boundingSphere = this.geometry.boundingSphere),
                      (o.boundingBox = this.geometry.boundingBox),
                      (i.matrixWorld = this.matrixWorld),
                      (i.material.side = this.material.side),
                      (Pl.length = 0),
                      i.raycast(e, Pl);
                    for (var p = 0; p < Pl.length; p++)
                      (Pl[p].object = this), t.push(Pl[p]);
                  }
                },
              },
              {
                key: "copy",
                value: function (e) {
                  var t = this,
                    r = this.geometry;
                  return (
                    v(p(n.prototype), "copy", this).call(this, e),
                    (this.geometry = r),
                    Bl.forEach(function (n) {
                      t[n] = e[n];
                    }),
                    this
                  );
                },
              },
              {
                key: "clone",
                value: function () {
                  return new this.constructor().copy(this);
                },
              },
            ]),
            n
          );
        })(Mr);
      zl.forEach(function (e) {
        var t = "_private_" + e;
        Object.defineProperty(Hl.prototype, e, {
          get: function () {
            return this[t];
          },
          set: function (e) {
            e !== this[t] && ((this[t] = e), (this._needsSync = !0));
          },
        });
      });
      new WeakMap();
      new WeakMap();
      var Gl = function () {
          var t = (0, e.useRef)(),
            n = (0, e.useRef)(!1),
            r = (0, e.useRef)(!1),
            a = o((0, e.useState)(null), 2),
            i = (a[0], a[1]);
          return (
            (0, e.useEffect)(function () {
              var e = [new Tt(-2, 2, -0.1), new Tt(2, 2, -0.1)],
                a = new ls(),
                o = [0.6, 0.6];
              ["images/user14.png", "images/user14.png"].forEach(function (
                t,
                n
              ) {
                a.load(t, function (t) {
                  var r = o[n] || 1,
                    a = new Yn({ map: t }),
                    i = new Kr(r, r),
                    s = new Mr(i, a);
                  s.position.copy(e[n]), d.add(s);
                  var l = new Hl();
                  (l.text = "User ".concat(n + 1)),
                    (l.color = "white"),
                    (l.fontSize = 0.15),
                    l.position.set(e[n].x - 0.15, e[n].y - 0.3, e[n].z),
                    d.add(l);
                });
              });
              var s = [
                  new Tt(-1, 2.3, -0.1),
                  new Tt(1.1, 2.3, -0.1),
                  new Tt(3, 0, -0.1),
                ],
                l = [0.5, 0.5, 0.7],
                u = ["", "", "Smart Contract"],
                c = [
                  new Tt(-1, 1.8, -0.1),
                  new Tt(1.1, 1.8, -0.1),
                  new Tt(3.5, -0.26, -0.1),
                ];
              [
                "images/smart-contract.png",
                "images/smart-contract.png",
                "images/smart-contract.png",
              ].forEach(function (e, t) {
                a.load(e, function (e) {
                  var n = new Yn({ map: e }),
                    r = l[t] || 1,
                    a = new Kr(r, r),
                    i = new Mr(a, n);
                  i.position.copy(s[t] || new Tt(0, 0, -0.1)), d.add(i);
                  var o = new Hl();
                  (o.text = u[t]),
                    (o.color = "white"),
                    (o.fontSize = 0.16),
                    o.position.copy(c[t] || new Tt(0, 0, -0.1)),
                    d.add(o);
                });
              });
              var d = new Po(),
                h = new Ir(
                  80,
                  window.innerWidth / window.innerHeight,
                  0.1,
                  1e3
                ),
                p = new ko();
              h.position.set(0, 0.7, 5),
                p.setClearColor("black"),
                p.setSize(window.innerWidth / 1.2, window.innerHeight),
                t.current.appendChild(p.domElement);
              for (var v = [], m = (2 * Math.PI) / 6, g = 0; g < 6; g++) {
                var y = 2 * Math.cos(g * m),
                  _ = 2 * Math.sin(g * m),
                  b = 16711680;
                0 === g && (b = "Blue"), (1 !== g && 2 !== g) || (b = 16776960);
                var x = new Mr(new Bo(0.2, 16), new Yn({ color: b }));
                x.position.set(y, _, 0), d.add(x);
                var S = (g + 1).toString(),
                  E = new Hl();
                (E.text = S),
                  (E.color = "Black"),
                  (E.fontSize = 0.2),
                  E.position.set(y - 0, _ - -0.2),
                  d.add(E),
                  v.push(x);
              }
              for (var w = 0; w < 6; w++)
                for (var T = w + 1; T < 6; T++) {
                  var M = 65280;
                  1 === w && 0 === T && (M = 16711680);
                  var A = new lr().setFromPoints([
                      v[w].position,
                      v[T].position,
                    ]),
                    C = new Lo({ color: M }),
                    k = new zo(A, C);
                  d.add(k);
                }
              var R = new Cr(0.2, 0.2, 0.2),
                P = new Yn({ color: 16711680 }),
                U = new Mr(R, P);
              U.position.copy(v[2].position), d.add(U);
              var L = v[1].position,
                D = null,
                I = function e(t) {
                  D || (D = t);
                  var r = (t - D) / 4e3;
                  r < 1
                    ? (U.position.lerpVectors(v[2].position, L, r),
                      requestAnimationFrame(e))
                    : (U.position.copy(L), (n.current = !1)),
                    p.render(d, h);
                };
              setTimeout(function () {
                (n.current = !0), requestAnimationFrame(I);
              }, 0);
              var O = [];
              !(function () {
                for (var e = !1, t = [], n = [], r = [], a = 0; a < 5; a++) {
                  var i = new Cr(0.2, 0.2, 0.2),
                    o = new Yn({ color: "blue" }),
                    s = v[(0 + a + 1) % 6].position;
                  t.push(i), n.push(o), r.push(s);
                }
                var l = t.map(function (e, t) {
                  var r = n[t],
                    a = new Mr(e, r);
                  return a.position.copy(v[0].position), d.add(a), a;
                });
                setTimeout(function () {
                  var t = Date.now();
                  !(function n() {
                    if (!e) {
                      var a = Date.now(),
                        i = Math.min((a - t) / 1e5, 1);
                      l.forEach(function (e, t) {
                        var n = r[t];
                        e.position.lerp(n, i);
                      }),
                        i < 1
                          ? requestAnimationFrame(n)
                          : (O.push.apply(O, f(l)),
                            l.forEach(function (t) {
                              d.remove(t), (e = !0);
                            }));
                    }
                  })();
                }, 6e3);
              })(),
                setTimeout(function () {
                  var e = new Mr(
                      new Cr(0.2, 0.2, 0.2),
                      new Yn({ color: 16711680 })
                    ),
                    t = new Hl();
                  (t.text = "Mined Block"),
                    (t.color = "white"),
                    (t.fontSize = 0.15),
                    e.position.set(3, -0.8, 0),
                    t.position.set(2.8, -1, 0),
                    d.add(e),
                    d.add(t);
                }, 4e3);
              var N = v[1].position.x + 2,
                F = v[1].position.y - 3;
              setTimeout(function () {
                var e = new Go(0.1, 0.4, 32),
                  t = new Yn({ color: "green" }),
                  n = new Mr(e, t);
                n.position.set(3, -2, 0.1),
                  (n.rotation.x = 0),
                  (n.rotation.y = 0),
                  (n.rotation.z = Math.PI);
                var r = new lr().setFromPoints([
                    new Tt(3, -2, 0.1),
                    new Tt(N, F, 0.1),
                  ]),
                  a = new Lo({ color: 65280 }),
                  i = new zo(r, a);
                d.add(n), d.add(i);
              }, 4e3);
              var z = [];
              setTimeout(function () {
                for (var e = 0; e < 3; e++) {
                  var t = (e - 1) * (0.7 + 0.2),
                    n = new Mr(new Cr(0.2, 0.2, 0.2), new Yn({ color: 65280 }));
                  if (
                    (n.position.set(t, -2.7, 0), d.add(n), z.push(n), e > 0)
                  ) {
                    var r = new lr().setFromPoints([
                        n.position,
                        z[e - 1].position,
                      ]),
                      a = new Lo({ color: 255 }),
                      i = new zo(r, a);
                    d.add(i);
                  }
                }
              }, 4e3);
              var B = new Mr(new Cr(0.2, 0.2, 0.2), new Yn({ color: 65280 })),
                H = new Tt(4, -2.7, 0);
              B.position.copy(H),
                (B.visible = !1),
                d.add(B),
                (h.position.z = 5);
              var G = function () {
                if (n.current && !r.current) {
                  var e = 2 * (0.7 + 0.2),
                    t = Date.now();
                  !(function n() {
                    var a = (Date.now() - t) / 1e4;
                    if (a < 1)
                      B.position.set(
                        H.x + (e - H.x) * a,
                        H.y + (-2.7 - H.y) * a,
                        H.z
                      ),
                        requestAnimationFrame(n);
                    else {
                      B.position.set(e, -2.7, H.z), (r.current = !1);
                      var i = z[z.length - 1],
                        o = new lr().setFromPoints([i.position, B.position]),
                        s = new Lo({ color: 255 }),
                        l = new zo(o, s);
                      d.add(l), z.push(B);
                    }
                  })();
                }
              };
              setTimeout(function () {
                (B.visible = !0),
                  setTimeout(function () {
                    G();
                  }, 4e3);
              }, 6e3);
              var V = function (e, t, n, r, a) {
                var i = new Hl();
                (i.text = e),
                  (i.color = a),
                  (i.fontSize = r),
                  i.position.copy(t),
                  d.add(i),
                  setTimeout(function () {
                    !(function (e) {
                      d.remove(e), u.splice(u.indexOf(e), 1);
                    })(i);
                  }, n),
                  u.push(i);
              };
              i(
                V(
                  "Transaction initiation",
                  new Tt(-1.5, 3.5, 0),
                  4e3,
                  0.25,
                  "red"
                )
              ),
                setTimeout(function () {
                  V(
                    "Transaction Process ",
                    new Tt(-1.5, 3.5, 0),
                    2e5,
                    0.25,
                    "red"
                  );
                }, 4e3),
                i(
                  V(
                    "Step 1: User 1 initiates the transaction to User 2",
                    new Tt(1.9, 3, 0),
                    4e3,
                    0.15
                  )
                ),
                setTimeout(function () {
                  V(
                    "Step 2: Node 1 takes on the role of a minor.The",
                    new Tt(1.9, 3, 0),
                    1e4,
                    0.15
                  );
                }, 4e3),
                setTimeout(function () {
                  V(
                    "minor adds the newly mined  block to the ledger  ",
                    new Tt(1.9, 2.8, 0),
                    1e4,
                    0.15
                  );
                }, 4e3),
                setTimeout(function () {
                  V(
                    "and distributes it to all nodes in the network",
                    new Tt(1.9, 2.6, 0),
                    1e4,
                    0.15
                  );
                }, 4e3),
                setTimeout(function () {
                  V(
                    "Step 3: Transaction  completed",
                    new Tt(1.9, 3, 0),
                    4e3,
                    0.15
                  );
                }, 14e3);
              var W = function e() {
                requestAnimationFrame(e), G(), p.render(d, h);
              };
              setTimeout(function () {
                W();
              }, 0);
            }, []),
            (0, l.jsx)("div", { ref: t })
          );
        },
        Vl = n(7),
        Wl = n.n(Vl),
        jl = n(475),
        Xl = n.n(jl),
        ql = n(77),
        Yl = n.n(ql),
        Kl = n(725),
        $l = n.n(Kl),
        Zl = "bodyAttributes",
        Jl = "htmlAttributes",
        Ql = "titleAttributes",
        eu = {
          BASE: "base",
          BODY: "body",
          HEAD: "head",
          HTML: "html",
          LINK: "link",
          META: "meta",
          NOSCRIPT: "noscript",
          SCRIPT: "script",
          STYLE: "style",
          TITLE: "title",
        },
        tu =
          (Object.keys(eu).map(function (e) {
            return eu[e];
          }),
          "charset"),
        nu = "cssText",
        ru = "href",
        au = "http-equiv",
        iu = "innerHTML",
        ou = "itemprop",
        su = "name",
        lu = "property",
        uu = "rel",
        cu = "src",
        fu = "target",
        du = {
          accesskey: "accessKey",
          charset: "charSet",
          class: "className",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          "http-equiv": "httpEquiv",
          itemprop: "itemProp",
          tabindex: "tabIndex",
        },
        hu = "defaultTitle",
        pu = "defer",
        vu = "encodeSpecialCharacters",
        mu = "onChangeClientState",
        gu = "titleTemplate",
        yu = Object.keys(du).reduce(function (e, t) {
          return (e[du[t]] = t), e;
        }, {}),
        _u = [eu.NOSCRIPT, eu.SCRIPT, eu.STYLE],
        bu = "data-react-helmet",
        xu =
          "function" === typeof Symbol && "symbol" === typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  "function" === typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? "symbol"
                  : typeof e;
              },
        Su = (function () {
          function e(e, t) {
            for (var n = 0; n < t.length; n++) {
              var r = t[n];
              (r.enumerable = r.enumerable || !1),
                (r.configurable = !0),
                "value" in r && (r.writable = !0),
                Object.defineProperty(e, r.key, r);
            }
          }
          return function (t, n, r) {
            return n && e(t.prototype, n), r && e(t, r), t;
          };
        })(),
        Eu =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = arguments[t];
              for (var r in n)
                Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
            return e;
          },
        wu = function (e, t) {
          var n = {};
          for (var r in e)
            t.indexOf(r) >= 0 ||
              (Object.prototype.hasOwnProperty.call(e, r) && (n[r] = e[r]));
          return n;
        },
        Tu = function (e) {
          return !1 ===
            (!(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1])
            ? String(e)
            : String(e)
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#x27;");
        },
        Mu = function (e) {
          var t = Pu(e, eu.TITLE),
            n = Pu(e, gu);
          if (n && t)
            return n.replace(/%s/g, function () {
              return Array.isArray(t) ? t.join("") : t;
            });
          var r = Pu(e, hu);
          return t || r || void 0;
        },
        Au = function (e) {
          return Pu(e, mu) || function () {};
        },
        Cu = function (e, t) {
          return t
            .filter(function (t) {
              return "undefined" !== typeof t[e];
            })
            .map(function (t) {
              return t[e];
            })
            .reduce(function (e, t) {
              return Eu({}, e, t);
            }, {});
        },
        ku = function (e, t) {
          return t
            .filter(function (e) {
              return "undefined" !== typeof e[eu.BASE];
            })
            .map(function (e) {
              return e[eu.BASE];
            })
            .reverse()
            .reduce(function (t, n) {
              if (!t.length)
                for (var r = Object.keys(n), a = 0; a < r.length; a++) {
                  var i = r[a].toLowerCase();
                  if (-1 !== e.indexOf(i) && n[i]) return t.concat(n);
                }
              return t;
            }, []);
        },
        Ru = function (e, t, n) {
          var r = {};
          return n
            .filter(function (t) {
              return (
                !!Array.isArray(t[e]) ||
                ("undefined" !== typeof t[e] &&
                  Ou(
                    "Helmet: " +
                      e +
                      ' should be of type "Array". Instead found type "' +
                      xu(t[e]) +
                      '"'
                  ),
                !1)
              );
            })
            .map(function (t) {
              return t[e];
            })
            .reverse()
            .reduce(function (e, n) {
              var a = {};
              n.filter(function (e) {
                for (
                  var n = void 0, i = Object.keys(e), o = 0;
                  o < i.length;
                  o++
                ) {
                  var s = i[o],
                    l = s.toLowerCase();
                  -1 === t.indexOf(l) ||
                    (n === uu && "canonical" === e[n].toLowerCase()) ||
                    (l === uu && "stylesheet" === e[l].toLowerCase()) ||
                    (n = l),
                    -1 === t.indexOf(s) ||
                      (s !== iu && s !== nu && s !== ou) ||
                      (n = s);
                }
                if (!n || !e[n]) return !1;
                var u = e[n].toLowerCase();
                return (
                  r[n] || (r[n] = {}),
                  a[n] || (a[n] = {}),
                  !r[n][u] && ((a[n][u] = !0), !0)
                );
              })
                .reverse()
                .forEach(function (t) {
                  return e.push(t);
                });
              for (var i = Object.keys(a), o = 0; o < i.length; o++) {
                var s = i[o],
                  l = $l()({}, r[s], a[s]);
                r[s] = l;
              }
              return e;
            }, [])
            .reverse();
        },
        Pu = function (e, t) {
          for (var n = e.length - 1; n >= 0; n--) {
            var r = e[n];
            if (r.hasOwnProperty(t)) return r[t];
          }
          return null;
        },
        Uu = (function () {
          var e = Date.now();
          return function (t) {
            var n = Date.now();
            n - e > 16
              ? ((e = n), t(n))
              : setTimeout(function () {
                  Uu(t);
                }, 0);
          };
        })(),
        Lu = function (e) {
          return clearTimeout(e);
        },
        Du =
          "undefined" !== typeof window
            ? (window.requestAnimationFrame &&
                window.requestAnimationFrame.bind(window)) ||
              window.webkitRequestAnimationFrame ||
              window.mozRequestAnimationFrame ||
              Uu
            : n.g.requestAnimationFrame || Uu,
        Iu =
          "undefined" !== typeof window
            ? window.cancelAnimationFrame ||
              window.webkitCancelAnimationFrame ||
              window.mozCancelAnimationFrame ||
              Lu
            : n.g.cancelAnimationFrame || Lu,
        Ou = function (e) {
          return (
            console && "function" === typeof console.warn && console.warn(e)
          );
        },
        Nu = null,
        Fu = function (e, t) {
          var n = e.baseTag,
            r = e.bodyAttributes,
            a = e.htmlAttributes,
            i = e.linkTags,
            o = e.metaTags,
            s = e.noscriptTags,
            l = e.onChangeClientState,
            u = e.scriptTags,
            c = e.styleTags,
            f = e.title,
            d = e.titleAttributes;
          Hu(eu.BODY, r), Hu(eu.HTML, a), Bu(f, d);
          var h = {
              baseTag: Gu(eu.BASE, n),
              linkTags: Gu(eu.LINK, i),
              metaTags: Gu(eu.META, o),
              noscriptTags: Gu(eu.NOSCRIPT, s),
              scriptTags: Gu(eu.SCRIPT, u),
              styleTags: Gu(eu.STYLE, c),
            },
            p = {},
            v = {};
          Object.keys(h).forEach(function (e) {
            var t = h[e],
              n = t.newTags,
              r = t.oldTags;
            n.length && (p[e] = n), r.length && (v[e] = h[e].oldTags);
          }),
            t && t(),
            l(e, p, v);
        },
        zu = function (e) {
          return Array.isArray(e) ? e.join("") : e;
        },
        Bu = function (e, t) {
          "undefined" !== typeof e &&
            document.title !== e &&
            (document.title = zu(e)),
            Hu(eu.TITLE, t);
        },
        Hu = function (e, t) {
          var n = document.getElementsByTagName(e)[0];
          if (n) {
            for (
              var r = n.getAttribute(bu),
                a = r ? r.split(",") : [],
                i = [].concat(a),
                o = Object.keys(t),
                s = 0;
              s < o.length;
              s++
            ) {
              var l = o[s],
                u = t[l] || "";
              n.getAttribute(l) !== u && n.setAttribute(l, u),
                -1 === a.indexOf(l) && a.push(l);
              var c = i.indexOf(l);
              -1 !== c && i.splice(c, 1);
            }
            for (var f = i.length - 1; f >= 0; f--) n.removeAttribute(i[f]);
            a.length === i.length
              ? n.removeAttribute(bu)
              : n.getAttribute(bu) !== o.join(",") &&
                n.setAttribute(bu, o.join(","));
          }
        },
        Gu = function (e, t) {
          var n = document.head || document.querySelector(eu.HEAD),
            r = n.querySelectorAll(e + "[" + bu + "]"),
            a = Array.prototype.slice.call(r),
            i = [],
            o = void 0;
          return (
            t &&
              t.length &&
              t.forEach(function (t) {
                var n = document.createElement(e);
                for (var r in t)
                  if (t.hasOwnProperty(r))
                    if (r === iu) n.innerHTML = t.innerHTML;
                    else if (r === nu)
                      n.styleSheet
                        ? (n.styleSheet.cssText = t.cssText)
                        : n.appendChild(document.createTextNode(t.cssText));
                    else {
                      var s = "undefined" === typeof t[r] ? "" : t[r];
                      n.setAttribute(r, s);
                    }
                n.setAttribute(bu, "true"),
                  a.some(function (e, t) {
                    return (o = t), n.isEqualNode(e);
                  })
                    ? a.splice(o, 1)
                    : i.push(n);
              }),
            a.forEach(function (e) {
              return e.parentNode.removeChild(e);
            }),
            i.forEach(function (e) {
              return n.appendChild(e);
            }),
            { oldTags: a, newTags: i }
          );
        },
        Vu = function (e) {
          return Object.keys(e).reduce(function (t, n) {
            var r =
              "undefined" !== typeof e[n] ? n + '="' + e[n] + '"' : "" + n;
            return t ? t + " " + r : r;
          }, "");
        },
        Wu = function (e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return Object.keys(e).reduce(function (t, n) {
            return (t[du[n] || n] = e[n]), t;
          }, t);
        },
        ju = function (t, n, r) {
          switch (t) {
            case eu.TITLE:
              return {
                toComponent: function () {
                  return (function (t, n, r) {
                    var a,
                      i = (((a = { key: n })[bu] = !0), a),
                      o = Wu(r, i);
                    return [e.createElement(eu.TITLE, o, n)];
                  })(0, n.title, n.titleAttributes);
                },
                toString: function () {
                  return (function (e, t, n, r) {
                    var a = Vu(n),
                      i = zu(t);
                    return a
                      ? "<" +
                          e +
                          " " +
                          bu +
                          '="true" ' +
                          a +
                          ">" +
                          Tu(i, r) +
                          "</" +
                          e +
                          ">"
                      : "<" +
                          e +
                          " " +
                          bu +
                          '="true">' +
                          Tu(i, r) +
                          "</" +
                          e +
                          ">";
                  })(t, n.title, n.titleAttributes, r);
                },
              };
            case Zl:
            case Jl:
              return {
                toComponent: function () {
                  return Wu(n);
                },
                toString: function () {
                  return Vu(n);
                },
              };
            default:
              return {
                toComponent: function () {
                  return (function (t, n) {
                    return n.map(function (n, r) {
                      var a,
                        i = (((a = { key: r })[bu] = !0), a);
                      return (
                        Object.keys(n).forEach(function (e) {
                          var t = du[e] || e;
                          if (t === iu || t === nu) {
                            var r = n.innerHTML || n.cssText;
                            i.dangerouslySetInnerHTML = { __html: r };
                          } else i[t] = n[e];
                        }),
                        e.createElement(t, i)
                      );
                    });
                  })(t, n);
                },
                toString: function () {
                  return (function (e, t, n) {
                    return t.reduce(function (t, r) {
                      var a = Object.keys(r)
                          .filter(function (e) {
                            return !(e === iu || e === nu);
                          })
                          .reduce(function (e, t) {
                            var a =
                              "undefined" === typeof r[t]
                                ? t
                                : t + '="' + Tu(r[t], n) + '"';
                            return e ? e + " " + a : a;
                          }, ""),
                        i = r.innerHTML || r.cssText || "",
                        o = -1 === _u.indexOf(e);
                      return (
                        t +
                        "<" +
                        e +
                        " " +
                        bu +
                        '="true" ' +
                        a +
                        (o ? "/>" : ">" + i + "</" + e + ">")
                      );
                    }, "");
                  })(t, n, r);
                },
              };
          }
        },
        Xu = function (e) {
          var t = e.baseTag,
            n = e.bodyAttributes,
            r = e.encode,
            a = e.htmlAttributes,
            i = e.linkTags,
            o = e.metaTags,
            s = e.noscriptTags,
            l = e.scriptTags,
            u = e.styleTags,
            c = e.title,
            f = void 0 === c ? "" : c,
            d = e.titleAttributes;
          return {
            base: ju(eu.BASE, t, r),
            bodyAttributes: ju(Zl, n, r),
            htmlAttributes: ju(Jl, a, r),
            link: ju(eu.LINK, i, r),
            meta: ju(eu.META, o, r),
            noscript: ju(eu.NOSCRIPT, s, r),
            script: ju(eu.SCRIPT, l, r),
            style: ju(eu.STYLE, u, r),
            title: ju(eu.TITLE, { title: f, titleAttributes: d }, r),
          };
        },
        qu = (function (t) {
          var n, r;
          return (
            (r = n =
              (function (n) {
                function r() {
                  return (
                    (function (e, t) {
                      if (!(e instanceof t))
                        throw new TypeError(
                          "Cannot call a class as a function"
                        );
                    })(this, r),
                    (function (e, t) {
                      if (!e)
                        throw new ReferenceError(
                          "this hasn't been initialised - super() hasn't been called"
                        );
                      return !t ||
                        ("object" !== typeof t && "function" !== typeof t)
                        ? e
                        : t;
                    })(this, n.apply(this, arguments))
                  );
                }
                return (
                  (function (e, t) {
                    if ("function" !== typeof t && null !== t)
                      throw new TypeError(
                        "Super expression must either be null or a function, not " +
                          typeof t
                      );
                    (e.prototype = Object.create(t && t.prototype, {
                      constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0,
                      },
                    })),
                      t &&
                        (Object.setPrototypeOf
                          ? Object.setPrototypeOf(e, t)
                          : (e.__proto__ = t));
                  })(r, n),
                  (r.prototype.shouldComponentUpdate = function (e) {
                    return !Yl()(this.props, e);
                  }),
                  (r.prototype.mapNestedChildrenToProps = function (e, t) {
                    if (!t) return null;
                    switch (e.type) {
                      case eu.SCRIPT:
                      case eu.NOSCRIPT:
                        return { innerHTML: t };
                      case eu.STYLE:
                        return { cssText: t };
                    }
                    throw new Error(
                      "<" +
                        e.type +
                        " /> elements are self-closing and can not contain children. Refer to our API for more information."
                    );
                  }),
                  (r.prototype.flattenArrayTypeChildren = function (e) {
                    var t,
                      n = e.child,
                      r = e.arrayTypeChildren,
                      a = e.newChildProps,
                      i = e.nestedChildren;
                    return Eu(
                      {},
                      r,
                      (((t = {})[n.type] = [].concat(r[n.type] || [], [
                        Eu({}, a, this.mapNestedChildrenToProps(n, i)),
                      ])),
                      t)
                    );
                  }),
                  (r.prototype.mapObjectTypeChildren = function (e) {
                    var t,
                      n,
                      r = e.child,
                      a = e.newProps,
                      i = e.newChildProps,
                      o = e.nestedChildren;
                    switch (r.type) {
                      case eu.TITLE:
                        return Eu(
                          {},
                          a,
                          (((t = {})[r.type] = o),
                          (t.titleAttributes = Eu({}, i)),
                          t)
                        );
                      case eu.BODY:
                        return Eu({}, a, { bodyAttributes: Eu({}, i) });
                      case eu.HTML:
                        return Eu({}, a, { htmlAttributes: Eu({}, i) });
                    }
                    return Eu({}, a, (((n = {})[r.type] = Eu({}, i)), n));
                  }),
                  (r.prototype.mapArrayTypeChildrenToProps = function (e, t) {
                    var n = Eu({}, t);
                    return (
                      Object.keys(e).forEach(function (t) {
                        var r;
                        n = Eu({}, n, (((r = {})[t] = e[t]), r));
                      }),
                      n
                    );
                  }),
                  (r.prototype.warnOnInvalidChildren = function (e, t) {
                    return !0;
                  }),
                  (r.prototype.mapChildrenToProps = function (t, n) {
                    var r = this,
                      a = {};
                    return (
                      e.Children.forEach(t, function (e) {
                        if (e && e.props) {
                          var t = e.props,
                            i = t.children,
                            o = (function (e) {
                              var t =
                                arguments.length > 1 && void 0 !== arguments[1]
                                  ? arguments[1]
                                  : {};
                              return Object.keys(e).reduce(function (t, n) {
                                return (t[yu[n] || n] = e[n]), t;
                              }, t);
                            })(wu(t, ["children"]));
                          switch ((r.warnOnInvalidChildren(e, i), e.type)) {
                            case eu.LINK:
                            case eu.META:
                            case eu.NOSCRIPT:
                            case eu.SCRIPT:
                            case eu.STYLE:
                              a = r.flattenArrayTypeChildren({
                                child: e,
                                arrayTypeChildren: a,
                                newChildProps: o,
                                nestedChildren: i,
                              });
                              break;
                            default:
                              n = r.mapObjectTypeChildren({
                                child: e,
                                newProps: n,
                                newChildProps: o,
                                nestedChildren: i,
                              });
                          }
                        }
                      }),
                      (n = this.mapArrayTypeChildrenToProps(a, n))
                    );
                  }),
                  (r.prototype.render = function () {
                    var n = this.props,
                      r = n.children,
                      a = wu(n, ["children"]),
                      i = Eu({}, a);
                    return (
                      r && (i = this.mapChildrenToProps(r, i)),
                      e.createElement(t, i)
                    );
                  }),
                  Su(r, null, [
                    {
                      key: "canUseDOM",
                      set: function (e) {
                        t.canUseDOM = e;
                      },
                    },
                  ]),
                  r
                );
              })(e.Component)),
            (n.propTypes = {
              base: Wl().object,
              bodyAttributes: Wl().object,
              children: Wl().oneOfType([Wl().arrayOf(Wl().node), Wl().node]),
              defaultTitle: Wl().string,
              defer: Wl().bool,
              encodeSpecialCharacters: Wl().bool,
              htmlAttributes: Wl().object,
              link: Wl().arrayOf(Wl().object),
              meta: Wl().arrayOf(Wl().object),
              noscript: Wl().arrayOf(Wl().object),
              onChangeClientState: Wl().func,
              script: Wl().arrayOf(Wl().object),
              style: Wl().arrayOf(Wl().object),
              title: Wl().string,
              titleAttributes: Wl().object,
              titleTemplate: Wl().string,
            }),
            (n.defaultProps = { defer: !0, encodeSpecialCharacters: !0 }),
            (n.peek = t.peek),
            (n.rewind = function () {
              var e = t.rewind();
              return (
                e ||
                  (e = Xu({
                    baseTag: [],
                    bodyAttributes: {},
                    encodeSpecialCharacters: !0,
                    htmlAttributes: {},
                    linkTags: [],
                    metaTags: [],
                    noscriptTags: [],
                    scriptTags: [],
                    styleTags: [],
                    title: "",
                    titleAttributes: {},
                  })),
                e
              );
            }),
            r
          );
        })(
          Xl()(
            function (e) {
              return {
                baseTag: ku([ru, fu], e),
                bodyAttributes: Cu(Zl, e),
                defer: Pu(e, pu),
                encode: Pu(e, vu),
                htmlAttributes: Cu(Jl, e),
                linkTags: Ru(eu.LINK, [uu, ru], e),
                metaTags: Ru(eu.META, [su, tu, au, lu, ou], e),
                noscriptTags: Ru(eu.NOSCRIPT, [iu], e),
                onChangeClientState: Au(e),
                scriptTags: Ru(eu.SCRIPT, [cu, iu], e),
                styleTags: Ru(eu.STYLE, [nu], e),
                title: Mu(e),
                titleAttributes: Cu(Ql, e),
              };
            },
            function (e) {
              Nu && Iu(Nu),
                e.defer
                  ? (Nu = Du(function () {
                      Fu(e, function () {
                        Nu = null;
                      });
                    }))
                  : (Fu(e), (Nu = null));
            },
            Xu
          )(function () {
            return null;
          })
        );
      qu.renderStatic = qu.rewind;
      var Yu = function () {
        var t = (0, e.useRef)(),
          n = [],
          r = o((0, e.useState)(null), 2),
          a = (r[0], r[1]);
        return (
          (0, e.useEffect)(function () {
            var e = new Po(),
              r = new Ir(75, window.innerWidth / window.innerHeight, 0.1, 1e3);
            r.position.set(0, 0.7, 5);
            var i = new ko();
            i.setClearColor("black"),
              i.setSize(window.innerWidth / 1.2, window.innerHeight),
              t.current.appendChild(i.domElement);
            var o = [new Tt(-2, 2, -0.1), new Tt(2, 2, -0.1)],
              s = new ls(),
              l = [0.6, 0.6];
            ["images/user14.png", "images/user14.png"].forEach(function (
              t,
              n
            ) {
              s.load(t, function (t) {
                var r = l[n] || 1,
                  a = new Yn({ map: t }),
                  i = new Kr(r, r),
                  s = new Mr(i, a);
                s.position.copy(o[n]), e.add(s);
                var u = new Hl();
                (u.text = "User ".concat(n + 1)),
                  (u.color = "white"),
                  (u.fontSize = 0.15),
                  u.position.set(o[n].x - 0.15, o[n].y - 0.3, o[n].z),
                  e.add(u);
              });
            });
            for (
              var u = [], c = new So(), f = (2 * Math.PI) / 6, d = 0;
              d < 6;
              d++
            ) {
              var h = 2 * Math.cos(d * f),
                p = 2 * Math.sin(d * f),
                v = "red";
              0 === d && (v = "red");
              var m = new Mr(new Bo(0.2, 16), new Yn({ color: v }));
              m.position.set(h, p, 0), e.add(m), u.push(m);
              var g = (d + 1).toString(),
                y = new Hl();
              (y.text = g),
                (y.color = "Black"),
                (y.fontSize = 0.2),
                y.position.set(h - 0, p - -0.2),
                e.add(y);
            }
            for (var _ = 0; _ < 6; _++)
              for (var b = 0; b < _; b++) {
                var x = new lr().setFromPoints([u[_].position, u[b].position]),
                  S = new Lo({ color: 65280 }),
                  E = new zo(x, S);
                c.add(E);
              }
            e.add(c);
            var w = new Mr(new Cr(0.2, 0.2, 0.2), new Yn({ color: "red" }));
            w.position.copy(u[0]), e.add(w);
            Date.now();
            a(
              (function (t, r, a, i) {
                var o = new Hl();
                (o.text = t),
                  (o.color = i),
                  (o.fontSize = a),
                  o.position.copy(r),
                  e.add(o),
                  n.push(o);
              })(
                "Smart Contract- Transaction Process",
                new Tt(-2, 3, 0),
                0.2,
                "red"
              )
            );
            !(function t() {
              requestAnimationFrame(t), i.render(e, r);
            })();
          }, []),
          (0, l.jsx)("div", { ref: t })
        );
      };
      function Ku(e, t) {
        if (null == e) return {};
        var n,
          r,
          a = {},
          i = Object.keys(e);
        for (r = 0; r < i.length; r++)
          (n = i[r]), t.indexOf(n) >= 0 || (a[n] = e[n]);
        return a;
      }
      function $u() {
        return (
          ($u = Object.assign
            ? Object.assign.bind()
            : function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n)
                    Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
          $u.apply(this, arguments)
        );
      }
      var Zu,
        Ju = !0,
        Qu = !1,
        ec = {
          text: !0,
          search: !0,
          url: !0,
          tel: !0,
          email: !0,
          password: !0,
          number: !0,
          date: !0,
          month: !0,
          week: !0,
          time: !0,
          datetime: !0,
          "datetime-local": !0,
        };
      function tc(e) {
        e.metaKey || e.altKey || e.ctrlKey || (Ju = !0);
      }
      function nc() {
        Ju = !1;
      }
      function rc() {
        "hidden" === this.visibilityState && Qu && (Ju = !0);
      }
      function ac(e) {
        var t = e.target;
        try {
          return t.matches(":focus-visible");
        } catch (n) {}
        return (
          Ju ||
          (function (e) {
            var t = e.type,
              n = e.tagName;
            return (
              !("INPUT" !== n || !ec[t] || e.readOnly) ||
              ("TEXTAREA" === n && !e.readOnly) ||
              !!e.isContentEditable
            );
          })(t)
        );
      }
      function ic() {
        var t = e.useCallback(function (e) {
            var t;
            null != e &&
              ((t = e.ownerDocument).addEventListener("keydown", tc, !0),
              t.addEventListener("mousedown", nc, !0),
              t.addEventListener("pointerdown", nc, !0),
              t.addEventListener("touchstart", nc, !0),
              t.addEventListener("visibilitychange", rc, !0));
          }, []),
          n = e.useRef(!1);
        return {
          isFocusVisibleRef: n,
          onFocus: function (e) {
            return !!ac(e) && ((n.current = !0), !0);
          },
          onBlur: function () {
            return (
              !!n.current &&
              ((Qu = !0),
              window.clearTimeout(Zu),
              (Zu = window.setTimeout(function () {
                Qu = !1;
              }, 100)),
              (n.current = !1),
              !0)
            );
          },
          ref: t,
        };
      }
      function oc() {
        for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
          n[r] = arguments[r];
        return e.useMemo(function () {
          return n.every(function (e) {
            return null == e;
          })
            ? null
            : function (e) {
                n.forEach(function (t) {
                  !(function (e, t) {
                    "function" === typeof e ? e(t) : e && (e.current = t);
                  })(t, e);
                });
              };
        }, n);
      }
      function sc(e) {
        var t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
        if (void 0 === e) return {};
        var n = {};
        return (
          Object.keys(e)
            .filter(function (n) {
              return (
                n.match(/^on[A-Z]/) &&
                "function" === typeof e[n] &&
                !t.includes(n)
              );
            })
            .forEach(function (t) {
              n[t] = e[t];
            }),
          n
        );
      }
      function lc(e, t) {
        var n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : void 0,
          r = {};
        return (
          Object.keys(e).forEach(function (a) {
            r[a] = e[a]
              .reduce(function (e, r) {
                if (r) {
                  var a = t(r);
                  "" !== a && e.push(a), n && n[r] && e.push(n[r]);
                }
                return e;
              }, [])
              .join(" ");
          }),
          r
        );
      }
      function uc(e) {
        for (
          var t = "https://mui.com/production-error/?code=" + e, n = 1;
          n < arguments.length;
          n += 1
        )
          t += "&args[]=" + encodeURIComponent(arguments[n]);
        return (
          "Minified MUI error #" + e + "; visit " + t + " for the full message."
        );
      }
      function cc(e) {
        if ("string" !== typeof e) throw new Error(uc(7));
        return e.charAt(0).toUpperCase() + e.slice(1);
      }
      function fc(e) {
        var t = Object.create(null);
        return function (n) {
          return void 0 === t[n] && (t[n] = e(n)), t[n];
        };
      }
      var dc =
          /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
        hc = fc(function (e) {
          return (
            dc.test(e) ||
            (111 === e.charCodeAt(0) &&
              110 === e.charCodeAt(1) &&
              e.charCodeAt(2) < 91)
          );
        });
      var pc = (function () {
          function e(e) {
            var t = this;
            (this._insertTag = function (e) {
              var n;
              (n =
                0 === t.tags.length
                  ? t.insertionPoint
                    ? t.insertionPoint.nextSibling
                    : t.prepend
                    ? t.container.firstChild
                    : t.before
                  : t.tags[t.tags.length - 1].nextSibling),
                t.container.insertBefore(e, n),
                t.tags.push(e);
            }),
              (this.isSpeedy = void 0 === e.speedy || e.speedy),
              (this.tags = []),
              (this.ctr = 0),
              (this.nonce = e.nonce),
              (this.key = e.key),
              (this.container = e.container),
              (this.prepend = e.prepend),
              (this.insertionPoint = e.insertionPoint),
              (this.before = null);
          }
          var t = e.prototype;
          return (
            (t.hydrate = function (e) {
              e.forEach(this._insertTag);
            }),
            (t.insert = function (e) {
              this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 &&
                this._insertTag(
                  (function (e) {
                    var t = document.createElement("style");
                    return (
                      t.setAttribute("data-emotion", e.key),
                      void 0 !== e.nonce && t.setAttribute("nonce", e.nonce),
                      t.appendChild(document.createTextNode("")),
                      t.setAttribute("data-s", ""),
                      t
                    );
                  })(this)
                );
              var t = this.tags[this.tags.length - 1];
              if (this.isSpeedy) {
                var n = (function (e) {
                  if (e.sheet) return e.sheet;
                  for (var t = 0; t < document.styleSheets.length; t++)
                    if (document.styleSheets[t].ownerNode === e)
                      return document.styleSheets[t];
                })(t);
                try {
                  n.insertRule(e, n.cssRules.length);
                } catch (r) {
                  0;
                }
              } else t.appendChild(document.createTextNode(e));
              this.ctr++;
            }),
            (t.flush = function () {
              this.tags.forEach(function (e) {
                return e.parentNode && e.parentNode.removeChild(e);
              }),
                (this.tags = []),
                (this.ctr = 0);
            }),
            e
          );
        })(),
        vc = Math.abs,
        mc = String.fromCharCode,
        gc = Object.assign;
      function yc(e) {
        return e.trim();
      }
      function _c(e, t, n) {
        return e.replace(t, n);
      }
      function bc(e, t) {
        return e.indexOf(t);
      }
      function xc(e, t) {
        return 0 | e.charCodeAt(t);
      }
      function Sc(e, t, n) {
        return e.slice(t, n);
      }
      function Ec(e) {
        return e.length;
      }
      function wc(e) {
        return e.length;
      }
      function Tc(e, t) {
        return t.push(e), e;
      }
      var Mc = 1,
        Ac = 1,
        Cc = 0,
        kc = 0,
        Rc = 0,
        Pc = "";
      function Uc(e, t, n, r, a, i, o) {
        return {
          value: e,
          root: t,
          parent: n,
          type: r,
          props: a,
          children: i,
          line: Mc,
          column: Ac,
          length: o,
          return: "",
        };
      }
      function Lc(e, t) {
        return gc(
          Uc("", null, null, "", null, null, 0),
          e,
          { length: -e.length },
          t
        );
      }
      function Dc() {
        return (
          (Rc = kc > 0 ? xc(Pc, --kc) : 0),
          Ac--,
          10 === Rc && ((Ac = 1), Mc--),
          Rc
        );
      }
      function Ic() {
        return (
          (Rc = kc < Cc ? xc(Pc, kc++) : 0),
          Ac++,
          10 === Rc && ((Ac = 1), Mc++),
          Rc
        );
      }
      function Oc() {
        return xc(Pc, kc);
      }
      function Nc() {
        return kc;
      }
      function Fc(e, t) {
        return Sc(Pc, e, t);
      }
      function zc(e) {
        switch (e) {
          case 0:
          case 9:
          case 10:
          case 13:
          case 32:
            return 5;
          case 33:
          case 43:
          case 44:
          case 47:
          case 62:
          case 64:
          case 126:
          case 59:
          case 123:
          case 125:
            return 4;
          case 58:
            return 3;
          case 34:
          case 39:
          case 40:
          case 91:
            return 2;
          case 41:
          case 93:
            return 1;
        }
        return 0;
      }
      function Bc(e) {
        return (Mc = Ac = 1), (Cc = Ec((Pc = e))), (kc = 0), [];
      }
      function Hc(e) {
        return (Pc = ""), e;
      }
      function Gc(e) {
        return yc(Fc(kc - 1, jc(91 === e ? e + 2 : 40 === e ? e + 1 : e)));
      }
      function Vc(e) {
        for (; (Rc = Oc()) && Rc < 33; ) Ic();
        return zc(e) > 2 || zc(Rc) > 3 ? "" : " ";
      }
      function Wc(e, t) {
        for (
          ;
          --t &&
          Ic() &&
          !(
            Rc < 48 ||
            Rc > 102 ||
            (Rc > 57 && Rc < 65) ||
            (Rc > 70 && Rc < 97)
          );

        );
        return Fc(e, Nc() + (t < 6 && 32 == Oc() && 32 == Ic()));
      }
      function jc(e) {
        for (; Ic(); )
          switch (Rc) {
            case e:
              return kc;
            case 34:
            case 39:
              34 !== e && 39 !== e && jc(Rc);
              break;
            case 40:
              41 === e && jc(e);
              break;
            case 92:
              Ic();
          }
        return kc;
      }
      function Xc(e, t) {
        for (; Ic() && e + Rc !== 57 && (e + Rc !== 84 || 47 !== Oc()); );
        return "/*" + Fc(t, kc - 1) + "*" + mc(47 === e ? e : Ic());
      }
      function qc(e) {
        for (; !zc(Oc()); ) Ic();
        return Fc(e, kc);
      }
      var Yc = "-ms-",
        Kc = "-moz-",
        $c = "-webkit-",
        Zc = "comm",
        Jc = "rule",
        Qc = "decl",
        ef = "@keyframes";
      function tf(e, t) {
        for (var n = "", r = wc(e), a = 0; a < r; a++)
          n += t(e[a], a, e, t) || "";
        return n;
      }
      function nf(e, t, n, r) {
        switch (e.type) {
          case "@layer":
            if (e.children.length) break;
          case "@import":
          case Qc:
            return (e.return = e.return || e.value);
          case Zc:
            return "";
          case ef:
            return (e.return = e.value + "{" + tf(e.children, r) + "}");
          case Jc:
            e.value = e.props.join(",");
        }
        return Ec((n = tf(e.children, r)))
          ? (e.return = e.value + "{" + n + "}")
          : "";
      }
      function rf(e) {
        return Hc(af("", null, null, null, [""], (e = Bc(e)), 0, [0], e));
      }
      function af(e, t, n, r, a, i, o, s, l) {
        for (
          var u = 0,
            c = 0,
            f = o,
            d = 0,
            h = 0,
            p = 0,
            v = 1,
            m = 1,
            g = 1,
            y = 0,
            _ = "",
            b = a,
            x = i,
            S = r,
            E = _;
          m;

        )
          switch (((p = y), (y = Ic()))) {
            case 40:
              if (108 != p && 58 == xc(E, f - 1)) {
                -1 != bc((E += _c(Gc(y), "&", "&\f")), "&\f") && (g = -1);
                break;
              }
            case 34:
            case 39:
            case 91:
              E += Gc(y);
              break;
            case 9:
            case 10:
            case 13:
            case 32:
              E += Vc(p);
              break;
            case 92:
              E += Wc(Nc() - 1, 7);
              continue;
            case 47:
              switch (Oc()) {
                case 42:
                case 47:
                  Tc(sf(Xc(Ic(), Nc()), t, n), l);
                  break;
                default:
                  E += "/";
              }
              break;
            case 123 * v:
              s[u++] = Ec(E) * g;
            case 125 * v:
            case 59:
            case 0:
              switch (y) {
                case 0:
                case 125:
                  m = 0;
                case 59 + c:
                  -1 == g && (E = _c(E, /\f/g, "")),
                    h > 0 &&
                      Ec(E) - f &&
                      Tc(
                        h > 32
                          ? lf(E + ";", r, n, f - 1)
                          : lf(_c(E, " ", "") + ";", r, n, f - 2),
                        l
                      );
                  break;
                case 59:
                  E += ";";
                default:
                  if (
                    (Tc(
                      (S = of(E, t, n, u, c, a, s, _, (b = []), (x = []), f)),
                      i
                    ),
                    123 === y)
                  )
                    if (0 === c) af(E, t, S, S, b, i, f, s, x);
                    else
                      switch (99 === d && 110 === xc(E, 3) ? 100 : d) {
                        case 100:
                        case 108:
                        case 109:
                        case 115:
                          af(
                            e,
                            S,
                            S,
                            r &&
                              Tc(of(e, S, S, 0, 0, a, s, _, a, (b = []), f), x),
                            a,
                            x,
                            f,
                            s,
                            r ? b : x
                          );
                          break;
                        default:
                          af(E, S, S, S, [""], x, 0, s, x);
                      }
              }
              (u = c = h = 0), (v = g = 1), (_ = E = ""), (f = o);
              break;
            case 58:
              (f = 1 + Ec(E)), (h = p);
            default:
              if (v < 1)
                if (123 == y) --v;
                else if (125 == y && 0 == v++ && 125 == Dc()) continue;
              switch (((E += mc(y)), y * v)) {
                case 38:
                  g = c > 0 ? 1 : ((E += "\f"), -1);
                  break;
                case 44:
                  (s[u++] = (Ec(E) - 1) * g), (g = 1);
                  break;
                case 64:
                  45 === Oc() && (E += Gc(Ic())),
                    (d = Oc()),
                    (c = f = Ec((_ = E += qc(Nc())))),
                    y++;
                  break;
                case 45:
                  45 === p && 2 == Ec(E) && (v = 0);
              }
          }
        return i;
      }
      function of(e, t, n, r, a, i, o, s, l, u, c) {
        for (
          var f = a - 1, d = 0 === a ? i : [""], h = wc(d), p = 0, v = 0, m = 0;
          p < r;
          ++p
        )
          for (
            var g = 0, y = Sc(e, f + 1, (f = vc((v = o[p])))), _ = e;
            g < h;
            ++g
          )
            (_ = yc(v > 0 ? d[g] + " " + y : _c(y, /&\f/g, d[g]))) &&
              (l[m++] = _);
        return Uc(e, t, n, 0 === a ? Jc : s, l, u, c);
      }
      function sf(e, t, n) {
        return Uc(e, t, n, Zc, mc(Rc), Sc(e, 2, -2), 0);
      }
      function lf(e, t, n, r) {
        return Uc(e, t, n, Qc, Sc(e, 0, r), Sc(e, r + 1, -1), r);
      }
      var uf = function (e, t, n) {
          for (
            var r = 0, a = 0;
            (r = a), (a = Oc()), 38 === r && 12 === a && (t[n] = 1), !zc(a);

          )
            Ic();
          return Fc(e, kc);
        },
        cf = function (e, t) {
          return Hc(
            (function (e, t) {
              var n = -1,
                r = 44;
              do {
                switch (zc(r)) {
                  case 0:
                    38 === r && 12 === Oc() && (t[n] = 1),
                      (e[n] += uf(kc - 1, t, n));
                    break;
                  case 2:
                    e[n] += Gc(r);
                    break;
                  case 4:
                    if (44 === r) {
                      (e[++n] = 58 === Oc() ? "&\f" : ""), (t[n] = e[n].length);
                      break;
                    }
                  default:
                    e[n] += mc(r);
                }
              } while ((r = Ic()));
              return e;
            })(Bc(e), t)
          );
        },
        ff = new WeakMap(),
        df = function (e) {
          if ("rule" === e.type && e.parent && !(e.length < 1)) {
            for (
              var t = e.value,
                n = e.parent,
                r = e.column === n.column && e.line === n.line;
              "rule" !== n.type;

            )
              if (!(n = n.parent)) return;
            if (
              (1 !== e.props.length || 58 === t.charCodeAt(0) || ff.get(n)) &&
              !r
            ) {
              ff.set(e, !0);
              for (
                var a = [], i = cf(t, a), o = n.props, s = 0, l = 0;
                s < i.length;
                s++
              )
                for (var u = 0; u < o.length; u++, l++)
                  e.props[l] = a[s]
                    ? i[s].replace(/&\f/g, o[u])
                    : o[u] + " " + i[s];
            }
          }
        },
        hf = function (e) {
          if ("decl" === e.type) {
            var t = e.value;
            108 === t.charCodeAt(0) &&
              98 === t.charCodeAt(2) &&
              ((e.return = ""), (e.value = ""));
          }
        };
      function pf(e, t) {
        switch (
          (function (e, t) {
            return 45 ^ xc(e, 0)
              ? (((((((t << 2) ^ xc(e, 0)) << 2) ^ xc(e, 1)) << 2) ^
                  xc(e, 2)) <<
                  2) ^
                  xc(e, 3)
              : 0;
          })(e, t)
        ) {
          case 5103:
            return $c + "print-" + e + e;
          case 5737:
          case 4201:
          case 3177:
          case 3433:
          case 1641:
          case 4457:
          case 2921:
          case 5572:
          case 6356:
          case 5844:
          case 3191:
          case 6645:
          case 3005:
          case 6391:
          case 5879:
          case 5623:
          case 6135:
          case 4599:
          case 4855:
          case 4215:
          case 6389:
          case 5109:
          case 5365:
          case 5621:
          case 3829:
            return $c + e + e;
          case 5349:
          case 4246:
          case 4810:
          case 6968:
          case 2756:
            return $c + e + Kc + e + Yc + e + e;
          case 6828:
          case 4268:
            return $c + e + Yc + e + e;
          case 6165:
            return $c + e + Yc + "flex-" + e + e;
          case 5187:
            return (
              $c +
              e +
              _c(e, /(\w+).+(:[^]+)/, $c + "box-$1$2" + Yc + "flex-$1$2") +
              e
            );
          case 5443:
            return $c + e + Yc + "flex-item-" + _c(e, /flex-|-self/, "") + e;
          case 4675:
            return (
              $c +
              e +
              Yc +
              "flex-line-pack" +
              _c(e, /align-content|flex-|-self/, "") +
              e
            );
          case 5548:
            return $c + e + Yc + _c(e, "shrink", "negative") + e;
          case 5292:
            return $c + e + Yc + _c(e, "basis", "preferred-size") + e;
          case 6060:
            return (
              $c +
              "box-" +
              _c(e, "-grow", "") +
              $c +
              e +
              Yc +
              _c(e, "grow", "positive") +
              e
            );
          case 4554:
            return $c + _c(e, /([^-])(transform)/g, "$1" + $c + "$2") + e;
          case 6187:
            return (
              _c(
                _c(_c(e, /(zoom-|grab)/, $c + "$1"), /(image-set)/, $c + "$1"),
                e,
                ""
              ) + e
            );
          case 5495:
          case 3959:
            return _c(e, /(image-set\([^]*)/, $c + "$1$`$1");
          case 4968:
            return (
              _c(
                _c(
                  e,
                  /(.+:)(flex-)?(.*)/,
                  $c + "box-pack:$3" + Yc + "flex-pack:$3"
                ),
                /s.+-b[^;]+/,
                "justify"
              ) +
              $c +
              e +
              e
            );
          case 4095:
          case 3583:
          case 4068:
          case 2532:
            return _c(e, /(.+)-inline(.+)/, $c + "$1$2") + e;
          case 8116:
          case 7059:
          case 5753:
          case 5535:
          case 5445:
          case 5701:
          case 4933:
          case 4677:
          case 5533:
          case 5789:
          case 5021:
          case 4765:
            if (Ec(e) - 1 - t > 6)
              switch (xc(e, t + 1)) {
                case 109:
                  if (45 !== xc(e, t + 4)) break;
                case 102:
                  return (
                    _c(
                      e,
                      /(.+:)(.+)-([^]+)/,
                      "$1" +
                        $c +
                        "$2-$3$1" +
                        Kc +
                        (108 == xc(e, t + 3) ? "$3" : "$2-$3")
                    ) + e
                  );
                case 115:
                  return ~bc(e, "stretch")
                    ? pf(_c(e, "stretch", "fill-available"), t) + e
                    : e;
              }
            break;
          case 4949:
            if (115 !== xc(e, t + 1)) break;
          case 6444:
            switch (xc(e, Ec(e) - 3 - (~bc(e, "!important") && 10))) {
              case 107:
                return _c(e, ":", ":" + $c) + e;
              case 101:
                return (
                  _c(
                    e,
                    /(.+:)([^;!]+)(;|!.+)?/,
                    "$1" +
                      $c +
                      (45 === xc(e, 14) ? "inline-" : "") +
                      "box$3$1" +
                      $c +
                      "$2$3$1" +
                      Yc +
                      "$2box$3"
                  ) + e
                );
            }
            break;
          case 5936:
            switch (xc(e, t + 11)) {
              case 114:
                return $c + e + Yc + _c(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
              case 108:
                return $c + e + Yc + _c(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
              case 45:
                return $c + e + Yc + _c(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
            }
            return $c + e + Yc + e + e;
        }
        return e;
      }
      var vf = [
          function (e, t, n, r) {
            if (e.length > -1 && !e.return)
              switch (e.type) {
                case Qc:
                  e.return = pf(e.value, e.length);
                  break;
                case ef:
                  return tf([Lc(e, { value: _c(e.value, "@", "@" + $c) })], r);
                case Jc:
                  if (e.length)
                    return (function (e, t) {
                      return e.map(t).join("");
                    })(e.props, function (t) {
                      switch (
                        (function (e, t) {
                          return (e = t.exec(e)) ? e[0] : e;
                        })(t, /(::plac\w+|:read-\w+)/)
                      ) {
                        case ":read-only":
                        case ":read-write":
                          return tf(
                            [
                              Lc(e, {
                                props: [_c(t, /:(read-\w+)/, ":-moz-$1")],
                              }),
                            ],
                            r
                          );
                        case "::placeholder":
                          return tf(
                            [
                              Lc(e, {
                                props: [
                                  _c(t, /:(plac\w+)/, ":" + $c + "input-$1"),
                                ],
                              }),
                              Lc(e, {
                                props: [_c(t, /:(plac\w+)/, ":-moz-$1")],
                              }),
                              Lc(e, {
                                props: [_c(t, /:(plac\w+)/, Yc + "input-$1")],
                              }),
                            ],
                            r
                          );
                      }
                      return "";
                    });
              }
          },
        ],
        mf = function (e) {
          var t = e.key;
          if ("css" === t) {
            var n = document.querySelectorAll(
              "style[data-emotion]:not([data-s])"
            );
            Array.prototype.forEach.call(n, function (e) {
              -1 !== e.getAttribute("data-emotion").indexOf(" ") &&
                (document.head.appendChild(e), e.setAttribute("data-s", ""));
            });
          }
          var r = e.stylisPlugins || vf;
          var a,
            i,
            o = {},
            s = [];
          (a = e.container || document.head),
            Array.prototype.forEach.call(
              document.querySelectorAll('style[data-emotion^="' + t + ' "]'),
              function (e) {
                for (
                  var t = e.getAttribute("data-emotion").split(" "), n = 1;
                  n < t.length;
                  n++
                )
                  o[t[n]] = !0;
                s.push(e);
              }
            );
          var l,
            u,
            c = [
              nf,
              ((u = function (e) {
                l.insert(e);
              }),
              function (e) {
                e.root || ((e = e.return) && u(e));
              }),
            ],
            f = (function (e) {
              var t = wc(e);
              return function (n, r, a, i) {
                for (var o = "", s = 0; s < t; s++) o += e[s](n, r, a, i) || "";
                return o;
              };
            })([df, hf].concat(r, c));
          i = function (e, t, n, r) {
            (l = n),
              tf(rf(e ? e + "{" + t.styles + "}" : t.styles), f),
              r && (d.inserted[t.name] = !0);
          };
          var d = {
            key: t,
            sheet: new pc({
              key: t,
              container: a,
              nonce: e.nonce,
              speedy: e.speedy,
              prepend: e.prepend,
              insertionPoint: e.insertionPoint,
            }),
            nonce: e.nonce,
            inserted: o,
            registered: {},
            insert: i,
          };
          return d.sheet.hydrate(s), d;
        };
      var gf = {
          animationIterationCount: 1,
          aspectRatio: 1,
          borderImageOutset: 1,
          borderImageSlice: 1,
          borderImageWidth: 1,
          boxFlex: 1,
          boxFlexGroup: 1,
          boxOrdinalGroup: 1,
          columnCount: 1,
          columns: 1,
          flex: 1,
          flexGrow: 1,
          flexPositive: 1,
          flexShrink: 1,
          flexNegative: 1,
          flexOrder: 1,
          gridRow: 1,
          gridRowEnd: 1,
          gridRowSpan: 1,
          gridRowStart: 1,
          gridColumn: 1,
          gridColumnEnd: 1,
          gridColumnSpan: 1,
          gridColumnStart: 1,
          msGridRow: 1,
          msGridRowSpan: 1,
          msGridColumn: 1,
          msGridColumnSpan: 1,
          fontWeight: 1,
          lineHeight: 1,
          opacity: 1,
          order: 1,
          orphans: 1,
          tabSize: 1,
          widows: 1,
          zIndex: 1,
          zoom: 1,
          WebkitLineClamp: 1,
          fillOpacity: 1,
          floodOpacity: 1,
          stopOpacity: 1,
          strokeDasharray: 1,
          strokeDashoffset: 1,
          strokeMiterlimit: 1,
          strokeOpacity: 1,
          strokeWidth: 1,
        },
        yf = /[A-Z]|^ms/g,
        _f = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
        bf = function (e) {
          return 45 === e.charCodeAt(1);
        },
        xf = function (e) {
          return null != e && "boolean" !== typeof e;
        },
        Sf = fc(function (e) {
          return bf(e) ? e : e.replace(yf, "-$&").toLowerCase();
        }),
        Ef = function (e, t) {
          switch (e) {
            case "animation":
            case "animationName":
              if ("string" === typeof t)
                return t.replace(_f, function (e, t, n) {
                  return (Tf = { name: t, styles: n, next: Tf }), t;
                });
          }
          return 1 === gf[e] || bf(e) || "number" !== typeof t || 0 === t
            ? t
            : t + "px";
        };
      function wf(e, t, n) {
        if (null == n) return "";
        if (void 0 !== n.__emotion_styles) return n;
        switch (typeof n) {
          case "boolean":
            return "";
          case "object":
            if (1 === n.anim)
              return (
                (Tf = { name: n.name, styles: n.styles, next: Tf }), n.name
              );
            if (void 0 !== n.styles) {
              var r = n.next;
              if (void 0 !== r)
                for (; void 0 !== r; )
                  (Tf = { name: r.name, styles: r.styles, next: Tf }),
                    (r = r.next);
              return n.styles + ";";
            }
            return (function (e, t, n) {
              var r = "";
              if (Array.isArray(n))
                for (var a = 0; a < n.length; a++) r += wf(e, t, n[a]) + ";";
              else
                for (var i in n) {
                  var o = n[i];
                  if ("object" !== typeof o)
                    null != t && void 0 !== t[o]
                      ? (r += i + "{" + t[o] + "}")
                      : xf(o) && (r += Sf(i) + ":" + Ef(i, o) + ";");
                  else if (
                    !Array.isArray(o) ||
                    "string" !== typeof o[0] ||
                    (null != t && void 0 !== t[o[0]])
                  ) {
                    var s = wf(e, t, o);
                    switch (i) {
                      case "animation":
                      case "animationName":
                        r += Sf(i) + ":" + s + ";";
                        break;
                      default:
                        r += i + "{" + s + "}";
                    }
                  } else
                    for (var l = 0; l < o.length; l++)
                      xf(o[l]) && (r += Sf(i) + ":" + Ef(i, o[l]) + ";");
                }
              return r;
            })(e, t, n);
          case "function":
            if (void 0 !== e) {
              var a = Tf,
                i = n(e);
              return (Tf = a), wf(e, t, i);
            }
        }
        if (null == t) return n;
        var o = t[n];
        return void 0 !== o ? o : n;
      }
      var Tf,
        Mf = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
      var Af = function (e, t, n) {
          if (
            1 === e.length &&
            "object" === typeof e[0] &&
            null !== e[0] &&
            void 0 !== e[0].styles
          )
            return e[0];
          var r = !0,
            a = "";
          Tf = void 0;
          var i = e[0];
          null == i || void 0 === i.raw
            ? ((r = !1), (a += wf(n, t, i)))
            : (a += i[0]);
          for (var o = 1; o < e.length; o++)
            (a += wf(n, t, e[o])), r && (a += i[o]);
          Mf.lastIndex = 0;
          for (var s, l = ""; null !== (s = Mf.exec(a)); ) l += "-" + s[1];
          var u =
            (function (e) {
              for (var t, n = 0, r = 0, a = e.length; a >= 4; ++r, a -= 4)
                (t =
                  1540483477 *
                    (65535 &
                      (t =
                        (255 & e.charCodeAt(r)) |
                        ((255 & e.charCodeAt(++r)) << 8) |
                        ((255 & e.charCodeAt(++r)) << 16) |
                        ((255 & e.charCodeAt(++r)) << 24))) +
                  ((59797 * (t >>> 16)) << 16)),
                  (n =
                    (1540483477 * (65535 & (t ^= t >>> 24)) +
                      ((59797 * (t >>> 16)) << 16)) ^
                    (1540483477 * (65535 & n) + ((59797 * (n >>> 16)) << 16)));
              switch (a) {
                case 3:
                  n ^= (255 & e.charCodeAt(r + 2)) << 16;
                case 2:
                  n ^= (255 & e.charCodeAt(r + 1)) << 8;
                case 1:
                  n =
                    1540483477 * (65535 & (n ^= 255 & e.charCodeAt(r))) +
                    ((59797 * (n >>> 16)) << 16);
              }
              return (
                ((n =
                  1540483477 * (65535 & (n ^= n >>> 13)) +
                  ((59797 * (n >>> 16)) << 16)) ^
                  (n >>> 15)) >>>
                0
              ).toString(36);
            })(a) + l;
          return { name: u, styles: a, next: Tf };
        },
        Cf = !!t.useInsertionEffect && t.useInsertionEffect,
        kf =
          Cf ||
          function (e) {
            return e();
          },
        Rf =
          (Cf || e.useLayoutEffect,
          e.createContext(
            "undefined" !== typeof HTMLElement ? mf({ key: "css" }) : null
          ));
      Rf.Provider;
      var Pf = function (t) {
        return (0, e.forwardRef)(function (n, r) {
          var a = (0, e.useContext)(Rf);
          return t(n, a, r);
        });
      };
      var Uf = e.createContext({});
      var Lf = function (e, t, n) {
          var r = e.key + "-" + t.name;
          !1 === n &&
            void 0 === e.registered[r] &&
            (e.registered[r] = t.styles);
        },
        Df = hc,
        If = function (e) {
          return "theme" !== e;
        },
        Of = function (e) {
          return "string" === typeof e && e.charCodeAt(0) > 96 ? Df : If;
        },
        Nf = function (e, t, n) {
          var r;
          if (t) {
            var a = t.shouldForwardProp;
            r =
              e.__emotion_forwardProp && a
                ? function (t) {
                    return e.__emotion_forwardProp(t) && a(t);
                  }
                : a;
          }
          return (
            "function" !== typeof r && n && (r = e.__emotion_forwardProp), r
          );
        },
        Ff = function (e) {
          var t = e.cache,
            n = e.serialized,
            r = e.isStringTag;
          return (
            Lf(t, n, r),
            kf(function () {
              return (function (e, t, n) {
                Lf(e, t, n);
                var r = e.key + "-" + t.name;
                if (void 0 === e.inserted[t.name]) {
                  var a = t;
                  do {
                    e.insert(t === a ? "." + r : "", a, e.sheet, !0),
                      (a = a.next);
                  } while (void 0 !== a);
                }
              })(t, n, r);
            }),
            null
          );
        },
        zf = function t(n, r) {
          var a,
            i,
            o = n.__emotion_real === n,
            s = (o && n.__emotion_base) || n;
          void 0 !== r && ((a = r.label), (i = r.target));
          var l = Nf(n, r, o),
            u = l || Of(s),
            c = !u("as");
          return function () {
            var f = arguments,
              d =
                o && void 0 !== n.__emotion_styles
                  ? n.__emotion_styles.slice(0)
                  : [];
            if (
              (void 0 !== a && d.push("label:" + a + ";"),
              null == f[0] || void 0 === f[0].raw)
            )
              d.push.apply(d, f);
            else {
              0, d.push(f[0][0]);
              for (var h = f.length, p = 1; p < h; p++) d.push(f[p], f[0][p]);
            }
            var v = Pf(function (t, n, r) {
              var a = (c && t.as) || s,
                o = "",
                f = [],
                h = t;
              if (null == t.theme) {
                for (var p in ((h = {}), t)) h[p] = t[p];
                h.theme = e.useContext(Uf);
              }
              "string" === typeof t.className
                ? (o = (function (e, t, n) {
                    var r = "";
                    return (
                      n.split(" ").forEach(function (n) {
                        void 0 !== e[n] ? t.push(e[n] + ";") : (r += n + " ");
                      }),
                      r
                    );
                  })(n.registered, f, t.className))
                : null != t.className && (o = t.className + " ");
              var v = Af(d.concat(f), n.registered, h);
              (o += n.key + "-" + v.name), void 0 !== i && (o += " " + i);
              var m = c && void 0 === l ? Of(a) : u,
                g = {};
              for (var y in t) (c && "as" === y) || (m(y) && (g[y] = t[y]));
              return (
                (g.className = o),
                (g.ref = r),
                e.createElement(
                  e.Fragment,
                  null,
                  e.createElement(Ff, {
                    cache: n,
                    serialized: v,
                    isStringTag: "string" === typeof a,
                  }),
                  e.createElement(a, g)
                )
              );
            });
            return (
              (v.displayName =
                void 0 !== a
                  ? a
                  : "Styled(" +
                    ("string" === typeof s
                      ? s
                      : s.displayName || s.name || "Component") +
                    ")"),
              (v.defaultProps = n.defaultProps),
              (v.__emotion_real = v),
              (v.__emotion_base = s),
              (v.__emotion_styles = d),
              (v.__emotion_forwardProp = l),
              Object.defineProperty(v, "toString", {
                value: function () {
                  return "." + i;
                },
              }),
              (v.withComponent = function (e, n) {
                return t(
                  e,
                  $u({}, r, n, { shouldForwardProp: Nf(v, n, !0) })
                ).apply(void 0, d);
              }),
              v
            );
          };
        }.bind();
      [
        "a",
        "abbr",
        "address",
        "area",
        "article",
        "aside",
        "audio",
        "b",
        "base",
        "bdi",
        "bdo",
        "big",
        "blockquote",
        "body",
        "br",
        "button",
        "canvas",
        "caption",
        "cite",
        "code",
        "col",
        "colgroup",
        "data",
        "datalist",
        "dd",
        "del",
        "details",
        "dfn",
        "dialog",
        "div",
        "dl",
        "dt",
        "em",
        "embed",
        "fieldset",
        "figcaption",
        "figure",
        "footer",
        "form",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "head",
        "header",
        "hgroup",
        "hr",
        "html",
        "i",
        "iframe",
        "img",
        "input",
        "ins",
        "kbd",
        "keygen",
        "label",
        "legend",
        "li",
        "link",
        "main",
        "map",
        "mark",
        "marquee",
        "menu",
        "menuitem",
        "meta",
        "meter",
        "nav",
        "noscript",
        "object",
        "ol",
        "optgroup",
        "option",
        "output",
        "p",
        "param",
        "picture",
        "pre",
        "progress",
        "q",
        "rp",
        "rt",
        "ruby",
        "s",
        "samp",
        "script",
        "section",
        "select",
        "small",
        "source",
        "span",
        "strong",
        "style",
        "sub",
        "summary",
        "sup",
        "table",
        "tbody",
        "td",
        "textarea",
        "tfoot",
        "th",
        "thead",
        "time",
        "title",
        "tr",
        "track",
        "u",
        "ul",
        "var",
        "video",
        "wbr",
        "circle",
        "clipPath",
        "defs",
        "ellipse",
        "foreignObject",
        "g",
        "image",
        "line",
        "linearGradient",
        "mask",
        "path",
        "pattern",
        "polygon",
        "polyline",
        "radialGradient",
        "rect",
        "stop",
        "svg",
        "text",
        "tspan",
      ].forEach(function (e) {
        zf[e] = zf(e);
      });
      function Bf(e) {
        return null !== e && "object" === typeof e && e.constructor === Object;
      }
      function Hf(e) {
        if (!Bf(e)) return e;
        var t = {};
        return (
          Object.keys(e).forEach(function (n) {
            t[n] = Hf(e[n]);
          }),
          t
        );
      }
      function Gf(e, t) {
        var n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : { clone: !0 },
          r = n.clone ? $u({}, e) : e;
        return (
          Bf(e) &&
            Bf(t) &&
            Object.keys(t).forEach(function (a) {
              "__proto__" !== a &&
                (Bf(t[a]) && a in e && Bf(e[a])
                  ? (r[a] = Gf(e[a], t[a], n))
                  : n.clone
                  ? (r[a] = Bf(t[a]) ? Hf(t[a]) : t[a])
                  : (r[a] = t[a]));
            }),
          r
        );
      }
      var Vf = ["values", "unit", "step"],
        Wf = function (e) {
          var t =
            Object.keys(e).map(function (t) {
              return { key: t, val: e[t] };
            }) || [];
          return (
            t.sort(function (e, t) {
              return e.val - t.val;
            }),
            t.reduce(function (e, t) {
              return $u({}, e, S({}, t.key, t.val));
            }, {})
          );
        };
      function jf(e) {
        var t = e.values,
          n =
            void 0 === t ? { xs: 0, sm: 600, md: 900, lg: 1200, xl: 1536 } : t,
          r = e.unit,
          a = void 0 === r ? "px" : r,
          i = e.step,
          o = void 0 === i ? 5 : i,
          s = Ku(e, Vf),
          l = Wf(n),
          u = Object.keys(l);
        function c(e) {
          var t = "number" === typeof n[e] ? n[e] : e;
          return "@media (min-width:".concat(t).concat(a, ")");
        }
        function f(e) {
          var t = "number" === typeof n[e] ? n[e] : e;
          return "@media (max-width:".concat(t - o / 100).concat(a, ")");
        }
        function d(e, t) {
          var r = u.indexOf(t);
          return (
            "@media (min-width:"
              .concat("number" === typeof n[e] ? n[e] : e)
              .concat(a, ") and ") +
            "(max-width:"
              .concat(
                (-1 !== r && "number" === typeof n[u[r]] ? n[u[r]] : t) -
                  o / 100
              )
              .concat(a, ")")
          );
        }
        return $u(
          {
            keys: u,
            values: l,
            up: c,
            down: f,
            between: d,
            only: function (e) {
              return u.indexOf(e) + 1 < u.length
                ? d(e, u[u.indexOf(e) + 1])
                : c(e);
            },
            not: function (e) {
              var t = u.indexOf(e);
              return 0 === t
                ? c(u[1])
                : t === u.length - 1
                ? f(u[t])
                : d(e, u[u.indexOf(e) + 1]).replace(
                    "@media",
                    "@media not all and"
                  );
            },
            unit: a,
          },
          s
        );
      }
      var Xf = { borderRadius: 4 },
        qf = { xs: 0, sm: 600, md: 900, lg: 1200, xl: 1536 },
        Yf = {
          keys: ["xs", "sm", "md", "lg", "xl"],
          up: function (e) {
            return "@media (min-width:".concat(qf[e], "px)");
          },
        };
      function Kf(e, t, n) {
        var r = e.theme || {};
        if (Array.isArray(t)) {
          var a = r.breakpoints || Yf;
          return t.reduce(function (e, r, i) {
            return (e[a.up(a.keys[i])] = n(t[i])), e;
          }, {});
        }
        if ("object" === typeof t) {
          var i = r.breakpoints || Yf;
          return Object.keys(t).reduce(function (e, r) {
            if (-1 !== Object.keys(i.values || qf).indexOf(r)) {
              e[i.up(r)] = n(t[r], r);
            } else {
              var a = r;
              e[a] = t[a];
            }
            return e;
          }, {});
        }
        return n(t);
      }
      function $f() {
        var e,
          t =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        return (
          (null == (e = t.keys)
            ? void 0
            : e.reduce(function (e, n) {
                return (e[t.up(n)] = {}), e;
              }, {})) || {}
        );
      }
      function Zf(e, t) {
        return e.reduce(function (e, t) {
          var n = e[t];
          return (!n || 0 === Object.keys(n).length) && delete e[t], e;
        }, t);
      }
      function Jf(e, t) {
        var n =
          !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
        if (!t || "string" !== typeof t) return null;
        if (e && e.vars && n) {
          var r = "vars."
            .concat(t)
            .split(".")
            .reduce(function (e, t) {
              return e && e[t] ? e[t] : null;
            }, e);
          if (null != r) return r;
        }
        return t.split(".").reduce(function (e, t) {
          return e && null != e[t] ? e[t] : null;
        }, e);
      }
      function Qf(e, t, n) {
        var r,
          a =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : n;
        return (
          (r =
            "function" === typeof e
              ? e(n)
              : Array.isArray(e)
              ? e[n] || a
              : Jf(e, n) || a),
          t && (r = t(r, a, e)),
          r
        );
      }
      var ed = function (e) {
        var t = e.prop,
          n = e.cssProperty,
          r = void 0 === n ? e.prop : n,
          a = e.themeKey,
          i = e.transform,
          o = function (e) {
            if (null == e[t]) return null;
            var n = e[t],
              o = Jf(e.theme, a) || {};
            return Kf(e, n, function (e) {
              var n = Qf(o, i, e);
              return (
                e === n &&
                  "string" === typeof e &&
                  (n = Qf(
                    o,
                    i,
                    "".concat(t).concat("default" === e ? "" : cc(e)),
                    e
                  )),
                !1 === r ? n : S({}, r, n)
              );
            });
          };
        return (o.propTypes = {}), (o.filterProps = [t]), o;
      };
      var td = function (e, t) {
        return t ? Gf(e, t, { clone: !1 }) : e;
      };
      var nd = { m: "margin", p: "padding" },
        rd = {
          t: "Top",
          r: "Right",
          b: "Bottom",
          l: "Left",
          x: ["Left", "Right"],
          y: ["Top", "Bottom"],
        },
        ad = { marginX: "mx", marginY: "my", paddingX: "px", paddingY: "py" },
        id = (function (e) {
          var t = {};
          return function (n) {
            return void 0 === t[n] && (t[n] = e(n)), t[n];
          };
        })(function (e) {
          if (e.length > 2) {
            if (!ad[e]) return [e];
            e = ad[e];
          }
          var t = o(e.split(""), 2),
            n = t[0],
            r = t[1],
            a = nd[n],
            i = rd[r] || "";
          return Array.isArray(i)
            ? i.map(function (e) {
                return a + e;
              })
            : [a + i];
        }),
        od = [
          "m",
          "mt",
          "mr",
          "mb",
          "ml",
          "mx",
          "my",
          "margin",
          "marginTop",
          "marginRight",
          "marginBottom",
          "marginLeft",
          "marginX",
          "marginY",
          "marginInline",
          "marginInlineStart",
          "marginInlineEnd",
          "marginBlock",
          "marginBlockStart",
          "marginBlockEnd",
        ],
        sd = [
          "p",
          "pt",
          "pr",
          "pb",
          "pl",
          "px",
          "py",
          "padding",
          "paddingTop",
          "paddingRight",
          "paddingBottom",
          "paddingLeft",
          "paddingX",
          "paddingY",
          "paddingInline",
          "paddingInlineStart",
          "paddingInlineEnd",
          "paddingBlock",
          "paddingBlockStart",
          "paddingBlockEnd",
        ],
        ld = [].concat(od, sd);
      function ud(e, t, n, r) {
        var a,
          i = null != (a = Jf(e, t, !1)) ? a : n;
        return "number" === typeof i
          ? function (e) {
              return "string" === typeof e ? e : i * e;
            }
          : Array.isArray(i)
          ? function (e) {
              return "string" === typeof e ? e : i[e];
            }
          : "function" === typeof i
          ? i
          : function () {};
      }
      function cd(e) {
        return ud(e, "spacing", 8);
      }
      function fd(e, t) {
        if ("string" === typeof t || null == t) return t;
        var n = e(Math.abs(t));
        return t >= 0 ? n : "number" === typeof n ? -n : "-".concat(n);
      }
      function dd(e, t, n, r) {
        if (-1 === t.indexOf(n)) return null;
        var a = (function (e, t) {
          return function (n) {
            return e.reduce(function (e, r) {
              return (e[r] = fd(t, n)), e;
            }, {});
          };
        })(id(n), r);
        return Kf(e, e[n], a);
      }
      function hd(e, t) {
        var n = cd(e.theme);
        return Object.keys(e)
          .map(function (r) {
            return dd(e, t, r, n);
          })
          .reduce(td, {});
      }
      function pd(e) {
        return hd(e, od);
      }
      function vd(e) {
        return hd(e, sd);
      }
      function md(e) {
        return hd(e, ld);
      }
      (pd.propTypes = {}),
        (pd.filterProps = od),
        (vd.propTypes = {}),
        (vd.filterProps = sd),
        (md.propTypes = {}),
        (md.filterProps = ld);
      function gd() {
        var e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 8;
        if (e.mui) return e;
        var t = cd({ spacing: e }),
          n = function () {
            for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++)
              n[r] = arguments[r];
            return (0 === n.length ? [1] : n)
              .map(function (e) {
                var n = t(e);
                return "number" === typeof n ? "".concat(n, "px") : n;
              })
              .join(" ");
          };
        return (n.mui = !0), n;
      }
      var yd = function () {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        var r = t.reduce(function (e, t) {
            return (
              t.filterProps.forEach(function (n) {
                e[n] = t;
              }),
              e
            );
          }, {}),
          a = function (e) {
            return Object.keys(e).reduce(function (t, n) {
              return r[n] ? td(t, r[n](e)) : t;
            }, {});
          };
        return (
          (a.propTypes = {}),
          (a.filterProps = t.reduce(function (e, t) {
            return e.concat(t.filterProps);
          }, [])),
          a
        );
      };
      function _d(e) {
        return "number" !== typeof e ? e : "".concat(e, "px solid");
      }
      var bd = ed({ prop: "border", themeKey: "borders", transform: _d }),
        xd = ed({ prop: "borderTop", themeKey: "borders", transform: _d }),
        Sd = ed({ prop: "borderRight", themeKey: "borders", transform: _d }),
        Ed = ed({ prop: "borderBottom", themeKey: "borders", transform: _d }),
        wd = ed({ prop: "borderLeft", themeKey: "borders", transform: _d }),
        Td = ed({ prop: "borderColor", themeKey: "palette" }),
        Md = ed({ prop: "borderTopColor", themeKey: "palette" }),
        Ad = ed({ prop: "borderRightColor", themeKey: "palette" }),
        Cd = ed({ prop: "borderBottomColor", themeKey: "palette" }),
        kd = ed({ prop: "borderLeftColor", themeKey: "palette" }),
        Rd = function (e) {
          if (void 0 !== e.borderRadius && null !== e.borderRadius) {
            var t = ud(e.theme, "shape.borderRadius", 4);
            return Kf(e, e.borderRadius, function (e) {
              return { borderRadius: fd(t, e) };
            });
          }
          return null;
        };
      (Rd.propTypes = {}), (Rd.filterProps = ["borderRadius"]);
      yd(bd, xd, Sd, Ed, wd, Td, Md, Ad, Cd, kd, Rd);
      var Pd = function (e) {
        if (void 0 !== e.gap && null !== e.gap) {
          var t = ud(e.theme, "spacing", 8);
          return Kf(e, e.gap, function (e) {
            return { gap: fd(t, e) };
          });
        }
        return null;
      };
      (Pd.propTypes = {}), (Pd.filterProps = ["gap"]);
      var Ud = function (e) {
        if (void 0 !== e.columnGap && null !== e.columnGap) {
          var t = ud(e.theme, "spacing", 8);
          return Kf(e, e.columnGap, function (e) {
            return { columnGap: fd(t, e) };
          });
        }
        return null;
      };
      (Ud.propTypes = {}), (Ud.filterProps = ["columnGap"]);
      var Ld = function (e) {
        if (void 0 !== e.rowGap && null !== e.rowGap) {
          var t = ud(e.theme, "spacing", 8);
          return Kf(e, e.rowGap, function (e) {
            return { rowGap: fd(t, e) };
          });
        }
        return null;
      };
      (Ld.propTypes = {}), (Ld.filterProps = ["rowGap"]);
      yd(
        Pd,
        Ud,
        Ld,
        ed({ prop: "gridColumn" }),
        ed({ prop: "gridRow" }),
        ed({ prop: "gridAutoFlow" }),
        ed({ prop: "gridAutoColumns" }),
        ed({ prop: "gridAutoRows" }),
        ed({ prop: "gridTemplateColumns" }),
        ed({ prop: "gridTemplateRows" }),
        ed({ prop: "gridTemplateAreas" }),
        ed({ prop: "gridArea" })
      );
      function Dd(e, t) {
        return "grey" === t ? t : e;
      }
      yd(
        ed({ prop: "color", themeKey: "palette", transform: Dd }),
        ed({
          prop: "bgcolor",
          cssProperty: "backgroundColor",
          themeKey: "palette",
          transform: Dd,
        }),
        ed({ prop: "backgroundColor", themeKey: "palette", transform: Dd })
      );
      function Id(e) {
        return e <= 1 && 0 !== e ? "".concat(100 * e, "%") : e;
      }
      var Od = ed({ prop: "width", transform: Id }),
        Nd = function (e) {
          if (void 0 !== e.maxWidth && null !== e.maxWidth) {
            return Kf(e, e.maxWidth, function (t) {
              var n,
                r,
                a =
                  (null == (n = e.theme) ||
                  null == (n = n.breakpoints) ||
                  null == (n = n.values)
                    ? void 0
                    : n[t]) || qf[t];
              return a
                ? "px" !==
                  (null == (r = e.theme) || null == (r = r.breakpoints)
                    ? void 0
                    : r.unit)
                  ? { maxWidth: "".concat(a).concat(e.theme.breakpoints.unit) }
                  : { maxWidth: a }
                : { maxWidth: Id(t) };
            });
          }
          return null;
        };
      Nd.filterProps = ["maxWidth"];
      var Fd = ed({ prop: "minWidth", transform: Id }),
        zd = ed({ prop: "height", transform: Id }),
        Bd = ed({ prop: "maxHeight", transform: Id }),
        Hd = ed({ prop: "minHeight", transform: Id }),
        Gd =
          (ed({ prop: "size", cssProperty: "width", transform: Id }),
          ed({ prop: "size", cssProperty: "height", transform: Id }),
          yd(Od, Nd, Fd, zd, Bd, Hd, ed({ prop: "boxSizing" })),
          {
            border: { themeKey: "borders", transform: _d },
            borderTop: { themeKey: "borders", transform: _d },
            borderRight: { themeKey: "borders", transform: _d },
            borderBottom: { themeKey: "borders", transform: _d },
            borderLeft: { themeKey: "borders", transform: _d },
            borderColor: { themeKey: "palette" },
            borderTopColor: { themeKey: "palette" },
            borderRightColor: { themeKey: "palette" },
            borderBottomColor: { themeKey: "palette" },
            borderLeftColor: { themeKey: "palette" },
            borderRadius: { themeKey: "shape.borderRadius", style: Rd },
            color: { themeKey: "palette", transform: Dd },
            bgcolor: {
              themeKey: "palette",
              cssProperty: "backgroundColor",
              transform: Dd,
            },
            backgroundColor: { themeKey: "palette", transform: Dd },
            p: { style: vd },
            pt: { style: vd },
            pr: { style: vd },
            pb: { style: vd },
            pl: { style: vd },
            px: { style: vd },
            py: { style: vd },
            padding: { style: vd },
            paddingTop: { style: vd },
            paddingRight: { style: vd },
            paddingBottom: { style: vd },
            paddingLeft: { style: vd },
            paddingX: { style: vd },
            paddingY: { style: vd },
            paddingInline: { style: vd },
            paddingInlineStart: { style: vd },
            paddingInlineEnd: { style: vd },
            paddingBlock: { style: vd },
            paddingBlockStart: { style: vd },
            paddingBlockEnd: { style: vd },
            m: { style: pd },
            mt: { style: pd },
            mr: { style: pd },
            mb: { style: pd },
            ml: { style: pd },
            mx: { style: pd },
            my: { style: pd },
            margin: { style: pd },
            marginTop: { style: pd },
            marginRight: { style: pd },
            marginBottom: { style: pd },
            marginLeft: { style: pd },
            marginX: { style: pd },
            marginY: { style: pd },
            marginInline: { style: pd },
            marginInlineStart: { style: pd },
            marginInlineEnd: { style: pd },
            marginBlock: { style: pd },
            marginBlockStart: { style: pd },
            marginBlockEnd: { style: pd },
            displayPrint: {
              cssProperty: !1,
              transform: function (e) {
                return { "@media print": { display: e } };
              },
            },
            display: {},
            overflow: {},
            textOverflow: {},
            visibility: {},
            whiteSpace: {},
            flexBasis: {},
            flexDirection: {},
            flexWrap: {},
            justifyContent: {},
            alignItems: {},
            alignContent: {},
            order: {},
            flex: {},
            flexGrow: {},
            flexShrink: {},
            alignSelf: {},
            justifyItems: {},
            justifySelf: {},
            gap: { style: Pd },
            rowGap: { style: Ld },
            columnGap: { style: Ud },
            gridColumn: {},
            gridRow: {},
            gridAutoFlow: {},
            gridAutoColumns: {},
            gridAutoRows: {},
            gridTemplateColumns: {},
            gridTemplateRows: {},
            gridTemplateAreas: {},
            gridArea: {},
            position: {},
            zIndex: { themeKey: "zIndex" },
            top: {},
            right: {},
            bottom: {},
            left: {},
            boxShadow: { themeKey: "shadows" },
            width: { transform: Id },
            maxWidth: { style: Nd },
            minWidth: { transform: Id },
            height: { transform: Id },
            maxHeight: { transform: Id },
            minHeight: { transform: Id },
            boxSizing: {},
            fontFamily: { themeKey: "typography" },
            fontSize: { themeKey: "typography" },
            fontStyle: { themeKey: "typography" },
            fontWeight: { themeKey: "typography" },
            letterSpacing: {},
            textTransform: {},
            lineHeight: {},
            textAlign: {},
            typography: { cssProperty: !1, themeKey: "typography" },
          });
      var Vd = (function () {
        function e(e, t, n, r) {
          var a,
            i = (S((a = {}), e, t), S(a, "theme", n), a),
            o = r[e];
          if (!o) return S({}, e, t);
          var s = o.cssProperty,
            l = void 0 === s ? e : s,
            u = o.themeKey,
            c = o.transform,
            f = o.style;
          if (null == t) return null;
          if ("typography" === u && "inherit" === t) return S({}, e, t);
          var d = Jf(n, u) || {};
          if (f) return f(i);
          return Kf(i, t, function (t) {
            var n = Qf(d, c, t);
            return (
              t === n &&
                "string" === typeof t &&
                (n = Qf(
                  d,
                  c,
                  "".concat(e).concat("default" === t ? "" : cc(t)),
                  t
                )),
              !1 === l ? n : S({}, l, n)
            );
          });
        }
        return function t(n) {
          var r,
            a = n || {},
            i = a.sx,
            o = a.theme,
            s = void 0 === o ? {} : o;
          if (!i) return null;
          var l = null != (r = s.unstable_sxConfig) ? r : Gd;
          function u(n) {
            var r = n;
            if ("function" === typeof n) r = n(s);
            else if ("object" !== typeof n) return n;
            if (!r) return null;
            var a = $f(s.breakpoints),
              i = Object.keys(a),
              o = a;
            return (
              Object.keys(r).forEach(function (n) {
                var a,
                  i,
                  u = ((a = r[n]), (i = s), "function" === typeof a ? a(i) : a);
                if (null !== u && void 0 !== u)
                  if ("object" === typeof u)
                    if (l[n]) o = td(o, e(n, u, s, l));
                    else {
                      var c = Kf({ theme: s }, u, function (e) {
                        return S({}, n, e);
                      });
                      !(function () {
                        for (
                          var e = arguments.length, t = new Array(e), n = 0;
                          n < e;
                          n++
                        )
                          t[n] = arguments[n];
                        var r = t.reduce(function (e, t) {
                            return e.concat(Object.keys(t));
                          }, []),
                          a = new Set(r);
                        return t.every(function (e) {
                          return a.size === Object.keys(e).length;
                        });
                      })(c, u)
                        ? (o = td(o, c))
                        : (o[n] = t({ sx: u, theme: s }));
                    }
                  else o = td(o, e(n, u, s, l));
              }),
              Zf(i, o)
            );
          }
          return Array.isArray(i) ? i.map(u) : u(i);
        };
      })();
      Vd.filterProps = ["sx"];
      var Wd = Vd,
        jd = ["breakpoints", "palette", "spacing", "shape"];
      var Xd = function () {
          for (
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              t = e.breakpoints,
              n = void 0 === t ? {} : t,
              r = e.palette,
              a = void 0 === r ? {} : r,
              i = e.spacing,
              o = e.shape,
              s = void 0 === o ? {} : o,
              l = Ku(e, jd),
              u = jf(n),
              c = gd(i),
              f = Gf(
                {
                  breakpoints: u,
                  direction: "ltr",
                  components: {},
                  palette: $u({ mode: "light" }, a),
                  spacing: c,
                  shape: $u({}, Xf, s),
                },
                l
              ),
              d = arguments.length,
              h = new Array(d > 1 ? d - 1 : 0),
              p = 1;
            p < d;
            p++
          )
            h[p - 1] = arguments[p];
          return (
            ((f = h.reduce(function (e, t) {
              return Gf(e, t);
            }, f)).unstable_sxConfig = $u(
              {},
              Gd,
              null == l ? void 0 : l.unstable_sxConfig
            )),
            (f.unstable_sx = function (e) {
              return Wd({ sx: e, theme: this });
            }),
            f
          );
        },
        qd = ["variant"];
      function Yd(e) {
        return 0 === e.length;
      }
      function Kd(e) {
        var t = e.variant,
          n = Ku(e, qd),
          r = t || "";
        return (
          Object.keys(n)
            .sort()
            .forEach(function (t) {
              r +=
                "color" === t
                  ? Yd(r)
                    ? e[t]
                    : cc(e[t])
                  : "".concat(Yd(r) ? t : cc(t)).concat(cc(e[t].toString()));
            }),
          r
        );
      }
      var $d = [
        "name",
        "slot",
        "skipVariantsResolver",
        "skipSx",
        "overridesResolver",
      ];
      var Zd = function (e) {
          var t = {};
          return (
            e &&
              e.forEach(function (e) {
                var n = Kd(e.props);
                t[n] = e.style;
              }),
            t
          );
        },
        Jd = function (e, t, n) {
          var r = e.ownerState,
            a = void 0 === r ? {} : r,
            i = [];
          return (
            n &&
              n.forEach(function (n) {
                var r = !0;
                Object.keys(n.props).forEach(function (t) {
                  a[t] !== n.props[t] && e[t] !== n.props[t] && (r = !1);
                }),
                  r && i.push(t[Kd(n.props)]);
              }),
            i
          );
        };
      function Qd(e) {
        return "ownerState" !== e && "theme" !== e && "sx" !== e && "as" !== e;
      }
      var eh = Xd();
      function th(e) {
        var t,
          n = e.defaultTheme,
          r = e.theme,
          a = e.themeId;
        return (t = r), 0 === Object.keys(t).length ? n : r[a] || r;
      }
      var nh = function (e) {
        var t,
          n = e.styledArg,
          r = e.props,
          a = n(
            $u({}, r, {
              theme: th(
                $u({}, r, { defaultTheme: e.defaultTheme, themeId: e.themeId })
              ),
            })
          );
        if ((a && a.variants && ((t = a.variants), delete a.variants), t)) {
          var i = Jd(r, Zd(t), t);
          return [a].concat(f(i));
        }
        return a;
      };
      function rh() {
        var e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          t = e.themeId,
          n = e.defaultTheme,
          r = void 0 === n ? eh : n,
          a = e.rootShouldForwardProp,
          i = void 0 === a ? Qd : a,
          s = e.slotShouldForwardProp,
          l = void 0 === s ? Qd : s,
          u = function (e) {
            return Wd(
              $u({}, e, {
                theme: th($u({}, e, { defaultTheme: r, themeId: t })),
              })
            );
          };
        return (
          (u.__mui_systemSx = !0),
          function (e) {
            var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
            !(function (e, t) {
              Array.isArray(e.__emotion_styles) &&
                (e.__emotion_styles = t(e.__emotion_styles));
            })(e, function (e) {
              return e.filter(function (e) {
                return !(null != e && e.__mui_systemSx);
              });
            });
            var a,
              s,
              c = n.name,
              d = n.slot,
              h = n.skipVariantsResolver,
              p = n.skipSx,
              v = n.overridesResolver,
              m =
                void 0 === v
                  ? (a = (s = d) ? s.charAt(0).toLowerCase() + s.slice(1) : s)
                    ? function (e, t) {
                        return t[a];
                      }
                    : null
                  : v,
              g = Ku(n, $d),
              y = void 0 !== h ? h : (d && "Root" !== d && "root" !== d) || !1,
              _ = p || !1;
            var b = Qd;
            "Root" === d || "root" === d
              ? (b = i)
              : d
              ? (b = l)
              : (function (e) {
                  return "string" === typeof e && e.charCodeAt(0) > 96;
                })(e) && (b = void 0);
            var x = (function (e, t) {
                return zf(e, t);
              })(e, $u({ shouldForwardProp: b, label: undefined }, g)),
              S = function (n) {
                for (
                  var a = arguments.length,
                    i = new Array(a > 1 ? a - 1 : 0),
                    s = 1;
                  s < a;
                  s++
                )
                  i[s - 1] = arguments[s];
                var l,
                  d = i
                    ? i.map(function (e) {
                        if ("function" === typeof e && e.__emotion_real !== e)
                          return function (n) {
                            return nh({
                              styledArg: e,
                              props: n,
                              defaultTheme: r,
                              themeId: t,
                            });
                          };
                        if (Bf(e)) {
                          var n,
                            a = e;
                          return (
                            e &&
                              e.variants &&
                              ((n = e.variants),
                              delete a.variants,
                              (a = function (t) {
                                var r = e;
                                return (
                                  Jd(t, Zd(n), n).forEach(function (e) {
                                    r = Gf(r, e);
                                  }),
                                  r
                                );
                              })),
                            a
                          );
                        }
                        return e;
                      })
                    : [],
                  h = n;
                Bf(n)
                  ? n &&
                    n.variants &&
                    ((l = n.variants),
                    delete h.variants,
                    (h = function (e) {
                      var t = n;
                      return (
                        Jd(e, Zd(l), l).forEach(function (e) {
                          t = Gf(t, e);
                        }),
                        t
                      );
                    }))
                  : "function" === typeof n &&
                    n.__emotion_real !== n &&
                    (h = function (e) {
                      return nh({
                        styledArg: n,
                        props: e,
                        defaultTheme: r,
                        themeId: t,
                      });
                    });
                c &&
                  m &&
                  d.push(function (e) {
                    var n = th($u({}, e, { defaultTheme: r, themeId: t })),
                      a = (function (e, t) {
                        return t.components &&
                          t.components[e] &&
                          t.components[e].styleOverrides
                          ? t.components[e].styleOverrides
                          : null;
                      })(c, n);
                    if (a) {
                      var i = {};
                      return (
                        Object.entries(a).forEach(function (t) {
                          var r = o(t, 2),
                            a = r[0],
                            s = r[1];
                          i[a] =
                            "function" === typeof s
                              ? s($u({}, e, { theme: n }))
                              : s;
                        }),
                        m(e, i)
                      );
                    }
                    return null;
                  }),
                  c &&
                    !y &&
                    d.push(function (e) {
                      var n = th($u({}, e, { defaultTheme: r, themeId: t }));
                      return (function (e, t, n, r) {
                        var a,
                          i =
                            null == n ||
                            null == (a = n.components) ||
                            null == (a = a[r])
                              ? void 0
                              : a.variants;
                        return Jd(e, t, i);
                      })(
                        e,
                        (function (e, t) {
                          var n = [];
                          return (
                            t &&
                              t.components &&
                              t.components[e] &&
                              t.components[e].variants &&
                              (n = t.components[e].variants),
                            Zd(n)
                          );
                        })(c, n),
                        n,
                        c
                      );
                    }),
                  _ || d.push(u);
                var p = d.length - i.length;
                if (Array.isArray(n) && p > 0) {
                  var v = new Array(p).fill("");
                  (h = [].concat(f(n), f(v))).raw = [].concat(f(n.raw), f(v));
                }
                var g = x.apply(void 0, [h].concat(f(d)));
                return e.muiName && (g.muiName = e.muiName), g;
              };
            return x.withConfig && (S.withConfig = x.withConfig), S;
          }
        );
      }
      function ah() {
        var e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
        function t() {
          for (var n = arguments.length, r = new Array(n), a = 0; a < n; a++)
            r[a] = arguments[a];
          if (!r.length) return "";
          var i = r[0];
          return "string" !== typeof i ||
            i.match(
              /(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/
            )
            ? ", ".concat(i)
            : ", var(--"
                .concat(e ? "".concat(e, "-") : "")
                .concat(i)
                .concat(t.apply(void 0, f(r.slice(1))), ")");
        }
        return function (n) {
          for (
            var r = arguments.length, a = new Array(r > 1 ? r - 1 : 0), i = 1;
            i < r;
            i++
          )
            a[i - 1] = arguments[i];
          return "var(--"
            .concat(e ? "".concat(e, "-") : "")
            .concat(n)
            .concat(t.apply(void 0, a), ")");
        };
      }
      function ih(e) {
        var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
          n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        return Math.min(Math.max(t, e), n);
      }
      function oh(e) {
        if (e.type) return e;
        if ("#" === e.charAt(0))
          return oh(
            (function (e) {
              e = e.slice(1);
              var t = new RegExp(
                  ".{1,".concat(e.length >= 6 ? 2 : 1, "}"),
                  "g"
                ),
                n = e.match(t);
              return (
                n &&
                  1 === n[0].length &&
                  (n = n.map(function (e) {
                    return e + e;
                  })),
                n
                  ? "rgb".concat(4 === n.length ? "a" : "", "(").concat(
                      n
                        .map(function (e, t) {
                          return t < 3
                            ? parseInt(e, 16)
                            : Math.round((parseInt(e, 16) / 255) * 1e3) / 1e3;
                        })
                        .join(", "),
                      ")"
                    )
                  : ""
              );
            })(e)
          );
        var t = e.indexOf("("),
          n = e.substring(0, t);
        if (-1 === ["rgb", "rgba", "hsl", "hsla", "color"].indexOf(n))
          throw new Error(uc(9, e));
        var r,
          a = e.substring(t + 1, e.length - 1);
        if ("color" === n) {
          if (
            ((r = (a = a.split(" ")).shift()),
            4 === a.length && "/" === a[3].charAt(0) && (a[3] = a[3].slice(1)),
            -1 ===
              [
                "srgb",
                "display-p3",
                "a98-rgb",
                "prophoto-rgb",
                "rec-2020",
              ].indexOf(r))
          )
            throw new Error(uc(10, r));
        } else a = a.split(",");
        return {
          type: n,
          values: (a = a.map(function (e) {
            return parseFloat(e);
          })),
          colorSpace: r,
        };
      }
      var sh = function (e) {
        var t = oh(e);
        return t.values
          .slice(0, 3)
          .map(function (e, n) {
            return -1 !== t.type.indexOf("hsl") && 0 !== n
              ? "".concat(e, "%")
              : e;
          })
          .join(" ");
      };
      function lh(e) {
        var t = e.type,
          n = e.colorSpace,
          r = e.values;
        return (
          -1 !== t.indexOf("rgb")
            ? (r = r.map(function (e, t) {
                return t < 3 ? parseInt(e, 10) : e;
              }))
            : -1 !== t.indexOf("hsl") &&
              ((r[1] = "".concat(r[1], "%")), (r[2] = "".concat(r[2], "%"))),
          (r =
            -1 !== t.indexOf("color")
              ? "".concat(n, " ").concat(r.join(" "))
              : "".concat(r.join(", "))),
          "".concat(t, "(").concat(r, ")")
        );
      }
      function uh(e) {
        var t =
          "hsl" === (e = oh(e)).type || "hsla" === e.type
            ? oh(
                (function (e) {
                  var t = (e = oh(e)).values,
                    n = t[0],
                    r = t[1] / 100,
                    a = t[2] / 100,
                    i = r * Math.min(a, 1 - a),
                    o = function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : (e + n / 30) % 12;
                      return a - i * Math.max(Math.min(t - 3, 9 - t, 1), -1);
                    },
                    s = "rgb",
                    l = [
                      Math.round(255 * o(0)),
                      Math.round(255 * o(8)),
                      Math.round(255 * o(4)),
                    ];
                  return (
                    "hsla" === e.type && ((s += "a"), l.push(t[3])),
                    lh({ type: s, values: l })
                  );
                })(e)
              ).values
            : e.values;
        return (
          (t = t.map(function (t) {
            return (
              "color" !== e.type && (t /= 255),
              t <= 0.03928 ? t / 12.92 : Math.pow((t + 0.055) / 1.055, 2.4)
            );
          })),
          Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3))
        );
      }
      function ch(e, t) {
        if (((e = oh(e)), (t = ih(t)), -1 !== e.type.indexOf("hsl")))
          e.values[2] *= 1 - t;
        else if (-1 !== e.type.indexOf("rgb") || -1 !== e.type.indexOf("color"))
          for (var n = 0; n < 3; n += 1) e.values[n] *= 1 - t;
        return lh(e);
      }
      function fh(e, t) {
        if (((e = oh(e)), (t = ih(t)), -1 !== e.type.indexOf("hsl")))
          e.values[2] += (100 - e.values[2]) * t;
        else if (-1 !== e.type.indexOf("rgb"))
          for (var n = 0; n < 3; n += 1) e.values[n] += (255 - e.values[n]) * t;
        else if (-1 !== e.type.indexOf("color"))
          for (var r = 0; r < 3; r += 1) e.values[r] += (1 - e.values[r]) * t;
        return lh(e);
      }
      var dh = function (e, t, n) {
          var r =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : [],
            a = e;
          t.forEach(function (e, i) {
            i === t.length - 1
              ? Array.isArray(a)
                ? (a[Number(e)] = n)
                : a && "object" === typeof a && (a[e] = n)
              : a &&
                "object" === typeof a &&
                (a[e] || (a[e] = r.includes(e) ? [] : {}), (a = a[e]));
          });
        },
        hh = function (e, t, n) {
          !(function e(r) {
            var a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : [],
              i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : [];
            Object.entries(r).forEach(function (r) {
              var s = o(r, 2),
                l = s[0],
                u = s[1];
              (!n || (n && !n([].concat(f(a), [l])))) &&
                void 0 !== u &&
                null !== u &&
                ("object" === typeof u && Object.keys(u).length > 0
                  ? e(
                      u,
                      [].concat(f(a), [l]),
                      Array.isArray(u) ? [].concat(f(i), [l]) : i
                    )
                  : t([].concat(f(a), [l]), u, i));
            });
          })(e);
        },
        ph = function (e, t) {
          return "number" === typeof t
            ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some(function (
                t
              ) {
                return e.includes(t);
              }) || e[e.length - 1].toLowerCase().indexOf("opacity") >= 0
              ? t
              : "".concat(t, "px")
            : t;
        };
      function vh(e, t) {
        var n = t || {},
          r = n.prefix,
          a = n.shouldSkipGeneratingVar,
          i = {},
          o = {},
          s = {};
        return (
          hh(
            e,
            function (e, t, n) {
              if (
                ("string" === typeof t || "number" === typeof t) &&
                (!a || !a(e, t))
              ) {
                var l = "--"
                  .concat(r ? "".concat(r, "-") : "")
                  .concat(e.join("-"));
                Object.assign(i, S({}, l, ph(e, t))),
                  dh(o, e, "var(".concat(l, ")"), n),
                  dh(s, e, "var(".concat(l, ", ").concat(t, ")"), n);
              }
            },
            function (e) {
              return "vars" === e[0];
            }
          ),
          { css: i, vars: o, varsWithDefaults: s }
        );
      }
      var mh = ["colorSchemes", "components"],
        gh = ["light"];
      var yh = function (e, t) {
          var n = e.colorSchemes,
            r = void 0 === n ? {} : n,
            a = vh(Ku(e, mh), t),
            i = a.vars,
            s = a.css,
            l = a.varsWithDefaults,
            u = {},
            c = r.light,
            f = Ku(r, gh);
          if (
            (Object.entries(f || {}).forEach(function (e) {
              var n = o(e, 2),
                r = n[0],
                a = vh(n[1], t),
                i = a.vars,
                s = a.css,
                c = a.varsWithDefaults;
              (l = Gf(l, c)), (u[r] = { css: s, vars: i });
            }),
            c)
          ) {
            var d = vh(c, t),
              h = d.css,
              p = d.vars,
              v = d.varsWithDefaults;
            (l = Gf(l, v)), (u.light = { css: h, vars: p });
          }
          return {
            vars: l,
            generateCssVars: function (e) {
              return e
                ? { css: $u({}, u[e].css), vars: u[e].vars }
                : { css: $u({}, s), vars: i };
            },
          };
        },
        _h = $u({}, Gd, {
          borderRadius: { themeKey: "radius" },
          boxShadow: { themeKey: "shadow" },
          fontFamily: { themeKey: "fontFamily" },
          fontSize: { themeKey: "fontSize" },
          fontWeight: { themeKey: "fontWeight" },
          letterSpacing: { themeKey: "letterSpacing" },
          lineHeight: { themeKey: "lineHeight" },
        }),
        bh = {
          grey: {
            50: "#FBFCFE",
            100: "#F0F4F8",
            200: "#DDE7EE",
            300: "#CDD7E1",
            400: "#9FA6AD",
            500: "#636B74",
            600: "#555E68",
            700: "#32383E",
            800: "#171A1C",
            900: "#0B0D0E",
          },
          blue: {
            50: "#EDF5FD",
            100: "#E3EFFB",
            200: "#C7DFF7",
            300: "#97C3F0",
            400: "#4393E4",
            500: "#0B6BCB",
            600: "#185EA5",
            700: "#12467B",
            800: "#0A2744",
            900: "#051423",
          },
          yellow: {
            50: "#FEFAF6",
            100: "#FDF0E1",
            200: "#FCE1C2",
            300: "#F3C896",
            400: "#EA9A3E",
            500: "#9A5B13",
            600: "#72430D",
            700: "#492B08",
            800: "#2E1B05",
            900: "#1D1002",
          },
          red: {
            50: "#FEF6F6",
            100: "#FCE4E4",
            200: "#F7C5C5",
            300: "#F09898",
            400: "#E47474",
            500: "#C41C1C",
            600: "#A51818",
            700: "#7D1212",
            800: "#430A0A",
            900: "#240505",
          },
          green: {
            50: "#F6FEF6",
            100: "#E3FBE3",
            200: "#C7F7C7",
            300: "#A1E8A1",
            400: "#51BC51",
            500: "#1F7A1F",
            600: "#136C13",
            700: "#0A470A",
            800: "#042F04",
            900: "#021D02",
          },
        };
      function xh(e) {
        var t;
        return (
          !!e[0].match(/^(typography|variants|breakpoints)$/) ||
          !!e[0].match(/sxConfig$/) ||
          ("palette" === e[0] &&
            !(null == (t = e[1]) || !t.match(/^(mode)$/))) ||
          ("focus" === e[0] && "thickness" !== e[1])
        );
      }
      var Sh = function (e) {
          return e;
        },
        Eh = (function () {
          var e = Sh;
          return {
            configure: function (t) {
              e = t;
            },
            generate: function (t) {
              return e(t);
            },
            reset: function () {
              e = Sh;
            },
          };
        })(),
        wh = {
          active: "active",
          checked: "checked",
          completed: "completed",
          disabled: "disabled",
          error: "error",
          expanded: "expanded",
          focused: "focused",
          focusVisible: "focusVisible",
          open: "open",
          readOnly: "readOnly",
          required: "required",
          selected: "selected",
        };
      function Th(e, t) {
        var n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : "Mui",
          r = wh[t];
        return r
          ? "".concat(n, "-").concat(r)
          : "".concat(Eh.generate(e), "-").concat(t);
      }
      function Mh(e, t) {
        var n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : "Mui",
          r = {};
        return (
          t.forEach(function (t) {
            r[t] = Th(e, t, n);
          }),
          r
        );
      }
      var Ah = function (e, t) {
          return Th(e, t, "Mui");
        },
        Ch = function (e, t) {
          return Mh(e, t, "Mui");
        },
        kh = function (e, t, n) {
          t.includes("Color") && (e.color = n),
            t.includes("Bg") && (e.backgroundColor = n),
            t.includes("Border") && (e.borderColor = n);
        },
        Rh = function (e, t, n) {
          var r = {};
          return (
            Object.entries(t || {}).forEach(function (t) {
              var a = o(t, 2),
                i = a[0],
                s = a[1];
              if (
                i.match(new RegExp("".concat(e, "(color|bg|border)"), "i")) &&
                s
              ) {
                var l = n ? n(i) : s;
                i.includes("Disabled") &&
                  ((r.pointerEvents = "none"),
                  (r.cursor = "default"),
                  (r["--Icon-color"] = "currentColor")),
                  i.match(/(Hover|Active|Disabled)/) ||
                    (r["--variant-borderWidth"] ||
                      (r["--variant-borderWidth"] = "0px"),
                    i.includes("Border") &&
                      ((r["--variant-borderWidth"] = "1px"),
                      (r.border = "var(--variant-borderWidth) solid"))),
                  kh(r, i, l);
              }
            }),
            r
          );
        },
        Ph = function (e, t) {
          var n = {};
          if (t) {
            var r = t.getCssVar,
              a = t.palette;
            Object.entries(a).forEach(function (t) {
              var i = o(t, 2),
                s = i[0],
                l = i[1];
              (function (e) {
                return (
                  e &&
                  "object" === typeof e &&
                  Object.keys(e).some(function (e) {
                    var t;
                    return null == (t = e.match)
                      ? void 0
                      : t.call(
                          e,
                          /^(plain(Hover|Active|Disabled)?(Color|Bg)|outlined(Hover|Active|Disabled)?(Color|Border|Bg)|soft(Hover|Active|Disabled)?(Color|Bg)|solid(Hover|Active|Disabled)?(Color|Bg))$/
                        );
                  })
                );
              })(l) &&
                "object" === typeof l &&
                (n = $u(
                  {},
                  n,
                  S(
                    {},
                    s,
                    Rh(e, l, function (e) {
                      return "var(--variant-"
                        .concat(e, ", ")
                        .concat(
                          r("palette-".concat(s, "-").concat(e), a[s][e]),
                          ")"
                        );
                    })
                  )
                ));
            });
          }
          return (
            (n.context = Rh(e, {
              plainColor: "var(--variant-plainColor)",
              plainHoverColor: "var(--variant-plainHoverColor)",
              plainHoverBg: "var(--variant-plainHoverBg)",
              plainActiveBg: "var(--variant-plainActiveBg)",
              plainDisabledColor: "var(--variant-plainDisabledColor)",
              outlinedColor: "var(--variant-outlinedColor)",
              outlinedBorder: "var(--variant-outlinedBorder)",
              outlinedHoverColor: "var(--variant-outlinedHoverColor)",
              outlinedHoverBorder: "var(--variant-outlinedHoverBorder)",
              outlinedHoverBg: "var(--variant-outlinedHoverBg)",
              outlinedActiveBg: "var(--variant-outlinedActiveBg)",
              outlinedDisabledColor: "var(--variant-outlinedDisabledColor)",
              outlinedDisabledBorder: "var(--variant-outlinedDisabledBorder)",
              softColor: "var(--variant-softColor)",
              softBg: "var(--variant-softBg)",
              softHoverColor: "var(--variant-softHoverColor)",
              softHoverBg: "var(--variant-softHoverBg)",
              softActiveBg: "var(--variant-softActiveBg)",
              softDisabledColor: "var(--variant-softDisabledColor)",
              softDisabledBg: "var(--variant-softDisabledBg)",
              solidColor: "var(--variant-solidColor)",
              solidBg: "var(--variant-solidBg)",
              solidHoverBg: "var(--variant-solidHoverBg)",
              solidActiveBg: "var(--variant-solidActiveBg)",
              solidDisabledColor: "var(--variant-solidDisabledColor)",
              solidDisabledBg: "var(--variant-solidDisabledBg)",
            })),
            n
          );
        },
        Uh = [
          "cssVarPrefix",
          "breakpoints",
          "spacing",
          "components",
          "variants",
          "shouldSkipGeneratingVar",
        ],
        Lh = ["colorSchemes"];
      var Dh = (function (e) {
          var t,
            n,
            r,
            a,
            i,
            s,
            l,
            u,
            c,
            f,
            d = e || {},
            h = d.cssVarPrefix,
            p = void 0 === h ? "joy" : h,
            v = d.breakpoints,
            m = d.spacing,
            g = d.components,
            y = d.variants,
            _ = d.shouldSkipGeneratingVar,
            b = void 0 === _ ? xh : _,
            x = Ku(d, Uh),
            S = (function () {
              return ah(
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "joy"
              );
            })(p),
            E = {
              primary: bh.blue,
              neutral: bh.grey,
              danger: bh.red,
              success: bh.green,
              warning: bh.yellow,
              common: { white: "#FFF", black: "#000" },
            },
            w = function (e) {
              var t,
                n = e.split("-"),
                r = n[1],
                a = n[2];
              return S(e, null == (t = E[r]) ? void 0 : t[a]);
            },
            T = function (e) {
              return {
                plainColor: w("palette-".concat(e, "-500")),
                plainHoverBg: w("palette-".concat(e, "-100")),
                plainActiveBg: w("palette-".concat(e, "-200")),
                plainDisabledColor: w("palette-neutral-400"),
                outlinedColor: w("palette-".concat(e, "-500")),
                outlinedBorder: w("palette-".concat(e, "-300")),
                outlinedHoverBg: w("palette-".concat(e, "-100")),
                outlinedActiveBg: w("palette-".concat(e, "-200")),
                outlinedDisabledColor: w("palette-neutral-400"),
                outlinedDisabledBorder: w("palette-neutral-200"),
                softColor: w("palette-".concat(e, "-700")),
                softBg: w("palette-".concat(e, "-100")),
                softHoverBg: w("palette-".concat(e, "-200")),
                softActiveColor: w("palette-".concat(e, "-800")),
                softActiveBg: w("palette-".concat(e, "-300")),
                softDisabledColor: w("palette-neutral-400"),
                softDisabledBg: w("palette-neutral-50"),
                solidColor: w("palette-common-white"),
                solidBg: w("palette-".concat(e, "-500")),
                solidHoverBg: w("palette-".concat(e, "-600")),
                solidActiveBg: w("palette-".concat(e, "-700")),
                solidDisabledColor: w("palette-neutral-400"),
                solidDisabledBg: w("palette-neutral-100"),
              };
            },
            M = function (e) {
              return {
                plainColor: w("palette-".concat(e, "-300")),
                plainHoverBg: w("palette-".concat(e, "-800")),
                plainActiveBg: w("palette-".concat(e, "-700")),
                plainDisabledColor: w("palette-neutral-500"),
                outlinedColor: w("palette-".concat(e, "-200")),
                outlinedBorder: w("palette-".concat(e, "-700")),
                outlinedHoverBg: w("palette-".concat(e, "-800")),
                outlinedActiveBg: w("palette-".concat(e, "-700")),
                outlinedDisabledColor: w("palette-neutral-500"),
                outlinedDisabledBorder: w("palette-neutral-800"),
                softColor: w("palette-".concat(e, "-200")),
                softBg: w("palette-".concat(e, "-800")),
                softHoverBg: w("palette-".concat(e, "-700")),
                softActiveColor: w("palette-".concat(e, "-100")),
                softActiveBg: w("palette-".concat(e, "-600")),
                softDisabledColor: w("palette-neutral-500"),
                softDisabledBg: w("palette-neutral-800"),
                solidColor: w("palette-common-white"),
                solidBg: w("palette-".concat(e, "-500")),
                solidHoverBg: w("palette-".concat(e, "-600")),
                solidActiveBg: w("palette-".concat(e, "-700")),
                solidDisabledColor: w("palette-neutral-500"),
                solidDisabledBg: w("palette-neutral-800"),
              };
            },
            A = {
              palette: {
                mode: "light",
                primary: $u({}, E.primary, T("primary")),
                neutral: $u({}, E.neutral, T("neutral"), {
                  plainColor: w("palette-neutral-700"),
                  plainHoverColor: w("palette-neutral-900"),
                  outlinedColor: w("palette-neutral-700"),
                }),
                danger: $u({}, E.danger, T("danger")),
                success: $u({}, E.success, T("success")),
                warning: $u({}, E.warning, T("warning")),
                common: { white: "#FFF", black: "#000" },
                text: {
                  primary: w("palette-neutral-800"),
                  secondary: w("palette-neutral-700"),
                  tertiary: w("palette-neutral-600"),
                  icon: w("palette-neutral-500"),
                },
                background: {
                  body: w("palette-common-white"),
                  surface: w("palette-neutral-50"),
                  popup: w("palette-common-white"),
                  level1: w("palette-neutral-100"),
                  level2: w("palette-neutral-200"),
                  level3: w("palette-neutral-300"),
                  tooltip: w("palette-neutral-500"),
                  backdrop: "rgba(".concat(
                    S("palette-neutral-darkChannel", sh(E.neutral[900])),
                    " / 0.25)"
                  ),
                },
                divider: "rgba(".concat(
                  S("palette-neutral-mainChannel", sh(E.neutral[500])),
                  " / 0.2)"
                ),
                focusVisible: w("palette-primary-500"),
              },
              shadowRing: "0 0 #000",
              shadowChannel: "21 21 21",
              shadowOpacity: "0.08",
            },
            C = {
              palette: {
                mode: "dark",
                primary: $u({}, E.primary, M("primary")),
                neutral: $u({}, E.neutral, M("neutral"), {
                  plainColor: w("palette-neutral-300"),
                  plainHoverColor: w("palette-neutral-300"),
                }),
                danger: $u({}, E.danger, M("danger")),
                success: $u({}, E.success, M("success")),
                warning: $u({}, E.warning, M("warning")),
                common: { white: "#FFF", black: "#000" },
                text: {
                  primary: w("palette-neutral-100"),
                  secondary: w("palette-neutral-300"),
                  tertiary: w("palette-neutral-400"),
                  icon: w("palette-neutral-400"),
                },
                background: {
                  body: w("palette-common-black"),
                  surface: w("palette-neutral-900"),
                  popup: w("palette-common-black"),
                  level1: w("palette-neutral-800"),
                  level2: w("palette-neutral-700"),
                  level3: w("palette-neutral-600"),
                  tooltip: w("palette-neutral-600"),
                  backdrop: "rgba(".concat(
                    S("palette-neutral-darkChannel", sh(E.neutral[50])),
                    " / 0.25)"
                  ),
                },
                divider: "rgba(".concat(
                  S("palette-neutral-mainChannel", sh(E.neutral[500])),
                  " / 0.16)"
                ),
                focusVisible: w("palette-primary-500"),
              },
              shadowRing: "0 0 #000",
              shadowChannel: "0 0 0",
              shadowOpacity: "0.6",
            },
            k =
              '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
            R = $u(
              {
                body: '"Inter", '.concat(S("fontFamily-fallback, ".concat(k))),
                display: '"Inter", '.concat(
                  S("fontFamily-fallback, ".concat(k))
                ),
                code: "Source Code Pro,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace",
                fallback: k,
              },
              x.fontFamily
            ),
            P = $u({ sm: 300, md: 500, lg: 600, xl: 700 }, x.fontWeight),
            U = $u(
              {
                xs: "0.75rem",
                sm: "0.875rem",
                md: "1rem",
                lg: "1.125rem",
                xl: "1.25rem",
                xl2: "1.5rem",
                xl3: "1.875rem",
                xl4: "2.25rem",
              },
              x.fontSize
            ),
            L = $u(
              {
                xs: "1.33334",
                sm: "1.42858",
                md: "1.5",
                lg: "1.55556",
                xl: "1.66667",
              },
              x.lineHeight
            ),
            D =
              null !=
              (t =
                null == (n = x.colorSchemes) || null == (n = n.light)
                  ? void 0
                  : n.shadowRing)
                ? t
                : A.shadowRing,
            I =
              null !=
              (r =
                null == (a = x.colorSchemes) || null == (a = a.light)
                  ? void 0
                  : a.shadowChannel)
                ? r
                : A.shadowChannel,
            O =
              null !=
              (i =
                null == (s = x.colorSchemes) || null == (s = s.light)
                  ? void 0
                  : s.shadowOpacity)
                ? i
                : A.shadowOpacity,
            N = {
              colorSchemes: { light: A, dark: C },
              fontSize: U,
              fontFamily: R,
              fontWeight: P,
              focus: {
                thickness: "2px",
                selector: "&.".concat(
                  Ah("", "focusVisible"),
                  ", &:focus-visible"
                ),
                default: {
                  outlineOffset: "var(--focus-outline-offset, ".concat(
                    S(
                      "focus-thickness",
                      null != (l = null == (u = x.focus) ? void 0 : u.thickness)
                        ? l
                        : "2px"
                    ),
                    ")"
                  ),
                  outline: ""
                    .concat(
                      S(
                        "focus-thickness",
                        null !=
                          (c = null == (f = x.focus) ? void 0 : f.thickness)
                          ? c
                          : "2px"
                      ),
                      " solid "
                    )
                    .concat(S("palette-focusVisible", E.primary[500])),
                },
              },
              lineHeight: L,
              radius: {
                xs: "2px",
                sm: "6px",
                md: "8px",
                lg: "12px",
                xl: "16px",
              },
              shadow: {
                xs: ""
                  .concat(S("shadowRing", D), ", 0px 1px 2px 0px rgba(")
                  .concat(S("shadowChannel", I), " / ")
                  .concat(S("shadowOpacity", O), ")"),
                sm: ""
                  .concat(S("shadowRing", D), ", 0px 1px 2px 0px rgba(")
                  .concat(S("shadowChannel", I), " / ")
                  .concat(S("shadowOpacity", O), "), 0px 2px 4px 0px rgba(")
                  .concat(S("shadowChannel", I), " / ")
                  .concat(S("shadowOpacity", O), ")"),
                md: ""
                  .concat(S("shadowRing", D), ", 0px 2px 8px -2px rgba(")
                  .concat(S("shadowChannel", I), " / ")
                  .concat(S("shadowOpacity", O), "), 0px 6px 12px -2px rgba(")
                  .concat(S("shadowChannel", I), " / ")
                  .concat(S("shadowOpacity", O), ")"),
                lg: ""
                  .concat(S("shadowRing", D), ", 0px 2px 8px -2px rgba(")
                  .concat(S("shadowChannel", I), " / ")
                  .concat(S("shadowOpacity", O), "), 0px 12px 16px -4px rgba(")
                  .concat(S("shadowChannel", I), " / ")
                  .concat(S("shadowOpacity", O), ")"),
                xl: ""
                  .concat(S("shadowRing", D), ", 0px 2px 8px -2px rgba(")
                  .concat(S("shadowChannel", I), " / ")
                  .concat(S("shadowOpacity", O), "), 0px 20px 24px -4px rgba(")
                  .concat(S("shadowChannel", I), " / ")
                  .concat(S("shadowOpacity", O), ")"),
              },
              zIndex: {
                badge: 1,
                table: 10,
                popup: 1e3,
                modal: 1300,
                snackbar: 1400,
                tooltip: 1500,
              },
              typography: {
                h1: {
                  fontFamily: S("fontFamily-display, ".concat(R.display)),
                  fontWeight: S("fontWeight-xl, ".concat(P.xl)),
                  fontSize: S("fontSize-xl4, ".concat(U.xl4)),
                  lineHeight: S("lineHeight-xs, ".concat(L.xs)),
                  letterSpacing: "-0.025em",
                  color: S(
                    "palette-text-primary, ".concat(A.palette.text.primary)
                  ),
                },
                h2: {
                  fontFamily: S("fontFamily-display, ".concat(R.display)),
                  fontWeight: S("fontWeight-xl, ".concat(P.xl)),
                  fontSize: S("fontSize-xl3, ".concat(U.xl3)),
                  lineHeight: S("lineHeight-xs, ".concat(L.xs)),
                  letterSpacing: "-0.025em",
                  color: S(
                    "palette-text-primary, ".concat(A.palette.text.primary)
                  ),
                },
                h3: {
                  fontFamily: S("fontFamily-display, ".concat(R.display)),
                  fontWeight: S("fontWeight-lg, ".concat(P.lg)),
                  fontSize: S("fontSize-xl2, ".concat(U.xl2)),
                  lineHeight: S("lineHeight-xs, ".concat(L.xs)),
                  letterSpacing: "-0.025em",
                  color: S(
                    "palette-text-primary, ".concat(A.palette.text.primary)
                  ),
                },
                h4: {
                  fontFamily: S("fontFamily-display, ".concat(R.display)),
                  fontWeight: S("fontWeight-lg, ".concat(P.lg)),
                  fontSize: S("fontSize-xl, ".concat(U.xl)),
                  lineHeight: S("lineHeight-md, ".concat(L.md)),
                  letterSpacing: "-0.025em",
                  color: S(
                    "palette-text-primary, ".concat(A.palette.text.primary)
                  ),
                },
                "title-lg": {
                  fontFamily: S("fontFamily-body, ".concat(R.body)),
                  fontWeight: S("fontWeight-lg, ".concat(P.lg)),
                  fontSize: S("fontSize-lg, ".concat(U.lg)),
                  lineHeight: S("lineHeight-xs, ".concat(L.xs)),
                  color: S(
                    "palette-text-primary, ".concat(A.palette.text.primary)
                  ),
                },
                "title-md": {
                  fontFamily: S("fontFamily-body, ".concat(R.body)),
                  fontWeight: S("fontWeight-md, ".concat(P.md)),
                  fontSize: S("fontSize-md, ".concat(U.md)),
                  lineHeight: S("lineHeight-md, ".concat(L.md)),
                  color: S(
                    "palette-text-primary, ".concat(A.palette.text.primary)
                  ),
                },
                "title-sm": {
                  fontFamily: S("fontFamily-body, ".concat(R.body)),
                  fontWeight: S("fontWeight-md, ".concat(P.md)),
                  fontSize: S("fontSize-sm, ".concat(U.sm)),
                  lineHeight: S("lineHeight-sm, ".concat(L.sm)),
                  color: S(
                    "palette-text-primary, ".concat(A.palette.text.primary)
                  ),
                },
                "body-lg": {
                  fontFamily: S("fontFamily-body, ".concat(R.body)),
                  fontSize: S("fontSize-lg, ".concat(U.lg)),
                  lineHeight: S("lineHeight-md, ".concat(L.md)),
                  color: S(
                    "palette-text-secondary, ".concat(A.palette.text.secondary)
                  ),
                },
                "body-md": {
                  fontFamily: S("fontFamily-body, ".concat(R.body)),
                  fontSize: S("fontSize-md, ".concat(U.md)),
                  lineHeight: S("lineHeight-md, ".concat(L.md)),
                  color: S(
                    "palette-text-secondary, ".concat(A.palette.text.secondary)
                  ),
                },
                "body-sm": {
                  fontFamily: S("fontFamily-body, ".concat(R.body)),
                  fontSize: S("fontSize-sm, ".concat(U.sm)),
                  lineHeight: S("lineHeight-md, ".concat(L.md)),
                  color: S(
                    "palette-text-tertiary, ".concat(A.palette.text.tertiary)
                  ),
                },
                "body-xs": {
                  fontFamily: S("fontFamily-body, ".concat(R.body)),
                  fontWeight: S("fontWeight-md, ".concat(P.md)),
                  fontSize: S("fontSize-xs, ".concat(U.xs)),
                  lineHeight: S("lineHeight-md, ".concat(L.md)),
                  color: S(
                    "palette-text-tertiary, ".concat(A.palette.text.tertiary)
                  ),
                },
              },
            },
            F = x ? Gf(N, x) : N,
            z = F.colorSchemes,
            B = Ku(F, Lh),
            H = $u({ colorSchemes: z }, B, {
              breakpoints: jf(null != v ? v : {}),
              components: Gf(
                {
                  MuiSvgIcon: {
                    defaultProps: { fontSize: "xl2" },
                    styleOverrides: {
                      root: function (e) {
                        var t,
                          n = e.ownerState,
                          r = e.theme,
                          a = n.instanceFontSize;
                        return $u(
                          { margin: "var(--Icon-margin)" },
                          n.fontSize &&
                            "inherit" !== n.fontSize && {
                              fontSize: "var(--Icon-fontSize, ".concat(
                                r.vars.fontSize[n.fontSize],
                                ")"
                              ),
                            },
                          !n.htmlColor &&
                            $u(
                              {
                                color: "var(--Icon-color, ".concat(
                                  H.vars.palette.text.icon,
                                  ")"
                                ),
                              },
                              n.color &&
                                "inherit" !== n.color &&
                                r.vars.palette[n.color] && {
                                  color: "rgba(".concat(
                                    null == (t = r.vars.palette[n.color])
                                      ? void 0
                                      : t.mainChannel,
                                    " / 1)"
                                  ),
                                }
                            ),
                          a &&
                            "inherit" !== a && {
                              "--Icon-fontSize": r.vars.fontSize[a],
                            }
                        );
                      },
                    },
                  },
                },
                g
              ),
              cssVarPrefix: p,
              getCssVar: S,
              spacing: gd(m),
            });
          Object.entries(H.colorSchemes).forEach(function (e) {
            var t = o(e, 2);
            !(function (e, t) {
              Object.keys(t).forEach(function (n) {
                var r = { main: "500", light: "200", dark: "700" };
                "dark" === e && (r.main = 400),
                  !t[n].mainChannel &&
                    t[n][r.main] &&
                    (t[n].mainChannel = sh(t[n][r.main])),
                  !t[n].lightChannel &&
                    t[n][r.light] &&
                    (t[n].lightChannel = sh(t[n][r.light])),
                  !t[n].darkChannel &&
                    t[n][r.dark] &&
                    (t[n].darkChannel = sh(t[n][r.dark]));
              });
            })(t[0], t[1].palette);
          });
          var G = { prefix: p, shouldSkipGeneratingVar: b },
            V = yh($u({ colorSchemes: z }, B), G),
            W = V.vars,
            j = V.generateCssVars;
          (H.vars = W),
            (H.generateCssVars = j),
            (H.unstable_sxConfig = $u(
              {},
              _h,
              null == e ? void 0 : e.unstable_sxConfig
            )),
            (H.unstable_sx = function (e) {
              return Wd({ sx: e, theme: this });
            }),
            (H.getColorSchemeSelector = function (e) {
              return "light" === e
                ? "&"
                : '&[data-joy-color-scheme="'
                    .concat(e, '"], [data-joy-color-scheme="')
                    .concat(e, '"] &');
            });
          var X = { getCssVar: S, palette: H.colorSchemes.light.palette };
          return (
            (H.variants = Gf(
              {
                plain: Ph("plain", X),
                plainHover: Ph("plainHover", X),
                plainActive: Ph("plainActive", X),
                plainDisabled: Ph("plainDisabled", X),
                outlined: Ph("outlined", X),
                outlinedHover: Ph("outlinedHover", X),
                outlinedActive: Ph("outlinedActive", X),
                outlinedDisabled: Ph("outlinedDisabled", X),
                soft: Ph("soft", X),
                softHover: Ph("softHover", X),
                softActive: Ph("softActive", X),
                softDisabled: Ph("softDisabled", X),
                solid: Ph("solid", X),
                solidHover: Ph("solidHover", X),
                solidActive: Ph("solidActive", X),
                solidDisabled: Ph("solidDisabled", X),
              },
              y
            )),
            (H.palette = $u({}, H.colorSchemes.light.palette, {
              colorScheme: "light",
            })),
            (H.shouldSkipGeneratingVar = b),
            H
          );
        })(),
        Ih = Dh,
        Oh = "$$joy",
        Nh = rh({ defaultTheme: Ih, themeId: Oh });
      function Fh(e, t) {
        var n = $u({}, t);
        return (
          Object.keys(e).forEach(function (r) {
            if (r.toString().match(/^(components|slots)$/))
              n[r] = $u({}, e[r], n[r]);
            else if (r.toString().match(/^(componentsProps|slotProps)$/)) {
              var a = e[r] || {},
                i = t[r];
              (n[r] = {}),
                i && Object.keys(i)
                  ? a && Object.keys(a)
                    ? ((n[r] = $u({}, i)),
                      Object.keys(a).forEach(function (e) {
                        n[r][e] = Fh(a[e], i[e]);
                      }))
                    : (n[r] = i)
                  : (n[r] = a);
            } else void 0 === n[r] && (n[r] = e[r]);
          }),
          n
        );
      }
      function zh(e) {
        var t = e.theme,
          n = e.name,
          r = e.props;
        return t &&
          t.components &&
          t.components[n] &&
          t.components[n].defaultProps
          ? Fh(t.components[n].defaultProps, r)
          : r;
      }
      var Bh = function () {
          var t,
            n =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null,
            r = e.useContext(Uf);
          return r && ((t = r), 0 !== Object.keys(t).length) ? r : n;
        },
        Hh = Xd();
      var Gh = function () {
        return Bh(
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Hh
        );
      };
      function Vh(e) {
        var t = e.props,
          n = e.name,
          r = e.defaultTheme,
          a = e.themeId,
          i = Gh(r);
        return a && (i = i[a] || i), zh({ theme: i, name: n, props: t });
      }
      function Wh(e) {
        return Vh({
          props: e.props,
          name: e.name,
          defaultTheme: $u({}, Ih, { components: {} }),
          themeId: Oh,
        });
      }
      function jh(e) {
        var t,
          n,
          r = "";
        if ("string" == typeof e || "number" == typeof e) r += e;
        else if ("object" == typeof e)
          if (Array.isArray(e))
            for (t = 0; t < e.length; t++)
              e[t] && (n = jh(e[t])) && (r && (r += " "), (r += n));
          else for (t in e) e[t] && (r && (r += " "), (r += t));
        return r;
      }
      var Xh = function () {
        for (var e, t, n = 0, r = ""; n < arguments.length; )
          (e = arguments[n++]) && (t = jh(e)) && (r && (r += " "), (r += t));
        return r;
      };
      function qh(e) {
        if (void 0 === e) return {};
        var t = {};
        return (
          Object.keys(e)
            .filter(function (t) {
              return !(t.match(/^on[A-Z]/) && "function" === typeof e[t]);
            })
            .forEach(function (n) {
              t[n] = e[n];
            }),
          t
        );
      }
      var Yh = [
          "className",
          "elementType",
          "ownerState",
          "externalForwardedProps",
          "getSlotOwnerState",
          "internalForwardedProps",
        ],
        Kh = ["component", "slots", "slotProps"],
        $h = ["component"];
      function Zh(e, t) {
        var n = t.className,
          r = t.elementType,
          a = t.ownerState,
          i = t.externalForwardedProps,
          o = t.getSlotOwnerState,
          s = t.internalForwardedProps,
          l = Ku(t, Yh),
          u = i.component,
          c = i.slots,
          f = void 0 === c ? S({}, e, void 0) : c,
          d = i.slotProps,
          h = void 0 === d ? S({}, e, void 0) : d,
          p = Ku(i, Kh),
          v = f[e] || r,
          m = (function (e, t, n) {
            return "function" === typeof e ? e(t, n) : e;
          })(h[e], a),
          g = (function (e) {
            var t = e.getSlotProps,
              n = e.additionalProps,
              r = e.externalSlotProps,
              a = e.externalForwardedProps,
              i = e.className;
            if (!t) {
              var o = Xh(
                  null == n ? void 0 : n.className,
                  i,
                  null == a ? void 0 : a.className,
                  null == r ? void 0 : r.className
                ),
                s = $u(
                  {},
                  null == n ? void 0 : n.style,
                  null == a ? void 0 : a.style,
                  null == r ? void 0 : r.style
                ),
                l = $u({}, n, a, r);
              return (
                o.length > 0 && (l.className = o),
                Object.keys(s).length > 0 && (l.style = s),
                { props: l, internalRef: void 0 }
              );
            }
            var u = sc($u({}, a, r)),
              c = qh(r),
              f = qh(a),
              d = t(u),
              h = Xh(
                null == d ? void 0 : d.className,
                null == n ? void 0 : n.className,
                i,
                null == a ? void 0 : a.className,
                null == r ? void 0 : r.className
              ),
              p = $u(
                {},
                null == d ? void 0 : d.style,
                null == n ? void 0 : n.style,
                null == a ? void 0 : a.style,
                null == r ? void 0 : r.style
              ),
              v = $u({}, d, n, f, c);
            return (
              h.length > 0 && (v.className = h),
              Object.keys(p).length > 0 && (v.style = p),
              { props: v, internalRef: d.ref }
            );
          })(
            $u({ className: n }, l, {
              externalForwardedProps: "root" === e ? p : void 0,
              externalSlotProps: m,
            })
          ),
          y = g.props.component,
          _ = g.internalRef,
          b = Ku(g.props, $h),
          x = oc(_, null == m ? void 0 : m.ref, t.ref),
          E = o ? o(b) : {},
          w = $u({}, a, E),
          T = "root" === e ? y || u : y,
          M = (function (e, t, n) {
            return void 0 === e || "string" === typeof e
              ? t
              : $u({}, t, { ownerState: $u({}, t.ownerState, n) });
          })(
            v,
            $u(
              {},
              "root" === e && !u && !f[e] && s,
              "root" !== e && !f[e] && s,
              b,
              T && { as: T },
              { ref: x }
            ),
            w
          );
        return (
          Object.keys(E).forEach(function (e) {
            delete M[e];
          }),
          [v, M]
        );
      }
      n(110);
      function Jh() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return Af(t);
      }
      function Qh(e) {
        return Ah("MuiCircularProgress", e);
      }
      Ch("MuiCircularProgress", [
        "root",
        "determinate",
        "svg",
        "track",
        "progress",
        "colorPrimary",
        "colorNeutral",
        "colorDanger",
        "colorSuccess",
        "colorWarning",
        "colorContext",
        "sizeSm",
        "sizeMd",
        "sizeLg",
        "variantPlain",
        "variantOutlined",
        "variantSoft",
        "variantSolid",
      ]);
      var ep,
        tp,
        np = ["color", "backgroundColor"],
        rp = [
          "children",
          "className",
          "color",
          "size",
          "variant",
          "thickness",
          "determinate",
          "value",
          "component",
          "slots",
          "slotProps",
        ],
        ap = (function () {
          var e = Jh.apply(void 0, arguments),
            t = "animation-" + e.name;
          return {
            name: t,
            styles: "@keyframes " + t + "{" + e.styles + "}",
            anim: 1,
            toString: function () {
              return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
            },
          };
        })({
          "0%": { transform: "rotate(-90deg)" },
          "100%": { transform: "rotate(270deg)" },
        });
      function ip(e, t) {
        return "var(--CircularProgress-"
          .concat(e, "Thickness, var(--CircularProgress-thickness, ")
          .concat(t, "))");
      }
      var op = Nh("span", {
          name: "JoyCircularProgress",
          slot: "Root",
          overridesResolver: function (e, t) {
            return t.root;
          },
        })(function (e) {
          var t,
            n,
            r,
            a,
            i = e.ownerState,
            o = e.theme,
            s =
              (null == (t = o.variants[i.variant]) ? void 0 : t[i.color]) || {},
            l = s.color,
            u = s.backgroundColor,
            c = Ku(s, np);
          return $u(
            {
              "--Icon-fontSize": "calc(0.4 * var(--_root-size))",
              "--CircularProgress-trackColor": u,
              "--CircularProgress-progressColor": l,
              "--CircularProgress-percent": i.value,
              "--CircularProgress-linecap": "round",
            },
            "sm" === i.size && {
              "--_root-size": "var(--CircularProgress-size, 24px)",
              "--_track-thickness": ip("track", "3px"),
              "--_progress-thickness": ip("progress", "3px"),
            },
            "sm" === i.instanceSize && { "--CircularProgress-size": "24px" },
            "md" === i.size && {
              "--_track-thickness": ip("track", "6px"),
              "--_progress-thickness": ip("progress", "6px"),
              "--_root-size": "var(--CircularProgress-size, 40px)",
            },
            "md" === i.instanceSize && { "--CircularProgress-size": "40px" },
            "lg" === i.size && {
              "--_track-thickness": ip("track", "8px"),
              "--_progress-thickness": ip("progress", "8px"),
              "--_root-size": "var(--CircularProgress-size, 64px)",
            },
            "lg" === i.instanceSize && { "--CircularProgress-size": "64px" },
            i.thickness && {
              "--_track-thickness": "".concat(i.thickness, "px"),
              "--_progress-thickness": "".concat(i.thickness, "px"),
            },
            {
              "--_thickness-diff":
                "calc(var(--_track-thickness) - var(--_progress-thickness))",
              "--_inner-size":
                "calc(var(--_root-size) - 2 * var(--variant-borderWidth, 0px))",
              "--_outlined-inset":
                "max(var(--_track-thickness), var(--_progress-thickness))",
              width: "var(--_root-size)",
              height: "var(--_root-size)",
              borderRadius: "var(--_root-size)",
              margin: "var(--CircularProgress-margin)",
              boxSizing: "border-box",
              display: "inline-flex",
              justifyContent: "center",
              alignItems: "center",
              flexShrink: 0,
              position: "relative",
              color: l,
            },
            i.children && {
              fontFamily: o.vars.fontFamily.body,
              fontWeight: o.vars.fontWeight.md,
              fontSize: "calc(0.2 * var(--_root-size))",
            },
            c,
            "outlined" === i.variant && {
              "&:before": $u(
                {
                  content: '""',
                  display: "block",
                  position: "absolute",
                  borderRadius: "inherit",
                  top: "var(--_outlined-inset)",
                  left: "var(--_outlined-inset)",
                  right: "var(--_outlined-inset)",
                  bottom: "var(--_outlined-inset)",
                },
                c
              ),
            },
            "soft" === i.variant && {
              "--CircularProgress-trackColor":
                o.variants.soft.neutral.backgroundColor,
              "--CircularProgress-progressColor":
                null == (n = o.variants.solid)
                  ? void 0
                  : n[i.color].backgroundColor,
            },
            "solid" === i.variant && {
              "--CircularProgress-trackColor":
                null == (r = o.variants.softHover)
                  ? void 0
                  : r[i.color].backgroundColor,
              "--CircularProgress-progressColor":
                null == (a = o.variants.solid)
                  ? void 0
                  : a[i.color].backgroundColor,
            }
          );
        }),
        sp = Nh("svg", {
          name: "JoyCircularProgress",
          slot: "Svg",
          overridesResolver: function (e, t) {
            return t.svg;
          },
        })({
          width: "inherit",
          height: "inherit",
          display: "inherit",
          boxSizing: "inherit",
          position: "absolute",
          top: "calc(-1 * var(--variant-borderWidth, 0px))",
          left: "calc(-1 * var(--variant-borderWidth, 0px))",
        }),
        lp = Nh("circle", {
          name: "JoyCircularProgress",
          slot: "track",
          overridesResolver: function (e, t) {
            return t.track;
          },
        })({
          cx: "50%",
          cy: "50%",
          r: "calc(var(--_inner-size) / 2 - var(--_track-thickness) / 2 + min(0px, var(--_thickness-diff) / 2))",
          fill: "transparent",
          strokeWidth: "var(--_track-thickness)",
          stroke: "var(--CircularProgress-trackColor)",
        }),
        up = Nh("circle", {
          name: "JoyCircularProgress",
          slot: "progress",
          overridesResolver: function (e, t) {
            return t.progress;
          },
        })(
          {
            "--_progress-radius":
              "calc(var(--_inner-size) / 2 - var(--_progress-thickness) / 2 - max(0px, var(--_thickness-diff) / 2))",
            "--_progress-length":
              "calc(2 * 3.1415926535 * var(--_progress-radius))",
            cx: "50%",
            cy: "50%",
            r: "var(--_progress-radius)",
            fill: "transparent",
            strokeWidth: "var(--_progress-thickness)",
            stroke: "var(--CircularProgress-progressColor)",
            strokeLinecap: "var(--CircularProgress-linecap, round)",
            strokeDasharray: "var(--_progress-length)",
            strokeDashoffset:
              "calc(var(--_progress-length) - var(--CircularProgress-percent) * var(--_progress-length) / 100)",
            transformOrigin: "center",
            transform: "rotate(-90deg)",
          },
          function (e) {
            var t, n;
            return (
              !e.ownerState.determinate &&
              Jh(
                tp ||
                  (tp =
                    ep ||
                    ((t = [
                      "\n      animation: var(--CircularProgress-circulation, 0.8s linear 0s infinite normal none running)\n        ",
                      ";\n    ",
                    ]),
                    n || (n = t.slice(0)),
                    (ep = Object.freeze(
                      Object.defineProperties(t, {
                        raw: { value: Object.freeze(n) },
                      })
                    )))),
                ap
              )
            );
          }
        ),
        cp = e.forwardRef(function (e, t) {
          var n = Wh({ props: e, name: "JoyCircularProgress" }),
            r = n.children,
            a = n.className,
            i = n.color,
            s = void 0 === i ? "primary" : i,
            u = n.size,
            c = void 0 === u ? "md" : u,
            f = n.variant,
            d = void 0 === f ? "soft" : f,
            h = n.thickness,
            p = n.determinate,
            v = void 0 !== p && p,
            m = n.value,
            g = void 0 === m ? (v ? 0 : 25) : m,
            y = n.component,
            _ = n.slots,
            b = void 0 === _ ? {} : _,
            x = n.slotProps,
            S = void 0 === x ? {} : x,
            E = Ku(n, rp),
            w = $u({}, n, {
              color: s,
              size: c,
              variant: d,
              thickness: h,
              value: g,
              determinate: v,
              instanceSize: e.size,
            }),
            T = (function (e) {
              var t = e.determinate,
                n = e.color,
                r = e.variant,
                a = e.size;
              return lc(
                {
                  root: [
                    "root",
                    t && "determinate",
                    n && "color".concat(cc(n)),
                    r && "variant".concat(cc(r)),
                    a && "size".concat(cc(a)),
                  ],
                  svg: ["svg"],
                  track: ["track"],
                  progress: ["progress"],
                },
                Qh,
                {}
              );
            })(w),
            M = $u({}, E, { component: y, slots: b, slotProps: S }),
            A = o(
              Zh("root", {
                ref: t,
                className: Xh(T.root, a),
                elementType: op,
                externalForwardedProps: M,
                ownerState: w,
                additionalProps: $u(
                  {
                    role: "progressbar",
                    style: { "--CircularProgress-percent": g },
                  },
                  g &&
                    v && {
                      "aria-valuenow":
                        "number" === typeof g
                          ? Math.round(g)
                          : Math.round(Number(g || 0)),
                    }
                ),
              }),
              2
            ),
            C = A[0],
            k = A[1],
            R = o(
              Zh("svg", {
                className: T.svg,
                elementType: sp,
                externalForwardedProps: M,
                ownerState: w,
              }),
              2
            ),
            P = R[0],
            U = R[1],
            L = o(
              Zh("track", {
                className: T.track,
                elementType: lp,
                externalForwardedProps: M,
                ownerState: w,
              }),
              2
            ),
            D = L[0],
            I = L[1],
            O = o(
              Zh("progress", {
                className: T.progress,
                elementType: up,
                externalForwardedProps: M,
                ownerState: w,
              }),
              2
            ),
            N = O[0],
            F = O[1];
          return (0,
          l.jsxs)(C, $u({}, k, { children: [(0, l.jsxs)(P, $u({}, U, { children: [(0, l.jsx)(D, $u({}, I)), (0, l.jsx)(N, $u({}, F))] })), r] }));
        }),
        fp = cp;
      function dp(e) {
        return Ah("MuiButton", e);
      }
      var hp = Ch("MuiButton", [
        "root",
        "colorPrimary",
        "colorNeutral",
        "colorDanger",
        "colorSuccess",
        "colorWarning",
        "colorContext",
        "variantPlain",
        "variantOutlined",
        "variantSoft",
        "variantSolid",
        "focusVisible",
        "disabled",
        "sizeSm",
        "sizeMd",
        "sizeLg",
        "fullWidth",
        "startDecorator",
        "endDecorator",
        "loading",
        "loadingIndicatorCenter",
      ]);
      var pp = e.createContext({}),
        vp = e.createContext(void 0),
        mp = [
          "children",
          "action",
          "color",
          "variant",
          "size",
          "fullWidth",
          "startDecorator",
          "endDecorator",
          "loading",
          "loadingPosition",
          "loadingIndicator",
          "disabled",
          "component",
          "slots",
          "slotProps",
        ],
        gp = Nh("span", {
          name: "JoyButton",
          slot: "StartDecorator",
          overridesResolver: function (e, t) {
            return t.startDecorator;
          },
        })({
          "--Icon-margin": "0 0 0 calc(var(--Button-gap) / -2)",
          "--CircularProgress-margin": "0 0 0 calc(var(--Button-gap) / -2)",
          display: "inherit",
          marginRight: "var(--Button-gap)",
        }),
        yp = Nh("span", {
          name: "JoyButton",
          slot: "EndDecorator",
          overridesResolver: function (e, t) {
            return t.endDecorator;
          },
        })({
          "--Icon-margin": "0 calc(var(--Button-gap) / -2) 0 0",
          "--CircularProgress-margin": "0 calc(var(--Button-gap) / -2) 0 0",
          display: "inherit",
          marginLeft: "var(--Button-gap)",
        }),
        _p = Nh("span", {
          name: "JoyButton",
          slot: "LoadingCenter",
          overridesResolver: function (e, t) {
            return t.loadingIndicatorCenter;
          },
        })(function (e) {
          var t,
            n,
            r = e.theme,
            a = e.ownerState;
          return $u(
            {
              display: "inherit",
              position: "absolute",
              left: "50%",
              transform: "translateX(-50%)",
              color:
                null == (t = r.variants[a.variant]) || null == (t = t[a.color])
                  ? void 0
                  : t.color,
            },
            a.disabled && {
              color:
                null == (n = r.variants["".concat(a.variant, "Disabled")]) ||
                null == (n = n[a.color])
                  ? void 0
                  : n.color,
            }
          );
        }),
        bp = Nh("button", {
          name: "JoyButton",
          slot: "Root",
          overridesResolver: function (e, t) {
            return t.root;
          },
        })(function (e) {
          var t,
            n,
            r,
            a,
            i = e.theme,
            o = e.ownerState;
          return [
            $u(
              {
                "--Icon-margin": "initial",
                "--Icon-color":
                  "neutral" !== o.color || "solid" === o.variant
                    ? "currentColor"
                    : i.vars.palette.text.icon,
              },
              "sm" === o.size && {
                "--Icon-fontSize": i.vars.fontSize.lg,
                "--CircularProgress-size": "20px",
                "--CircularProgress-thickness": "2px",
                "--Button-gap": "0.375rem",
                minHeight: "var(--Button-minHeight, 2rem)",
                fontSize: i.vars.fontSize.sm,
                paddingBlock: "var(--Button-paddingBlock, 0.25rem)",
                paddingInline: "0.75rem",
              },
              "md" === o.size && {
                "--Icon-fontSize": i.vars.fontSize.xl,
                "--CircularProgress-size": "20px",
                "--CircularProgress-thickness": "2px",
                "--Button-gap": "0.5rem",
                minHeight: "var(--Button-minHeight, 2.25rem)",
                fontSize: i.vars.fontSize.sm,
                paddingBlock: "var(--Button-paddingBlock, 0.375rem)",
                paddingInline: "1rem",
              },
              "lg" === o.size && {
                "--Icon-fontSize": i.vars.fontSize.xl2,
                "--CircularProgress-size": "28px",
                "--CircularProgress-thickness": "4px",
                "--Button-gap": "0.75rem",
                minHeight: "var(--Button-minHeight, 2.75rem)",
                fontSize: i.vars.fontSize.md,
                paddingBlock: "var(--Button-paddingBlock, 0.5rem)",
                paddingInline: "1.5rem",
              },
              {
                WebkitTapHighlightColor: "transparent",
                boxSizing: "border-box",
                borderRadius: "var(--Button-radius, ".concat(
                  i.vars.radius.sm,
                  ")"
                ),
                margin: "var(--Button-margin)",
                border: "none",
                backgroundColor: "transparent",
                cursor: "pointer",
                display: "inline-flex",
                alignItems: "center",
                justifyContent: "center",
                position: "relative",
                textDecoration: "none",
                fontFamily: i.vars.fontFamily.body,
                fontWeight: i.vars.fontWeight.lg,
                lineHeight: i.vars.lineHeight.md,
              },
              o.fullWidth && { width: "100%" },
              S({}, i.focus.selector, i.focus.default)
            ),
            $u(
              {},
              null == (t = i.variants[o.variant]) ? void 0 : t[o.color],
              S(
                {
                  "&:hover": {
                    "@media (hover: hover)":
                      null == (n = i.variants["".concat(o.variant, "Hover")])
                        ? void 0
                        : n[o.color],
                  },
                  '&:active, &[aria-pressed="true"]':
                    null == (r = i.variants["".concat(o.variant, "Active")])
                      ? void 0
                      : r[o.color],
                },
                "&.".concat(hp.disabled),
                null == (a = i.variants["".concat(o.variant, "Disabled")])
                  ? void 0
                  : a[o.color]
              ),
              "center" === o.loadingPosition &&
                S({}, "&.".concat(hp.loading), { color: "transparent" })
            ),
          ];
        }),
        xp = e.forwardRef(function (t, n) {
          var r,
            a = Wh({ props: t, name: "JoyButton" }),
            i = a.children,
            s = a.action,
            u = a.color,
            c = void 0 === u ? "primary" : u,
            f = a.variant,
            d = void 0 === f ? "solid" : f,
            h = a.size,
            p = void 0 === h ? "md" : h,
            v = a.fullWidth,
            m = void 0 !== v && v,
            g = a.startDecorator,
            y = a.endDecorator,
            _ = a.loading,
            b = void 0 !== _ && _,
            x = a.loadingPosition,
            S = void 0 === x ? "center" : x,
            E = a.loadingIndicator,
            w = a.disabled,
            T = a.component,
            M = a.slots,
            A = void 0 === M ? {} : M,
            C = a.slotProps,
            k = void 0 === C ? {} : C,
            R = Ku(a, mp),
            P = e.useContext(pp),
            U = e.useContext(vp),
            L = t.variant || P.variant || d,
            D = t.size || P.size || p,
            I = t.color || P.color || c,
            O =
              null != (r = t.disabled || t.loading) ? r : P.disabled || w || b,
            N = e.useRef(null),
            F = oc(N, n),
            z = (function () {
              var t =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                n = t.disabled,
                r = void 0 !== n && n,
                a = t.focusableWhenDisabled,
                i = t.href,
                s = t.rootRef,
                l = t.tabIndex,
                u = t.to,
                c = t.type,
                f = e.useRef(),
                d = o(e.useState(!1), 2),
                h = d[0],
                p = d[1],
                v = ic(),
                m = v.isFocusVisibleRef,
                g = v.onFocus,
                y = v.onBlur,
                _ = v.ref,
                b = o(e.useState(!1), 2),
                x = b[0],
                S = b[1];
              r && !a && x && S(!1),
                e.useEffect(
                  function () {
                    m.current = x;
                  },
                  [x, m]
                );
              var E = o(e.useState(""), 2),
                w = E[0],
                T = E[1],
                M = function (e) {
                  return function (t) {
                    var n;
                    x && t.preventDefault(),
                      null == (n = e.onMouseLeave) || n.call(e, t);
                  };
                },
                A = function (e) {
                  return function (t) {
                    var n, r;
                    f.current || (f.current = t.currentTarget),
                      g(t),
                      !0 === m.current &&
                        (S(!0), null == (r = e.onFocusVisible) || r.call(e, t)),
                      null == (n = e.onFocus) || n.call(e, t);
                  };
                },
                C = function () {
                  var e = f.current;
                  return (
                    "BUTTON" === w ||
                    ("INPUT" === w &&
                      ["button", "submit", "reset"].includes(
                        null == e ? void 0 : e.type
                      )) ||
                    ("A" === w && (null == e ? void 0 : e.href))
                  );
                },
                k = function (e) {
                  return function (t) {
                    var n;
                    r || null == (n = e.onClick) || n.call(e, t);
                  };
                },
                R = function (e) {
                  return function (t) {
                    var n;
                    r ||
                      (p(!0),
                      document.addEventListener(
                        "mouseup",
                        function () {
                          p(!1);
                        },
                        { once: !0 }
                      )),
                      null == (n = e.onMouseDown) || n.call(e, t);
                  };
                },
                P = function (e) {
                  return function (t) {
                    var n, a;
                    null == (n = e.onKeyDown) || n.call(e, t),
                      t.defaultMuiPrevented ||
                        (t.target !== t.currentTarget ||
                          C() ||
                          " " !== t.key ||
                          t.preventDefault(),
                        t.target !== t.currentTarget ||
                          " " !== t.key ||
                          r ||
                          p(!0),
                        t.target !== t.currentTarget ||
                          C() ||
                          "Enter" !== t.key ||
                          r ||
                          (null == (a = e.onClick) || a.call(e, t),
                          t.preventDefault()));
                  };
                },
                U = function (e) {
                  return function (t) {
                    var n, a;
                    t.target === t.currentTarget && p(!1),
                      null == (n = e.onKeyUp) || n.call(e, t),
                      t.target !== t.currentTarget ||
                        C() ||
                        r ||
                        " " !== t.key ||
                        t.defaultMuiPrevented ||
                        null == (a = e.onClick) ||
                        a.call(e, t);
                  };
                },
                L = oc(
                  e.useCallback(function (e) {
                    var t;
                    T(null != (t = null == e ? void 0 : e.tagName) ? t : "");
                  }, []),
                  s,
                  _,
                  f
                ),
                D = {};
              return (
                void 0 !== l && (D.tabIndex = l),
                "BUTTON" === w
                  ? ((D.type = null != c ? c : "button"),
                    a ? (D["aria-disabled"] = r) : (D.disabled = r))
                  : "" !== w &&
                    (i ||
                      u ||
                      ((D.role = "button"), (D.tabIndex = null != l ? l : 0)),
                    r &&
                      ((D["aria-disabled"] = r),
                      (D.tabIndex = a ? (null != l ? l : 0) : -1))),
                {
                  getRootProps: function () {
                    var e,
                      n =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      r = $u({}, sc(t), sc(n)),
                      a = $u({ type: c }, r, D, n, {
                        onBlur:
                          ((e = r),
                          function (t) {
                            var n;
                            y(t),
                              !1 === m.current && S(!1),
                              null == (n = e.onBlur) || n.call(e, t);
                          }),
                        onClick: k(r),
                        onFocus: A(r),
                        onKeyDown: P(r),
                        onKeyUp: U(r),
                        onMouseDown: R(r),
                        onMouseLeave: M(r),
                        ref: L,
                      });
                    return delete a.onFocusVisible, a;
                  },
                  focusVisible: x,
                  setFocusVisible: S,
                  active: h,
                  rootRef: L,
                }
              );
            })($u({}, a, { disabled: O, rootRef: F })),
            B = z.focusVisible,
            H = z.setFocusVisible,
            G = z.getRootProps,
            V =
              null != E
                ? E
                : (0, l.jsx)(fp, {
                    color: I,
                    thickness: { sm: 2, md: 3, lg: 4 }[D] || 3,
                  });
          e.useImperativeHandle(
            s,
            function () {
              return {
                focusVisible: function () {
                  var e;
                  H(!0), null == (e = N.current) || e.focus();
                },
              };
            },
            [H]
          );
          var W = $u({}, a, {
              color: I,
              fullWidth: m,
              variant: L,
              size: D,
              focusVisible: B,
              loading: b,
              loadingPosition: S,
              disabled: O,
            }),
            j = (function (e) {
              var t = e.color,
                n = e.disabled,
                r = e.focusVisible,
                a = e.focusVisibleClassName,
                i = e.fullWidth,
                o = e.size,
                s = e.variant,
                l = e.loading,
                u = lc(
                  {
                    root: [
                      "root",
                      n && "disabled",
                      r && "focusVisible",
                      i && "fullWidth",
                      s && "variant".concat(cc(s)),
                      t && "color".concat(cc(t)),
                      o && "size".concat(cc(o)),
                      l && "loading",
                    ],
                    startDecorator: ["startDecorator"],
                    endDecorator: ["endDecorator"],
                    loadingIndicatorCenter: ["loadingIndicatorCenter"],
                  },
                  dp,
                  {}
                );
              return r && a && (u.root += " ".concat(a)), u;
            })(W),
            X = a["aria-pressed"];
          "function" === typeof k.root
            ? (X = k.root(W)["aria-pressed"])
            : k.root && (X = k.root["aria-pressed"]),
            null != U &&
              U.value &&
              (X = Array.isArray(U.value)
                ? -1 !== U.value.indexOf(a.value)
                : U.value === a.value);
          var q = $u({}, R, { component: T, slots: A, slotProps: k }),
            Y = o(
              Zh("root", {
                ref: n,
                className: j.root,
                elementType: bp,
                externalForwardedProps: q,
                getSlotProps: G,
                ownerState: W,
                additionalProps: {
                  onClick: function (e) {
                    var t,
                      n,
                      r = a.onClick;
                    ("function" === typeof k.root
                      ? (r = k.root(W).onClick)
                      : k.root && (r = k.root.onClick),
                    null == (t = r) || t(e),
                    U) &&
                      (null == (n = U.onClick) || n.call(U, e, a.value));
                  },
                  "aria-pressed": X,
                },
              }),
              2
            ),
            K = Y[0],
            $ = Y[1],
            Z = o(
              Zh("startDecorator", {
                className: j.startDecorator,
                elementType: gp,
                externalForwardedProps: q,
                ownerState: W,
              }),
              2
            ),
            J = Z[0],
            Q = Z[1],
            ee = o(
              Zh("endDecorator", {
                className: j.endDecorator,
                elementType: yp,
                externalForwardedProps: q,
                ownerState: W,
              }),
              2
            ),
            te = ee[0],
            ne = ee[1],
            re = o(
              Zh("loadingIndicatorCenter", {
                className: j.loadingIndicatorCenter,
                elementType: _p,
                externalForwardedProps: q,
                ownerState: W,
              }),
              2
            ),
            ae = re[0],
            ie = re[1];
          return (0,
          l.jsxs)(K, $u({}, $, { children: [(g || (b && "start" === S)) && (0, l.jsx)(J, $u({}, Q, { children: b && "start" === S ? V : g })), i, b && "center" === S && (0, l.jsx)(ae, $u({}, ie, { children: V })), (y || (b && "end" === S)) && (0, l.jsx)(te, $u({}, ne, { children: b && "end" === S ? V : y }))] }));
        });
      xp.muiName = "Button";
      var Sp = xp,
        Ep = cc;
      function wp(e, t) {
        var n;
        return $u(
          {
            toolbar:
              ((n = { minHeight: 56 }),
              S(n, e.up("xs"), {
                "@media (orientation: landscape)": { minHeight: 48 },
              }),
              S(n, e.up("sm"), { minHeight: 64 }),
              n),
          },
          t
        );
      }
      var Tp = { black: "#000", white: "#fff" },
        Mp = {
          50: "#fafafa",
          100: "#f5f5f5",
          200: "#eeeeee",
          300: "#e0e0e0",
          400: "#bdbdbd",
          500: "#9e9e9e",
          600: "#757575",
          700: "#616161",
          800: "#424242",
          900: "#212121",
          A100: "#f5f5f5",
          A200: "#eeeeee",
          A400: "#bdbdbd",
          A700: "#616161",
        },
        Ap = {
          50: "#f3e5f5",
          100: "#e1bee7",
          200: "#ce93d8",
          300: "#ba68c8",
          400: "#ab47bc",
          500: "#9c27b0",
          600: "#8e24aa",
          700: "#7b1fa2",
          800: "#6a1b9a",
          900: "#4a148c",
          A100: "#ea80fc",
          A200: "#e040fb",
          A400: "#d500f9",
          A700: "#aa00ff",
        },
        Cp = {
          50: "#ffebee",
          100: "#ffcdd2",
          200: "#ef9a9a",
          300: "#e57373",
          400: "#ef5350",
          500: "#f44336",
          600: "#e53935",
          700: "#d32f2f",
          800: "#c62828",
          900: "#b71c1c",
          A100: "#ff8a80",
          A200: "#ff5252",
          A400: "#ff1744",
          A700: "#d50000",
        },
        kp = {
          50: "#fff3e0",
          100: "#ffe0b2",
          200: "#ffcc80",
          300: "#ffb74d",
          400: "#ffa726",
          500: "#ff9800",
          600: "#fb8c00",
          700: "#f57c00",
          800: "#ef6c00",
          900: "#e65100",
          A100: "#ffd180",
          A200: "#ffab40",
          A400: "#ff9100",
          A700: "#ff6d00",
        },
        Rp = {
          50: "#e3f2fd",
          100: "#bbdefb",
          200: "#90caf9",
          300: "#64b5f6",
          400: "#42a5f5",
          500: "#2196f3",
          600: "#1e88e5",
          700: "#1976d2",
          800: "#1565c0",
          900: "#0d47a1",
          A100: "#82b1ff",
          A200: "#448aff",
          A400: "#2979ff",
          A700: "#2962ff",
        },
        Pp = {
          50: "#e1f5fe",
          100: "#b3e5fc",
          200: "#81d4fa",
          300: "#4fc3f7",
          400: "#29b6f6",
          500: "#03a9f4",
          600: "#039be5",
          700: "#0288d1",
          800: "#0277bd",
          900: "#01579b",
          A100: "#80d8ff",
          A200: "#40c4ff",
          A400: "#00b0ff",
          A700: "#0091ea",
        },
        Up = {
          50: "#e8f5e9",
          100: "#c8e6c9",
          200: "#a5d6a7",
          300: "#81c784",
          400: "#66bb6a",
          500: "#4caf50",
          600: "#43a047",
          700: "#388e3c",
          800: "#2e7d32",
          900: "#1b5e20",
          A100: "#b9f6ca",
          A200: "#69f0ae",
          A400: "#00e676",
          A700: "#00c853",
        },
        Lp = ["mode", "contrastThreshold", "tonalOffset"],
        Dp = {
          text: {
            primary: "rgba(0, 0, 0, 0.87)",
            secondary: "rgba(0, 0, 0, 0.6)",
            disabled: "rgba(0, 0, 0, 0.38)",
          },
          divider: "rgba(0, 0, 0, 0.12)",
          background: { paper: Tp.white, default: Tp.white },
          action: {
            active: "rgba(0, 0, 0, 0.54)",
            hover: "rgba(0, 0, 0, 0.04)",
            hoverOpacity: 0.04,
            selected: "rgba(0, 0, 0, 0.08)",
            selectedOpacity: 0.08,
            disabled: "rgba(0, 0, 0, 0.26)",
            disabledBackground: "rgba(0, 0, 0, 0.12)",
            disabledOpacity: 0.38,
            focus: "rgba(0, 0, 0, 0.12)",
            focusOpacity: 0.12,
            activatedOpacity: 0.12,
          },
        },
        Ip = {
          text: {
            primary: Tp.white,
            secondary: "rgba(255, 255, 255, 0.7)",
            disabled: "rgba(255, 255, 255, 0.5)",
            icon: "rgba(255, 255, 255, 0.5)",
          },
          divider: "rgba(255, 255, 255, 0.12)",
          background: { paper: "#121212", default: "#121212" },
          action: {
            active: Tp.white,
            hover: "rgba(255, 255, 255, 0.08)",
            hoverOpacity: 0.08,
            selected: "rgba(255, 255, 255, 0.16)",
            selectedOpacity: 0.16,
            disabled: "rgba(255, 255, 255, 0.3)",
            disabledBackground: "rgba(255, 255, 255, 0.12)",
            disabledOpacity: 0.38,
            focus: "rgba(255, 255, 255, 0.12)",
            focusOpacity: 0.12,
            activatedOpacity: 0.24,
          },
        };
      function Op(e, t, n, r) {
        var a = r.light || r,
          i = r.dark || 1.5 * r;
        e[t] ||
          (e.hasOwnProperty(n)
            ? (e[t] = e[n])
            : "light" === t
            ? (e.light = fh(e.main, a))
            : "dark" === t && (e.dark = ch(e.main, i)));
      }
      function Np(e) {
        var t = e.mode,
          n = void 0 === t ? "light" : t,
          r = e.contrastThreshold,
          a = void 0 === r ? 3 : r,
          i = e.tonalOffset,
          o = void 0 === i ? 0.2 : i,
          s = Ku(e, Lp),
          l =
            e.primary ||
            (function () {
              return "dark" ===
                (arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "light")
                ? { main: Rp[200], light: Rp[50], dark: Rp[400] }
                : { main: Rp[700], light: Rp[400], dark: Rp[800] };
            })(n),
          u =
            e.secondary ||
            (function () {
              return "dark" ===
                (arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "light")
                ? { main: Ap[200], light: Ap[50], dark: Ap[400] }
                : { main: Ap[500], light: Ap[300], dark: Ap[700] };
            })(n),
          c =
            e.error ||
            (function () {
              return "dark" ===
                (arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "light")
                ? { main: Cp[500], light: Cp[300], dark: Cp[700] }
                : { main: Cp[700], light: Cp[400], dark: Cp[800] };
            })(n),
          f =
            e.info ||
            (function () {
              return "dark" ===
                (arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "light")
                ? { main: Pp[400], light: Pp[300], dark: Pp[700] }
                : { main: Pp[700], light: Pp[500], dark: Pp[900] };
            })(n),
          d =
            e.success ||
            (function () {
              return "dark" ===
                (arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "light")
                ? { main: Up[400], light: Up[300], dark: Up[700] }
                : { main: Up[800], light: Up[500], dark: Up[900] };
            })(n),
          h =
            e.warning ||
            (function () {
              return "dark" ===
                (arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "light")
                ? { main: kp[400], light: kp[300], dark: kp[700] }
                : { main: "#ed6c02", light: kp[500], dark: kp[900] };
            })(n);
        function p(e) {
          var t =
            (function (e, t) {
              var n = uh(e),
                r = uh(t);
              return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
            })(e, Ip.text.primary) >= a
              ? Ip.text.primary
              : Dp.text.primary;
          return t;
        }
        var v = function (e) {
            var t = e.color,
              n = e.name,
              r = e.mainShade,
              a = void 0 === r ? 500 : r,
              i = e.lightShade,
              s = void 0 === i ? 300 : i,
              l = e.darkShade,
              u = void 0 === l ? 700 : l;
            if (
              (!(t = $u({}, t)).main && t[a] && (t.main = t[a]),
              !t.hasOwnProperty("main"))
            )
              throw new Error(uc(11, n ? " (".concat(n, ")") : "", a));
            if ("string" !== typeof t.main)
              throw new Error(
                uc(12, n ? " (".concat(n, ")") : "", JSON.stringify(t.main))
              );
            return (
              Op(t, "light", s, o),
              Op(t, "dark", u, o),
              t.contrastText || (t.contrastText = p(t.main)),
              t
            );
          },
          m = { dark: Ip, light: Dp };
        return Gf(
          $u(
            {
              common: $u({}, Tp),
              mode: n,
              primary: v({ color: l, name: "primary" }),
              secondary: v({
                color: u,
                name: "secondary",
                mainShade: "A400",
                lightShade: "A200",
                darkShade: "A700",
              }),
              error: v({ color: c, name: "error" }),
              warning: v({ color: h, name: "warning" }),
              info: v({ color: f, name: "info" }),
              success: v({ color: d, name: "success" }),
              grey: Mp,
              contrastThreshold: a,
              getContrastText: p,
              augmentColor: v,
              tonalOffset: o,
            },
            m[n]
          ),
          s
        );
      }
      var Fp = [
        "fontFamily",
        "fontSize",
        "fontWeightLight",
        "fontWeightRegular",
        "fontWeightMedium",
        "fontWeightBold",
        "htmlFontSize",
        "allVariants",
        "pxToRem",
      ];
      var zp = { textTransform: "uppercase" },
        Bp = '"Roboto", "Helvetica", "Arial", sans-serif';
      function Hp(e, t) {
        var n = "function" === typeof t ? t(e) : t,
          r = n.fontFamily,
          a = void 0 === r ? Bp : r,
          i = n.fontSize,
          o = void 0 === i ? 14 : i,
          s = n.fontWeightLight,
          l = void 0 === s ? 300 : s,
          u = n.fontWeightRegular,
          c = void 0 === u ? 400 : u,
          f = n.fontWeightMedium,
          d = void 0 === f ? 500 : f,
          h = n.fontWeightBold,
          p = void 0 === h ? 700 : h,
          v = n.htmlFontSize,
          m = void 0 === v ? 16 : v,
          g = n.allVariants,
          y = n.pxToRem,
          _ = Ku(n, Fp);
        var b = o / 14,
          x =
            y ||
            function (e) {
              return "".concat((e / m) * b, "rem");
            },
          S = function (e, t, n, r, i) {
            return $u(
              { fontFamily: a, fontWeight: e, fontSize: x(t), lineHeight: n },
              a === Bp
                ? {
                    letterSpacing: "".concat(
                      ((o = r / t), Math.round(1e5 * o) / 1e5),
                      "em"
                    ),
                  }
                : {},
              i,
              g
            );
            var o;
          },
          E = {
            h1: S(l, 96, 1.167, -1.5),
            h2: S(l, 60, 1.2, -0.5),
            h3: S(c, 48, 1.167, 0),
            h4: S(c, 34, 1.235, 0.25),
            h5: S(c, 24, 1.334, 0),
            h6: S(d, 20, 1.6, 0.15),
            subtitle1: S(c, 16, 1.75, 0.15),
            subtitle2: S(d, 14, 1.57, 0.1),
            body1: S(c, 16, 1.5, 0.15),
            body2: S(c, 14, 1.43, 0.15),
            button: S(d, 14, 1.75, 0.4, zp),
            caption: S(c, 12, 1.66, 0.4),
            overline: S(c, 12, 2.66, 1, zp),
            inherit: {
              fontFamily: "inherit",
              fontWeight: "inherit",
              fontSize: "inherit",
              lineHeight: "inherit",
              letterSpacing: "inherit",
            },
          };
        return Gf(
          $u(
            {
              htmlFontSize: m,
              pxToRem: x,
              fontFamily: a,
              fontSize: o,
              fontWeightLight: l,
              fontWeightRegular: c,
              fontWeightMedium: d,
              fontWeightBold: p,
            },
            E
          ),
          _,
          { clone: !1 }
        );
      }
      function Gp() {
        return [
          ""
            .concat(arguments.length <= 0 ? void 0 : arguments[0], "px ")
            .concat(arguments.length <= 1 ? void 0 : arguments[1], "px ")
            .concat(arguments.length <= 2 ? void 0 : arguments[2], "px ")
            .concat(
              arguments.length <= 3 ? void 0 : arguments[3],
              "px rgba(0,0,0,"
            )
            .concat(0.2, ")"),
          ""
            .concat(arguments.length <= 4 ? void 0 : arguments[4], "px ")
            .concat(arguments.length <= 5 ? void 0 : arguments[5], "px ")
            .concat(arguments.length <= 6 ? void 0 : arguments[6], "px ")
            .concat(
              arguments.length <= 7 ? void 0 : arguments[7],
              "px rgba(0,0,0,"
            )
            .concat(0.14, ")"),
          ""
            .concat(arguments.length <= 8 ? void 0 : arguments[8], "px ")
            .concat(arguments.length <= 9 ? void 0 : arguments[9], "px ")
            .concat(arguments.length <= 10 ? void 0 : arguments[10], "px ")
            .concat(
              arguments.length <= 11 ? void 0 : arguments[11],
              "px rgba(0,0,0,"
            )
            .concat(0.12, ")"),
        ].join(",");
      }
      var Vp = [
          "none",
          Gp(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0),
          Gp(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0),
          Gp(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0),
          Gp(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),
          Gp(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),
          Gp(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),
          Gp(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),
          Gp(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),
          Gp(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),
          Gp(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),
          Gp(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),
          Gp(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),
          Gp(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),
          Gp(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),
          Gp(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),
          Gp(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),
          Gp(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),
          Gp(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),
          Gp(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),
          Gp(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),
          Gp(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),
          Gp(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),
          Gp(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),
          Gp(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8),
        ],
        Wp = ["duration", "easing", "delay"],
        jp = {
          easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
          easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
          easeIn: "cubic-bezier(0.4, 0, 1, 1)",
          sharp: "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        Xp = {
          shortest: 150,
          shorter: 200,
          short: 250,
          standard: 300,
          complex: 375,
          enteringScreen: 225,
          leavingScreen: 195,
        };
      function qp(e) {
        return "".concat(Math.round(e), "ms");
      }
      function Yp(e) {
        if (!e) return 0;
        var t = e / 36;
        return Math.round(10 * (4 + 15 * Math.pow(t, 0.25) + t / 5));
      }
      function Kp(e) {
        var t = $u({}, jp, e.easing),
          n = $u({}, Xp, e.duration);
        return $u(
          {
            getAutoHeightDuration: Yp,
            create: function () {
              var e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : ["all"],
                r =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {},
                a = r.duration,
                i = void 0 === a ? n.standard : a,
                o = r.easing,
                s = void 0 === o ? t.easeInOut : o,
                l = r.delay,
                u = void 0 === l ? 0 : l;
              Ku(r, Wp);
              return (Array.isArray(e) ? e : [e])
                .map(function (e) {
                  return ""
                    .concat(e, " ")
                    .concat("string" === typeof i ? i : qp(i), " ")
                    .concat(s, " ")
                    .concat("string" === typeof u ? u : qp(u));
                })
                .join(",");
            },
          },
          e,
          { easing: t, duration: n }
        );
      }
      var $p = {
          mobileStepper: 1e3,
          fab: 1050,
          speedDial: 1050,
          appBar: 1100,
          drawer: 1200,
          modal: 1300,
          snackbar: 1400,
          tooltip: 1500,
        },
        Zp = [
          "breakpoints",
          "mixins",
          "spacing",
          "palette",
          "transitions",
          "typography",
          "shape",
        ];
      function Jp() {
        var e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          t = e.mixins,
          n = void 0 === t ? {} : t,
          r = e.palette,
          a = void 0 === r ? {} : r,
          i = e.transitions,
          o = void 0 === i ? {} : i,
          s = e.typography,
          l = void 0 === s ? {} : s,
          u = Ku(e, Zp);
        if (e.vars) throw new Error(uc(18));
        var c = Np(a),
          f = Xd(e),
          d = Gf(f, {
            mixins: wp(f.breakpoints, n),
            palette: c,
            shadows: Vp.slice(),
            typography: Hp(c, l),
            transitions: Kp(o),
            zIndex: $u({}, $p),
          });
        d = Gf(d, u);
        for (
          var h = arguments.length, p = new Array(h > 1 ? h - 1 : 0), v = 1;
          v < h;
          v++
        )
          p[v - 1] = arguments[v];
        return (
          ((d = p.reduce(function (e, t) {
            return Gf(e, t);
          }, d)).unstable_sxConfig = $u(
            {},
            Gd,
            null == u ? void 0 : u.unstable_sxConfig
          )),
          (d.unstable_sx = function (e) {
            return Wd({ sx: e, theme: this });
          }),
          d
        );
      }
      var Qp = Jp(),
        ev = "$$material";
      var tv = rh({
        themeId: ev,
        defaultTheme: Qp,
        rootShouldForwardProp: function (e) {
          return Qd(e) && "classes" !== e;
        },
      });
      function nv(e) {
        return Th("MuiSvgIcon", e);
      }
      Mh("MuiSvgIcon", [
        "root",
        "colorPrimary",
        "colorSecondary",
        "colorAction",
        "colorError",
        "colorDisabled",
        "fontSizeInherit",
        "fontSizeSmall",
        "fontSizeMedium",
        "fontSizeLarge",
      ]);
      var rv = [
          "children",
          "className",
          "color",
          "component",
          "fontSize",
          "htmlColor",
          "inheritViewBox",
          "titleAccess",
          "viewBox",
        ],
        av = tv("svg", {
          name: "MuiSvgIcon",
          slot: "Root",
          overridesResolver: function (e, t) {
            var n = e.ownerState;
            return [
              t.root,
              "inherit" !== n.color && t["color".concat(Ep(n.color))],
              t["fontSize".concat(Ep(n.fontSize))],
            ];
          },
        })(function (e) {
          var t,
            n,
            r,
            a,
            i,
            o,
            s,
            l,
            u,
            c,
            f,
            d,
            h,
            p = e.theme,
            v = e.ownerState;
          return {
            userSelect: "none",
            width: "1em",
            height: "1em",
            display: "inline-block",
            fill: v.hasSvgAsChild ? void 0 : "currentColor",
            flexShrink: 0,
            transition:
              null == (t = p.transitions) || null == (n = t.create)
                ? void 0
                : n.call(t, "fill", {
                    duration:
                      null == (r = p.transitions) || null == (r = r.duration)
                        ? void 0
                        : r.shorter,
                  }),
            fontSize: {
              inherit: "inherit",
              small:
                (null == (a = p.typography) || null == (i = a.pxToRem)
                  ? void 0
                  : i.call(a, 20)) || "1.25rem",
              medium:
                (null == (o = p.typography) || null == (s = o.pxToRem)
                  ? void 0
                  : s.call(o, 24)) || "1.5rem",
              large:
                (null == (l = p.typography) || null == (u = l.pxToRem)
                  ? void 0
                  : u.call(l, 35)) || "2.1875rem",
            }[v.fontSize],
            color:
              null !=
              (c =
                null == (f = (p.vars || p).palette) || null == (f = f[v.color])
                  ? void 0
                  : f.main)
                ? c
                : {
                    action:
                      null == (d = (p.vars || p).palette) ||
                      null == (d = d.action)
                        ? void 0
                        : d.active,
                    disabled:
                      null == (h = (p.vars || p).palette) ||
                      null == (h = h.action)
                        ? void 0
                        : h.disabled,
                    inherit: void 0,
                  }[v.color],
          };
        }),
        iv = e.forwardRef(function (t, n) {
          var r,
            a = Vh({
              props: (r = { props: t, name: "MuiSvgIcon" }).props,
              name: r.name,
              defaultTheme: Qp,
              themeId: ev,
            }),
            i = a.children,
            o = a.className,
            s = a.color,
            u = void 0 === s ? "inherit" : s,
            c = a.component,
            f = void 0 === c ? "svg" : c,
            d = a.fontSize,
            h = void 0 === d ? "medium" : d,
            p = a.htmlColor,
            v = a.inheritViewBox,
            m = void 0 !== v && v,
            g = a.titleAccess,
            y = a.viewBox,
            _ = void 0 === y ? "0 0 24 24" : y,
            b = Ku(a, rv),
            x = e.isValidElement(i) && "svg" === i.type,
            S = $u({}, a, {
              color: u,
              component: f,
              fontSize: h,
              instanceFontSize: t.fontSize,
              inheritViewBox: m,
              viewBox: _,
              hasSvgAsChild: x,
            }),
            E = {};
          m || (E.viewBox = _);
          var w = (function (e) {
            var t = e.color,
              n = e.fontSize,
              r = e.classes;
            return lc(
              {
                root: [
                  "root",
                  "inherit" !== t && "color".concat(Ep(t)),
                  "fontSize".concat(Ep(n)),
                ],
              },
              nv,
              r
            );
          })(S);
          return (0,
          l.jsxs)(av, $u({ as: f, className: Xh(w.root, o), focusable: "false", color: p, "aria-hidden": !g || void 0, role: g ? "img" : void 0, ref: n }, E, b, x && i.props, { ownerState: S, children: [x ? i.props.children : i, g ? (0, l.jsx)("title", { children: g }) : null] }));
        });
      iv.muiName = "SvgIcon";
      var ov = iv;
      var sv = (function (t, n) {
          function r(e, r) {
            return (0, l.jsx)(
              ov,
              $u({ "data-testid": "".concat(n, "Icon"), ref: r }, e, {
                children: t,
              })
            );
          }
          return (r.muiName = ov.muiName), e.memo(e.forwardRef(r));
        })(
          (0, l.jsx)("path", {
            d: "M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z",
          }),
          "KeyboardArrowRight"
        ),
        lv = function (e) {
          var t = e.onShowSimulation;
          return (0, l.jsxs)("div", {
            style: {
              textAlign: "center",
              display: "flex",
              flexDirection: "column",
              height: "99.98vh",
            },
            children: [
              (0, l.jsx)("h1", {
                style: { color: "white", paddingTop: 40, margin: 0, flex: 0.1 },
                children: "Demonstration of Smart Contract",
              }),
              (0, l.jsxs)("div", {
                style: {
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "center",
                  flex: 0.9,
                },
                children: [
                  (0, l.jsx)("video", {
                    width: "1200",
                    height: "700",
                    controls: !0,
                    className: "animation-video",
                    children: (0, l.jsx)("source", {
                      src: "images/Smart-contract.mp4",
                      type: "video/mp4",
                    }),
                  }),
                  (0, l.jsx)("div", {
                    style: { marginTop: "20px", marginLeft: "50%" },
                    children: (0, l.jsx)(Sp, {
                      endDecorator: (0, l.jsx)(sv, {}),
                      color: "success",
                      style: { marginTop: "10px" },
                      onClick: t,
                      children: "Go to Simulation",
                    }),
                  }),
                ],
              }),
            ],
          });
        };
      var uv = function () {
          var t = o((0, e.useState)(0), 2),
            n = t[0],
            r = t[1],
            a = o((0, e.useState)(!1), 2),
            i = a[0],
            s = a[1],
            f = o((0, e.useState)(!0), 2),
            d = f[0],
            h = f[1],
            p = o((0, e.useState)(!0), 2),
            v = p[0],
            m = p[1],
            g = [Gl],
            y = [5e3, 1e4];
          (0, e.useEffect)(
            function () {
              if (!d) {
                var e = setInterval(function () {
                  r(function (t) {
                    return t < g.length - 1 ? t + 1 : (clearInterval(e), t);
                  });
                }, y[n]);
                return function () {
                  clearInterval(e);
                };
              }
            },
            [d, n, y]
          );
          var _ = g[n];
          return (0, l.jsx)("div", {
            children: v
              ? (0, l.jsx)(lv, {
                  onShowSimulation: function () {
                    m(!1);
                  },
                })
              : (0, l.jsxs)("div", {
                  className: "row",
                  children: [
                    (0, l.jsx)("div", {
                      className: "col-md-2",
                      children: i
                        ? (0, l.jsx)(u, {
                            onSubmit: function () {
                              s(!0),
                                h(!1),
                                setTimeout(function () {
                                  h(!0), s(!1);
                                }, 19e3);
                            },
                          })
                        : (0, l.jsx)(c, {
                            onStartClick: function () {
                              s(!0);
                            },
                          }),
                    }),
                    (0, l.jsx)("div", {
                      className: "col-md-10",
                      children: d ? (0, l.jsx)(Yu, {}) : (0, l.jsx)(_, {}),
                    }),
                  ],
                }),
          });
        },
        cv = function (e) {
          e &&
            e instanceof Function &&
            n
              .e(787)
              .then(n.bind(n, 787))
              .then(function (t) {
                var n = t.getCLS,
                  r = t.getFID,
                  a = t.getFCP,
                  i = t.getLCP,
                  o = t.getTTFB;
                n(e), r(e), a(e), i(e), o(e);
              });
        };
      r.createRoot(document.getElementById("root")).render((0, l.jsx)(uv, {})),
        cv();
    })();
})();
//# sourceMappingURL=main.82d834da.js.map
